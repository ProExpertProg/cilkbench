; ModuleID = 'neighborsTime.C'
source_filename = "neighborsTime.C"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%struct.timer = type <{ double, double, double, i8, [3 x i8], %struct.timezone, [4 x i8] }>
%struct.timezone = type { i32, i32 }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon.1 }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon.1 = type { i64, [8 x i8] }
%class._point3d = type { double, double, double }
%"struct.benchIO::words" = type { i64, i8*, i64, i8** }
%"class.std::basic_ofstream" = type { %"class.std::basic_ostream.base", %"class.std::basic_filebuf", %"class.std::basic_ios" }
%"class.std::basic_ostream.base" = type { i32 (...)** }
%"class.std::basic_filebuf" = type { %"class.std::basic_streambuf", %union.pthread_mutex_t, %"class.std::__basic_file", i32, %struct.__mbstate_t, %struct.__mbstate_t, %struct.__mbstate_t, i8*, i64, i8, i8, i8, i8, i8*, i8*, i8, %"class.std::codecvt"*, i8*, i64, i8*, i8* }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__basic_file" = type <{ %struct._IO_FILE*, i8, [7 x i8] }>
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.__mbstate_t = type { i32, %union.anon }
%union.anon = type { i32 }
%"class.std::codecvt" = type { %"class.std::__codecvt_abstract_base.base", %struct.__locale_struct* }
%"class.std::__codecvt_abstract_base.base" = type { %"class.std::locale::facet.base" }
%"class.std::basic_ifstream" = type { %"class.std::basic_istream.base", %"class.std::basic_filebuf", %"class.std::basic_ios" }
%"class.std::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%struct.triangles = type { i32, i32, %class._point2d*, %struct.triangle* }
%class._point2d = type { double, double }
%struct.triangle = type { [3 x i32] }
%struct.commandLine = type { i32, i8**, %"class.std::__cxx11::basic_string" }
%struct.timeval = type { i64, i64 }
%struct.vertex = type { i32, %class._point2d, [1 x %struct.vertex*] }
%struct.vertex.16 = type { i32, %class._point2d, [10 x %struct.vertex.16*] }
%struct.vertex.29 = type { i32, %class._point3d, [1 x %struct.vertex.29*] }
%struct.vertex.44 = type { i32, %class._point3d, [10 x %struct.vertex.44*] }
%class.gTreeNode = type { %class._point2d, double, %struct.nData, i32, [8 x %class.gTreeNode*], %struct.vertex**, %class.gTreeNode* }
%struct.nData = type { i32 }
%class.gTreeNode.18 = type { %class._point2d, double, %struct.nData.19, i32, [8 x %class.gTreeNode.18*], %struct.vertex.16**, %class.gTreeNode.18* }
%struct.nData.19 = type { i32 }
%"struct.std::pair" = type { %class._point2d, %class._point2d }
%"struct.std::pair.6" = type { i32, %struct.vertex* }
%struct.__cilkrts_stack_frame = type { i32, i32, %struct.__cilkrts_stack_frame*, %struct.__cilkrts_worker*, i8*, [5 x i8*], i32, i16, i16, { %struct.__cilkrts_pedigree } }
%struct.__cilkrts_worker = type { %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame**, i32, i8*, i8*, i8*, %struct.__cilkrts_stack_frame*, i8*, i8*, %struct.__cilkrts_pedigree }
%struct.__cilkrts_pedigree = type { i64, %struct.__cilkrts_pedigree* }
%"struct.intSort::eBits" = type { %"struct.utils::firstF", i64, i64 }
%"struct.utils::firstF" = type { i8 }
%struct.transpose = type { i32*, i32* }
%struct.blockTrans = type { %"struct.std::pair.6"*, %"struct.std::pair.6"*, i32*, i32*, i32* }
%"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN" = type { %struct.vertex*, [1 x %struct.vertex*], [1 x double], i32, i32 }
%struct.kNearestNeighbor.17 = type { %class.gTreeNode.18* }
%"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN" = type { %struct.vertex.16*, [10 x %struct.vertex.16*], [10 x double], i32, i32 }
%"struct.std::pair.23" = type { i32, %struct.vertex.16* }
%"struct.intSort::eBits.25" = type { %"struct.utils::firstF.24", i64, i64 }
%"struct.utils::firstF.24" = type { i8 }
%struct.blockTrans.26 = type { %"struct.std::pair.23"*, %"struct.std::pair.23"*, i32*, i32*, i32* }
%class.gTreeNode.31 = type { %class._point3d, double, %struct.nData.32, i32, [8 x %class.gTreeNode.31*], %struct.vertex.29**, %class.gTreeNode.31* }
%struct.nData.32 = type { i32 }
%class.gTreeNode.46 = type { %class._point3d, double, %struct.nData.47, i32, [8 x %class.gTreeNode.46*], %struct.vertex.44**, %class.gTreeNode.46* }
%struct.nData.47 = type { i32 }
%"struct.std::pair.33" = type { %class._point3d, %class._point3d }
%"struct.std::pair.38" = type { i32, %struct.vertex.29* }
%"struct.intSort::eBits.40" = type { %"struct.utils::firstF.39", i64, i64 }
%"struct.utils::firstF.39" = type { i8 }
%struct.blockTrans.41 = type { %"struct.std::pair.38"*, %"struct.std::pair.38"*, i32*, i32*, i32* }
%"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN" = type { %struct.vertex.29*, [1 x %struct.vertex.29*], [1 x double], i32, i32 }
%struct.kNearestNeighbor.45 = type { %class.gTreeNode.46* }
%"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN" = type { %struct.vertex.44*, [10 x %struct.vertex.44*], [10 x double], i32, i32 }
%"struct.std::pair.51" = type { i32, %struct.vertex.44* }
%"struct.intSort::eBits.53" = type { %"struct.utils::firstF.52", i64, i64 }
%"struct.utils::firstF.52" = type { i8 }
%struct.blockTrans.54 = type { %"struct.std::pair.51"*, %"struct.std::pair.51"*, i32*, i32*, i32* }

$_ZN11commandLine14getOptionValueENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE = comdat any

$_ZN11commandLine17getOptionIntValueENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi = comdat any

$_ZN7benchIO18readPointsFromFileI8_point2dIdEEE4_seqIT_EPc = comdat any

$_Z13timeNeighborsILi1E8_point2dIdEEvPT0_iiiPc = comdat any

$_Z13timeNeighborsILi10E8_point2dIdEEvPT0_iiiPc = comdat any

$_ZN7benchIO18readPointsFromFileI8_point3dIdEEE4_seqIT_EPc = comdat any

$_Z13timeNeighborsILi1E8_point3dIdEEvPT0_iiiPc = comdat any

$_Z13timeNeighborsILi10E8_point3dIdEEvPT0_iiiPc = comdat any

$_ZN8sequence4packIllN5utils9identityFIlEEEE4_seqIT_EPS5_PbT0_S9_T1_ = comdat any

$_ZN8sequence4scanIllN5utils4addFIlEENS_4getAIllEEEET_PS6_T0_S8_T1_T2_S6_bb = comdat any

$_Z3ANNILi1E6vertexI8_point2dIdELi1EEEvPPT0_ii = comdat any

$_ZN5timer7reportTEd = comdat any

$_ZN7benchIO19writeIntArrayToFileIiEET_PS1_lPc = comdat any

$_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE5gTreeEPPS5_i = comdat any

$_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i = comdat any

$_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_ = comdat any

$_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_ = comdat any

$_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi = comdat any

$_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii = comdat any

$_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE15sortBlocksSmallEPPS5_iS1_Pi = comdat any

$_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i = comdat any

$_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1_ = comdat any

$_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_ = comdat any

$_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0_ = comdat any

$_ZN9transposeIjjE6transREjjjjjj = comdat any

$_ZN8sequence4scanIjlN5utils4addFIjEENS_4getAIjlEEEET_PS6_T0_S8_T1_T2_S6_bb = comdat any

$_ZN10blockTransISt4pairIiP6vertexI8_point2dIdELi1EEEjE6transREjjjjjj = comdat any

$_ZN8sequence4scanIilN5utils4minFIiEENS_4getAIilEEEET_PS6_T0_S8_T1_T2_S6_bb = comdat any

$_Z9quickSortISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_ = comdat any

$_Z15quickSortSerialISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_ = comdat any

$_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT_ = comdat any

$_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE3kNN10nearestNghEP9gTreeNodeIS2_7_vect2dIdES3_5nDataIS3_EE = comdat any

$_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE3kNN14nearestNghTrimEP9gTreeNodeIS2_7_vect2dIdES3_5nDataIS3_EE = comdat any

$_ZN7benchIO16writeArrayToFileIiEEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_lPc = comdat any

$_ZN7benchIO13arrayToStringIiEE4_seqIcEPT_l = comdat any

$_ZN8sequence4packIclNS_4getAIclEEEE4_seqIT_EPS4_PbT0_S8_T1_ = comdat any

$_Z3ANNILi10E6vertexI8_point2dIdELi10EEEvPPT0_ii = comdat any

$_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE8kNearestEPS3_PS5_i = comdat any

$_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE5gTreeEPPS5_i = comdat any

$_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i = comdat any

$_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_ = comdat any

$_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_ = comdat any

$_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi = comdat any

$_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii = comdat any

$_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE15sortBlocksSmallEPPS5_iS1_Pi = comdat any

$_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i = comdat any

$_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1_ = comdat any

$_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_ = comdat any

$_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0_ = comdat any

$_ZN10blockTransISt4pairIiP6vertexI8_point2dIdELi10EEEjE6transREjjjjjj = comdat any

$_Z5splitISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEiES0_IPT_SF_ESF_T1_T0_ = comdat any

$_Z9quickSortISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_ = comdat any

$_Z15quickSortSerialISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_ = comdat any

$_Z5splitISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElES0_IPT_SF_ESF_T1_T0_ = comdat any

$_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT_ = comdat any

$_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNN10nearestNghEP9gTreeNodeIS2_7_vect2dIdES3_5nDataIS3_EE = comdat any

$_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNN14nearestNghTrimEP9gTreeNodeIS2_7_vect2dIdES3_5nDataIS3_EE = comdat any

$_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE3delEv = comdat any

$_Z3ANNILi1E6vertexI8_point3dIdELi1EEEvPPT0_ii = comdat any

$_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE5gTreeEPPS5_i = comdat any

$_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i = comdat any

$_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_ = comdat any

$_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_ = comdat any

$_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi = comdat any

$_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii = comdat any

$_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE15sortBlocksSmallEPPS5_iS1_Pi = comdat any

$_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i = comdat any

$_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1_ = comdat any

$_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_ = comdat any

$_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0_ = comdat any

$_ZN10blockTransISt4pairIiP6vertexI8_point3dIdELi1EEEjE6transREjjjjjj = comdat any

$_Z9quickSortISt4pairIiP6vertexI8_point3dIdELi1EEEN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_ = comdat any

$_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT_ = comdat any

$_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNN10nearestNghEP9gTreeNodeIS2_7_vect3dIdES3_5nDataIS3_EE = comdat any

$_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNN14nearestNghTrimEP9gTreeNodeIS2_7_vect3dIdES3_5nDataIS3_EE = comdat any

$_Z3ANNILi10E6vertexI8_point3dIdELi10EEEvPPT0_ii = comdat any

$_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE8kNearestEPS3_PS5_i = comdat any

$_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE5gTreeEPPS5_i = comdat any

$_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i = comdat any

$_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_ = comdat any

$_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_ = comdat any

$_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi = comdat any

$_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii = comdat any

$_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE15sortBlocksSmallEPPS5_iS1_Pi = comdat any

$_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i = comdat any

$_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1_ = comdat any

$_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_ = comdat any

$_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0_ = comdat any

$_ZN10blockTransISt4pairIiP6vertexI8_point3dIdELi10EEEjE6transREjjjjjj = comdat any

$_Z9quickSortISt4pairIiP6vertexI8_point3dIdELi10EEEN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_ = comdat any

$_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT_ = comdat any

$_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNN10nearestNghEP9gTreeNodeIS2_7_vect3dIdES3_5nDataIS3_EE = comdat any

$_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNN14nearestNghTrimEP9gTreeNodeIS2_7_vect3dIdES3_5nDataIS3_EE = comdat any

$_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE3delEv = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZL3_tm = internal global %struct.timer zeroinitializer, align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [22 x i8] c"Unable to open file: \00", align 1
@_ZN7benchIO11intHeaderIOB5cxx11E = global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.5 = private unnamed_addr constant [12 x i8] c"sequenceInt\00", align 1
@_ZN7benchIO13HeaderPoint2dB5cxx11E = global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.7 = private unnamed_addr constant [21 x i8] c"pbbs_sequencePoint2d\00", align 1
@_ZN7benchIO13HeaderPoint3dB5cxx11E = global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.9 = private unnamed_addr constant [21 x i8] c"pbbs_sequencePoint3d\00", align 1
@_ZN7benchIO15HeaderTrianglesB5cxx11E = global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.11 = private unnamed_addr constant [15 x i8] c"pbbs_triangles\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c".node\00", align 1
@.str.13 = private unnamed_addr constant [46 x i8] c"readStringFromFileNodeEle inconsistent length\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c".ele\00", align 1
@.str.15 = private unnamed_addr constant [65 x i8] c"[-k {1,...,10}] [-d {2,3}] [-o <outFile>] [-r <rounds>] <inFile>\00", align 1
@.str.20 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"usage: \00", align 1
@.str.22 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.23 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@_ZTTSt14basic_ofstreamIcSt11char_traitsIcEE = external unnamed_addr constant [4 x i8*]
@_ZTVSt13basic_filebufIcSt11char_traitsIcEE = external unnamed_addr constant { [16 x i8*] }
@_ZTVSt15basic_streambufIcSt11char_traitsIcEE = external unnamed_addr constant { [16 x i8*] }
@_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE = external unnamed_addr constant [4 x i8*]
@.str.24 = private unnamed_addr constant [35 x i8] c"readPointsFromFile wrong file type\00", align 1
@.str.25 = private unnamed_addr constant [18 x i8] c"numNewNodes == 0\0A\00", align 1
@.str.26 = private unnamed_addr constant [19 x i8] c"k too large in kNN\00", align 1
@.str.27 = private unnamed_addr constant [12 x i8] c"PBBS-time: \00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_neighborsTime.C, i8* null }]

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @mallopt(i32, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone uwtable
define i32 @_Z11ptFindBlock8_point2dIdEdiS0_(double %minpt.coerce0, double %minpt.coerce1, double %blocksize, i32 %log_numblocks, double %p.coerce0, double %p.coerce1) local_unnamed_addr #3 {
entry:
  %shl = shl i32 1, %log_numblocks
  %sub = fsub fast double %p.coerce0, %minpt.coerce0
  %div = fdiv fast double %sub, %blocksize
  %conv = fptosi double %div to i32
  %sub3 = add nsw i32 %shl, -1
  %cmp.i = icmp slt i32 %sub3, %conv
  %.sroa.speculated42 = select i1 %cmp.i, i32 %sub3, i32 %conv
  %sub6 = fsub fast double %p.coerce1, %minpt.coerce1
  %div7 = fdiv fast double %sub6, %blocksize
  %conv8 = fptosi double %div7 to i32
  %cmp.i34 = icmp slt i32 %sub3, %conv8
  %.sroa.speculated = select i1 %cmp.i34, i32 %sub3, i32 %conv8
  %cmp47 = icmp sgt i32 %log_numblocks, 0
  br i1 %cmp47, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %min.iters.check = icmp ult i32 %log_numblocks, 32
  br i1 %min.iters.check, label %for.body.preheader, label %vector.ph

for.body.preheader:                               ; preds = %middle.block, %for.body.lr.ph
  %result.049.ph = phi i32 [ %33, %middle.block ], [ 0, %for.body.lr.ph ]
  %i.048.ph = phi i32 [ %n.vec, %middle.block ], [ 0, %for.body.lr.ph ]
  br label %for.body

vector.ph:                                        ; preds = %for.body.lr.ph
  %n.vec = and i32 %log_numblocks, -32
  %broadcast.splatinsert = insertelement <8 x i32> undef, i32 %.sroa.speculated42, i32 0
  %broadcast.splat = shufflevector <8 x i32> %broadcast.splatinsert, <8 x i32> undef, <8 x i32> zeroinitializer
  %broadcast.splatinsert62 = insertelement <8 x i32> undef, i32 %.sroa.speculated, i32 0
  %broadcast.splat63 = shufflevector <8 x i32> %broadcast.splatinsert62, <8 x i32> undef, <8 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i32 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.phi = phi <8 x i32> [ zeroinitializer, %vector.ph ], [ %28, %vector.body ]
  %vec.phi50 = phi <8 x i32> [ zeroinitializer, %vector.ph ], [ %29, %vector.body ]
  %vec.phi51 = phi <8 x i32> [ zeroinitializer, %vector.ph ], [ %30, %vector.body ]
  %vec.phi52 = phi <8 x i32> [ zeroinitializer, %vector.ph ], [ %31, %vector.body ]
  %vec.ind = phi <8 x i32> [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, %vector.ph ], [ %vec.ind.next, %vector.body ]
  %step.add = add <8 x i32> %vec.ind, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %step.add53 = add <8 x i32> %vec.ind, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %step.add54 = add <8 x i32> %vec.ind, <i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24>
  %0 = shl <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %vec.ind
  %1 = shl <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %step.add
  %2 = shl <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %step.add53
  %3 = shl <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %step.add54
  %4 = and <8 x i32> %0, %broadcast.splat
  %5 = and <8 x i32> %1, %broadcast.splat
  %6 = and <8 x i32> %2, %broadcast.splat
  %7 = and <8 x i32> %3, %broadcast.splat
  %8 = shl <8 x i32> %4, %vec.ind
  %9 = shl <8 x i32> %5, %step.add
  %10 = shl <8 x i32> %6, %step.add53
  %11 = shl <8 x i32> %7, %step.add54
  %12 = add nsw <8 x i32> %8, %vec.phi
  %13 = add nsw <8 x i32> %9, %vec.phi50
  %14 = add nsw <8 x i32> %10, %vec.phi51
  %15 = add nsw <8 x i32> %11, %vec.phi52
  %16 = and <8 x i32> %0, %broadcast.splat63
  %17 = and <8 x i32> %1, %broadcast.splat63
  %18 = and <8 x i32> %2, %broadcast.splat63
  %19 = and <8 x i32> %3, %broadcast.splat63
  %20 = add nuw nsw <8 x i32> %vec.ind, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %21 = add <8 x i32> %vec.ind, <i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9>
  %22 = add <8 x i32> %vec.ind, <i32 17, i32 17, i32 17, i32 17, i32 17, i32 17, i32 17, i32 17>
  %23 = add <8 x i32> %vec.ind, <i32 25, i32 25, i32 25, i32 25, i32 25, i32 25, i32 25, i32 25>
  %24 = shl <8 x i32> %16, %20
  %25 = shl <8 x i32> %17, %21
  %26 = shl <8 x i32> %18, %22
  %27 = shl <8 x i32> %19, %23
  %28 = add nsw <8 x i32> %12, %24
  %29 = add nsw <8 x i32> %13, %25
  %30 = add nsw <8 x i32> %14, %26
  %31 = add nsw <8 x i32> %15, %27
  %index.next = add i32 %index, 32
  %vec.ind.next = add <8 x i32> %vec.ind, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %32 = icmp eq i32 %index.next, %n.vec
  br i1 %32, label %middle.block, label %vector.body, !llvm.loop !2

middle.block:                                     ; preds = %vector.body
  %bin.rdx = add <8 x i32> %29, %28
  %bin.rdx70 = add <8 x i32> %bin.rdx, %30
  %bin.rdx71 = add <8 x i32> %bin.rdx70, %31
  %rdx.shuf = shufflevector <8 x i32> %bin.rdx71, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx72 = add <8 x i32> %rdx.shuf, %bin.rdx71
  %rdx.shuf73 = shufflevector <8 x i32> %bin.rdx72, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx74 = add <8 x i32> %rdx.shuf73, %bin.rdx72
  %rdx.shuf75 = shufflevector <8 x i32> %bin.rdx74, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx76 = add <8 x i32> %rdx.shuf75, %bin.rdx74
  %33 = extractelement <8 x i32> %bin.rdx76, i32 0
  %cmp.n = icmp eq i32 %n.vec, %log_numblocks
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader

for.cond.cleanup:                                 ; preds = %for.body, %middle.block, %entry
  %result.0.lcssa = phi i32 [ 0, %entry ], [ %33, %middle.block ], [ %add17, %for.body ]
  ret i32 %result.0.lcssa

for.body:                                         ; preds = %for.body.preheader, %for.body
  %result.049 = phi i32 [ %add17, %for.body ], [ %result.049.ph, %for.body.preheader ]
  %i.048 = phi i32 [ %add15, %for.body ], [ %i.048.ph, %for.body.preheader ]
  %shl12 = shl i32 1, %i.048
  %and = and i32 %shl12, %.sroa.speculated42
  %shl13 = shl i32 %and, %i.048
  %add = add nsw i32 %shl13, %result.049
  %and14 = and i32 %shl12, %.sroa.speculated
  %add15 = add nuw nsw i32 %i.048, 1
  %shl16 = shl i32 %and14, %add15
  %add17 = add nsw i32 %add, %shl16
  %exitcond = icmp eq i32 %add15, %log_numblocks
  br i1 %exitcond, label %for.cond.cleanup, label %for.body, !llvm.loop !4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #4

; Function Attrs: norecurse nounwind readonly uwtable
define i32 @_Z11ptFindBlock8_point3dIdEdiS0_(%class._point3d* byval nocapture readonly align 8 %minpt, double %blocksize, i32 %log_numblocks, %class._point3d* byval nocapture readonly align 8 %p) local_unnamed_addr #5 {
entry:
  %shl = shl i32 1, %log_numblocks
  %x = getelementptr inbounds %class._point3d, %class._point3d* %p, i64 0, i32 0
  %0 = load double, double* %x, align 8, !tbaa !6
  %x1 = getelementptr inbounds %class._point3d, %class._point3d* %minpt, i64 0, i32 0
  %1 = load double, double* %x1, align 8, !tbaa !6
  %sub = fsub fast double %0, %1
  %div = fdiv fast double %sub, %blocksize
  %conv = fptosi double %div to i32
  %sub3 = add nsw i32 %shl, -1
  %cmp.i = icmp slt i32 %sub3, %conv
  %.sroa.speculated70 = select i1 %cmp.i, i32 %sub3, i32 %conv
  %y = getelementptr inbounds %class._point3d, %class._point3d* %p, i64 0, i32 1
  %2 = load double, double* %y, align 8, !tbaa !11
  %y5 = getelementptr inbounds %class._point3d, %class._point3d* %minpt, i64 0, i32 1
  %3 = load double, double* %y5, align 8, !tbaa !11
  %sub6 = fsub fast double %2, %3
  %div7 = fdiv fast double %sub6, %blocksize
  %conv8 = fptosi double %div7 to i32
  %cmp.i56 = icmp slt i32 %sub3, %conv8
  %.sroa.speculated64 = select i1 %cmp.i56, i32 %sub3, i32 %conv8
  %z = getelementptr inbounds %class._point3d, %class._point3d* %p, i64 0, i32 2
  %4 = load double, double* %z, align 8, !tbaa !12
  %z13 = getelementptr inbounds %class._point3d, %class._point3d* %minpt, i64 0, i32 2
  %5 = load double, double* %z13, align 8, !tbaa !12
  %sub14 = fsub fast double %4, %5
  %div15 = fdiv fast double %sub14, %blocksize
  %conv16 = fptosi double %div15 to i32
  %cmp.i54 = icmp slt i32 %sub3, %conv16
  %.sroa.speculated = select i1 %cmp.i54, i32 %sub3, i32 %conv16
  %cmp75 = icmp sgt i32 %log_numblocks, 0
  br i1 %cmp75, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %min.iters.check = icmp ult i32 %log_numblocks, 16
  br i1 %min.iters.check, label %for.body.preheader, label %vector.ph

for.body.preheader:                               ; preds = %middle.block, %for.body.lr.ph
  %result.077.ph = phi i32 [ %33, %middle.block ], [ 0, %for.body.lr.ph ]
  %i.076.ph = phi i32 [ %n.vec, %middle.block ], [ 0, %for.body.lr.ph ]
  br label %for.body

vector.ph:                                        ; preds = %for.body.lr.ph
  %n.vec = and i32 %log_numblocks, -16
  %broadcast.splatinsert = insertelement <8 x i32> undef, i32 %.sroa.speculated70, i32 0
  %broadcast.splat = shufflevector <8 x i32> %broadcast.splatinsert, <8 x i32> undef, <8 x i32> zeroinitializer
  %broadcast.splatinsert82 = insertelement <8 x i32> undef, i32 %.sroa.speculated64, i32 0
  %broadcast.splat83 = shufflevector <8 x i32> %broadcast.splatinsert82, <8 x i32> undef, <8 x i32> zeroinitializer
  %broadcast.splatinsert86 = insertelement <8 x i32> undef, i32 %.sroa.speculated, i32 0
  %broadcast.splat87 = shufflevector <8 x i32> %broadcast.splatinsert86, <8 x i32> undef, <8 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i32 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.phi = phi <8 x i32> [ zeroinitializer, %vector.ph ], [ %30, %vector.body ]
  %vec.phi78 = phi <8 x i32> [ zeroinitializer, %vector.ph ], [ %31, %vector.body ]
  %vec.ind = phi <8 x i32> [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, %vector.ph ], [ %vec.ind.next, %vector.body ]
  %step.add = add <8 x i32> %vec.ind, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %6 = shl <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %vec.ind
  %7 = shl <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %step.add
  %8 = and <8 x i32> %6, %broadcast.splat
  %9 = and <8 x i32> %7, %broadcast.splat
  %10 = shl nuw nsw <8 x i32> %vec.ind, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %11 = shl nuw nsw <8 x i32> %step.add, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %12 = shl <8 x i32> %8, %10
  %13 = shl <8 x i32> %9, %11
  %14 = add nsw <8 x i32> %12, %vec.phi
  %15 = add nsw <8 x i32> %13, %vec.phi78
  %16 = and <8 x i32> %6, %broadcast.splat83
  %17 = and <8 x i32> %7, %broadcast.splat83
  %18 = or <8 x i32> %10, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %19 = or <8 x i32> %11, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %20 = shl <8 x i32> %16, %18
  %21 = shl <8 x i32> %17, %19
  %22 = add nsw <8 x i32> %14, %20
  %23 = add nsw <8 x i32> %15, %21
  %24 = and <8 x i32> %6, %broadcast.splat87
  %25 = and <8 x i32> %7, %broadcast.splat87
  %26 = add nuw nsw <8 x i32> %10, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %27 = add nuw nsw <8 x i32> %11, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %28 = shl <8 x i32> %24, %26
  %29 = shl <8 x i32> %25, %27
  %30 = add nsw <8 x i32> %22, %28
  %31 = add nsw <8 x i32> %23, %29
  %index.next = add i32 %index, 16
  %vec.ind.next = add <8 x i32> %vec.ind, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %32 = icmp eq i32 %index.next, %n.vec
  br i1 %32, label %middle.block, label %vector.body, !llvm.loop !13

middle.block:                                     ; preds = %vector.body
  %bin.rdx = add <8 x i32> %31, %30
  %rdx.shuf = shufflevector <8 x i32> %bin.rdx, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx90 = add <8 x i32> %rdx.shuf, %bin.rdx
  %rdx.shuf91 = shufflevector <8 x i32> %bin.rdx90, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx92 = add <8 x i32> %rdx.shuf91, %bin.rdx90
  %rdx.shuf93 = shufflevector <8 x i32> %bin.rdx92, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx94 = add <8 x i32> %rdx.shuf93, %bin.rdx92
  %33 = extractelement <8 x i32> %bin.rdx94, i32 0
  %cmp.n = icmp eq i32 %n.vec, %log_numblocks
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader

for.cond.cleanup:                                 ; preds = %for.body, %middle.block, %entry
  %result.0.lcssa = phi i32 [ 0, %entry ], [ %33, %middle.block ], [ %add31, %for.body ]
  ret i32 %result.0.lcssa

for.body:                                         ; preds = %for.body.preheader, %for.body
  %result.077 = phi i32 [ %add31, %for.body ], [ %result.077.ph, %for.body.preheader ]
  %i.076 = phi i32 [ %inc, %for.body ], [ %i.076.ph, %for.body.preheader ]
  %shl20 = shl i32 1, %i.076
  %and = and i32 %shl20, %.sroa.speculated70
  %mul = shl nuw nsw i32 %i.076, 1
  %shl21 = shl i32 %and, %mul
  %add = add nsw i32 %shl21, %result.077
  %and22 = and i32 %shl20, %.sroa.speculated64
  %add24 = or i32 %mul, 1
  %shl25 = shl i32 %and22, %add24
  %add26 = add nsw i32 %add, %shl25
  %and27 = and i32 %shl20, %.sroa.speculated
  %add29 = add nuw nsw i32 %mul, 2
  %shl30 = shl i32 %and27, %add29
  %add31 = add nsw i32 %add26, %shl30
  %inc = add nuw nsw i32 %i.076, 1
  %exitcond = icmp eq i32 %inc, %log_numblocks
  br i1 %exitcond, label %for.cond.cleanup, label %for.body, !llvm.loop !14
}

; Function Attrs: norecurse nounwind readnone uwtable
define { double, double } @_Z11ptMakeBlock8_point2dIdEdii(double %minpt.coerce0, double %minpt.coerce1, double %blocksize, i32 %log_numblocks, i32 %index) local_unnamed_addr #3 {
entry:
  %cmp27 = icmp sgt i32 %log_numblocks, 0
  br i1 %cmp27, label %for.body.preheader, label %for.cond.cleanup

for.body.preheader:                               ; preds = %entry
  %0 = add i32 %log_numblocks, -1
  %xtraiter = and i32 %log_numblocks, 3
  %1 = icmp ult i32 %0, 3
  br i1 %1, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = sub i32 %log_numblocks, %xtraiter
  br label %for.body

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.body, %for.body.preheader
  %index.addr.031.unr = phi i32 [ %index, %for.body.preheader ], [ %shr.3, %for.body ]
  %i.029.unr = phi i32 [ 0, %for.body.preheader ], [ %inc.3, %for.body ]
  %2 = phi <2 x i32> [ undef, %for.body.preheader ], [ %43, %for.body ]
  %3 = phi <2 x i32> [ zeroinitializer, %for.body.preheader ], [ %43, %for.body ]
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod, label %for.cond.cleanup.loopexit, label %for.body.epil.preheader

for.body.epil.preheader:                          ; preds = %for.cond.cleanup.loopexit.unr-lcssa
  br label %for.body.epil

for.body.epil:                                    ; preds = %for.body.epil.preheader, %for.body.epil
  %index.addr.031.epil = phi i32 [ %shr.epil, %for.body.epil ], [ %index.addr.031.unr, %for.body.epil.preheader ]
  %i.029.epil = phi i32 [ %inc.epil, %for.body.epil ], [ %i.029.unr, %for.body.epil.preheader ]
  %epil.iter = phi i32 [ %epil.iter.sub, %for.body.epil ], [ %xtraiter, %for.body.epil.preheader ]
  %4 = phi <2 x i32> [ %11, %for.body.epil ], [ %3, %for.body.epil.preheader ]
  %5 = insertelement <2 x i32> undef, i32 %index.addr.031.epil, i32 0
  %6 = shufflevector <2 x i32> %5, <2 x i32> undef, <2 x i32> zeroinitializer
  %7 = and <2 x i32> %6, <i32 1, i32 2>
  %8 = insertelement <2 x i32> undef, i32 %i.029.epil, i32 0
  %9 = shufflevector <2 x i32> %8, <2 x i32> undef, <2 x i32> zeroinitializer
  %10 = shl <2 x i32> %7, %9
  %11 = or <2 x i32> %10, %4
  %shr.epil = ashr i32 %index.addr.031.epil, 2
  %inc.epil = add nuw nsw i32 %i.029.epil, 1
  %epil.iter.sub = add nsw i32 %epil.iter, -1
  %epil.iter.cmp = icmp eq i32 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond.cleanup.loopexit, label %for.body.epil, !llvm.loop !15

for.cond.cleanup.loopexit:                        ; preds = %for.body.epil, %for.cond.cleanup.loopexit.unr-lcssa
  %12 = phi <2 x i32> [ %2, %for.cond.cleanup.loopexit.unr-lcssa ], [ %11, %for.body.epil ]
  %13 = extractelement <2 x i32> %12, i32 1
  %phitmp = ashr i32 %13, 1
  %14 = extractelement <2 x i32> %12, i32 0
  %phitmp33 = sitofp i32 %14 to double
  %phitmp34 = sitofp i32 %phitmp to double
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit, %entry
  %yindex.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %phitmp34, %for.cond.cleanup.loopexit ]
  %xindex.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %phitmp33, %for.cond.cleanup.loopexit ]
  %mul = fmul fast double %xindex.0.lcssa, %blocksize
  %mul6 = fmul fast double %yindex.0.lcssa, %blocksize
  %div = fmul fast double %blocksize, 5.000000e-01
  %add = fadd fast double %div, %minpt.coerce0
  %add.i = fadd fast double %add, %mul
  %add7 = fadd fast double %div, %minpt.coerce1
  %add9.i = fadd fast double %add7, %mul6
  %.fca.0.insert.i = insertvalue { double, double } undef, double %add.i, 0
  %.fca.1.insert.i = insertvalue { double, double } %.fca.0.insert.i, double %add9.i, 1
  ret { double, double } %.fca.1.insert.i

for.body:                                         ; preds = %for.body, %for.body.preheader.new
  %index.addr.031 = phi i32 [ %index, %for.body.preheader.new ], [ %shr.3, %for.body ]
  %i.029 = phi i32 [ 0, %for.body.preheader.new ], [ %inc.3, %for.body ]
  %niter = phi i32 [ %unroll_iter, %for.body.preheader.new ], [ %niter.nsub.3, %for.body ]
  %15 = phi <2 x i32> [ zeroinitializer, %for.body.preheader.new ], [ %43, %for.body ]
  %16 = insertelement <2 x i32> undef, i32 %index.addr.031, i32 0
  %17 = shufflevector <2 x i32> %16, <2 x i32> undef, <2 x i32> zeroinitializer
  %18 = and <2 x i32> %17, <i32 1, i32 2>
  %19 = insertelement <2 x i32> undef, i32 %i.029, i32 0
  %20 = shufflevector <2 x i32> %19, <2 x i32> undef, <2 x i32> zeroinitializer
  %21 = shl <2 x i32> %18, %20
  %22 = or <2 x i32> %21, %15
  %shr = ashr i32 %index.addr.031, 2
  %inc = or i32 %i.029, 1
  %23 = insertelement <2 x i32> undef, i32 %shr, i32 0
  %24 = shufflevector <2 x i32> %23, <2 x i32> undef, <2 x i32> zeroinitializer
  %25 = and <2 x i32> %24, <i32 1, i32 2>
  %26 = insertelement <2 x i32> undef, i32 %inc, i32 0
  %27 = shufflevector <2 x i32> %26, <2 x i32> undef, <2 x i32> zeroinitializer
  %28 = shl <2 x i32> %25, %27
  %29 = or <2 x i32> %22, %28
  %shr.1 = ashr i32 %index.addr.031, 4
  %inc.1 = or i32 %i.029, 2
  %30 = insertelement <2 x i32> undef, i32 %shr.1, i32 0
  %31 = shufflevector <2 x i32> %30, <2 x i32> undef, <2 x i32> zeroinitializer
  %32 = and <2 x i32> %31, <i32 1, i32 2>
  %33 = insertelement <2 x i32> undef, i32 %inc.1, i32 0
  %34 = shufflevector <2 x i32> %33, <2 x i32> undef, <2 x i32> zeroinitializer
  %35 = shl <2 x i32> %32, %34
  %36 = or <2 x i32> %29, %35
  %shr.2 = ashr i32 %index.addr.031, 6
  %inc.2 = or i32 %i.029, 3
  %37 = insertelement <2 x i32> undef, i32 %shr.2, i32 0
  %38 = shufflevector <2 x i32> %37, <2 x i32> undef, <2 x i32> zeroinitializer
  %39 = and <2 x i32> %38, <i32 1, i32 2>
  %40 = insertelement <2 x i32> undef, i32 %inc.2, i32 0
  %41 = shufflevector <2 x i32> %40, <2 x i32> undef, <2 x i32> zeroinitializer
  %42 = shl <2 x i32> %39, %41
  %43 = or <2 x i32> %36, %42
  %shr.3 = ashr i32 %index.addr.031, 8
  %inc.3 = add nuw nsw i32 %i.029, 4
  %niter.nsub.3 = add i32 %niter, -4
  %niter.ncmp.3 = icmp eq i32 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body
}

; Function Attrs: norecurse nounwind uwtable
define void @_Z11ptMakeBlock8_point3dIdEdii(%class._point3d* noalias nocapture sret %agg.result, %class._point3d* byval nocapture readonly align 8 %minpt, double %blocksize, i32 %log_numblocks, i32 %index) local_unnamed_addr #6 {
entry:
  %cmp43 = icmp sgt i32 %log_numblocks, 0
  br i1 %cmp43, label %for.body.preheader, label %for.cond.cleanup

for.body.preheader:                               ; preds = %entry
  %0 = add i32 %log_numblocks, -1
  %xtraiter = and i32 %log_numblocks, 3
  %1 = icmp ult i32 %0, 3
  br i1 %1, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = sub i32 %log_numblocks, %xtraiter
  br label %for.body

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.body, %for.body.preheader
  %or.lcssa.ph = phi i32 [ undef, %for.body.preheader ], [ %or.3, %for.body ]
  %or3.lcssa.ph = phi i32 [ undef, %for.body.preheader ], [ %or3.3, %for.body ]
  %or6.lcssa.ph = phi i32 [ undef, %for.body.preheader ], [ %or6.3, %for.body ]
  %index.addr.048.unr = phi i32 [ %index, %for.body.preheader ], [ %shr.3, %for.body ]
  %xindex.047.unr = phi i32 [ 0, %for.body.preheader ], [ %or.3, %for.body ]
  %yindex.046.unr = phi i32 [ 0, %for.body.preheader ], [ %or3.3, %for.body ]
  %i.045.unr = phi i32 [ 0, %for.body.preheader ], [ %inc.3, %for.body ]
  %zindex.044.unr = phi i32 [ 0, %for.body.preheader ], [ %or6.3, %for.body ]
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod, label %for.cond.cleanup.loopexit, label %for.body.epil.preheader

for.body.epil.preheader:                          ; preds = %for.cond.cleanup.loopexit.unr-lcssa
  br label %for.body.epil

for.body.epil:                                    ; preds = %for.body.epil.preheader, %for.body.epil
  %index.addr.048.epil = phi i32 [ %shr.epil, %for.body.epil ], [ %index.addr.048.unr, %for.body.epil.preheader ]
  %xindex.047.epil = phi i32 [ %or.epil, %for.body.epil ], [ %xindex.047.unr, %for.body.epil.preheader ]
  %yindex.046.epil = phi i32 [ %or3.epil, %for.body.epil ], [ %yindex.046.unr, %for.body.epil.preheader ]
  %i.045.epil = phi i32 [ %inc.epil, %for.body.epil ], [ %i.045.unr, %for.body.epil.preheader ]
  %zindex.044.epil = phi i32 [ %or6.epil, %for.body.epil ], [ %zindex.044.unr, %for.body.epil.preheader ]
  %epil.iter = phi i32 [ %epil.iter.sub, %for.body.epil ], [ %xtraiter, %for.body.epil.preheader ]
  %and.epil = and i32 %index.addr.048.epil, 1
  %shl.epil = shl i32 %and.epil, %i.045.epil
  %or.epil = or i32 %shl.epil, %xindex.047.epil
  %and1.epil = and i32 %index.addr.048.epil, 2
  %shl2.epil = shl i32 %and1.epil, %i.045.epil
  %or3.epil = or i32 %shl2.epil, %yindex.046.epil
  %and4.epil = and i32 %index.addr.048.epil, 4
  %shl5.epil = shl i32 %and4.epil, %i.045.epil
  %or6.epil = or i32 %shl5.epil, %zindex.044.epil
  %shr.epil = ashr i32 %index.addr.048.epil, 3
  %inc.epil = add nuw nsw i32 %i.045.epil, 1
  %epil.iter.sub = add nsw i32 %epil.iter, -1
  %epil.iter.cmp = icmp eq i32 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond.cleanup.loopexit, label %for.body.epil, !llvm.loop !17

for.cond.cleanup.loopexit:                        ; preds = %for.body.epil, %for.cond.cleanup.loopexit.unr-lcssa
  %or.lcssa = phi i32 [ %or.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %or.epil, %for.body.epil ]
  %or3.lcssa = phi i32 [ %or3.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %or3.epil, %for.body.epil ]
  %or6.lcssa = phi i32 [ %or6.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %or6.epil, %for.body.epil ]
  %phitmp = ashr i32 %or3.lcssa, 1
  %phitmp51 = ashr i32 %or6.lcssa, 2
  %2 = insertelement <2 x i32> undef, i32 %or.lcssa, i32 0
  %3 = insertelement <2 x i32> %2, i32 %phitmp, i32 1
  %4 = sitofp <2 x i32> %3 to <2 x double>
  %phitmp54 = sitofp i32 %phitmp51 to double
  %5 = fadd fast <2 x double> %4, <double 5.000000e-01, double 5.000000e-01>
  %phitmp57 = fadd fast double %phitmp54, 5.000000e-01
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit, %entry
  %zindex.0.lcssa = phi double [ 5.000000e-01, %entry ], [ %phitmp57, %for.cond.cleanup.loopexit ]
  %6 = phi <2 x double> [ <double 5.000000e-01, double 5.000000e-01>, %entry ], [ %5, %for.cond.cleanup.loopexit ]
  %7 = bitcast %class._point3d* %minpt to <2 x double>*
  %8 = load <2 x double>, <2 x double>* %7, align 8, !tbaa !18
  %z = getelementptr inbounds %class._point3d, %class._point3d* %minpt, i64 0, i32 2
  %9 = load double, double* %z, align 8, !tbaa !12
  %10 = insertelement <2 x double> undef, double %blocksize, i32 0
  %11 = shufflevector <2 x double> %10, <2 x double> undef, <2 x i32> zeroinitializer
  %12 = fmul fast <2 x double> %6, %11
  %13 = fadd fast <2 x double> %12, %8
  %14 = fmul fast double %zindex.0.lcssa, %blocksize
  %add17.i = fadd fast double %9, %14
  %15 = bitcast %class._point3d* %agg.result to <2 x double>*
  store <2 x double> %13, <2 x double>* %15, align 8, !tbaa !18, !alias.scope !19
  %z.i.i = getelementptr inbounds %class._point3d, %class._point3d* %agg.result, i64 0, i32 2
  store double %add17.i, double* %z.i.i, align 8, !tbaa !12, !alias.scope !19
  ret void

for.body:                                         ; preds = %for.body, %for.body.preheader.new
  %index.addr.048 = phi i32 [ %index, %for.body.preheader.new ], [ %shr.3, %for.body ]
  %xindex.047 = phi i32 [ 0, %for.body.preheader.new ], [ %or.3, %for.body ]
  %yindex.046 = phi i32 [ 0, %for.body.preheader.new ], [ %or3.3, %for.body ]
  %i.045 = phi i32 [ 0, %for.body.preheader.new ], [ %inc.3, %for.body ]
  %zindex.044 = phi i32 [ 0, %for.body.preheader.new ], [ %or6.3, %for.body ]
  %niter = phi i32 [ %unroll_iter, %for.body.preheader.new ], [ %niter.nsub.3, %for.body ]
  %and = and i32 %index.addr.048, 1
  %shl = shl i32 %and, %i.045
  %or = or i32 %shl, %xindex.047
  %and1 = and i32 %index.addr.048, 2
  %shl2 = shl i32 %and1, %i.045
  %or3 = or i32 %shl2, %yindex.046
  %and4 = and i32 %index.addr.048, 4
  %shl5 = shl i32 %and4, %i.045
  %or6 = or i32 %shl5, %zindex.044
  %shr = ashr i32 %index.addr.048, 3
  %inc = or i32 %i.045, 1
  %and.1 = and i32 %shr, 1
  %shl.1 = shl i32 %and.1, %inc
  %or.1 = or i32 %or, %shl.1
  %and1.1 = and i32 %shr, 2
  %shl2.1 = shl i32 %and1.1, %inc
  %or3.1 = or i32 %or3, %shl2.1
  %and4.1 = and i32 %shr, 4
  %shl5.1 = shl i32 %and4.1, %inc
  %or6.1 = or i32 %or6, %shl5.1
  %shr.1 = ashr i32 %index.addr.048, 6
  %inc.1 = or i32 %i.045, 2
  %and.2 = and i32 %shr.1, 1
  %shl.2 = shl i32 %and.2, %inc.1
  %or.2 = or i32 %or.1, %shl.2
  %and1.2 = and i32 %shr.1, 2
  %shl2.2 = shl i32 %and1.2, %inc.1
  %or3.2 = or i32 %or3.1, %shl2.2
  %and4.2 = and i32 %shr.1, 4
  %shl5.2 = shl i32 %and4.2, %inc.1
  %or6.2 = or i32 %or6.1, %shl5.2
  %shr.2 = ashr i32 %index.addr.048, 9
  %inc.2 = or i32 %i.045, 3
  %and.3 = and i32 %shr.2, 1
  %shl.3 = shl i32 %and.3, %inc.2
  %or.3 = or i32 %or.2, %shl.3
  %and1.3 = and i32 %shr.2, 2
  %shl2.3 = shl i32 %and1.3, %inc.2
  %or3.3 = or i32 %or3.2, %shl2.3
  %and4.3 = and i32 %shr.2, 4
  %shl5.3 = shl i32 %and4.3, %inc.2
  %or6.3 = or i32 %or6.2, %shl5.3
  %shr.3 = ashr i32 %index.addr.048, 12
  %inc.3 = add nuw nsw i32 %i.045, 4
  %niter.nsub.3 = add i32 %niter, -4
  %niter.ncmp.3 = icmp eq i32 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body
}

; Function Attrs: nounwind uwtable
define void @_ZN7benchIO13stringToWordsEPcl(%"struct.benchIO::words"* noalias nocapture sret %agg.result, i8* %Str, i64 %n) local_unnamed_addr #7 {
entry:
  %0 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8118 = shl i32 %0, 3
  %cmp113 = icmp sgt i64 %n, 0
  br i1 %cmp113, label %pfor.detach.preheader, label %sync.continue

pfor.detach.preheader:                            ; preds = %entry
  %sub1 = add nsw i64 %n, -1
  %1 = zext i32 %__cilkrts_wc8118 to i64
  %2 = add i64 %n, -2
  %3 = add i64 %2, %1
  %4 = udiv i64 %3, %1
  %5 = icmp ult i64 %4, 2048
  %6 = select i1 %5, i64 %4, i64 2048
  tail call fastcc void @_ZN7benchIO13stringToWordsEPcl_pfor.detach.ls(i64 0, i64 %sub1, i64 %6, i8* %Str)
  br label %sync.continue

sync.continue:                                    ; preds = %entry, %pfor.detach.preheader
  %call5 = tail call noalias i8* @malloc(i64 %n) #2
  %7 = load i8, i8* %Str, align 1, !tbaa !22
  %tobool = icmp ne i8 %7, 0
  %frombool = zext i1 %tobool to i8
  store i8 %frombool, i8* %call5, align 1, !tbaa !23
  %cmp17111 = icmp sgt i64 %n, 1
  br i1 %cmp17111, label %pfor.detach19.preheader, label %sync.continue35

pfor.detach19.preheader:                          ; preds = %sync.continue
  %8 = add i64 %n, -2
  %9 = zext i32 %__cilkrts_wc8118 to i64
  %10 = add i64 %n, -3
  %11 = add i64 %10, %9
  %12 = udiv i64 %11, %9
  %13 = icmp ult i64 %12, 2048
  %14 = select i1 %13, i64 %12, i64 2048
  tail call fastcc void @_ZN7benchIO13stringToWordsEPcl_pfor.detach19.ls(i64 0, i64 %8, i64 %14, i8* nonnull %Str, i8* %call5)
  br label %sync.continue35

sync.continue35:                                  ; preds = %sync.continue, %pfor.detach19.preheader
  %call.i = tail call { i64*, i64 } @_ZN8sequence4packIllN5utils9identityFIlEEEE4_seqIT_EPS5_PbT0_S9_T1_(i64* null, i8* %call5, i64 0, i64 %n) #2
  %15 = extractvalue { i64*, i64 } %call.i, 0
  %16 = extractvalue { i64*, i64 } %call.i, 1
  %mul39 = shl i64 %16, 3
  %call40 = tail call noalias i8* @malloc(i64 %mul39) #2
  %cmp50109 = icmp sgt i64 %16, 0
  br i1 %cmp50109, label %pfor.detach52.preheader, label %sync.continue62

pfor.detach52.preheader:                          ; preds = %sync.continue35
  %17 = bitcast i8* %call40 to i8**
  %18 = add i64 %16, -1
  %19 = zext i32 %__cilkrts_wc8118 to i64
  %20 = add nsw i64 %19, -1
  %21 = add i64 %20, %18
  %22 = udiv i64 %21, %19
  %23 = icmp ult i64 %22, 2048
  %24 = select i1 %23, i64 %22, i64 2048
  tail call fastcc void @_ZN7benchIO13stringToWordsEPcl_pfor.detach52.ls(i64 0, i64 %18, i64 %24, i64* %15, i8* nonnull %Str, i8** %17)
  br label %sync.continue62

sync.continue62:                                  ; preds = %sync.continue35, %pfor.detach52.preheader
  %25 = bitcast i64* %15 to i8*
  tail call void @free(i8* %25) #2
  tail call void @free(i8* %call5) #2
  %n.i = getelementptr inbounds %"struct.benchIO::words", %"struct.benchIO::words"* %agg.result, i64 0, i32 0
  store i64 %n, i64* %n.i, align 8, !tbaa !25
  %Chars.i = getelementptr inbounds %"struct.benchIO::words", %"struct.benchIO::words"* %agg.result, i64 0, i32 1
  store i8* %Str, i8** %Chars.i, align 8, !tbaa !29
  %m.i = getelementptr inbounds %"struct.benchIO::words", %"struct.benchIO::words"* %agg.result, i64 0, i32 2
  store i64 %16, i64* %m.i, align 8, !tbaa !30
  %Strings.i = getelementptr inbounds %"struct.benchIO::words", %"struct.benchIO::words"* %agg.result, i64 0, i32 3
  %26 = bitcast i8*** %Strings.i to i8**
  store i8* %call40, i8** %26, align 8, !tbaa !31
  ret void
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define i32 @_ZN7benchIO17writeStringToFileEPclS0_(i8* %S, i64 %n, i8* %fileName) local_unnamed_addr #7 {
entry:
  %file = alloca %"class.std::basic_ofstream", align 8
  %0 = bitcast %"class.std::basic_ofstream"* %file to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %0) #2
  call void @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode(%"class.std::basic_ofstream"* nonnull %file, i8* %fileName, i32 20)
  %_M_file.i.i = getelementptr inbounds %"class.std::basic_ofstream", %"class.std::basic_ofstream"* %file, i64 0, i32 1, i32 2
  %call.i.i = call zeroext i1 @_ZNKSt12__basic_fileIcE7is_openEv(%"class.std::__basic_file"* nonnull %_M_file.i.i) #20
  br i1 %call.i.i, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call1.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i64 21) #2
  %tobool.i = icmp eq i8* %fileName, null
  br i1 %tobool.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.then
  %vtable.i = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !32
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %1 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %1, align 8
  %add.ptr.i = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i
  %2 = bitcast i8* %add.ptr.i to %"class.std::basic_ios"*
  %_M_streambuf_state.i.i.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 32
  %3 = bitcast i8* %_M_streambuf_state.i.i.i to i32*
  %4 = load i32, i32* %3, align 8, !tbaa !34
  %or.i.i.i = or i32 %4, 1
  call void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(%"class.std::basic_ios"* %2, i32 %or.i.i.i) #2
  br label %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit

if.else.i:                                        ; preds = %if.then
  %call.i.i10 = call i64 @strlen(i8* nonnull %fileName) #2
  %call1.i11 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull %fileName, i64 %call.i.i10) #2
  br label %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit

_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit: ; preds = %if.then.i, %if.else.i
  %vtable.i12 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !32
  %vbase.offset.ptr.i13 = getelementptr i8, i8* %vtable.i12, i64 -24
  %5 = bitcast i8* %vbase.offset.ptr.i13 to i64*
  %vbase.offset.i14 = load i64, i64* %5, align 8
  %add.ptr.i15 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i14
  %_M_ctype.i = getelementptr inbounds i8, i8* %add.ptr.i15, i64 240
  %6 = bitcast i8* %_M_ctype.i to %"class.std::ctype"**
  %7 = load %"class.std::ctype"*, %"class.std::ctype"** %6, align 8, !tbaa !41
  %tobool.i32 = icmp eq %"class.std::ctype"* %7, null
  br i1 %tobool.i32, label %if.then.i33, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit

if.then.i33:                                      ; preds = %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
  call void @_ZSt16__throw_bad_castv() #21
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit:    ; preds = %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
  %_M_widen_ok.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %7, i64 0, i32 8
  %8 = load i8, i8* %_M_widen_ok.i, align 8, !tbaa !43
  %tobool.i28 = icmp eq i8 %8, 0
  br i1 %tobool.i28, label %if.end.i, label %if.then.i29

if.then.i29:                                      ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit
  %arrayidx.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %7, i64 0, i32 9, i64 10
  %9 = load i8, i8* %arrayidx.i, align 1, !tbaa !22
  br label %_ZNKSt5ctypeIcE5widenEc.exit

if.end.i:                                         ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull %7) #2
  %10 = bitcast %"class.std::ctype"* %7 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i30 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %10, align 8, !tbaa !32
  %vfn.i = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i30, i64 6
  %11 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i, align 8
  %call.i31 = call signext i8 %11(%"class.std::ctype"* nonnull %7, i8 signext 10) #2
  br label %_ZNKSt5ctypeIcE5widenEc.exit

_ZNKSt5ctypeIcE5widenEc.exit:                     ; preds = %if.then.i29, %if.end.i
  %retval.0.i = phi i8 [ %9, %if.then.i29 ], [ %call.i31, %if.end.i ]
  %call1.i17 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i8 signext %retval.0.i) #2
  %call.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull %call1.i17) #2
  %.pre = getelementptr inbounds %"class.std::basic_ofstream", %"class.std::basic_ofstream"* %file, i64 0, i32 1
  br label %cleanup

if.end:                                           ; preds = %entry
  %12 = bitcast %"class.std::basic_ofstream"* %file to %"class.std::basic_ostream"*
  %call5 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"* nonnull %12, i8* %S, i64 %n) #2
  %_M_filebuf.i = getelementptr inbounds %"class.std::basic_ofstream", %"class.std::basic_ofstream"* %file, i64 0, i32 1
  %call.i18 = call %"class.std::basic_filebuf"* @_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv(%"class.std::basic_filebuf"* nonnull %_M_filebuf.i) #2
  %tobool.i19 = icmp eq %"class.std::basic_filebuf"* %call.i18, null
  br i1 %tobool.i19, label %if.then.i26, label %cleanup

if.then.i26:                                      ; preds = %if.end
  %13 = bitcast %"class.std::basic_ofstream"* %file to i8**
  %vtable.i20 = load i8*, i8** %13, align 8, !tbaa !32
  %vbase.offset.ptr.i21 = getelementptr i8, i8* %vtable.i20, i64 -24
  %14 = bitcast i8* %vbase.offset.ptr.i21 to i64*
  %vbase.offset.i22 = load i64, i64* %14, align 8
  %add.ptr.i23 = getelementptr inbounds i8, i8* %0, i64 %vbase.offset.i22
  %15 = bitcast i8* %add.ptr.i23 to %"class.std::basic_ios"*
  %_M_streambuf_state.i.i.i24 = getelementptr inbounds i8, i8* %add.ptr.i23, i64 32
  %16 = bitcast i8* %_M_streambuf_state.i.i.i24 to i32*
  %17 = load i32, i32* %16, align 8, !tbaa !34
  %or.i.i.i25 = or i32 %17, 4
  call void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(%"class.std::basic_ios"* %15, i32 %or.i.i.i25) #2
  br label %cleanup

cleanup:                                          ; preds = %if.then.i26, %if.end, %_ZNKSt5ctypeIcE5widenEc.exit
  %_M_filebuf.i.i.pre-phi = phi %"class.std::basic_filebuf"* [ %_M_filebuf.i, %if.then.i26 ], [ %_M_filebuf.i, %if.end ], [ %.pre, %_ZNKSt5ctypeIcE5widenEc.exit ]
  %retval.0 = phi i32 [ 0, %if.then.i26 ], [ 0, %if.end ], [ 1, %_ZNKSt5ctypeIcE5widenEc.exit ]
  %18 = load i64, i64* bitcast ([4 x i8*]* @_ZTTSt14basic_ofstreamIcSt11char_traitsIcEE to i64*), align 8
  %19 = bitcast %"class.std::basic_ofstream"* %file to i64*
  store i64 %18, i64* %19, align 8, !tbaa !32
  %20 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTSt14basic_ofstreamIcSt11char_traitsIcEE, i64 0, i64 3) to i64*), align 8
  %vtable.cast.i.i = inttoptr i64 %18 to i8*
  %vbase.offset.ptr.i.i = getelementptr i8, i8* %vtable.cast.i.i, i64 -24
  %21 = bitcast i8* %vbase.offset.ptr.i.i to i64*
  %vbase.offset.i.i = load i64, i64* %21, align 8
  %add.ptr.i.i = getelementptr inbounds i8, i8* %0, i64 %vbase.offset.i.i
  %22 = bitcast i8* %add.ptr.i.i to i64*
  store i64 %20, i64* %22, align 8, !tbaa !32
  %23 = getelementptr inbounds %"class.std::basic_ofstream", %"class.std::basic_ofstream"* %file, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVSt13basic_filebufIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8, !tbaa !32
  %call.i.i.i = call %"class.std::basic_filebuf"* @_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv(%"class.std::basic_filebuf"* nonnull %_M_filebuf.i.i.pre-phi) #2
  call void @_ZNSt12__basic_fileIcED1Ev(%"class.std::__basic_file"* nonnull %_M_file.i.i) #2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVSt15basic_streambufIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8, !tbaa !32
  %_M_buf_locale.i.i.i.i = getelementptr inbounds %"class.std::basic_ofstream", %"class.std::basic_ofstream"* %file, i64 0, i32 1, i32 0, i32 7
  call void @_ZNSt6localeD1Ev(%"class.std::locale"* nonnull %_M_buf_locale.i.i.i.i) #2
  %24 = getelementptr inbounds %"class.std::basic_ofstream", %"class.std::basic_ofstream"* %file, i64 0, i32 2, i32 0
  call void @_ZNSt8ios_baseD2Ev(%"class.std::ios_base"* nonnull %24) #2
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %0) #2
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
declare void @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode(%"class.std::basic_ofstream"*, i8*, i32) unnamed_addr #7 align 2

; Function Attrs: inlinehint nounwind uwtable
declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind uwtable
declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) local_unnamed_addr #8

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: nounwind uwtable
define { i8*, i64 } @_ZN7benchIO18readStringFromFileEPc(i8* %fileName) local_unnamed_addr #7 {
entry:
  %0 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8 = shl i32 %0, 3
  %file = alloca %"class.std::basic_ifstream", align 8
  %1 = bitcast %"class.std::basic_ifstream"* %file to i8*
  call void @llvm.lifetime.start.p0i8(i64 520, i8* nonnull %1) #2
  call void @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode(%"class.std::basic_ifstream"* nonnull %file, i8* %fileName, i32 14)
  %_M_file.i.i = getelementptr inbounds %"class.std::basic_ifstream", %"class.std::basic_ifstream"* %file, i64 0, i32 1, i32 2
  %call.i.i = call zeroext i1 @_ZNKSt12__basic_fileIcE7is_openEv(%"class.std::__basic_file"* nonnull %_M_file.i.i) #20
  br i1 %call.i.i, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call3 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0))
  %call4 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call3, i8* %fileName)
  %call.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call4) #2
  call void @abort() #21
  unreachable

if.end:                                           ; preds = %entry
  %2 = bitcast %"class.std::basic_ifstream"* %file to %"class.std::basic_istream"*
  %call6 = call { i64, i64 } @_ZNSi5tellgEv(%"class.std::basic_istream"* nonnull %2) #2
  %3 = extractvalue { i64, i64 } %call6, 0
  %call8 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSi5seekgElSt12_Ios_Seekdir(%"class.std::basic_istream"* nonnull %2, i64 0, i32 0) #2
  %call9 = call { i64, i64 } @_ZNSi5tellgEv(%"class.std::basic_istream"* nonnull %2) #2
  %4 = extractvalue { i64, i64 } %call9, 0
  %sub = sub nsw i64 %3, %4
  %add = add nsw i64 %sub, 1
  %call12 = call noalias i8* @malloc(i64 %add) #2
  %cmp37 = icmp slt i64 %sub, 0
  br i1 %cmp37, label %sync.continue, label %pfor.detach.lr.ph

pfor.detach.lr.ph:                                ; preds = %if.end
  %5 = zext i32 %__cilkrts_wc8 to i64
  %6 = add nsw i64 %5, -1
  %7 = add i64 %6, %sub
  %8 = udiv i64 %7, %5
  %9 = icmp ult i64 %8, 2048
  %10 = select i1 %9, i64 %8, i64 2048
  call fastcc void @_ZN7benchIO18readStringFromFileEPc_pfor.detach.ls(i64 0, i64 %sub, i64 %10, i8* %call12)
  br label %sync.continue

sync.continue:                                    ; preds = %if.end, %pfor.detach.lr.ph
  %call19 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSi4readEPcl(%"class.std::basic_istream"* nonnull %2, i8* %call12, i64 %sub) #2
  %_M_filebuf.i = getelementptr inbounds %"class.std::basic_ifstream", %"class.std::basic_ifstream"* %file, i64 0, i32 1
  %call.i36 = call %"class.std::basic_filebuf"* @_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv(%"class.std::basic_filebuf"* nonnull %_M_filebuf.i) #2
  %tobool.i = icmp eq %"class.std::basic_filebuf"* %call.i36, null
  br i1 %tobool.i, label %if.then.i, label %_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv.exit

if.then.i:                                        ; preds = %sync.continue
  %11 = bitcast %"class.std::basic_ifstream"* %file to i8**
  %vtable.i = load i8*, i8** %11, align 8, !tbaa !32
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %12 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %12, align 8
  %add.ptr.i = getelementptr inbounds i8, i8* %1, i64 %vbase.offset.i
  %13 = bitcast i8* %add.ptr.i to %"class.std::basic_ios"*
  %_M_streambuf_state.i.i.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 32
  %14 = bitcast i8* %_M_streambuf_state.i.i.i to i32*
  %15 = load i32, i32* %14, align 8, !tbaa !34
  %or.i.i.i = or i32 %15, 4
  call void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(%"class.std::basic_ios"* %13, i32 %or.i.i.i) #2
  br label %_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv.exit

_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv.exit: ; preds = %sync.continue, %if.then.i
  %16 = load i64, i64* bitcast ([4 x i8*]* @_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE to i64*), align 8
  %17 = bitcast %"class.std::basic_ifstream"* %file to i64*
  store i64 %16, i64* %17, align 8, !tbaa !32
  %18 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE, i64 0, i64 3) to i64*), align 8
  %vtable.cast.i.i = inttoptr i64 %16 to i8*
  %vbase.offset.ptr.i.i = getelementptr i8, i8* %vtable.cast.i.i, i64 -24
  %19 = bitcast i8* %vbase.offset.ptr.i.i to i64*
  %vbase.offset.i.i = load i64, i64* %19, align 8
  %add.ptr.i.i = getelementptr inbounds i8, i8* %1, i64 %vbase.offset.i.i
  %20 = bitcast i8* %add.ptr.i.i to i64*
  store i64 %18, i64* %20, align 8, !tbaa !32
  %21 = getelementptr inbounds %"class.std::basic_filebuf", %"class.std::basic_filebuf"* %_M_filebuf.i, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVSt13basic_filebufIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8, !tbaa !32
  %call.i.i.i = call %"class.std::basic_filebuf"* @_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv(%"class.std::basic_filebuf"* nonnull %_M_filebuf.i) #2
  call void @_ZNSt12__basic_fileIcED1Ev(%"class.std::__basic_file"* nonnull %_M_file.i.i) #2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVSt15basic_streambufIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8, !tbaa !32
  %_M_buf_locale.i.i.i.i = getelementptr inbounds %"class.std::basic_ifstream", %"class.std::basic_ifstream"* %file, i64 0, i32 1, i32 0, i32 7
  call void @_ZNSt6localeD1Ev(%"class.std::locale"* nonnull %_M_buf_locale.i.i.i.i) #2
  %22 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE, i64 0, i64 1) to i64*), align 8
  store i64 %22, i64* %17, align 8, !tbaa !32
  %23 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE, i64 0, i64 2) to i64*), align 8
  %vtable.cast.i.i.i = inttoptr i64 %22 to i8*
  %vbase.offset.ptr.i.i.i = getelementptr i8, i8* %vtable.cast.i.i.i, i64 -24
  %24 = bitcast i8* %vbase.offset.ptr.i.i.i to i64*
  %vbase.offset.i.i.i = load i64, i64* %24, align 8
  %add.ptr.i.i.i = getelementptr inbounds i8, i8* %1, i64 %vbase.offset.i.i.i
  %25 = bitcast i8* %add.ptr.i.i.i to i64*
  store i64 %23, i64* %25, align 8, !tbaa !32
  %26 = getelementptr inbounds %"class.std::basic_ifstream", %"class.std::basic_ifstream"* %file, i64 0, i32 0, i32 1
  store i64 0, i64* %26, align 8, !tbaa !45
  %27 = getelementptr inbounds %"class.std::basic_ifstream", %"class.std::basic_ifstream"* %file, i64 0, i32 2, i32 0
  call void @_ZNSt8ios_baseD2Ev(%"class.std::ios_base"* nonnull %27) #2
  call void @llvm.lifetime.end.p0i8(i64 520, i8* nonnull %1) #2
  %.fca.0.insert = insertvalue { i8*, i64 } undef, i8* %call12, 0
  %.fca.1.insert = insertvalue { i8*, i64 } %.fca.0.insert, i64 %sub, 1
  ret { i8*, i64 } %.fca.1.insert
}

; Function Attrs: nounwind uwtable
declare void @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode(%"class.std::basic_ifstream"*, i8*, i32) unnamed_addr #7 align 2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

declare { i64, i64 } @_ZNSi5tellgEv(%"class.std::basic_istream"*) local_unnamed_addr #0

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSi5seekgElSt12_Ios_Seekdir(%"class.std::basic_istream"*, i64, i32) local_unnamed_addr #0

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSi4readEPcl(%"class.std::basic_istream"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: nounwind uwtable
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #7 align 2

; Function Attrs: nounwind uwtable
define void @_ZN7benchIO28readTrianglesFromFileNodeEleEPc(%struct.triangles* noalias nocapture sret %agg.result, i8* readonly %fname) local_unnamed_addr #7 {
entry:
  %__dnew.i.i.i.i104 = alloca i64, align 8
  %__dnew.i.i.i.i = alloca i64, align 8
  %nfilename = alloca %"class.std::__cxx11::basic_string", align 8
  %W = alloca %"struct.benchIO::words", align 8
  %efilename = alloca %"class.std::__cxx11::basic_string", align 8
  %WE = alloca %"struct.benchIO::words", align 8
  %0 = bitcast %"class.std::__cxx11::basic_string"* %nfilename to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #2
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %nfilename, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %nfilename to %union.anon.1**
  store %union.anon.1* %1, %union.anon.1** %2, align 8, !tbaa !47
  %tobool.i = icmp eq i8* %fname, null
  %3 = bitcast %union.anon.1* %1 to i8*
  br i1 %tobool.i, label %cond.end.predBB2.split.i, label %if.end.i.i.i.i

if.end.i.i.i.i:                                   ; preds = %entry
  %call.i.i = call i64 @strlen(i8* nonnull %fname) #2
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #2
  store i64 %call.i.i, i64* %__dnew.i.i.i.i, align 8, !tbaa !49
  %cmp3.i.i.i.i = icmp ugt i64 %call.i.i, 15
  br i1 %cmp3.i.i.i.i, label %if.then4.i.i.i.i, label %if.end.if.end6_crit_edge.i.i.i.i

if.end.if.end6_crit_edge.i.i.i.i:                 ; preds = %if.end.i.i.i.i
  %_M_p.i.phi.trans.insert.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %nfilename, i64 0, i32 0, i32 0
  br label %if.end6.i.i.i.i

if.then4.i.i.i.i:                                 ; preds = %if.end.i.i.i.i
  %call5.i.i.i.i = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %nfilename, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i, i64 0) #2
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %nfilename, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i.i, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !50
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !49
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %nfilename, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !22
  br label %if.end6.i.i.i.i

if.end6.i.i.i.i:                                  ; preds = %if.then4.i.i.i.i, %if.end.if.end6_crit_edge.i.i.i.i
  %_M_p.i.pre-phi.i.i.i.i = phi i8** [ %_M_p.i.phi.trans.insert.i.i.i.i, %if.end.if.end6_crit_edge.i.i.i.i ], [ %_M_p.i13.i.i.i.i, %if.then4.i.i.i.i ]
  %6 = phi i8* [ %3, %if.end.if.end6_crit_edge.i.i.i.i ], [ %call5.i.i.i.i, %if.then4.i.i.i.i ]
  switch i64 %call.i.i, label %if.end.i.i.i.i.i.i.i [
    i64 1, label %if.then.i.i.i.i.i.i
    i64 0, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit
  ]

if.then.i.i.i.i.i.i:                              ; preds = %if.end6.i.i.i.i
  %7 = load i8, i8* %fname, align 1, !tbaa !22
  store i8 %7, i8* %6, align 1, !tbaa !22
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit

if.end.i.i.i.i.i.i.i:                             ; preds = %if.end6.i.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* nonnull %fname, i64 %call.i.i, i32 1, i1 false) #2
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit

cond.end.predBB2.split.i:                         ; preds = %entry
  call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.20, i64 0, i64 0)) #21
  unreachable

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit: ; preds = %if.end6.i.i.i.i, %if.then.i.i.i.i.i.i, %if.end.i.i.i.i.i.i.i
  %8 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !49
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %nfilename, i64 0, i32 1
  store i64 %8, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !52
  %9 = load i8*, i8** %_M_p.i.pre-phi.i.i.i.i, align 8, !tbaa !50
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %9, i64 %8
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #2
  %10 = load i64, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !52
  %sub3.i.i = sub i64 9223372036854775807, %10
  %cmp.i.i = icmp ult i64 %sub3.i.i, 5
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit

if.then.i.i:                                      ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0)) #21
  unreachable

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit: ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit
  %call2.i = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %nfilename, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i64 5) #2
  %_M_p.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call2.i, i64 0, i32 0, i32 0
  %11 = load i8*, i8** %_M_p.i.i, align 8, !tbaa !50
  %call2 = call { i8*, i64 } @_ZN7benchIO18readStringFromFileEPc(i8* %11)
  %12 = extractvalue { i8*, i64 } %call2, 0
  %13 = extractvalue { i8*, i64 } %call2, 1
  %14 = bitcast %"struct.benchIO::words"* %W to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #2
  call void @_ZN7benchIO13stringToWordsEPcl(%"struct.benchIO::words"* nonnull sret %W, i8* %12, i64 %13)
  %Strings = getelementptr inbounds %"struct.benchIO::words", %"struct.benchIO::words"* %W, i64 0, i32 3
  %15 = load i8**, i8*** %Strings, align 8, !tbaa !31
  %16 = load i8*, i8** %15, align 8, !tbaa !53
  %call.i102 = call i64 @strtol(i8* nocapture nonnull %16, i8** null, i32 10) #2
  %conv = trunc i64 %call.i102 to i32
  %numPoints = getelementptr inbounds %struct.triangles, %struct.triangles* %agg.result, i64 0, i32 0
  store i32 %conv, i32* %numPoints, align 8, !tbaa !54
  %m = getelementptr inbounds %"struct.benchIO::words", %"struct.benchIO::words"* %W, i64 0, i32 2
  %17 = load i64, i64* %m, align 8, !tbaa !30
  %mul = shl i32 %conv, 2
  %add = add nsw i32 %mul, 4
  %conv5 = sext i32 %add to i64
  %cmp = icmp slt i64 %17, %conv5
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit
  %call6 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.13, i64 0, i64 0))
  %call.i103 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call6) #2
  call void @abort() #21
  unreachable

if.end:                                           ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit
  %sext = shl i64 %call.i102, 32
  %mul10 = ashr exact i64 %sext, 28
  %call11 = call noalias i8* @malloc(i64 %mul10) #2
  %P = getelementptr inbounds %struct.triangles, %struct.triangles* %agg.result, i64 0, i32 2
  %18 = bitcast %class._point2d** %P to i8**
  store i8* %call11, i8** %18, align 8, !tbaa !56
  %cmp13148 = icmp sgt i32 %conv, 0
  %19 = bitcast i8* %call11 to %class._point2d*
  br i1 %cmp13148, label %for.body.lr.ph, label %if.end.i.i.i.i108

for.body.lr.ph:                                   ; preds = %if.end
  %wide.trip.count = and i64 %call.i102, 4294967295
  br label %for.body

if.end.i.i.i.i108:                                ; preds = %for.body, %if.end
  %20 = bitcast %"class.std::__cxx11::basic_string"* %efilename to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #2
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %efilename, i64 0, i32 2
  %22 = bitcast %"class.std::__cxx11::basic_string"* %efilename to %union.anon.1**
  store %union.anon.1* %21, %union.anon.1** %22, align 8, !tbaa !47
  %23 = bitcast %union.anon.1* %21 to i8*
  %call.i.i106 = call i64 @strlen(i8* nonnull %fname) #2
  %24 = bitcast i64* %__dnew.i.i.i.i104 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #2
  store i64 %call.i.i106, i64* %__dnew.i.i.i.i104, align 8, !tbaa !49
  %cmp3.i.i.i.i107 = icmp ugt i64 %call.i.i106, 15
  br i1 %cmp3.i.i.i.i107, label %if.then4.i.i.i.i114, label %if.end.if.end6_crit_edge.i.i.i.i110

if.end.if.end6_crit_edge.i.i.i.i110:              ; preds = %if.end.i.i.i.i108
  %_M_p.i.phi.trans.insert.i.i.i.i109 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %efilename, i64 0, i32 0, i32 0
  br label %if.end6.i.i.i.i116

if.then4.i.i.i.i114:                              ; preds = %if.end.i.i.i.i108
  %call5.i.i.i.i111 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %efilename, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i104, i64 0) #2
  %_M_p.i13.i.i.i.i112 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %efilename, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i.i111, i8** %_M_p.i13.i.i.i.i112, align 8, !tbaa !50
  %25 = load i64, i64* %__dnew.i.i.i.i104, align 8, !tbaa !49
  %_M_allocated_capacity.i.i.i.i.i113 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %efilename, i64 0, i32 2, i32 0
  store i64 %25, i64* %_M_allocated_capacity.i.i.i.i.i113, align 8, !tbaa !22
  br label %if.end6.i.i.i.i116

if.end6.i.i.i.i116:                               ; preds = %if.then4.i.i.i.i114, %if.end.if.end6_crit_edge.i.i.i.i110
  %_M_p.i.pre-phi.i.i.i.i115 = phi i8** [ %_M_p.i.phi.trans.insert.i.i.i.i109, %if.end.if.end6_crit_edge.i.i.i.i110 ], [ %_M_p.i13.i.i.i.i112, %if.then4.i.i.i.i114 ]
  %26 = phi i8* [ %23, %if.end.if.end6_crit_edge.i.i.i.i110 ], [ %call5.i.i.i.i111, %if.then4.i.i.i.i114 ]
  switch i64 %call.i.i106, label %if.end.i.i.i.i.i.i.i118 [
    i64 1, label %if.then.i.i.i.i.i.i117
    i64 0, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit122
  ]

if.then.i.i.i.i.i.i117:                           ; preds = %if.end6.i.i.i.i116
  %27 = load i8, i8* %fname, align 1, !tbaa !22
  store i8 %27, i8* %26, align 1, !tbaa !22
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit122

if.end.i.i.i.i.i.i.i118:                          ; preds = %if.end6.i.i.i.i116
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* nonnull %fname, i64 %call.i.i106, i32 1, i1 false) #2
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit122

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit122: ; preds = %if.end6.i.i.i.i116, %if.then.i.i.i.i.i.i117, %if.end.i.i.i.i.i.i.i118
  %28 = load i64, i64* %__dnew.i.i.i.i104, align 8, !tbaa !49
  %_M_string_length.i.i.i.i.i.i120 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %efilename, i64 0, i32 1
  store i64 %28, i64* %_M_string_length.i.i.i.i.i.i120, align 8, !tbaa !52
  %29 = load i8*, i8** %_M_p.i.pre-phi.i.i.i.i115, align 8, !tbaa !50
  %arrayidx.i.i.i.i.i121 = getelementptr inbounds i8, i8* %29, i64 %28
  store i8 0, i8* %arrayidx.i.i.i.i.i121, align 1, !tbaa !22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #2
  %30 = load i64, i64* %_M_string_length.i.i.i.i.i.i120, align 8, !tbaa !52
  %31 = or i64 %30, 3
  %cmp.i.i126 = icmp eq i64 %31, 9223372036854775807
  br i1 %cmp.i.i126, label %if.then.i.i127, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit129

if.then.i.i127:                                   ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit122
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0)) #21
  unreachable

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit129: ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit122
  %call2.i128 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %efilename, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i64 4) #2
  %_M_p.i.i130 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call2.i128, i64 0, i32 0, i32 0
  %32 = load i8*, i8** %_M_p.i.i130, align 8, !tbaa !50
  %call32 = call { i8*, i64 } @_ZN7benchIO18readStringFromFileEPc(i8* %32)
  %33 = extractvalue { i8*, i64 } %call32, 0
  %34 = extractvalue { i8*, i64 } %call32, 1
  %35 = bitcast %"struct.benchIO::words"* %WE to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #2
  call void @_ZN7benchIO13stringToWordsEPcl(%"struct.benchIO::words"* nonnull sret %WE, i8* %33, i64 %34)
  %Strings35 = getelementptr inbounds %"struct.benchIO::words", %"struct.benchIO::words"* %WE, i64 0, i32 3
  %36 = load i8**, i8*** %Strings35, align 8, !tbaa !31
  %37 = load i8*, i8** %36, align 8, !tbaa !53
  %call.i131 = call i64 @strtol(i8* nocapture nonnull %37, i8** null, i32 10) #2
  %conv38 = trunc i64 %call.i131 to i32
  %numTriangles = getelementptr inbounds %struct.triangles, %struct.triangles* %agg.result, i64 0, i32 1
  store i32 %conv38, i32* %numTriangles, align 4, !tbaa !57
  %m39 = getelementptr inbounds %"struct.benchIO::words", %"struct.benchIO::words"* %WE, i64 0, i32 2
  %38 = load i64, i64* %m39, align 8, !tbaa !30
  %mul41 = shl nsw i32 %conv38, 2
  %add42 = or i32 %mul41, 3
  %conv43 = sext i32 %add42 to i64
  %cmp44 = icmp slt i64 %38, %conv43
  br i1 %cmp44, label %if.then45, label %if.end48

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %39 = trunc i64 %indvars.iv to i32
  %mul16 = shl nsw i32 %39, 2
  %add17 = add nuw nsw i32 %mul16, 5
  %40 = zext i32 %add17 to i64
  %arrayidx18 = getelementptr inbounds i8*, i8** %15, i64 %40
  %41 = load i8*, i8** %arrayidx18, align 8, !tbaa !53
  %call.i132 = call fast double @strtod(i8* nocapture nonnull %41, i8** null) #2
  %add22 = add nuw nsw i32 %mul16, 6
  %42 = zext i32 %add22 to i64
  %arrayidx24 = getelementptr inbounds i8*, i8** %15, i64 %42
  %43 = load i8*, i8** %arrayidx24, align 8, !tbaa !53
  %call.i133 = call fast double @strtod(i8* nocapture nonnull %43, i8** null) #2
  %ref.tmp14.sroa.0.0..sroa_idx = getelementptr inbounds %class._point2d, %class._point2d* %19, i64 %indvars.iv, i32 0
  store double %call.i132, double* %ref.tmp14.sroa.0.0..sroa_idx, align 8
  %ref.tmp14.sroa.4.0..sroa_idx142 = getelementptr inbounds %class._point2d, %class._point2d* %19, i64 %indvars.iv, i32 1
  store double %call.i133, double* %ref.tmp14.sroa.4.0..sroa_idx142, align 8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %if.end.i.i.i.i108, label %for.body

if.then45:                                        ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit129
  %call46 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.13, i64 0, i64 0))
  %call.i134 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call46) #2
  call void @abort() #21
  unreachable

if.end48:                                         ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit129
  %sext100 = shl i64 %call.i131, 32
  %conv50 = ashr exact i64 %sext100, 32
  %mul51 = mul nsw i64 %conv50, 12
  %call52 = call noalias i8* @malloc(i64 %mul51) #2
  %T = getelementptr inbounds %struct.triangles, %struct.triangles* %agg.result, i64 0, i32 3
  %44 = bitcast %struct.triangle** %T to i8**
  store i8* %call52, i8** %44, align 8, !tbaa !58
  %cmp57146 = icmp sgt i64 %sext100, 0
  %45 = bitcast i8* %call52 to %struct.triangle*
  br i1 %cmp57146, label %for.body59.preheader, label %for.cond.cleanup58

for.body59.preheader:                             ; preds = %if.end48
  br label %for.body59

for.cond.cleanup58:                               ; preds = %for.body59, %if.end48
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #2
  %_M_p.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %efilename, i64 0, i32 0, i32 0
  %46 = load i8*, i8** %_M_p.i.i.i.i, align 8, !tbaa !50
  %cmp.i.i.i = icmp eq i8* %46, %23
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i135

if.then.i.i135:                                   ; preds = %for.cond.cleanup58
  call void @_ZdlPv(i8* %46) #2
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %for.cond.cleanup58, %if.then.i.i135
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #2
  %_M_p.i.i.i.i136 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %nfilename, i64 0, i32 0, i32 0
  %47 = load i8*, i8** %_M_p.i.i.i.i136, align 8, !tbaa !50
  %cmp.i.i.i138 = icmp eq i8* %47, %3
  br i1 %cmp.i.i.i138, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit140, label %if.then.i.i139

if.then.i.i139:                                   ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  call void @_ZdlPv(i8* %47) #2
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit140

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit140: ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, %if.then.i.i139
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #2
  ret void

for.body59:                                       ; preds = %for.body59.preheader, %for.body59
  %i53.0147 = phi i64 [ %inc80, %for.body59 ], [ 0, %for.body59.preheader ]
  %mul65 = shl i64 %i53.0147, 2
  %add66 = add nuw nsw i64 %mul65, 4
  %arrayidx69 = getelementptr inbounds i8*, i8** %36, i64 %add66
  %48 = load i8*, i8** %arrayidx69, align 8, !tbaa !53
  %call.i = call i64 @strtol(i8* nocapture nonnull %48, i8** null, i32 10) #2
  %conv71 = trunc i64 %call.i to i32
  %arrayidx75 = getelementptr inbounds %struct.triangle, %struct.triangle* %45, i64 %i53.0147, i32 0, i64 0
  store i32 %conv71, i32* %arrayidx75, align 4, !tbaa !59
  %add68.1 = add nuw nsw i64 %mul65, 5
  %arrayidx69.1 = getelementptr inbounds i8*, i8** %36, i64 %add68.1
  %49 = load i8*, i8** %arrayidx69.1, align 8, !tbaa !53
  %call.i.1 = call i64 @strtol(i8* nocapture nonnull %49, i8** null, i32 10) #2
  %conv71.1 = trunc i64 %call.i.1 to i32
  %arrayidx75.1 = getelementptr inbounds %struct.triangle, %struct.triangle* %45, i64 %i53.0147, i32 0, i64 1
  store i32 %conv71.1, i32* %arrayidx75.1, align 4, !tbaa !59
  %add68.2 = add nuw nsw i64 %mul65, 6
  %arrayidx69.2 = getelementptr inbounds i8*, i8** %36, i64 %add68.2
  %50 = load i8*, i8** %arrayidx69.2, align 8, !tbaa !53
  %call.i.2 = call i64 @strtol(i8* nocapture nonnull %50, i8** null, i32 10) #2
  %conv71.2 = trunc i64 %call.i.2 to i32
  %arrayidx75.2 = getelementptr inbounds %struct.triangle, %struct.triangle* %45, i64 %i53.0147, i32 0, i64 2
  store i32 %conv71.2, i32* %arrayidx75.2, align 4, !tbaa !59
  %inc80 = add nuw nsw i64 %i53.0147, 1
  %cmp57 = icmp slt i64 %inc80, %conv50
  br i1 %cmp57, label %for.body59, label %for.cond.cleanup58
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: norecurse nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr #6 {
entry:
  %__dnew.i.i.i.i.i = alloca i64, align 8
  %__dnew.i.i.i.i = alloca i64, align 8
  %P = alloca %struct.commandLine, align 8
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %agg.tmp1 = alloca %"class.std::__cxx11::basic_string", align 8
  %agg.tmp4 = alloca %"class.std::__cxx11::basic_string", align 8
  %agg.tmp7 = alloca %"class.std::__cxx11::basic_string", align 8
  %agg.tmp10 = alloca %"class.std::__cxx11::basic_string", align 8
  %0 = bitcast %struct.commandLine* %P to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %0) #2
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp to %union.anon.1**
  store %union.anon.1* %1, %union.anon.1** %2, align 8, !tbaa !47
  %3 = bitcast %union.anon.1* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #2
  store i64 64, i64* %__dnew.i.i.i.i, align 8, !tbaa !49
  %call5.i.i.i.i = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i, i64 0) #2
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i.i, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !50
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !49
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call5.i.i.i.i, i8* nonnull getelementptr inbounds ([65 x i8], [65 x i8]* @.str.15, i64 0, i64 0), i64 64, i32 1, i1 false) #2
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !52
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i.i, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #2
  %argc.i = getelementptr inbounds %struct.commandLine, %struct.commandLine* %P, i64 0, i32 0
  store i32 %argc, i32* %argc.i, align 8, !tbaa !60
  %argv.i = getelementptr inbounds %struct.commandLine, %struct.commandLine* %P, i64 0, i32 1
  store i8** %argv, i8*** %argv.i, align 8, !tbaa !62
  %comLine.i = getelementptr inbounds %struct.commandLine, %struct.commandLine* %P, i64 0, i32 2
  %6 = getelementptr inbounds %struct.commandLine, %struct.commandLine* %P, i64 0, i32 2, i32 2
  %7 = bitcast %"class.std::__cxx11::basic_string"* %comLine.i to %union.anon.1**
  store %union.anon.1* %6, %union.anon.1** %7, align 8, !tbaa !47
  %8 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !50
  %9 = load i64, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !52
  %cmp.i.i.i.i.i.i = icmp ne i8* %8, null
  %cmp.i.i.i.i.i = icmp eq i64 %9, 0
  %or.cond.i.i.i.i.i = or i1 %cmp.i.i.i.i.i.i, %cmp.i.i.i.i.i
  %10 = bitcast %union.anon.1* %6 to i8*
  br i1 %or.cond.i.i.i.i.i, label %if.end.i.i.i.i.i, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %entry
  call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.20, i64 0, i64 0)) #21
  unreachable

if.end.i.i.i.i.i:                                 ; preds = %entry
  %11 = bitcast i64* %__dnew.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #2
  store i64 %9, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !49
  %cmp3.i.i.i.i.i = icmp ugt i64 %9, 15
  br i1 %cmp3.i.i.i.i.i, label %if.then4.i.i.i.i.i, label %if.end.if.end6_crit_edge.i.i.i.i.i

if.end.if.end6_crit_edge.i.i.i.i.i:               ; preds = %if.end.i.i.i.i.i
  %_M_p.i.phi.trans.insert.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %comLine.i, i64 0, i32 0, i32 0
  br label %if.end6.i.i.i.i.i

if.then4.i.i.i.i.i:                               ; preds = %if.end.i.i.i.i.i
  %call5.i.i.i.i.i = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %comLine.i, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i.i, i64 0) #2
  %_M_p.i13.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %comLine.i, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i.i.i, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %12 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !49
  %_M_allocated_capacity.i.i.i.i.i.i = getelementptr inbounds %struct.commandLine, %struct.commandLine* %P, i64 0, i32 2, i32 2, i32 0
  store i64 %12, i64* %_M_allocated_capacity.i.i.i.i.i.i, align 8, !tbaa !22
  br label %if.end6.i.i.i.i.i

if.end6.i.i.i.i.i:                                ; preds = %if.then4.i.i.i.i.i, %if.end.if.end6_crit_edge.i.i.i.i.i
  %_M_p.i.pre-phi.i.i.i.i.i = phi i8** [ %_M_p.i.phi.trans.insert.i.i.i.i.i, %if.end.if.end6_crit_edge.i.i.i.i.i ], [ %_M_p.i13.i.i.i.i.i, %if.then4.i.i.i.i.i ]
  %13 = phi i8* [ %10, %if.end.if.end6_crit_edge.i.i.i.i.i ], [ %call5.i.i.i.i.i, %if.then4.i.i.i.i.i ]
  switch i64 %9, label %if.end.i.i.i.i.i.i.i.i [
    i64 1, label %if.then.i.i.i.i.i.i.i
    i64 0, label %_ZN11commandLineC2EiPPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit
  ]

if.then.i.i.i.i.i.i.i:                            ; preds = %if.end6.i.i.i.i.i
  %14 = load i8, i8* %8, align 1, !tbaa !22
  store i8 %14, i8* %13, align 1, !tbaa !22
  br label %_ZN11commandLineC2EiPPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit

if.end.i.i.i.i.i.i.i.i:                           ; preds = %if.end6.i.i.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %8, i64 %9, i32 1, i1 false) #2
  br label %_ZN11commandLineC2EiPPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit

_ZN11commandLineC2EiPPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit: ; preds = %if.end6.i.i.i.i.i, %if.then.i.i.i.i.i.i.i, %if.end.i.i.i.i.i.i.i.i
  %15 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !49
  %_M_string_length.i.i.i.i.i.i.i = getelementptr inbounds %struct.commandLine, %struct.commandLine* %P, i64 0, i32 2, i32 1
  store i64 %15, i64* %_M_string_length.i.i.i.i.i.i.i, align 8, !tbaa !52
  %16 = load i8*, i8** %_M_p.i.pre-phi.i.i.i.i.i, align 8, !tbaa !50
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds i8, i8* %16, i64 %15
  store i8 0, i8* %arrayidx.i.i.i.i.i.i, align 1, !tbaa !22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #2
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !50
  %cmp.i.i.i = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %_ZN11commandLineC2EiPPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit
  call void @_ZdlPv(i8* %17) #2
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %_ZN11commandLineC2EiPPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit, %if.then.i.i
  %18 = load i32, i32* %argc.i, align 8, !tbaa !60
  %cmp.i = icmp slt i32 %18, 2
  br i1 %cmp.i, label %if.then.i, label %_ZN11commandLine11getArgumentEi.exit

if.then.i:                                        ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %call.i.i70 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i64 0, i64 0)) #2
  %19 = load i8**, i8*** %argv.i, align 8, !tbaa !62
  %20 = load i8*, i8** %19, align 8, !tbaa !53
  %call2.i.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call.i.i70, i8* %20) #2
  %call3.i.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call2.i.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0)) #2
  %call4.i.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call3.i.i, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %comLine.i) #2
  %call.i.i.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call4.i.i) #2
  call void @abort() #21
  unreachable

_ZN11commandLine11getArgumentEi.exit:             ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %21 = load i8**, i8*** %argv.i, align 8, !tbaa !62
  %sub3.i = add i32 %18, -1
  %idxprom.i = sext i32 %sub3.i to i64
  %arrayidx.i = getelementptr inbounds i8*, i8** %21, i64 %idxprom.i
  %22 = load i8*, i8** %arrayidx.i, align 8, !tbaa !53
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp1, i64 0, i32 2
  %24 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp1 to %union.anon.1**
  store %union.anon.1* %23, %union.anon.1** %24, align 8, !tbaa !47
  %25 = bitcast %union.anon.1* %23 to i8*
  %_M_p.i.phi.trans.insert.i.i.i.i75 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp1, i64 0, i32 0, i32 0
  %26 = bitcast %union.anon.1* %23 to i16*
  store i16 28461, i16* %26, align 8
  %_M_string_length.i.i.i.i.i.i85 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp1, i64 0, i32 1
  store i64 2, i64* %_M_string_length.i.i.i.i.i.i85, align 8, !tbaa !52
  %arrayidx.i.i.i.i.i86 = getelementptr inbounds i8, i8* %25, i64 2
  store i8 0, i8* %arrayidx.i.i.i.i.i86, align 2, !tbaa !22
  %call3 = call i8* @_ZN11commandLine14getOptionValueENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%struct.commandLine* nonnull %P, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp1)
  %27 = load i8*, i8** %_M_p.i.phi.trans.insert.i.i.i.i75, align 8, !tbaa !50
  %cmp.i.i.i90 = icmp eq i8* %27, %25
  br i1 %cmp.i.i.i90, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit92, label %if.then.i.i91

if.then.i.i91:                                    ; preds = %_ZN11commandLine11getArgumentEi.exit
  call void @_ZdlPv(i8* %27) #2
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit92

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit92: ; preds = %_ZN11commandLine11getArgumentEi.exit, %if.then.i.i91
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp4, i64 0, i32 2
  %29 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp4 to %union.anon.1**
  store %union.anon.1* %28, %union.anon.1** %29, align 8, !tbaa !47
  %30 = bitcast %union.anon.1* %28 to i8*
  %_M_p.i.phi.trans.insert.i.i.i.i96 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp4, i64 0, i32 0, i32 0
  %31 = bitcast %union.anon.1* %28 to i16*
  store i16 29229, i16* %31, align 8
  %_M_string_length.i.i.i.i.i.i106 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp4, i64 0, i32 1
  store i64 2, i64* %_M_string_length.i.i.i.i.i.i106, align 8, !tbaa !52
  %arrayidx.i.i.i.i.i107 = getelementptr inbounds i8, i8* %30, i64 2
  store i8 0, i8* %arrayidx.i.i.i.i.i107, align 2, !tbaa !22
  %call6 = call i32 @_ZN11commandLine17getOptionIntValueENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(%struct.commandLine* nonnull %P, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp4, i32 1)
  %32 = load i8*, i8** %_M_p.i.phi.trans.insert.i.i.i.i96, align 8, !tbaa !50
  %cmp.i.i.i111 = icmp eq i8* %32, %30
  br i1 %cmp.i.i.i111, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit113, label %if.then.i.i112

if.then.i.i112:                                   ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit92
  call void @_ZdlPv(i8* %32) #2
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit113

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit113: ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit92, %if.then.i.i112
  %33 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp7, i64 0, i32 2
  %34 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp7 to %union.anon.1**
  store %union.anon.1* %33, %union.anon.1** %34, align 8, !tbaa !47
  %35 = bitcast %union.anon.1* %33 to i8*
  %_M_p.i.phi.trans.insert.i.i.i.i117 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp7, i64 0, i32 0, i32 0
  %36 = bitcast %union.anon.1* %33 to i16*
  store i16 27437, i16* %36, align 8
  %_M_string_length.i.i.i.i.i.i127 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp7, i64 0, i32 1
  store i64 2, i64* %_M_string_length.i.i.i.i.i.i127, align 8, !tbaa !52
  %arrayidx.i.i.i.i.i128 = getelementptr inbounds i8, i8* %35, i64 2
  store i8 0, i8* %arrayidx.i.i.i.i.i128, align 2, !tbaa !22
  %call9 = call i32 @_ZN11commandLine17getOptionIntValueENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(%struct.commandLine* nonnull %P, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp7, i32 1)
  %37 = load i8*, i8** %_M_p.i.phi.trans.insert.i.i.i.i117, align 8, !tbaa !50
  %cmp.i.i.i132 = icmp eq i8* %37, %35
  br i1 %cmp.i.i.i132, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit134, label %if.then.i.i133

if.then.i.i133:                                   ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit113
  call void @_ZdlPv(i8* %37) #2
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit134

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit134: ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit113, %if.then.i.i133
  %38 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp10, i64 0, i32 2
  %39 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp10 to %union.anon.1**
  store %union.anon.1* %38, %union.anon.1** %39, align 8, !tbaa !47
  %40 = bitcast %union.anon.1* %38 to i8*
  %_M_p.i.phi.trans.insert.i.i.i.i138 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp10, i64 0, i32 0, i32 0
  %41 = bitcast %union.anon.1* %38 to i16*
  store i16 25645, i16* %41, align 8
  %_M_string_length.i.i.i.i.i.i148 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp10, i64 0, i32 1
  store i64 2, i64* %_M_string_length.i.i.i.i.i.i148, align 8, !tbaa !52
  %arrayidx.i.i.i.i.i149 = getelementptr inbounds i8, i8* %40, i64 2
  store i8 0, i8* %arrayidx.i.i.i.i.i149, align 2, !tbaa !22
  %call12 = call i32 @_ZN11commandLine17getOptionIntValueENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(%struct.commandLine* nonnull %P, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp10, i32 2)
  %42 = load i8*, i8** %_M_p.i.phi.trans.insert.i.i.i.i138, align 8, !tbaa !50
  %cmp.i.i.i153 = icmp eq i8* %42, %40
  br i1 %cmp.i.i.i153, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit155, label %if.then.i.i154

if.then.i.i154:                                   ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit134
  call void @_ZdlPv(i8* %42) #2
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit155

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit155: ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit134, %if.then.i.i154
  %call9.off = add i32 %call9, -1
  %43 = icmp ugt i32 %call9.off, 9
  br i1 %43, label %if.then, label %if.end

if.then:                                          ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit155
  %call.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i64 0, i64 0)) #2
  %44 = load i8**, i8*** %argv.i, align 8, !tbaa !62
  %45 = load i8*, i8** %44, align 8, !tbaa !53
  %call2.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call.i, i8* %45) #2
  %call3.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call2.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0)) #2
  %call4.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call3.i, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %comLine.i) #2
  %call.i.i158 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call4.i) #2
  call void @abort() #21
  unreachable

if.end:                                           ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit155
  %46 = and i32 %call12, -2
  %47 = icmp eq i32 %46, 2
  br i1 %47, label %if.end18, label %if.then17

if.then17:                                        ; preds = %if.end
  %call.i159 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i64 0, i64 0)) #2
  %48 = load i8**, i8*** %argv.i, align 8, !tbaa !62
  %49 = load i8*, i8** %48, align 8, !tbaa !53
  %call2.i161 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call.i159, i8* %49) #2
  %call3.i162 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call2.i161, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0)) #2
  %call4.i164 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call3.i162, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %comLine.i) #2
  %call.i.i165 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call4.i164) #2
  call void @abort() #21
  unreachable

if.end18:                                         ; preds = %if.end
  switch i32 %call12, label %if.end43 [
    i32 2, label %if.then20
    i32 3, label %if.then30
  ]

if.then20:                                        ; preds = %if.end18
  %call21 = call { %class._point2d*, i64 } @_ZN7benchIO18readPointsFromFileI8_point2dIdEEE4_seqIT_EPc(i8* %22)
  %50 = extractvalue { %class._point2d*, i64 } %call21, 0
  %51 = extractvalue { %class._point2d*, i64 } %call21, 1
  %cmp22 = icmp eq i32 %call9, 1
  %conv = trunc i64 %51 to i32
  br i1 %cmp22, label %if.then23, label %if.else

if.then23:                                        ; preds = %if.then20
  call void @_Z13timeNeighborsILi1E8_point2dIdEEvPT0_iiiPc(%class._point2d* %50, i32 %conv, i32 1, i32 %call6, i8* %call3)
  br label %if.end43

if.else:                                          ; preds = %if.then20
  call void @_Z13timeNeighborsILi10E8_point2dIdEEvPT0_iiiPc(%class._point2d* %50, i32 %conv, i32 %call9, i32 %call6, i8* %call3)
  br label %if.end43

if.then30:                                        ; preds = %if.end18
  %call32 = call { %class._point3d*, i64 } @_ZN7benchIO18readPointsFromFileI8_point3dIdEEE4_seqIT_EPc(i8* %22)
  %52 = extractvalue { %class._point3d*, i64 } %call32, 0
  %53 = extractvalue { %class._point3d*, i64 } %call32, 1
  %cmp33 = icmp eq i32 %call9, 1
  %conv37 = trunc i64 %53 to i32
  br i1 %cmp33, label %if.then34, label %if.else38

if.then34:                                        ; preds = %if.then30
  call void @_Z13timeNeighborsILi1E8_point3dIdEEvPT0_iiiPc(%class._point3d* %52, i32 %conv37, i32 1, i32 %call6, i8* %call3)
  br label %if.end43

if.else38:                                        ; preds = %if.then30
  call void @_Z13timeNeighborsILi10E8_point3dIdEEvPT0_iiiPc(%class._point3d* %52, i32 %conv37, i32 %call9, i32 %call6, i8* %call3)
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.then23, %if.then34, %if.else38, %if.end18
  %_M_p.i.i.i.i.i = getelementptr inbounds %struct.commandLine, %struct.commandLine* %P, i64 0, i32 2, i32 0, i32 0
  %54 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !50
  %cmp.i.i.i.i = icmp eq i8* %54, %10
  br i1 %cmp.i.i.i.i, label %_ZN11commandLineD2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.end43
  call void @_ZdlPv(i8* %54) #2
  br label %_ZN11commandLineD2Ev.exit

_ZN11commandLineD2Ev.exit:                        ; preds = %if.end43, %if.then.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %0) #2
  ret i32 0
}

; Function Attrs: nounwind uwtable
define linkonce_odr i8* @_ZN11commandLine14getOptionValueENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%struct.commandLine* %this, %"class.std::__cxx11::basic_string"* %option) local_unnamed_addr #7 comdat align 2 {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %argc = getelementptr inbounds %struct.commandLine, %struct.commandLine* %this, i64 0, i32 0
  %0 = load i32, i32* %argc, align 8, !tbaa !60
  %cmp16 = icmp sgt i32 %0, 2
  br i1 %cmp16, label %for.body.lr.ph, label %.loopexit

for.body.lr.ph:                                   ; preds = %entry
  %1 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  %argv = getelementptr inbounds %struct.commandLine, %struct.commandLine* %this, i64 0, i32 1
  %2 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %3 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon.1**
  %4 = bitcast %union.anon.1* %2 to i8*
  %5 = bitcast i64* %__dnew.i.i.i.i to i8*
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  %_M_string_length.i9.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %option, i64 0, i32 1
  %_M_p.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %option, i64 0, i32 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #2
  %6 = load i8**, i8*** %argv, align 8, !tbaa !62
  %arrayidx = getelementptr inbounds i8*, i8** %6, i64 %indvars.iv
  %7 = load i8*, i8** %arrayidx, align 8, !tbaa !53
  store %union.anon.1* %2, %union.anon.1** %3, align 8, !tbaa !47
  %tobool.i = icmp eq i8* %7, null
  br i1 %tobool.i, label %cond.end.predBB2.split.i, label %if.end.i.i.i.i

if.end.i.i.i.i:                                   ; preds = %for.body
  %call.i.i11 = call i64 @strlen(i8* nonnull %7) #2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #2
  store i64 %call.i.i11, i64* %__dnew.i.i.i.i, align 8, !tbaa !49
  %cmp3.i.i.i.i = icmp ugt i64 %call.i.i11, 15
  br i1 %cmp3.i.i.i.i, label %if.then4.i.i.i.i, label %if.end6.i.i.i.i

if.then4.i.i.i.i:                                 ; preds = %if.end.i.i.i.i
  %call5.i.i.i.i = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %ref.tmp, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i, i64 0) #2
  store i8* %call5.i.i.i.i, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !50
  %8 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !49
  store i64 %8, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !22
  br label %if.end6.i.i.i.i

if.end6.i.i.i.i:                                  ; preds = %if.end.i.i.i.i, %if.then4.i.i.i.i
  %9 = phi i8* [ %call5.i.i.i.i, %if.then4.i.i.i.i ], [ %4, %if.end.i.i.i.i ]
  switch i64 %call.i.i11, label %if.end.i.i.i.i.i.i.i [
    i64 1, label %if.then.i.i.i.i.i.i
    i64 0, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit
  ]

if.then.i.i.i.i.i.i:                              ; preds = %if.end6.i.i.i.i
  %10 = load i8, i8* %7, align 1, !tbaa !22
  store i8 %10, i8* %9, align 1, !tbaa !22
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit

if.end.i.i.i.i.i.i.i:                             ; preds = %if.end6.i.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* nonnull %7, i64 %call.i.i11, i32 1, i1 false) #2
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit

cond.end.predBB2.split.i:                         ; preds = %for.body
  call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.20, i64 0, i64 0)) #21
  unreachable

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit: ; preds = %if.end6.i.i.i.i, %if.then.i.i.i.i.i.i, %if.end.i.i.i.i.i.i.i
  %11 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !49
  store i64 %11, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !52
  %12 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !50
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %12, i64 %11
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #2
  %13 = load i64, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !52
  %14 = load i64, i64* %_M_string_length.i9.i, align 8, !tbaa !52
  %cmp.i = icmp eq i64 %13, %14
  br i1 %cmp.i, label %land.rhs.i, label %_ZSteqIcEN9__gnu_cxx11__enable_ifIXsr9__is_charIT_EE7__valueEbE6__typeERKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEESC_.exit

land.rhs.i:                                       ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit
  %cmp.i.i = icmp eq i64 %13, 0
  br i1 %cmp.i.i, label %_ZSteqIcEN9__gnu_cxx11__enable_ifIXsr9__is_charIT_EE7__valueEbE6__typeERKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEESC_.exit, label %if.end.i.i

if.end.i.i:                                       ; preds = %land.rhs.i
  %15 = load i8*, i8** %_M_p.i.i.i, align 8, !tbaa !50
  %16 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !50
  %call.i.i = call i32 @memcmp(i8* %16, i8* %15, i64 %13) #2
  %phitmp.i = icmp eq i32 %call.i.i, 0
  br label %_ZSteqIcEN9__gnu_cxx11__enable_ifIXsr9__is_charIT_EE7__valueEbE6__typeERKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEESC_.exit

_ZSteqIcEN9__gnu_cxx11__enable_ifIXsr9__is_charIT_EE7__valueEbE6__typeERKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEESC_.exit: ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit, %land.rhs.i, %if.end.i.i
  %17 = phi i1 [ false, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit ], [ %phitmp.i, %if.end.i.i ], [ true, %land.rhs.i ]
  %18 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !50
  %cmp.i.i.i = icmp eq i8* %18, %4
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %_ZSteqIcEN9__gnu_cxx11__enable_ifIXsr9__is_charIT_EE7__valueEbE6__typeERKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEESC_.exit
  call void @_ZdlPv(i8* %18) #2
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %_ZSteqIcEN9__gnu_cxx11__enable_ifIXsr9__is_charIT_EE7__valueEbE6__typeERKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEESC_.exit, %if.then.i.i
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #2
  br i1 %17, label %cleanup, label %for.inc

for.inc:                                          ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %19 = load i32, i32* %argc, align 8, !tbaa !60
  %sub = add nsw i32 %19, -1
  %20 = sext i32 %sub to i64
  %cmp = icmp slt i64 %indvars.iv.next, %20
  br i1 %cmp, label %for.body, label %.loopexit

cleanup:                                          ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %21 = load i8**, i8*** %argv, align 8, !tbaa !62
  %add = add nuw i64 %indvars.iv, 1
  %22 = and i64 %add, 4294967295
  %arrayidx5 = getelementptr inbounds i8*, i8** %21, i64 %22
  %23 = load i8*, i8** %arrayidx5, align 8, !tbaa !53
  br label %.loopexit

.loopexit:                                        ; preds = %for.inc, %entry, %cleanup
  %24 = phi i8* [ %23, %cleanup ], [ null, %entry ], [ null, %for.inc ]
  ret i8* %24
}

; Function Attrs: nounwind uwtable
define linkonce_odr i32 @_ZN11commandLine17getOptionIntValueENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(%struct.commandLine* %this, %"class.std::__cxx11::basic_string"* %option, i32 %defaultValue) local_unnamed_addr #7 comdat align 2 {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %argc = getelementptr inbounds %struct.commandLine, %struct.commandLine* %this, i64 0, i32 0
  %0 = load i32, i32* %argc, align 8, !tbaa !60
  %cmp24 = icmp sgt i32 %0, 2
  br i1 %cmp24, label %for.body.lr.ph, label %cleanup

for.body.lr.ph:                                   ; preds = %entry
  %1 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  %argv = getelementptr inbounds %struct.commandLine, %struct.commandLine* %this, i64 0, i32 1
  %2 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %3 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon.1**
  %4 = bitcast %union.anon.1* %2 to i8*
  %5 = bitcast i64* %__dnew.i.i.i.i to i8*
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  %_M_string_length.i9.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %option, i64 0, i32 1
  %_M_p.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %option, i64 0, i32 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #2
  %6 = load i8**, i8*** %argv, align 8, !tbaa !62
  %arrayidx = getelementptr inbounds i8*, i8** %6, i64 %indvars.iv
  %7 = load i8*, i8** %arrayidx, align 8, !tbaa !53
  store %union.anon.1* %2, %union.anon.1** %3, align 8, !tbaa !47
  %tobool.i = icmp eq i8* %7, null
  br i1 %tobool.i, label %cond.end.predBB2.split.i, label %if.end.i.i.i.i

if.end.i.i.i.i:                                   ; preds = %for.body
  %call.i.i17 = call i64 @strlen(i8* nonnull %7) #2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #2
  store i64 %call.i.i17, i64* %__dnew.i.i.i.i, align 8, !tbaa !49
  %cmp3.i.i.i.i = icmp ugt i64 %call.i.i17, 15
  br i1 %cmp3.i.i.i.i, label %if.then4.i.i.i.i, label %if.end6.i.i.i.i

if.then4.i.i.i.i:                                 ; preds = %if.end.i.i.i.i
  %call5.i.i.i.i = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %ref.tmp, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i, i64 0) #2
  store i8* %call5.i.i.i.i, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !50
  %8 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !49
  store i64 %8, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !22
  br label %if.end6.i.i.i.i

if.end6.i.i.i.i:                                  ; preds = %if.end.i.i.i.i, %if.then4.i.i.i.i
  %9 = phi i8* [ %call5.i.i.i.i, %if.then4.i.i.i.i ], [ %4, %if.end.i.i.i.i ]
  switch i64 %call.i.i17, label %if.end.i.i.i.i.i.i.i [
    i64 1, label %if.then.i.i.i.i.i.i
    i64 0, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit
  ]

if.then.i.i.i.i.i.i:                              ; preds = %if.end6.i.i.i.i
  %10 = load i8, i8* %7, align 1, !tbaa !22
  store i8 %10, i8* %9, align 1, !tbaa !22
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit

if.end.i.i.i.i.i.i.i:                             ; preds = %if.end6.i.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* nonnull %7, i64 %call.i.i17, i32 1, i1 false) #2
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit

cond.end.predBB2.split.i:                         ; preds = %for.body
  call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.20, i64 0, i64 0)) #21
  unreachable

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit: ; preds = %if.end6.i.i.i.i, %if.then.i.i.i.i.i.i, %if.end.i.i.i.i.i.i.i
  %11 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !49
  store i64 %11, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !52
  %12 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !50
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %12, i64 %11
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #2
  %13 = load i64, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !52
  %14 = load i64, i64* %_M_string_length.i9.i, align 8, !tbaa !52
  %cmp.i = icmp eq i64 %13, %14
  br i1 %cmp.i, label %land.rhs.i, label %_ZSteqIcEN9__gnu_cxx11__enable_ifIXsr9__is_charIT_EE7__valueEbE6__typeERKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEESC_.exit

land.rhs.i:                                       ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit
  %cmp.i.i = icmp eq i64 %13, 0
  br i1 %cmp.i.i, label %_ZSteqIcEN9__gnu_cxx11__enable_ifIXsr9__is_charIT_EE7__valueEbE6__typeERKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEESC_.exit, label %if.end.i.i

if.end.i.i:                                       ; preds = %land.rhs.i
  %15 = load i8*, i8** %_M_p.i.i.i, align 8, !tbaa !50
  %16 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !50
  %call.i.i18 = call i32 @memcmp(i8* %16, i8* %15, i64 %13) #2
  %phitmp.i = icmp eq i32 %call.i.i18, 0
  br label %_ZSteqIcEN9__gnu_cxx11__enable_ifIXsr9__is_charIT_EE7__valueEbE6__typeERKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEESC_.exit

_ZSteqIcEN9__gnu_cxx11__enable_ifIXsr9__is_charIT_EE7__valueEbE6__typeERKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEESC_.exit: ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit, %land.rhs.i, %if.end.i.i
  %17 = phi i1 [ false, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.exit ], [ %phitmp.i, %if.end.i.i ], [ true, %land.rhs.i ]
  %18 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !50
  %cmp.i.i.i = icmp eq i8* %18, %4
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %_ZSteqIcEN9__gnu_cxx11__enable_ifIXsr9__is_charIT_EE7__valueEbE6__typeERKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEESC_.exit
  call void @_ZdlPv(i8* %18) #2
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %_ZSteqIcEN9__gnu_cxx11__enable_ifIXsr9__is_charIT_EE7__valueEbE6__typeERKNSt7__cxx1112basic_stringIS2_St11char_traitsIS2_ESaIS2_EEESC_.exit, %if.then.i.i
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #2
  br i1 %17, label %if.then, label %for.inc

if.then:                                          ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %19 = load i8**, i8*** %argv, align 8, !tbaa !62
  %add = add nuw i64 %indvars.iv, 1
  %20 = and i64 %add, 4294967295
  %arrayidx5 = getelementptr inbounds i8*, i8** %19, i64 %20
  %21 = load i8*, i8** %arrayidx5, align 8, !tbaa !53
  %call.i19 = call i64 @strtol(i8* nocapture nonnull %21, i8** null, i32 10) #2
  %conv.i = trunc i64 %call.i19 to i32
  %cmp7 = icmp slt i32 %conv.i, 1
  br i1 %cmp7, label %if.then8, label %cleanup

if.then8:                                         ; preds = %if.then
  %call.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i64 0, i64 0)) #2
  %22 = load i8**, i8*** %argv, align 8, !tbaa !62
  %23 = load i8*, i8** %22, align 8, !tbaa !53
  %call2.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call.i, i8* %23) #2
  %call3.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call2.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0)) #2
  %comLine.i = getelementptr inbounds %struct.commandLine, %struct.commandLine* %this, i64 0, i32 2
  %call4.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call3.i, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %comLine.i) #2
  %call.i.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call4.i) #2
  call void @abort() #21
  unreachable

for.inc:                                          ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %24 = load i32, i32* %argc, align 8, !tbaa !60
  %sub = add nsw i32 %24, -1
  %25 = sext i32 %sub to i64
  %cmp = icmp slt i64 %indvars.iv.next, %25
  br i1 %cmp, label %for.body, label %cleanup

cleanup:                                          ; preds = %for.inc, %entry, %if.then
  %26 = phi i32 [ %conv.i, %if.then ], [ %defaultValue, %entry ], [ %defaultValue, %for.inc ]
  ret i32 %26
}

; Function Attrs: nounwind uwtable
define linkonce_odr { %class._point2d*, i64 } @_ZN7benchIO18readPointsFromFileI8_point2dIdEEE4_seqIT_EPc(i8* %fname) local_unnamed_addr #7 comdat {
entry:
  %0 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc821 = shl i32 %0, 3
  %W = alloca %"struct.benchIO::words", align 8
  %call = tail call { i8*, i64 } @_ZN7benchIO18readStringFromFileEPc(i8* %fname)
  %1 = extractvalue { i8*, i64 } %call, 0
  %2 = extractvalue { i8*, i64 } %call, 1
  %3 = bitcast %"struct.benchIO::words"* %W to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #2
  call void @_ZN7benchIO13stringToWordsEPcl(%"struct.benchIO::words"* nonnull sret %W, i8* %1, i64 %2)
  %m = getelementptr inbounds %"struct.benchIO::words", %"struct.benchIO::words"* %W, i64 0, i32 2
  %4 = load i64, i64* %m, align 8, !tbaa !30
  %cmp = icmp eq i64 %4, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %Strings = getelementptr inbounds %"struct.benchIO::words", %"struct.benchIO::words"* %W, i64 0, i32 3
  %5 = load i8**, i8*** %Strings, align 8, !tbaa !31
  %6 = load i8*, i8** %5, align 8, !tbaa !53
  %call.i.i = tail call i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull @_ZN7benchIO13HeaderPoint2dB5cxx11E, i8* %6) #2
  %cmp.i.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.i.i, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call3 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.24, i64 0, i64 0))
  %call.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call3) #2
  tail call void @abort() #21
  unreachable

if.end:                                           ; preds = %lor.lhs.false
  %sub = add nsw i64 %4, -1
  %div = sdiv i64 %sub, 2
  %mul = shl i64 %div, 4
  %call7 = tail call noalias i8* @malloc(i64 %mul) #2
  %7 = bitcast i8* %call7 to %class._point2d*
  %conv9 = trunc i64 %div to i32
  %mul.i = shl nsw i32 %conv9, 1
  %conv.i = sext i32 %mul.i to i64
  %mul1.i = shl nsw i64 %conv.i, 3
  %call.i19 = tail call noalias i8* @malloc(i64 %mul1.i) #2
  %8 = bitcast i8* %call.i19 to double*
  %cmp64.i = icmp sgt i32 %conv9, 0
  br i1 %cmp64.i, label %pfor.detach.i.preheader, label %_ZN7benchIO11parsePointsI8_point2dIdEEEvPPcPT_i.exit

pfor.detach.i.preheader:                          ; preds = %if.end
  %add.ptr = getelementptr inbounds i8*, i8** %5, i64 1
  %9 = icmp sgt i64 %conv.i, 1
  %smax = select i1 %9, i64 %conv.i, i64 1
  %10 = add nsw i64 %smax, -1
  %11 = zext i32 %__cilkrts_wc821 to i64
  %12 = add nsw i64 %11, -1
  %13 = add nsw i64 %12, %10
  %14 = udiv i64 %13, %11
  %15 = icmp ult i64 %14, 2048
  %16 = select i1 %15, i64 %14, i64 2048
  tail call fastcc void @_ZN7benchIO18readPointsFromFileI8_point2dIdEEE4_seqIT_EPc_pfor.detach.i.ls(i64 0, i64 %10, i64 %16, i8** nonnull %add.ptr, double* %8)
  %sext = shl i64 %div, 32
  %conv17.i = ashr exact i64 %sext, 32
  %17 = add nsw i64 %conv17.i, -1
  %18 = add nsw i64 %12, %17
  %19 = udiv i64 %18, %11
  %20 = icmp ult i64 %19, 2048
  %21 = select i1 %20, i64 %19, i64 2048
  tail call fastcc void @_ZN7benchIO18readPointsFromFileI8_point2dIdEEE4_seqIT_EPc_pfor.detach21.i.ls(i64 0, i64 %17, i64 %21, double* %8, %class._point2d* %7)
  br label %_ZN7benchIO11parsePointsI8_point2dIdEEEvPPcPT_i.exit

_ZN7benchIO11parsePointsI8_point2dIdEEEvPPcPT_i.exit: ; preds = %if.end, %pfor.detach.i.preheader
  tail call void @free(i8* %call.i19) #2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #2
  %.fca.0.insert = insertvalue { %class._point2d*, i64 } undef, %class._point2d* %7, 0
  %.fca.1.insert = insertvalue { %class._point2d*, i64 } %.fca.0.insert, i64 %div, 1
  ret { %class._point2d*, i64 } %.fca.1.insert
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_Z13timeNeighborsILi1E8_point2dIdEEvPT0_iiiPc(%class._point2d* %pts, i32 %n, i32 %k, i32 %rounds, i8* %outFile) local_unnamed_addr #7 comdat {
entry:
  %0 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8142 = shl i32 %0, 3
  %now.i.i110 = alloca %struct.timeval, align 8
  %now.i.i = alloca %struct.timeval, align 8
  %conv = sext i32 %n to i64
  %mul = shl nsw i64 %conv, 3
  %call1 = tail call noalias i8* @malloc(i64 %mul) #2
  %1 = bitcast i8* %call1 to %struct.vertex**
  %mul3 = shl nsw i64 %conv, 5
  %call4 = tail call noalias i8* @malloc(i64 %mul3) #2
  %cmp128 = icmp sgt i32 %n, 0
  br i1 %cmp128, label %pfor.detach.lr.ph, label %sync.continue

pfor.detach.lr.ph:                                ; preds = %entry
  %2 = bitcast i8* %call4 to %struct.vertex*
  %wide.trip.count140 = zext i32 %n to i64
  %3 = add nsw i64 %wide.trip.count140, -1
  %4 = zext i32 %__cilkrts_wc8142 to i64
  %5 = add nsw i64 %wide.trip.count140, -2
  %6 = add nsw i64 %5, %4
  %7 = udiv i64 %6, %4
  %8 = icmp ult i64 %7, 2048
  %9 = select i1 %8, i64 %7, i64 2048
  tail call fastcc void @_Z13timeNeighborsILi1E8_point2dIdEEvPT0_iiiPc_pfor.detach.ls(i64 0, i64 %3, i64 %9, %struct.vertex* %2, %class._point2d* %pts, %struct.vertex** %1)
  br label %sync.continue

sync.continue:                                    ; preds = %entry, %pfor.detach.lr.ph
  tail call void @_Z3ANNILi1E6vertexI8_point2dIdELi1EEEvPPT0_ii(%struct.vertex** %1, i32 %n, i32 %k)
  %cmp14126 = icmp sgt i32 %rounds, 0
  br i1 %cmp14126, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %sync.continue
  %10 = bitcast %struct.timeval* %now.i.i to i8*
  %tv_sec.i.i = getelementptr inbounds %struct.timeval, %struct.timeval* %now.i.i, i64 0, i32 0
  %tv_usec.i.i = getelementptr inbounds %struct.timeval, %struct.timeval* %now.i.i, i64 0, i32 1
  %11 = bitcast %struct.timeval* %now.i.i110 to i8*
  %tv_sec.i.i112 = getelementptr inbounds %struct.timeval, %struct.timeval* %now.i.i110, i64 0, i32 0
  %tv_usec.i.i114 = getelementptr inbounds %struct.timeval, %struct.timeval* %now.i.i110, i64 0, i32 1
  br label %for.body

for.cond.cleanup:                                 ; preds = %_ZN5timer4nextEv.exit, %sync.continue
  %vtable.i = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !32
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %12 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %12, align 8
  %add.ptr.i = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i
  %_M_ctype.i.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 240
  %13 = bitcast i8* %_M_ctype.i.i to %"class.std::ctype"**
  %14 = load %"class.std::ctype"*, %"class.std::ctype"** %13, align 8, !tbaa !41
  %tobool.i.i.i = icmp eq %"class.std::ctype"* %14, null
  br i1 %tobool.i.i.i, label %if.then.i.i.i, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i

if.then.i.i.i:                                    ; preds = %for.cond.cleanup
  tail call void @_ZSt16__throw_bad_castv() #21
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i: ; preds = %for.cond.cleanup
  %_M_widen_ok.i.i.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %14, i64 0, i32 8
  %15 = load i8, i8* %_M_widen_ok.i.i.i, align 8, !tbaa !43
  %tobool.i3.i.i = icmp eq i8 %15, 0
  br i1 %tobool.i3.i.i, label %if.end.i.i.i, label %if.then.i4.i.i

if.then.i4.i.i:                                   ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  %arrayidx.i.i.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %14, i64 0, i32 9, i64 10
  %16 = load i8, i8* %arrayidx.i.i.i, align 1, !tbaa !22
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit

if.end.i.i.i:                                     ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull %14) #2
  %17 = bitcast %"class.std::ctype"* %14 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %17, align 8, !tbaa !32
  %vfn.i.i.i = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i, i64 6
  %18 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i, align 8
  %call.i.i.i = tail call signext i8 %18(%"class.std::ctype"* nonnull %14, i8 signext 10) #2
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit

_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit: ; preds = %if.then.i4.i.i, %if.end.i.i.i
  %retval.0.i.i.i = phi i8 [ %16, %if.then.i4.i.i ], [ %call.i.i.i, %if.end.i.i.i ]
  %call1.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i8 signext %retval.0.i.i.i) #2
  %call.i.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull %call1.i) #2
  %mul18 = mul nsw i32 %k, %n
  %conv19 = sext i32 %mul18 to i64
  %mul20 = shl nsw i64 %conv19, 2
  %call21 = tail call noalias i8* @malloc(i64 %mul20) #2
  %19 = bitcast i8* %call21 to i32*
  %cmp40120 = icmp sgt i32 %k, 0
  %or.cond = and i1 %cmp128, %cmp40120
  br i1 %or.cond, label %pfor.detach33.lr.ph.split.us, label %sync.continue57

pfor.detach33.lr.ph.split.us:                     ; preds = %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
  %wide.trip.count = zext i32 %k to i64
  %wide.trip.count134 = zext i32 %n to i64
  %20 = add nsw i64 %wide.trip.count, -1
  %xtraiter = and i64 %wide.trip.count, 7
  %21 = icmp ult i64 %20, 7
  %unroll_iter = sub nsw i64 %wide.trip.count, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %22 = add nsw i64 %wide.trip.count134, -1
  %23 = zext i32 %__cilkrts_wc8142 to i64
  %24 = add nsw i64 %wide.trip.count134, -2
  %25 = add nsw i64 %24, %23
  %26 = udiv i64 %25, %23
  %27 = icmp ult i64 %26, 2048
  %28 = select i1 %27, i64 %26, i64 2048
  tail call fastcc void @_Z13timeNeighborsILi1E8_point2dIdEEvPT0_iiiPc_pfor.detach33.us.ls(i64 0, i64 %22, i64 %28, %struct.vertex** %1, i1 %21, i64 %unroll_iter, i32* %19, i1 %lcmp.mod, i64 %xtraiter)
  br label %sync.continue57

for.body:                                         ; preds = %_ZN5timer4nextEv.exit, %for.body.lr.ph
  %i13.0127 = phi i32 [ 0, %for.body.lr.ph ], [ %inc16, %_ZN5timer4nextEv.exit ]
  store i8 1, i8* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 3), align 8, !tbaa !63
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #2
  %call.i.i109 = call i32 @gettimeofday(%struct.timeval* nonnull %now.i.i, %struct.timezone* nonnull getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 5)) #2
  %29 = load i64, i64* %tv_sec.i.i, align 8, !tbaa !66
  %conv.i.i = sitofp i64 %29 to double
  %30 = load i64, i64* %tv_usec.i.i, align 8, !tbaa !68
  %conv2.i.i = sitofp i64 %30 to double
  %div.i.i = fmul fast double %conv2.i.i, 0x3EB0C6F7A0B5ED8D
  %add.i.i = fadd fast double %div.i.i, %conv.i.i
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #2
  store double %add.i.i, double* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 1), align 8, !tbaa !69
  tail call void @_Z3ANNILi1E6vertexI8_point2dIdELi1EEEvPPT0_ii(%struct.vertex** %1, i32 %n, i32 %k)
  %31 = load i8, i8* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 3), align 8, !tbaa !63, !range !70
  %tobool.i = icmp eq i8 %31, 0
  br i1 %tobool.i, label %_ZN5timer4nextEv.exit, label %if.end.i

if.end.i:                                         ; preds = %for.body
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #2
  %call.i.i111 = call i32 @gettimeofday(%struct.timeval* nonnull %now.i.i110, %struct.timezone* nonnull getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 5)) #2
  %32 = load i64, i64* %tv_sec.i.i112, align 8, !tbaa !66
  %conv.i.i113 = sitofp i64 %32 to double
  %33 = load i64, i64* %tv_usec.i.i114, align 8, !tbaa !68
  %conv2.i.i115 = sitofp i64 %33 to double
  %div.i.i116 = fmul fast double %conv2.i.i115, 0x3EB0C6F7A0B5ED8D
  %add.i.i117 = fadd fast double %div.i.i116, %conv.i.i113
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #2
  %34 = load double, double* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 1), align 8, !tbaa !69
  %sub.i = fsub fast double %add.i.i117, %34
  %35 = load double, double* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 0), align 8, !tbaa !71
  %add.i = fadd fast double %sub.i, %35
  store double %add.i, double* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 0), align 8, !tbaa !71
  store double %add.i.i117, double* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 1), align 8, !tbaa !69
  br label %_ZN5timer4nextEv.exit

_ZN5timer4nextEv.exit:                            ; preds = %for.body, %if.end.i
  %retval.0.i = phi double [ %sub.i, %if.end.i ], [ 0.000000e+00, %for.body ]
  tail call void @_ZN5timer7reportTEd(%struct.timer* nonnull @_ZL3_tm, double %retval.0.i)
  %inc16 = add nuw nsw i32 %i13.0127, 1
  %exitcond137 = icmp eq i32 %inc16, %rounds
  br i1 %exitcond137, label %for.cond.cleanup, label %for.body

sync.continue57:                                  ; preds = %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit, %pfor.detach33.lr.ph.split.us
  %cmp59 = icmp eq i8* %outFile, null
  br i1 %cmp59, label %if.end, label %if.then

if.then:                                          ; preds = %sync.continue57
  %call61 = tail call i32 @_ZN7benchIO19writeIntArrayToFileIiEET_PS1_lPc(i32* %19, i64 %conv19, i8* nonnull %outFile)
  br label %if.end

if.end:                                           ; preds = %sync.continue57, %if.then
  tail call void @free(i8* %call21) #2
  tail call void @free(i8* %call1) #2
  tail call void @free(i8* %call4) #2
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_Z13timeNeighborsILi10E8_point2dIdEEvPT0_iiiPc(%class._point2d* %pts, i32 %n, i32 %k, i32 %rounds, i8* %outFile) local_unnamed_addr #7 comdat {
entry:
  %0 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8140 = shl i32 %0, 3
  %now.i.i110 = alloca %struct.timeval, align 8
  %now.i.i = alloca %struct.timeval, align 8
  %conv = sext i32 %n to i64
  %mul = shl nsw i64 %conv, 3
  %call1 = tail call noalias i8* @malloc(i64 %mul) #2
  %1 = bitcast i8* %call1 to %struct.vertex.16**
  %mul3 = mul nsw i64 %conv, 104
  %call4 = tail call noalias i8* @malloc(i64 %mul3) #2
  %cmp126 = icmp sgt i32 %n, 0
  br i1 %cmp126, label %pfor.detach.lr.ph, label %sync.continue

pfor.detach.lr.ph:                                ; preds = %entry
  %2 = bitcast i8* %call4 to %struct.vertex.16*
  %wide.trip.count138 = zext i32 %n to i64
  %3 = add nsw i64 %wide.trip.count138, -1
  %4 = zext i32 %__cilkrts_wc8140 to i64
  %5 = add nsw i64 %wide.trip.count138, -2
  %6 = add nsw i64 %5, %4
  %7 = udiv i64 %6, %4
  %8 = icmp ult i64 %7, 2048
  %9 = select i1 %8, i64 %7, i64 2048
  tail call fastcc void @_Z13timeNeighborsILi10E8_point2dIdEEvPT0_iiiPc_pfor.detach.ls(i64 0, i64 %3, i64 %9, %struct.vertex.16* %2, %class._point2d* %pts, %struct.vertex.16** %1)
  br label %sync.continue

sync.continue:                                    ; preds = %entry, %pfor.detach.lr.ph
  tail call void @_Z3ANNILi10E6vertexI8_point2dIdELi10EEEvPPT0_ii(%struct.vertex.16** %1, i32 %n, i32 %k)
  %cmp14124 = icmp sgt i32 %rounds, 0
  br i1 %cmp14124, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %sync.continue
  %10 = bitcast %struct.timeval* %now.i.i to i8*
  %tv_sec.i.i = getelementptr inbounds %struct.timeval, %struct.timeval* %now.i.i, i64 0, i32 0
  %tv_usec.i.i = getelementptr inbounds %struct.timeval, %struct.timeval* %now.i.i, i64 0, i32 1
  %11 = bitcast %struct.timeval* %now.i.i110 to i8*
  %tv_sec.i.i112 = getelementptr inbounds %struct.timeval, %struct.timeval* %now.i.i110, i64 0, i32 0
  %tv_usec.i.i114 = getelementptr inbounds %struct.timeval, %struct.timeval* %now.i.i110, i64 0, i32 1
  br label %for.body

for.cond.cleanup:                                 ; preds = %_ZN5timer4nextEv.exit, %sync.continue
  %vtable.i = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !32
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %12 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %12, align 8
  %add.ptr.i = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i
  %_M_ctype.i.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 240
  %13 = bitcast i8* %_M_ctype.i.i to %"class.std::ctype"**
  %14 = load %"class.std::ctype"*, %"class.std::ctype"** %13, align 8, !tbaa !41
  %tobool.i.i.i = icmp eq %"class.std::ctype"* %14, null
  br i1 %tobool.i.i.i, label %if.then.i.i.i, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i

if.then.i.i.i:                                    ; preds = %for.cond.cleanup
  tail call void @_ZSt16__throw_bad_castv() #21
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i: ; preds = %for.cond.cleanup
  %_M_widen_ok.i.i.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %14, i64 0, i32 8
  %15 = load i8, i8* %_M_widen_ok.i.i.i, align 8, !tbaa !43
  %tobool.i3.i.i = icmp eq i8 %15, 0
  br i1 %tobool.i3.i.i, label %if.end.i.i.i, label %if.then.i4.i.i

if.then.i4.i.i:                                   ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  %arrayidx.i.i.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %14, i64 0, i32 9, i64 10
  %16 = load i8, i8* %arrayidx.i.i.i, align 1, !tbaa !22
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit

if.end.i.i.i:                                     ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull %14) #2
  %17 = bitcast %"class.std::ctype"* %14 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %17, align 8, !tbaa !32
  %vfn.i.i.i = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i, i64 6
  %18 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i, align 8
  %call.i.i.i = tail call signext i8 %18(%"class.std::ctype"* nonnull %14, i8 signext 10) #2
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit

_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit: ; preds = %if.then.i4.i.i, %if.end.i.i.i
  %retval.0.i.i.i = phi i8 [ %16, %if.then.i4.i.i ], [ %call.i.i.i, %if.end.i.i.i ]
  %call1.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i8 signext %retval.0.i.i.i) #2
  %call.i.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull %call1.i) #2
  %mul18 = mul nsw i32 %k, %n
  %conv19 = sext i32 %mul18 to i64
  %mul20 = shl nsw i64 %conv19, 2
  %call21 = tail call noalias i8* @malloc(i64 %mul20) #2
  %19 = bitcast i8* %call21 to i32*
  %cmp40120 = icmp sgt i32 %k, 0
  %or.cond = and i1 %cmp126, %cmp40120
  br i1 %or.cond, label %pfor.detach33.lr.ph.split.us, label %sync.continue57

pfor.detach33.lr.ph.split.us:                     ; preds = %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
  %wide.trip.count = zext i32 %k to i64
  %wide.trip.count132 = zext i32 %n to i64
  %20 = add nsw i64 %wide.trip.count, -1
  %xtraiter = and i64 %wide.trip.count, 7
  %21 = icmp ult i64 %20, 7
  %unroll_iter = sub nsw i64 %wide.trip.count, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %22 = add nsw i64 %wide.trip.count132, -1
  %23 = zext i32 %__cilkrts_wc8140 to i64
  %24 = add nsw i64 %wide.trip.count132, -2
  %25 = add nsw i64 %24, %23
  %26 = udiv i64 %25, %23
  %27 = icmp ult i64 %26, 2048
  %28 = select i1 %27, i64 %26, i64 2048
  tail call fastcc void @_Z13timeNeighborsILi10E8_point2dIdEEvPT0_iiiPc_pfor.detach33.us.ls(i64 0, i64 %22, i64 %28, %struct.vertex.16** %1, i1 %21, i64 %unroll_iter, i32* %19, i1 %lcmp.mod, i64 %xtraiter)
  br label %sync.continue57

for.body:                                         ; preds = %_ZN5timer4nextEv.exit, %for.body.lr.ph
  %i13.0125 = phi i32 [ 0, %for.body.lr.ph ], [ %inc16, %_ZN5timer4nextEv.exit ]
  store i8 1, i8* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 3), align 8, !tbaa !63
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #2
  %call.i.i109 = call i32 @gettimeofday(%struct.timeval* nonnull %now.i.i, %struct.timezone* nonnull getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 5)) #2
  %29 = load i64, i64* %tv_sec.i.i, align 8, !tbaa !66
  %conv.i.i = sitofp i64 %29 to double
  %30 = load i64, i64* %tv_usec.i.i, align 8, !tbaa !68
  %conv2.i.i = sitofp i64 %30 to double
  %div.i.i = fmul fast double %conv2.i.i, 0x3EB0C6F7A0B5ED8D
  %add.i.i = fadd fast double %div.i.i, %conv.i.i
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #2
  store double %add.i.i, double* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 1), align 8, !tbaa !69
  tail call void @_Z3ANNILi10E6vertexI8_point2dIdELi10EEEvPPT0_ii(%struct.vertex.16** %1, i32 %n, i32 %k)
  %31 = load i8, i8* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 3), align 8, !tbaa !63, !range !70
  %tobool.i = icmp eq i8 %31, 0
  br i1 %tobool.i, label %_ZN5timer4nextEv.exit, label %if.end.i

if.end.i:                                         ; preds = %for.body
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #2
  %call.i.i111 = call i32 @gettimeofday(%struct.timeval* nonnull %now.i.i110, %struct.timezone* nonnull getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 5)) #2
  %32 = load i64, i64* %tv_sec.i.i112, align 8, !tbaa !66
  %conv.i.i113 = sitofp i64 %32 to double
  %33 = load i64, i64* %tv_usec.i.i114, align 8, !tbaa !68
  %conv2.i.i115 = sitofp i64 %33 to double
  %div.i.i116 = fmul fast double %conv2.i.i115, 0x3EB0C6F7A0B5ED8D
  %add.i.i117 = fadd fast double %div.i.i116, %conv.i.i113
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #2
  %34 = load double, double* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 1), align 8, !tbaa !69
  %sub.i = fsub fast double %add.i.i117, %34
  %35 = load double, double* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 0), align 8, !tbaa !71
  %add.i = fadd fast double %sub.i, %35
  store double %add.i, double* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 0), align 8, !tbaa !71
  store double %add.i.i117, double* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 1), align 8, !tbaa !69
  br label %_ZN5timer4nextEv.exit

_ZN5timer4nextEv.exit:                            ; preds = %for.body, %if.end.i
  %retval.0.i = phi double [ %sub.i, %if.end.i ], [ 0.000000e+00, %for.body ]
  tail call void @_ZN5timer7reportTEd(%struct.timer* nonnull @_ZL3_tm, double %retval.0.i)
  %inc16 = add nuw nsw i32 %i13.0125, 1
  %exitcond135 = icmp eq i32 %inc16, %rounds
  br i1 %exitcond135, label %for.cond.cleanup, label %for.body

sync.continue57:                                  ; preds = %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit, %pfor.detach33.lr.ph.split.us
  %cmp59 = icmp eq i8* %outFile, null
  br i1 %cmp59, label %if.end, label %if.then

if.then:                                          ; preds = %sync.continue57
  %call61 = tail call i32 @_ZN7benchIO19writeIntArrayToFileIiEET_PS1_lPc(i32* %19, i64 %conv19, i8* nonnull %outFile)
  br label %if.end

if.end:                                           ; preds = %sync.continue57, %if.then
  tail call void @free(i8* %call21) #2
  tail call void @free(i8* %call1) #2
  tail call void @free(i8* %call4) #2
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr { %class._point3d*, i64 } @_ZN7benchIO18readPointsFromFileI8_point3dIdEEE4_seqIT_EPc(i8* %fname) local_unnamed_addr #7 comdat {
entry:
  %0 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc822 = shl i32 %0, 3
  %W = alloca %"struct.benchIO::words", align 8
  %call = tail call { i8*, i64 } @_ZN7benchIO18readStringFromFileEPc(i8* %fname)
  %1 = extractvalue { i8*, i64 } %call, 0
  %2 = extractvalue { i8*, i64 } %call, 1
  %3 = bitcast %"struct.benchIO::words"* %W to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #2
  call void @_ZN7benchIO13stringToWordsEPcl(%"struct.benchIO::words"* nonnull sret %W, i8* %1, i64 %2)
  %m = getelementptr inbounds %"struct.benchIO::words", %"struct.benchIO::words"* %W, i64 0, i32 2
  %4 = load i64, i64* %m, align 8, !tbaa !30
  %cmp = icmp eq i64 %4, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %Strings = getelementptr inbounds %"struct.benchIO::words", %"struct.benchIO::words"* %W, i64 0, i32 3
  %5 = load i8**, i8*** %Strings, align 8, !tbaa !31
  %6 = load i8*, i8** %5, align 8, !tbaa !53
  %call.i.i = tail call i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull @_ZN7benchIO13HeaderPoint3dB5cxx11E, i8* %6) #2
  %cmp.i.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.i.i, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call3 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.24, i64 0, i64 0))
  %call.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call3) #2
  tail call void @abort() #21
  unreachable

if.end:                                           ; preds = %lor.lhs.false
  %sub = add nsw i64 %4, -1
  %div = sdiv i64 %sub, 3
  %mul = mul i64 %div, 24
  %call7 = tail call noalias i8* @malloc(i64 %mul) #2
  %7 = bitcast i8* %call7 to %class._point3d*
  %conv9 = trunc i64 %div to i32
  %sext = mul i64 %div, 12884901888
  %conv.i = ashr exact i64 %sext, 32
  %mul1.i = ashr exact i64 %sext, 29
  %call.i19 = tail call noalias i8* @malloc(i64 %mul1.i) #2
  %8 = bitcast i8* %call.i19 to double*
  %cmp67.i = icmp sgt i32 %conv9, 0
  br i1 %cmp67.i, label %pfor.detach.i.preheader, label %_ZN7benchIO11parsePointsI8_point3dIdEEEvPPcPT_i.exit

pfor.detach.i.preheader:                          ; preds = %if.end
  %add.ptr = getelementptr inbounds i8*, i8** %5, i64 1
  %9 = icmp sgt i64 %conv.i, 1
  %smax = select i1 %9, i64 %conv.i, i64 1
  %10 = add nsw i64 %smax, -1
  %11 = zext i32 %__cilkrts_wc822 to i64
  %12 = add nsw i64 %11, -1
  %13 = add nsw i64 %12, %10
  %14 = udiv i64 %13, %11
  %15 = icmp ult i64 %14, 2048
  %16 = select i1 %15, i64 %14, i64 2048
  tail call fastcc void @_ZN7benchIO18readPointsFromFileI8_point3dIdEEE4_seqIT_EPc_pfor.detach.i.ls(i64 0, i64 %10, i64 %16, i8** nonnull %add.ptr, double* %8)
  %sext21 = shl i64 %div, 32
  %conv17.i = ashr exact i64 %sext21, 32
  %17 = add nsw i64 %conv17.i, -1
  %18 = add nsw i64 %12, %17
  %19 = udiv i64 %18, %11
  %20 = icmp ult i64 %19, 2048
  %21 = select i1 %20, i64 %19, i64 2048
  tail call fastcc void @_ZN7benchIO18readPointsFromFileI8_point3dIdEEE4_seqIT_EPc_pfor.detach21.i.ls(i64 0, i64 %17, i64 %21, double* %8, %class._point3d* %7)
  br label %_ZN7benchIO11parsePointsI8_point3dIdEEEvPPcPT_i.exit

_ZN7benchIO11parsePointsI8_point3dIdEEEvPPcPT_i.exit: ; preds = %if.end, %pfor.detach.i.preheader
  tail call void @free(i8* %call.i19) #2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #2
  %.fca.0.insert = insertvalue { %class._point3d*, i64 } undef, %class._point3d* %7, 0
  %.fca.1.insert = insertvalue { %class._point3d*, i64 } %.fca.0.insert, i64 %div, 1
  ret { %class._point3d*, i64 } %.fca.1.insert
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_Z13timeNeighborsILi1E8_point3dIdEEvPT0_iiiPc(%class._point3d* %pts, i32 %n, i32 %k, i32 %rounds, i8* %outFile) local_unnamed_addr #7 comdat {
entry:
  %0 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8141 = shl i32 %0, 3
  %now.i.i110 = alloca %struct.timeval, align 8
  %now.i.i = alloca %struct.timeval, align 8
  %conv = sext i32 %n to i64
  %mul = shl nsw i64 %conv, 3
  %call1 = tail call noalias i8* @malloc(i64 %mul) #2
  %1 = bitcast i8* %call1 to %struct.vertex.29**
  %mul3 = mul nsw i64 %conv, 40
  %call4 = tail call noalias i8* @malloc(i64 %mul3) #2
  %cmp127 = icmp sgt i32 %n, 0
  br i1 %cmp127, label %pfor.detach.lr.ph, label %sync.continue

pfor.detach.lr.ph:                                ; preds = %entry
  %2 = bitcast i8* %call4 to %struct.vertex.29*
  %wide.trip.count139 = zext i32 %n to i64
  %3 = add nsw i64 %wide.trip.count139, -1
  %4 = zext i32 %__cilkrts_wc8141 to i64
  %5 = add nsw i64 %wide.trip.count139, -2
  %6 = add nsw i64 %5, %4
  %7 = udiv i64 %6, %4
  %8 = icmp ult i64 %7, 2048
  %9 = select i1 %8, i64 %7, i64 2048
  tail call fastcc void @_Z13timeNeighborsILi1E8_point3dIdEEvPT0_iiiPc_pfor.detach.ls(i64 0, i64 %3, i64 %9, %struct.vertex.29* %2, %class._point3d* %pts, %struct.vertex.29** %1)
  br label %sync.continue

sync.continue:                                    ; preds = %entry, %pfor.detach.lr.ph
  tail call void @_Z3ANNILi1E6vertexI8_point3dIdELi1EEEvPPT0_ii(%struct.vertex.29** %1, i32 %n, i32 %k)
  %cmp14125 = icmp sgt i32 %rounds, 0
  br i1 %cmp14125, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %sync.continue
  %10 = bitcast %struct.timeval* %now.i.i to i8*
  %tv_sec.i.i = getelementptr inbounds %struct.timeval, %struct.timeval* %now.i.i, i64 0, i32 0
  %tv_usec.i.i = getelementptr inbounds %struct.timeval, %struct.timeval* %now.i.i, i64 0, i32 1
  %11 = bitcast %struct.timeval* %now.i.i110 to i8*
  %tv_sec.i.i112 = getelementptr inbounds %struct.timeval, %struct.timeval* %now.i.i110, i64 0, i32 0
  %tv_usec.i.i114 = getelementptr inbounds %struct.timeval, %struct.timeval* %now.i.i110, i64 0, i32 1
  br label %for.body

for.cond.cleanup:                                 ; preds = %_ZN5timer4nextEv.exit, %sync.continue
  %vtable.i = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !32
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %12 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %12, align 8
  %add.ptr.i = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i
  %_M_ctype.i.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 240
  %13 = bitcast i8* %_M_ctype.i.i to %"class.std::ctype"**
  %14 = load %"class.std::ctype"*, %"class.std::ctype"** %13, align 8, !tbaa !41
  %tobool.i.i.i = icmp eq %"class.std::ctype"* %14, null
  br i1 %tobool.i.i.i, label %if.then.i.i.i, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i

if.then.i.i.i:                                    ; preds = %for.cond.cleanup
  tail call void @_ZSt16__throw_bad_castv() #21
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i: ; preds = %for.cond.cleanup
  %_M_widen_ok.i.i.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %14, i64 0, i32 8
  %15 = load i8, i8* %_M_widen_ok.i.i.i, align 8, !tbaa !43
  %tobool.i3.i.i = icmp eq i8 %15, 0
  br i1 %tobool.i3.i.i, label %if.end.i.i.i, label %if.then.i4.i.i

if.then.i4.i.i:                                   ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  %arrayidx.i.i.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %14, i64 0, i32 9, i64 10
  %16 = load i8, i8* %arrayidx.i.i.i, align 1, !tbaa !22
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit

if.end.i.i.i:                                     ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull %14) #2
  %17 = bitcast %"class.std::ctype"* %14 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %17, align 8, !tbaa !32
  %vfn.i.i.i = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i, i64 6
  %18 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i, align 8
  %call.i.i.i = tail call signext i8 %18(%"class.std::ctype"* nonnull %14, i8 signext 10) #2
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit

_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit: ; preds = %if.then.i4.i.i, %if.end.i.i.i
  %retval.0.i.i.i = phi i8 [ %16, %if.then.i4.i.i ], [ %call.i.i.i, %if.end.i.i.i ]
  %call1.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i8 signext %retval.0.i.i.i) #2
  %call.i.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull %call1.i) #2
  %mul18 = mul nsw i32 %k, %n
  %conv19 = sext i32 %mul18 to i64
  %mul20 = shl nsw i64 %conv19, 2
  %call21 = tail call noalias i8* @malloc(i64 %mul20) #2
  %19 = bitcast i8* %call21 to i32*
  %cmp40119 = icmp sgt i32 %k, 0
  %or.cond = and i1 %cmp127, %cmp40119
  br i1 %or.cond, label %pfor.detach33.lr.ph.split.us, label %sync.continue57

pfor.detach33.lr.ph.split.us:                     ; preds = %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
  %wide.trip.count = zext i32 %k to i64
  %wide.trip.count133 = zext i32 %n to i64
  %20 = add nsw i64 %wide.trip.count, -1
  %xtraiter = and i64 %wide.trip.count, 7
  %21 = icmp ult i64 %20, 7
  %unroll_iter = sub nsw i64 %wide.trip.count, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %22 = add nsw i64 %wide.trip.count133, -1
  %23 = zext i32 %__cilkrts_wc8141 to i64
  %24 = add nsw i64 %wide.trip.count133, -2
  %25 = add nsw i64 %24, %23
  %26 = udiv i64 %25, %23
  %27 = icmp ult i64 %26, 2048
  %28 = select i1 %27, i64 %26, i64 2048
  tail call fastcc void @_Z13timeNeighborsILi1E8_point3dIdEEvPT0_iiiPc_pfor.detach33.us.ls(i64 0, i64 %22, i64 %28, %struct.vertex.29** %1, i1 %21, i64 %unroll_iter, i32* %19, i1 %lcmp.mod, i64 %xtraiter)
  br label %sync.continue57

for.body:                                         ; preds = %_ZN5timer4nextEv.exit, %for.body.lr.ph
  %i13.0126 = phi i32 [ 0, %for.body.lr.ph ], [ %inc16, %_ZN5timer4nextEv.exit ]
  store i8 1, i8* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 3), align 8, !tbaa !63
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #2
  %call.i.i109 = call i32 @gettimeofday(%struct.timeval* nonnull %now.i.i, %struct.timezone* nonnull getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 5)) #2
  %29 = load i64, i64* %tv_sec.i.i, align 8, !tbaa !66
  %conv.i.i = sitofp i64 %29 to double
  %30 = load i64, i64* %tv_usec.i.i, align 8, !tbaa !68
  %conv2.i.i = sitofp i64 %30 to double
  %div.i.i = fmul fast double %conv2.i.i, 0x3EB0C6F7A0B5ED8D
  %add.i.i = fadd fast double %div.i.i, %conv.i.i
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #2
  store double %add.i.i, double* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 1), align 8, !tbaa !69
  tail call void @_Z3ANNILi1E6vertexI8_point3dIdELi1EEEvPPT0_ii(%struct.vertex.29** %1, i32 %n, i32 %k)
  %31 = load i8, i8* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 3), align 8, !tbaa !63, !range !70
  %tobool.i = icmp eq i8 %31, 0
  br i1 %tobool.i, label %_ZN5timer4nextEv.exit, label %if.end.i

if.end.i:                                         ; preds = %for.body
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #2
  %call.i.i111 = call i32 @gettimeofday(%struct.timeval* nonnull %now.i.i110, %struct.timezone* nonnull getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 5)) #2
  %32 = load i64, i64* %tv_sec.i.i112, align 8, !tbaa !66
  %conv.i.i113 = sitofp i64 %32 to double
  %33 = load i64, i64* %tv_usec.i.i114, align 8, !tbaa !68
  %conv2.i.i115 = sitofp i64 %33 to double
  %div.i.i116 = fmul fast double %conv2.i.i115, 0x3EB0C6F7A0B5ED8D
  %add.i.i117 = fadd fast double %div.i.i116, %conv.i.i113
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #2
  %34 = load double, double* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 1), align 8, !tbaa !69
  %sub.i = fsub fast double %add.i.i117, %34
  %35 = load double, double* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 0), align 8, !tbaa !71
  %add.i = fadd fast double %sub.i, %35
  store double %add.i, double* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 0), align 8, !tbaa !71
  store double %add.i.i117, double* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 1), align 8, !tbaa !69
  br label %_ZN5timer4nextEv.exit

_ZN5timer4nextEv.exit:                            ; preds = %for.body, %if.end.i
  %retval.0.i = phi double [ %sub.i, %if.end.i ], [ 0.000000e+00, %for.body ]
  tail call void @_ZN5timer7reportTEd(%struct.timer* nonnull @_ZL3_tm, double %retval.0.i)
  %inc16 = add nuw nsw i32 %i13.0126, 1
  %exitcond136 = icmp eq i32 %inc16, %rounds
  br i1 %exitcond136, label %for.cond.cleanup, label %for.body

sync.continue57:                                  ; preds = %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit, %pfor.detach33.lr.ph.split.us
  %cmp59 = icmp eq i8* %outFile, null
  br i1 %cmp59, label %if.end, label %if.then

if.then:                                          ; preds = %sync.continue57
  %call61 = tail call i32 @_ZN7benchIO19writeIntArrayToFileIiEET_PS1_lPc(i32* %19, i64 %conv19, i8* nonnull %outFile)
  br label %if.end

if.end:                                           ; preds = %sync.continue57, %if.then
  tail call void @free(i8* %call21) #2
  tail call void @free(i8* %call1) #2
  tail call void @free(i8* %call4) #2
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_Z13timeNeighborsILi10E8_point3dIdEEvPT0_iiiPc(%class._point3d* %pts, i32 %n, i32 %k, i32 %rounds, i8* %outFile) local_unnamed_addr #7 comdat {
entry:
  %0 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8139 = shl i32 %0, 3
  %now.i.i110 = alloca %struct.timeval, align 8
  %now.i.i = alloca %struct.timeval, align 8
  %conv = sext i32 %n to i64
  %mul = shl nsw i64 %conv, 3
  %call1 = tail call noalias i8* @malloc(i64 %mul) #2
  %1 = bitcast i8* %call1 to %struct.vertex.44**
  %mul3 = mul nsw i64 %conv, 112
  %call4 = tail call noalias i8* @malloc(i64 %mul3) #2
  %cmp125 = icmp sgt i32 %n, 0
  br i1 %cmp125, label %pfor.detach.lr.ph, label %sync.continue

pfor.detach.lr.ph:                                ; preds = %entry
  %2 = bitcast i8* %call4 to %struct.vertex.44*
  %wide.trip.count137 = zext i32 %n to i64
  %3 = add nsw i64 %wide.trip.count137, -1
  %4 = zext i32 %__cilkrts_wc8139 to i64
  %5 = add nsw i64 %wide.trip.count137, -2
  %6 = add nsw i64 %5, %4
  %7 = udiv i64 %6, %4
  %8 = icmp ult i64 %7, 2048
  %9 = select i1 %8, i64 %7, i64 2048
  tail call fastcc void @_Z13timeNeighborsILi10E8_point3dIdEEvPT0_iiiPc_pfor.detach.ls(i64 0, i64 %3, i64 %9, %struct.vertex.44* %2, %class._point3d* %pts, %struct.vertex.44** %1)
  br label %sync.continue

sync.continue:                                    ; preds = %entry, %pfor.detach.lr.ph
  tail call void @_Z3ANNILi10E6vertexI8_point3dIdELi10EEEvPPT0_ii(%struct.vertex.44** %1, i32 %n, i32 %k)
  %cmp14123 = icmp sgt i32 %rounds, 0
  br i1 %cmp14123, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %sync.continue
  %10 = bitcast %struct.timeval* %now.i.i to i8*
  %tv_sec.i.i = getelementptr inbounds %struct.timeval, %struct.timeval* %now.i.i, i64 0, i32 0
  %tv_usec.i.i = getelementptr inbounds %struct.timeval, %struct.timeval* %now.i.i, i64 0, i32 1
  %11 = bitcast %struct.timeval* %now.i.i110 to i8*
  %tv_sec.i.i112 = getelementptr inbounds %struct.timeval, %struct.timeval* %now.i.i110, i64 0, i32 0
  %tv_usec.i.i114 = getelementptr inbounds %struct.timeval, %struct.timeval* %now.i.i110, i64 0, i32 1
  br label %for.body

for.cond.cleanup:                                 ; preds = %_ZN5timer4nextEv.exit, %sync.continue
  %vtable.i = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !32
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %12 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %12, align 8
  %add.ptr.i = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i
  %_M_ctype.i.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 240
  %13 = bitcast i8* %_M_ctype.i.i to %"class.std::ctype"**
  %14 = load %"class.std::ctype"*, %"class.std::ctype"** %13, align 8, !tbaa !41
  %tobool.i.i.i = icmp eq %"class.std::ctype"* %14, null
  br i1 %tobool.i.i.i, label %if.then.i.i.i, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i

if.then.i.i.i:                                    ; preds = %for.cond.cleanup
  tail call void @_ZSt16__throw_bad_castv() #21
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i: ; preds = %for.cond.cleanup
  %_M_widen_ok.i.i.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %14, i64 0, i32 8
  %15 = load i8, i8* %_M_widen_ok.i.i.i, align 8, !tbaa !43
  %tobool.i3.i.i = icmp eq i8 %15, 0
  br i1 %tobool.i3.i.i, label %if.end.i.i.i, label %if.then.i4.i.i

if.then.i4.i.i:                                   ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  %arrayidx.i.i.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %14, i64 0, i32 9, i64 10
  %16 = load i8, i8* %arrayidx.i.i.i, align 1, !tbaa !22
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit

if.end.i.i.i:                                     ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull %14) #2
  %17 = bitcast %"class.std::ctype"* %14 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %17, align 8, !tbaa !32
  %vfn.i.i.i = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i, i64 6
  %18 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i, align 8
  %call.i.i.i = tail call signext i8 %18(%"class.std::ctype"* nonnull %14, i8 signext 10) #2
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit

_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit: ; preds = %if.then.i4.i.i, %if.end.i.i.i
  %retval.0.i.i.i = phi i8 [ %16, %if.then.i4.i.i ], [ %call.i.i.i, %if.end.i.i.i ]
  %call1.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i8 signext %retval.0.i.i.i) #2
  %call.i.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull %call1.i) #2
  %mul18 = mul nsw i32 %k, %n
  %conv19 = sext i32 %mul18 to i64
  %mul20 = shl nsw i64 %conv19, 2
  %call21 = tail call noalias i8* @malloc(i64 %mul20) #2
  %19 = bitcast i8* %call21 to i32*
  %cmp40119 = icmp sgt i32 %k, 0
  %or.cond = and i1 %cmp125, %cmp40119
  br i1 %or.cond, label %pfor.detach33.lr.ph.split.us, label %sync.continue57

pfor.detach33.lr.ph.split.us:                     ; preds = %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
  %wide.trip.count = zext i32 %k to i64
  %wide.trip.count131 = zext i32 %n to i64
  %20 = add nsw i64 %wide.trip.count, -1
  %xtraiter = and i64 %wide.trip.count, 7
  %21 = icmp ult i64 %20, 7
  %unroll_iter = sub nsw i64 %wide.trip.count, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %22 = add nsw i64 %wide.trip.count131, -1
  %23 = zext i32 %__cilkrts_wc8139 to i64
  %24 = add nsw i64 %wide.trip.count131, -2
  %25 = add nsw i64 %24, %23
  %26 = udiv i64 %25, %23
  %27 = icmp ult i64 %26, 2048
  %28 = select i1 %27, i64 %26, i64 2048
  tail call fastcc void @_Z13timeNeighborsILi10E8_point3dIdEEvPT0_iiiPc_pfor.detach33.us.ls(i64 0, i64 %22, i64 %28, %struct.vertex.44** %1, i1 %21, i64 %unroll_iter, i32* %19, i1 %lcmp.mod, i64 %xtraiter)
  br label %sync.continue57

for.body:                                         ; preds = %_ZN5timer4nextEv.exit, %for.body.lr.ph
  %i13.0124 = phi i32 [ 0, %for.body.lr.ph ], [ %inc16, %_ZN5timer4nextEv.exit ]
  store i8 1, i8* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 3), align 8, !tbaa !63
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #2
  %call.i.i109 = call i32 @gettimeofday(%struct.timeval* nonnull %now.i.i, %struct.timezone* nonnull getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 5)) #2
  %29 = load i64, i64* %tv_sec.i.i, align 8, !tbaa !66
  %conv.i.i = sitofp i64 %29 to double
  %30 = load i64, i64* %tv_usec.i.i, align 8, !tbaa !68
  %conv2.i.i = sitofp i64 %30 to double
  %div.i.i = fmul fast double %conv2.i.i, 0x3EB0C6F7A0B5ED8D
  %add.i.i = fadd fast double %div.i.i, %conv.i.i
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #2
  store double %add.i.i, double* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 1), align 8, !tbaa !69
  tail call void @_Z3ANNILi10E6vertexI8_point3dIdELi10EEEvPPT0_ii(%struct.vertex.44** %1, i32 %n, i32 %k)
  %31 = load i8, i8* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 3), align 8, !tbaa !63, !range !70
  %tobool.i = icmp eq i8 %31, 0
  br i1 %tobool.i, label %_ZN5timer4nextEv.exit, label %if.end.i

if.end.i:                                         ; preds = %for.body
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #2
  %call.i.i111 = call i32 @gettimeofday(%struct.timeval* nonnull %now.i.i110, %struct.timezone* nonnull getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 5)) #2
  %32 = load i64, i64* %tv_sec.i.i112, align 8, !tbaa !66
  %conv.i.i113 = sitofp i64 %32 to double
  %33 = load i64, i64* %tv_usec.i.i114, align 8, !tbaa !68
  %conv2.i.i115 = sitofp i64 %33 to double
  %div.i.i116 = fmul fast double %conv2.i.i115, 0x3EB0C6F7A0B5ED8D
  %add.i.i117 = fadd fast double %div.i.i116, %conv.i.i113
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #2
  %34 = load double, double* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 1), align 8, !tbaa !69
  %sub.i = fsub fast double %add.i.i117, %34
  %35 = load double, double* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 0), align 8, !tbaa !71
  %add.i = fadd fast double %sub.i, %35
  store double %add.i, double* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 0), align 8, !tbaa !71
  store double %add.i.i117, double* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 1), align 8, !tbaa !69
  br label %_ZN5timer4nextEv.exit

_ZN5timer4nextEv.exit:                            ; preds = %for.body, %if.end.i
  %retval.0.i = phi double [ %sub.i, %if.end.i ], [ 0.000000e+00, %for.body ]
  tail call void @_ZN5timer7reportTEd(%struct.timer* nonnull @_ZL3_tm, double %retval.0.i)
  %inc16 = add nuw nsw i32 %i13.0124, 1
  %exitcond134 = icmp eq i32 %inc16, %rounds
  br i1 %exitcond134, label %for.cond.cleanup, label %for.body

sync.continue57:                                  ; preds = %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit, %pfor.detach33.lr.ph.split.us
  %cmp59 = icmp eq i8* %outFile, null
  br i1 %cmp59, label %if.end, label %if.then

if.then:                                          ; preds = %sync.continue57
  %call61 = tail call i32 @_ZN7benchIO19writeIntArrayToFileIiEET_PS1_lPc(i32* %19, i64 %conv19, i8* nonnull %outFile)
  br label %if.end

if.end:                                           ; preds = %sync.continue57, %if.then
  tail call void @free(i8* %call21) #2
  tail call void @free(i8* %call1) #2
  tail call void @free(i8* %call4) #2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

; Function Attrs: nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare double @strtod(i8* readonly, i8** nocapture) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #10

declare i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

; Function Attrs: inlinehint nounwind uwtable
declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_ostream"* dereferenceable(272), %"class.std::__cxx11::basic_string"* dereferenceable(32)) local_unnamed_addr #8

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* dereferenceable(272), i8*, i64) local_unnamed_addr #0

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

declare dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #13

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #10

declare void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(%"class.std::basic_ios"*, i32) local_unnamed_addr #0

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"*, i8 signext) local_unnamed_addr #0

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"*) local_unnamed_addr #0

; Function Attrs: noreturn
declare void @_ZSt16__throw_bad_castv() local_unnamed_addr #10

declare void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"*) local_unnamed_addr #0

; Function Attrs: nounwind uwtable
define linkonce_odr { i64*, i64 } @_ZN8sequence4packIllN5utils9identityFIlEEEE4_seqIT_EPS5_PbT0_S9_T1_(i64* %Out, i8* %Fl, i64 %s, i64 %e) local_unnamed_addr #7 comdat {
entry:
  %sub = sub i64 %e, %s
  %sub1 = add nsw i64 %sub, -1
  %div = sdiv i64 %sub1, 2048
  %add = add nsw i64 %div, 1
  %cmp = icmp slt i64 %sub, 2049
  br i1 %cmp, label %if.then, label %pfor.detach.lr.ph

if.then:                                          ; preds = %entry
  %cmp.i = icmp eq i64* %Out, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.then
  %add.ptr.i = getelementptr inbounds i8, i8* %Fl, i64 %s
  %cmp.i.i = icmp sgt i64 %sub, 127
  %and.i.i = and i64 %sub, 511
  %cmp1.i.i = icmp eq i64 %and.i.i, 0
  %or.cond.i.i = and i1 %cmp.i.i, %cmp1.i.i
  br i1 %or.cond.i.i, label %land.lhs.true2.i.i, label %if.else.i.i

land.lhs.true2.i.i:                               ; preds = %if.then.i
  %0 = ptrtoint i8* %add.ptr.i to i64
  %and3.i.i = and i64 %0, 3
  %cmp4.i.i = icmp eq i64 %and3.i.i, 0
  br i1 %cmp4.i.i, label %if.then.i.i, label %vector.ph347

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  %shr75.i.i = lshr i64 %sub, 9
  %cmp562.i.i = icmp sgt i64 %sub, 511
  br i1 %cmp562.i.i, label %for.body.lr.ph.i.i, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i

for.body.lr.ph.i.i:                               ; preds = %if.then.i.i
  %1 = bitcast i8* %add.ptr.i to i32*
  br label %vector.ph379

vector.ph379:                                     ; preds = %for.body.lr.ph.i.i, %vector.ph379
  %indvars.iv71.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next72.i.i, %vector.ph379 ]
  %IFl.064.i.i = phi i32* [ %1, %for.body.lr.ph.i.i ], [ %add.ptr.i.i, %vector.ph379 ]
  %r.063.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %add21.i.i, %vector.ph379 ]
  %2 = bitcast i32* %IFl.064.i.i to <8 x i32>*
  %wide.load394 = load <8 x i32>, <8 x i32>* %2, align 4, !tbaa !59
  %3 = getelementptr i32, i32* %IFl.064.i.i, i64 8
  %4 = bitcast i32* %3 to <8 x i32>*
  %wide.load395 = load <8 x i32>, <8 x i32>* %4, align 4, !tbaa !59
  %5 = getelementptr i32, i32* %IFl.064.i.i, i64 16
  %6 = bitcast i32* %5 to <8 x i32>*
  %wide.load396 = load <8 x i32>, <8 x i32>* %6, align 4, !tbaa !59
  %7 = getelementptr i32, i32* %IFl.064.i.i, i64 24
  %8 = bitcast i32* %7 to <8 x i32>*
  %wide.load397 = load <8 x i32>, <8 x i32>* %8, align 4, !tbaa !59
  %9 = getelementptr inbounds i32, i32* %IFl.064.i.i, i64 32
  %10 = bitcast i32* %9 to <8 x i32>*
  %wide.load394.1 = load <8 x i32>, <8 x i32>* %10, align 4, !tbaa !59
  %11 = getelementptr i32, i32* %IFl.064.i.i, i64 40
  %12 = bitcast i32* %11 to <8 x i32>*
  %wide.load395.1 = load <8 x i32>, <8 x i32>* %12, align 4, !tbaa !59
  %13 = getelementptr i32, i32* %IFl.064.i.i, i64 48
  %14 = bitcast i32* %13 to <8 x i32>*
  %wide.load396.1 = load <8 x i32>, <8 x i32>* %14, align 4, !tbaa !59
  %15 = getelementptr i32, i32* %IFl.064.i.i, i64 56
  %16 = bitcast i32* %15 to <8 x i32>*
  %wide.load397.1 = load <8 x i32>, <8 x i32>* %16, align 4, !tbaa !59
  %17 = getelementptr inbounds i32, i32* %IFl.064.i.i, i64 64
  %18 = bitcast i32* %17 to <8 x i32>*
  %wide.load394.2 = load <8 x i32>, <8 x i32>* %18, align 4, !tbaa !59
  %19 = getelementptr i32, i32* %IFl.064.i.i, i64 72
  %20 = bitcast i32* %19 to <8 x i32>*
  %wide.load395.2 = load <8 x i32>, <8 x i32>* %20, align 4, !tbaa !59
  %21 = getelementptr i32, i32* %IFl.064.i.i, i64 80
  %22 = bitcast i32* %21 to <8 x i32>*
  %wide.load396.2 = load <8 x i32>, <8 x i32>* %22, align 4, !tbaa !59
  %23 = getelementptr i32, i32* %IFl.064.i.i, i64 88
  %24 = bitcast i32* %23 to <8 x i32>*
  %wide.load397.2 = load <8 x i32>, <8 x i32>* %24, align 4, !tbaa !59
  %25 = getelementptr inbounds i32, i32* %IFl.064.i.i, i64 96
  %26 = bitcast i32* %25 to <8 x i32>*
  %wide.load394.3 = load <8 x i32>, <8 x i32>* %26, align 4, !tbaa !59
  %27 = getelementptr i32, i32* %IFl.064.i.i, i64 104
  %28 = bitcast i32* %27 to <8 x i32>*
  %wide.load395.3 = load <8 x i32>, <8 x i32>* %28, align 4, !tbaa !59
  %29 = getelementptr i32, i32* %IFl.064.i.i, i64 112
  %30 = bitcast i32* %29 to <8 x i32>*
  %wide.load396.3 = load <8 x i32>, <8 x i32>* %30, align 4, !tbaa !59
  %31 = getelementptr i32, i32* %IFl.064.i.i, i64 120
  %32 = bitcast i32* %31 to <8 x i32>*
  %wide.load397.3 = load <8 x i32>, <8 x i32>* %32, align 4, !tbaa !59
  %33 = add <8 x i32> %wide.load395, %wide.load394
  %34 = add <8 x i32> %33, %wide.load396
  %35 = add <8 x i32> %34, %wide.load397
  %36 = add <8 x i32> %35, %wide.load394.1
  %37 = add <8 x i32> %36, %wide.load395.1
  %38 = add <8 x i32> %37, %wide.load396.1
  %bin.rdx398 = add <8 x i32> %38, %wide.load397.1
  %39 = add <8 x i32> %bin.rdx398, %wide.load394.2
  %40 = add <8 x i32> %39, %wide.load395.2
  %41 = add <8 x i32> %40, %wide.load396.2
  %bin.rdx399 = add <8 x i32> %41, %wide.load397.2
  %42 = add <8 x i32> %bin.rdx399, %wide.load394.3
  %43 = add <8 x i32> %42, %wide.load395.3
  %44 = add <8 x i32> %43, %wide.load396.3
  %bin.rdx400 = add <8 x i32> %44, %wide.load397.3
  %rdx.shuf401 = shufflevector <8 x i32> %bin.rdx400, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx402 = add <8 x i32> %rdx.shuf401, %bin.rdx400
  %rdx.shuf403 = shufflevector <8 x i32> %bin.rdx402, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx404 = add <8 x i32> %rdx.shuf403, %bin.rdx402
  %rdx.shuf405 = shufflevector <8 x i32> %bin.rdx404, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx406 = add <8 x i32> %rdx.shuf405, %bin.rdx404
  %45 = extractelement <8 x i32> %bin.rdx406, i32 0
  %and10.i.i = and i32 %45, 255
  %46 = lshr i32 %45, 8
  %and12.i.i = and i32 %46, 255
  %47 = lshr i32 %45, 16
  %and15.i.i = and i32 %47, 255
  %48 = lshr i32 %45, 24
  %add13.i.i = add nuw nsw i32 %48, %and10.i.i
  %add16.i.i = add nuw nsw i32 %add13.i.i, %and12.i.i
  %add19.i.i = add nuw nsw i32 %add16.i.i, %and15.i.i
  %49 = zext i32 %add19.i.i to i64
  %add21.i.i = add nuw nsw i64 %r.063.i.i, %49
  %add.ptr.i.i = getelementptr inbounds i32, i32* %IFl.064.i.i, i64 128
  %indvars.iv.next72.i.i = add nuw nsw i64 %indvars.iv71.i.i, 1
  %cmp5.i.i = icmp ugt i64 %shr75.i.i, %indvars.iv.next72.i.i
  br i1 %cmp5.i.i, label %vector.ph379, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i

if.else.i.i:                                      ; preds = %if.then.i
  %cmp2766.i.i = icmp sgt i64 %sub, 0
  br i1 %cmp2766.i.i, label %for.body29.lr.ph.i.i, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i

for.body29.lr.ph.i.i:                             ; preds = %if.else.i.i
  %min.iters.check346 = icmp ult i64 %sub, 16
  br i1 %min.iters.check346, label %for.body29.i.i.preheader, label %vector.ph347

vector.ph347:                                     ; preds = %land.lhs.true2.i.i, %for.body29.lr.ph.i.i
  %n.vec349 = and i64 %sub, -16
  %50 = add i64 %n.vec349, -16
  %51 = lshr exact i64 %50, 4
  %52 = add nuw nsw i64 %51, 1
  %xtraiter435 = and i64 %52, 3
  %53 = icmp ult i64 %50, 48
  br i1 %53, label %middle.block344.unr-lcssa, label %vector.ph347.new

vector.ph347.new:                                 ; preds = %vector.ph347
  %unroll_iter442 = sub nsw i64 %52, %xtraiter435
  br label %vector.body343

vector.body343:                                   ; preds = %vector.body343, %vector.ph347.new
  %index350 = phi i64 [ 0, %vector.ph347.new ], [ %index.next351.3, %vector.body343 ]
  %vec.phi360 = phi <4 x i64> [ zeroinitializer, %vector.ph347.new ], [ %114, %vector.body343 ]
  %vec.phi361 = phi <4 x i64> [ zeroinitializer, %vector.ph347.new ], [ %115, %vector.body343 ]
  %vec.phi362 = phi <4 x i64> [ zeroinitializer, %vector.ph347.new ], [ %116, %vector.body343 ]
  %vec.phi363 = phi <4 x i64> [ zeroinitializer, %vector.ph347.new ], [ %117, %vector.body343 ]
  %niter443 = phi i64 [ %unroll_iter442, %vector.ph347.new ], [ %niter443.nsub.3, %vector.body343 ]
  %54 = getelementptr inbounds i8, i8* %add.ptr.i, i64 %index350
  %55 = bitcast i8* %54 to <4 x i8>*
  %wide.load364 = load <4 x i8>, <4 x i8>* %55, align 1, !tbaa !23
  %56 = getelementptr i8, i8* %54, i64 4
  %57 = bitcast i8* %56 to <4 x i8>*
  %wide.load365 = load <4 x i8>, <4 x i8>* %57, align 1, !tbaa !23
  %58 = getelementptr i8, i8* %54, i64 8
  %59 = bitcast i8* %58 to <4 x i8>*
  %wide.load366 = load <4 x i8>, <4 x i8>* %59, align 1, !tbaa !23
  %60 = getelementptr i8, i8* %54, i64 12
  %61 = bitcast i8* %60 to <4 x i8>*
  %wide.load367 = load <4 x i8>, <4 x i8>* %61, align 1, !tbaa !23
  %62 = zext <4 x i8> %wide.load364 to <4 x i64>
  %63 = zext <4 x i8> %wide.load365 to <4 x i64>
  %64 = zext <4 x i8> %wide.load366 to <4 x i64>
  %65 = zext <4 x i8> %wide.load367 to <4 x i64>
  %66 = add nuw nsw <4 x i64> %vec.phi360, %62
  %67 = add nuw nsw <4 x i64> %vec.phi361, %63
  %68 = add nuw nsw <4 x i64> %vec.phi362, %64
  %69 = add nuw nsw <4 x i64> %vec.phi363, %65
  %index.next351 = or i64 %index350, 16
  %70 = getelementptr inbounds i8, i8* %add.ptr.i, i64 %index.next351
  %71 = bitcast i8* %70 to <4 x i8>*
  %wide.load364.1 = load <4 x i8>, <4 x i8>* %71, align 1, !tbaa !23
  %72 = getelementptr i8, i8* %70, i64 4
  %73 = bitcast i8* %72 to <4 x i8>*
  %wide.load365.1 = load <4 x i8>, <4 x i8>* %73, align 1, !tbaa !23
  %74 = getelementptr i8, i8* %70, i64 8
  %75 = bitcast i8* %74 to <4 x i8>*
  %wide.load366.1 = load <4 x i8>, <4 x i8>* %75, align 1, !tbaa !23
  %76 = getelementptr i8, i8* %70, i64 12
  %77 = bitcast i8* %76 to <4 x i8>*
  %wide.load367.1 = load <4 x i8>, <4 x i8>* %77, align 1, !tbaa !23
  %78 = zext <4 x i8> %wide.load364.1 to <4 x i64>
  %79 = zext <4 x i8> %wide.load365.1 to <4 x i64>
  %80 = zext <4 x i8> %wide.load366.1 to <4 x i64>
  %81 = zext <4 x i8> %wide.load367.1 to <4 x i64>
  %82 = add nuw nsw <4 x i64> %66, %78
  %83 = add nuw nsw <4 x i64> %67, %79
  %84 = add nuw nsw <4 x i64> %68, %80
  %85 = add nuw nsw <4 x i64> %69, %81
  %index.next351.1 = or i64 %index350, 32
  %86 = getelementptr inbounds i8, i8* %add.ptr.i, i64 %index.next351.1
  %87 = bitcast i8* %86 to <4 x i8>*
  %wide.load364.2 = load <4 x i8>, <4 x i8>* %87, align 1, !tbaa !23
  %88 = getelementptr i8, i8* %86, i64 4
  %89 = bitcast i8* %88 to <4 x i8>*
  %wide.load365.2 = load <4 x i8>, <4 x i8>* %89, align 1, !tbaa !23
  %90 = getelementptr i8, i8* %86, i64 8
  %91 = bitcast i8* %90 to <4 x i8>*
  %wide.load366.2 = load <4 x i8>, <4 x i8>* %91, align 1, !tbaa !23
  %92 = getelementptr i8, i8* %86, i64 12
  %93 = bitcast i8* %92 to <4 x i8>*
  %wide.load367.2 = load <4 x i8>, <4 x i8>* %93, align 1, !tbaa !23
  %94 = zext <4 x i8> %wide.load364.2 to <4 x i64>
  %95 = zext <4 x i8> %wide.load365.2 to <4 x i64>
  %96 = zext <4 x i8> %wide.load366.2 to <4 x i64>
  %97 = zext <4 x i8> %wide.load367.2 to <4 x i64>
  %98 = add nuw nsw <4 x i64> %82, %94
  %99 = add nuw nsw <4 x i64> %83, %95
  %100 = add nuw nsw <4 x i64> %84, %96
  %101 = add nuw nsw <4 x i64> %85, %97
  %index.next351.2 = or i64 %index350, 48
  %102 = getelementptr inbounds i8, i8* %add.ptr.i, i64 %index.next351.2
  %103 = bitcast i8* %102 to <4 x i8>*
  %wide.load364.3 = load <4 x i8>, <4 x i8>* %103, align 1, !tbaa !23
  %104 = getelementptr i8, i8* %102, i64 4
  %105 = bitcast i8* %104 to <4 x i8>*
  %wide.load365.3 = load <4 x i8>, <4 x i8>* %105, align 1, !tbaa !23
  %106 = getelementptr i8, i8* %102, i64 8
  %107 = bitcast i8* %106 to <4 x i8>*
  %wide.load366.3 = load <4 x i8>, <4 x i8>* %107, align 1, !tbaa !23
  %108 = getelementptr i8, i8* %102, i64 12
  %109 = bitcast i8* %108 to <4 x i8>*
  %wide.load367.3 = load <4 x i8>, <4 x i8>* %109, align 1, !tbaa !23
  %110 = zext <4 x i8> %wide.load364.3 to <4 x i64>
  %111 = zext <4 x i8> %wide.load365.3 to <4 x i64>
  %112 = zext <4 x i8> %wide.load366.3 to <4 x i64>
  %113 = zext <4 x i8> %wide.load367.3 to <4 x i64>
  %114 = add nuw nsw <4 x i64> %98, %110
  %115 = add nuw nsw <4 x i64> %99, %111
  %116 = add nuw nsw <4 x i64> %100, %112
  %117 = add nuw nsw <4 x i64> %101, %113
  %index.next351.3 = add i64 %index350, 64
  %niter443.nsub.3 = add i64 %niter443, -4
  %niter443.ncmp.3 = icmp eq i64 %niter443.nsub.3, 0
  br i1 %niter443.ncmp.3, label %middle.block344.unr-lcssa, label %vector.body343, !llvm.loop !72

middle.block344.unr-lcssa:                        ; preds = %vector.body343, %vector.ph347
  %.lcssa417.ph = phi <4 x i64> [ undef, %vector.ph347 ], [ %114, %vector.body343 ]
  %.lcssa416.ph = phi <4 x i64> [ undef, %vector.ph347 ], [ %115, %vector.body343 ]
  %.lcssa415.ph = phi <4 x i64> [ undef, %vector.ph347 ], [ %116, %vector.body343 ]
  %.lcssa414.ph = phi <4 x i64> [ undef, %vector.ph347 ], [ %117, %vector.body343 ]
  %index350.unr = phi i64 [ 0, %vector.ph347 ], [ %index.next351.3, %vector.body343 ]
  %vec.phi360.unr = phi <4 x i64> [ zeroinitializer, %vector.ph347 ], [ %114, %vector.body343 ]
  %vec.phi361.unr = phi <4 x i64> [ zeroinitializer, %vector.ph347 ], [ %115, %vector.body343 ]
  %vec.phi362.unr = phi <4 x i64> [ zeroinitializer, %vector.ph347 ], [ %116, %vector.body343 ]
  %vec.phi363.unr = phi <4 x i64> [ zeroinitializer, %vector.ph347 ], [ %117, %vector.body343 ]
  %lcmp.mod437 = icmp eq i64 %xtraiter435, 0
  br i1 %lcmp.mod437, label %middle.block344, label %vector.body343.epil.preheader

vector.body343.epil.preheader:                    ; preds = %middle.block344.unr-lcssa
  br label %vector.body343.epil

vector.body343.epil:                              ; preds = %vector.body343.epil.preheader, %vector.body343.epil
  %index350.epil = phi i64 [ %index.next351.epil, %vector.body343.epil ], [ %index350.unr, %vector.body343.epil.preheader ]
  %vec.phi360.epil = phi <4 x i64> [ %130, %vector.body343.epil ], [ %vec.phi360.unr, %vector.body343.epil.preheader ]
  %vec.phi361.epil = phi <4 x i64> [ %131, %vector.body343.epil ], [ %vec.phi361.unr, %vector.body343.epil.preheader ]
  %vec.phi362.epil = phi <4 x i64> [ %132, %vector.body343.epil ], [ %vec.phi362.unr, %vector.body343.epil.preheader ]
  %vec.phi363.epil = phi <4 x i64> [ %133, %vector.body343.epil ], [ %vec.phi363.unr, %vector.body343.epil.preheader ]
  %epil.iter436 = phi i64 [ %epil.iter436.sub, %vector.body343.epil ], [ %xtraiter435, %vector.body343.epil.preheader ]
  %118 = getelementptr inbounds i8, i8* %add.ptr.i, i64 %index350.epil
  %119 = bitcast i8* %118 to <4 x i8>*
  %wide.load364.epil = load <4 x i8>, <4 x i8>* %119, align 1, !tbaa !23
  %120 = getelementptr i8, i8* %118, i64 4
  %121 = bitcast i8* %120 to <4 x i8>*
  %wide.load365.epil = load <4 x i8>, <4 x i8>* %121, align 1, !tbaa !23
  %122 = getelementptr i8, i8* %118, i64 8
  %123 = bitcast i8* %122 to <4 x i8>*
  %wide.load366.epil = load <4 x i8>, <4 x i8>* %123, align 1, !tbaa !23
  %124 = getelementptr i8, i8* %118, i64 12
  %125 = bitcast i8* %124 to <4 x i8>*
  %wide.load367.epil = load <4 x i8>, <4 x i8>* %125, align 1, !tbaa !23
  %126 = zext <4 x i8> %wide.load364.epil to <4 x i64>
  %127 = zext <4 x i8> %wide.load365.epil to <4 x i64>
  %128 = zext <4 x i8> %wide.load366.epil to <4 x i64>
  %129 = zext <4 x i8> %wide.load367.epil to <4 x i64>
  %130 = add nuw nsw <4 x i64> %vec.phi360.epil, %126
  %131 = add nuw nsw <4 x i64> %vec.phi361.epil, %127
  %132 = add nuw nsw <4 x i64> %vec.phi362.epil, %128
  %133 = add nuw nsw <4 x i64> %vec.phi363.epil, %129
  %index.next351.epil = add i64 %index350.epil, 16
  %epil.iter436.sub = add nsw i64 %epil.iter436, -1
  %epil.iter436.cmp = icmp eq i64 %epil.iter436.sub, 0
  br i1 %epil.iter436.cmp, label %middle.block344, label %vector.body343.epil, !llvm.loop !73

middle.block344:                                  ; preds = %vector.body343.epil, %middle.block344.unr-lcssa
  %.lcssa417 = phi <4 x i64> [ %.lcssa417.ph, %middle.block344.unr-lcssa ], [ %130, %vector.body343.epil ]
  %.lcssa416 = phi <4 x i64> [ %.lcssa416.ph, %middle.block344.unr-lcssa ], [ %131, %vector.body343.epil ]
  %.lcssa415 = phi <4 x i64> [ %.lcssa415.ph, %middle.block344.unr-lcssa ], [ %132, %vector.body343.epil ]
  %.lcssa414 = phi <4 x i64> [ %.lcssa414.ph, %middle.block344.unr-lcssa ], [ %133, %vector.body343.epil ]
  %bin.rdx368 = add nuw <4 x i64> %.lcssa416, %.lcssa417
  %bin.rdx369 = add <4 x i64> %bin.rdx368, %.lcssa415
  %bin.rdx370 = add <4 x i64> %bin.rdx369, %.lcssa414
  %rdx.shuf371 = shufflevector <4 x i64> %bin.rdx370, <4 x i64> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %bin.rdx372 = add <4 x i64> %rdx.shuf371, %bin.rdx370
  %rdx.shuf373 = shufflevector <4 x i64> %bin.rdx372, <4 x i64> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %bin.rdx374 = add <4 x i64> %rdx.shuf373, %bin.rdx372
  %134 = extractelement <4 x i64> %bin.rdx374, i32 0
  %cmp.n353 = icmp eq i64 %sub, %n.vec349
  br i1 %cmp.n353, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i, label %for.body29.i.i.preheader

for.body29.i.i.preheader:                         ; preds = %middle.block344, %for.body29.lr.ph.i.i
  %j25.068.i.i.ph = phi i64 [ %n.vec349, %middle.block344 ], [ 0, %for.body29.lr.ph.i.i ]
  %r.167.i.i.ph = phi i64 [ %134, %middle.block344 ], [ 0, %for.body29.lr.ph.i.i ]
  br label %for.body29.i.i

for.body29.i.i:                                   ; preds = %for.body29.i.i.preheader, %for.body29.i.i
  %j25.068.i.i = phi i64 [ %inc34.i.i, %for.body29.i.i ], [ %j25.068.i.i.ph, %for.body29.i.i.preheader ]
  %r.167.i.i = phi i64 [ %add32.i.i, %for.body29.i.i ], [ %r.167.i.i.ph, %for.body29.i.i.preheader ]
  %arrayidx30.i.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 %j25.068.i.i
  %135 = load i8, i8* %arrayidx30.i.i, align 1, !tbaa !23, !range !70
  %136 = zext i8 %135 to i64
  %add32.i.i = add nuw nsw i64 %r.167.i.i, %136
  %inc34.i.i = add nuw nsw i64 %j25.068.i.i, 1
  %exitcond73.i.i = icmp eq i64 %inc34.i.i, %sub
  br i1 %exitcond73.i.i, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i, label %for.body29.i.i, !llvm.loop !74

_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i:   ; preds = %for.body29.i.i, %vector.ph379, %middle.block344, %if.else.i.i, %if.then.i.i
  %r.2.i.i = phi i64 [ 0, %if.then.i.i ], [ 0, %if.else.i.i ], [ %134, %middle.block344 ], [ %add21.i.i, %vector.ph379 ], [ %add32.i.i, %for.body29.i.i ]
  %mul.i = shl i64 %r.2.i.i, 3
  %call1.i = tail call noalias i8* @malloc(i64 %mul.i) #2
  %137 = bitcast i8* %call1.i to i64*
  br label %if.end.i

if.end.i:                                         ; preds = %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i, %if.then
  %Out.addr.0.i = phi i64* [ %137, %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i ], [ %Out, %if.then ]
  %cmp220.i = icmp sgt i64 %e, %s
  br i1 %cmp220.i, label %for.body.i.preheader, label %cleanup

for.body.i.preheader:                             ; preds = %if.end.i
  %138 = xor i64 %s, -1
  %139 = add i64 %138, %e
  %xtraiter = and i64 %sub, 3
  %140 = icmp ult i64 %139, 3
  br i1 %140, label %cleanup.loopexit.unr-lcssa, label %for.body.i.preheader.new

for.body.i.preheader.new:                         ; preds = %for.body.i.preheader
  %unroll_iter = sub i64 %sub, %xtraiter
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.3, %for.body.i.preheader.new
  %k.022.i = phi i64 [ 0, %for.body.i.preheader.new ], [ %k.1.i.3, %for.inc.i.3 ]
  %storemerge21.i = phi i64 [ %s, %for.body.i.preheader.new ], [ %inc7.i.3, %for.inc.i.3 ]
  %niter = phi i64 [ %unroll_iter, %for.body.i.preheader.new ], [ %niter.nsub.3, %for.inc.i.3 ]
  %arrayidx.i = getelementptr inbounds i8, i8* %Fl, i64 %storemerge21.i
  %141 = load i8, i8* %arrayidx.i, align 1, !tbaa !23, !range !70
  %tobool.i = icmp eq i8 %141, 0
  br i1 %tobool.i, label %for.inc.i, label %if.then3.i

if.then3.i:                                       ; preds = %for.body.i
  %inc.i = add nsw i64 %k.022.i, 1
  %arrayidx5.i = getelementptr inbounds i64, i64* %Out.addr.0.i, i64 %k.022.i
  store i64 %storemerge21.i, i64* %arrayidx5.i, align 8, !tbaa !49
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then3.i, %for.body.i
  %k.1.i = phi i64 [ %inc.i, %if.then3.i ], [ %k.022.i, %for.body.i ]
  %inc7.i = add nsw i64 %storemerge21.i, 1
  %arrayidx.i.1 = getelementptr inbounds i8, i8* %Fl, i64 %inc7.i
  %142 = load i8, i8* %arrayidx.i.1, align 1, !tbaa !23, !range !70
  %tobool.i.1 = icmp eq i8 %142, 0
  br i1 %tobool.i.1, label %for.inc.i.1, label %if.then3.i.1

pfor.detach.lr.ph:                                ; preds = %entry
  %143 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8521 = shl i32 %143, 3
  %mul = shl nsw i64 %add, 3
  %call2 = tail call noalias i8* @malloc(i64 %mul) #2
  %144 = bitcast i8* %call2 to i64*
  %145 = xor i64 %s, -1
  %146 = sub i64 -2049, %s
  %147 = xor i64 %e, -1
  %148 = icmp sgt i64 %div, 0
  %smax519 = select i1 %148, i64 %div, i64 0
  %149 = zext i32 %__cilkrts_wc8521 to i64
  %150 = add nsw i64 %smax519, -1
  %151 = add nsw i64 %150, %149
  %152 = udiv i64 %151, %149
  %153 = icmp ult i64 %152, 2048
  %154 = select i1 %153, i64 %152, i64 2048
  tail call fastcc void @_ZN8sequence4packIllN5utils9identityFIlEEEE4_seqIT_EPS5_PbT0_S9_T1__pfor.detach.ls(i64 0, i64 %smax519, i64 %154, i64 %145, i64 %146, i64 %147, i64 %s, i64 %e, i8* %Fl, i64* %144)
  %call.i = tail call i64 @_ZN8sequence4scanIllN5utils4addFIlEENS_4getAIllEEEET_PS6_T0_S8_T1_T2_S6_bb(i64* %144, i64 0, i64 %add, i64* %144, i64 0, i1 zeroext false, i1 zeroext false) #2
  %cmp23 = icmp eq i64* %Out, null
  br i1 %cmp23, label %if.then24, label %sync.continue67

if.then24:                                        ; preds = %pfor.detach.lr.ph
  %mul25 = shl i64 %call.i, 3
  %call26 = tail call noalias i8* @malloc(i64 %mul25) #2
  %155 = bitcast i8* %call26 to i64*
  br label %sync.continue67

sync.continue67:                                  ; preds = %if.then24, %pfor.detach.lr.ph
  %Out.addr.0 = phi i64* [ %155, %if.then24 ], [ %Out, %pfor.detach.lr.ph ]
  %156 = sub i64 -2, %s
  tail call fastcc void @_ZN8sequence4packIllN5utils9identityFIlEEEE4_seqIT_EPS5_PbT0_S9_T1__pfor.detach47.ls(i64 0, i64 %smax519, i64 %154, i8* %Fl, i64 %s, i64 %e, i64* %144, i64* %Out.addr.0, i64 %145, i64 %146, i64 %147, i64 %156)
  tail call void @free(i8* %call2) #2
  br label %cleanup

cleanup.loopexit.unr-lcssa:                       ; preds = %for.inc.i.3, %for.body.i.preheader
  %k.1.i.lcssa.ph = phi i64 [ undef, %for.body.i.preheader ], [ %k.1.i.3, %for.inc.i.3 ]
  %k.022.i.unr = phi i64 [ 0, %for.body.i.preheader ], [ %k.1.i.3, %for.inc.i.3 ]
  %storemerge21.i.unr = phi i64 [ %s, %for.body.i.preheader ], [ %inc7.i.3, %for.inc.i.3 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %cleanup, label %for.body.i.epil.preheader

for.body.i.epil.preheader:                        ; preds = %cleanup.loopexit.unr-lcssa
  br label %for.body.i.epil

for.body.i.epil:                                  ; preds = %for.body.i.epil.preheader, %for.inc.i.epil
  %k.022.i.epil = phi i64 [ %k.1.i.epil, %for.inc.i.epil ], [ %k.022.i.unr, %for.body.i.epil.preheader ]
  %storemerge21.i.epil = phi i64 [ %inc7.i.epil, %for.inc.i.epil ], [ %storemerge21.i.unr, %for.body.i.epil.preheader ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.inc.i.epil ], [ %xtraiter, %for.body.i.epil.preheader ]
  %arrayidx.i.epil = getelementptr inbounds i8, i8* %Fl, i64 %storemerge21.i.epil
  %157 = load i8, i8* %arrayidx.i.epil, align 1, !tbaa !23, !range !70
  %tobool.i.epil = icmp eq i8 %157, 0
  br i1 %tobool.i.epil, label %for.inc.i.epil, label %if.then3.i.epil

if.then3.i.epil:                                  ; preds = %for.body.i.epil
  %inc.i.epil = add nsw i64 %k.022.i.epil, 1
  %arrayidx5.i.epil = getelementptr inbounds i64, i64* %Out.addr.0.i, i64 %k.022.i.epil
  store i64 %storemerge21.i.epil, i64* %arrayidx5.i.epil, align 8, !tbaa !49
  br label %for.inc.i.epil

for.inc.i.epil:                                   ; preds = %if.then3.i.epil, %for.body.i.epil
  %k.1.i.epil = phi i64 [ %inc.i.epil, %if.then3.i.epil ], [ %k.022.i.epil, %for.body.i.epil ]
  %inc7.i.epil = add nsw i64 %storemerge21.i.epil, 1
  %epil.iter.sub = add nsw i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %cleanup, label %for.body.i.epil, !llvm.loop !75

cleanup:                                          ; preds = %for.inc.i.epil, %cleanup.loopexit.unr-lcssa, %if.end.i, %sync.continue67
  %retval.sroa.0.0 = phi i64* [ %Out.addr.0, %sync.continue67 ], [ %Out.addr.0.i, %if.end.i ], [ %Out.addr.0.i, %cleanup.loopexit.unr-lcssa ], [ %Out.addr.0.i, %for.inc.i.epil ]
  %retval.sroa.3.0 = phi i64 [ %call.i, %sync.continue67 ], [ 0, %if.end.i ], [ %k.1.i.lcssa.ph, %cleanup.loopexit.unr-lcssa ], [ %k.1.i.epil, %for.inc.i.epil ]
  %.fca.0.insert = insertvalue { i64*, i64 } undef, i64* %retval.sroa.0.0, 0
  %.fca.1.insert = insertvalue { i64*, i64 } %.fca.0.insert, i64 %retval.sroa.3.0, 1
  ret { i64*, i64 } %.fca.1.insert

if.then3.i.1:                                     ; preds = %for.inc.i
  %inc.i.1 = add nsw i64 %k.1.i, 1
  %arrayidx5.i.1 = getelementptr inbounds i64, i64* %Out.addr.0.i, i64 %k.1.i
  store i64 %inc7.i, i64* %arrayidx5.i.1, align 8, !tbaa !49
  br label %for.inc.i.1

for.inc.i.1:                                      ; preds = %if.then3.i.1, %for.inc.i
  %k.1.i.1 = phi i64 [ %inc.i.1, %if.then3.i.1 ], [ %k.1.i, %for.inc.i ]
  %inc7.i.1 = add nsw i64 %storemerge21.i, 2
  %arrayidx.i.2 = getelementptr inbounds i8, i8* %Fl, i64 %inc7.i.1
  %158 = load i8, i8* %arrayidx.i.2, align 1, !tbaa !23, !range !70
  %tobool.i.2 = icmp eq i8 %158, 0
  br i1 %tobool.i.2, label %for.inc.i.2, label %if.then3.i.2

if.then3.i.2:                                     ; preds = %for.inc.i.1
  %inc.i.2 = add nsw i64 %k.1.i.1, 1
  %arrayidx5.i.2 = getelementptr inbounds i64, i64* %Out.addr.0.i, i64 %k.1.i.1
  store i64 %inc7.i.1, i64* %arrayidx5.i.2, align 8, !tbaa !49
  br label %for.inc.i.2

for.inc.i.2:                                      ; preds = %if.then3.i.2, %for.inc.i.1
  %k.1.i.2 = phi i64 [ %inc.i.2, %if.then3.i.2 ], [ %k.1.i.1, %for.inc.i.1 ]
  %inc7.i.2 = add nsw i64 %storemerge21.i, 3
  %arrayidx.i.3 = getelementptr inbounds i8, i8* %Fl, i64 %inc7.i.2
  %159 = load i8, i8* %arrayidx.i.3, align 1, !tbaa !23, !range !70
  %tobool.i.3 = icmp eq i8 %159, 0
  br i1 %tobool.i.3, label %for.inc.i.3, label %if.then3.i.3

if.then3.i.3:                                     ; preds = %for.inc.i.2
  %inc.i.3 = add nsw i64 %k.1.i.2, 1
  %arrayidx5.i.3 = getelementptr inbounds i64, i64* %Out.addr.0.i, i64 %k.1.i.2
  store i64 %inc7.i.2, i64* %arrayidx5.i.3, align 8, !tbaa !49
  br label %for.inc.i.3

for.inc.i.3:                                      ; preds = %if.then3.i.3, %for.inc.i.2
  %k.1.i.3 = phi i64 [ %inc.i.3, %if.then3.i.3 ], [ %k.1.i.2, %for.inc.i.2 ]
  %inc7.i.3 = add nsw i64 %storemerge21.i, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %cleanup.loopexit.unr-lcssa, label %for.body.i
}

; Function Attrs: nounwind uwtable
define linkonce_odr i64 @_ZN8sequence4scanIllN5utils4addFIlEENS_4getAIllEEEET_PS6_T0_S8_T1_T2_S6_bb(i64* %Out, i64 %s, i64 %e, i64* %g.coerce, i64 %zero, i1 zeroext %inclusive, i1 zeroext %back) local_unnamed_addr #7 comdat {
entry:
  %sub = sub i64 %e, %s
  %sub2 = add nsw i64 %sub, -1
  %div = sdiv i64 %sub2, 1024
  %add = add nsw i64 %div, 1
  %cmp = icmp slt i64 %sub, 2049
  br i1 %cmp, label %if.then, label %pfor.detach.lr.ph

if.then:                                          ; preds = %entry
  %cmp98.i = icmp sgt i64 %e, %s
  br i1 %inclusive, label %if.then.i, label %if.else16.i

if.then.i:                                        ; preds = %if.then
  br i1 %back, label %if.then3.i, label %if.else.i

if.then3.i:                                       ; preds = %if.then.i
  br i1 %cmp98.i, label %for.body.i.preheader, label %cleanup

for.body.i.preheader:                             ; preds = %if.then3.i
  %0 = add i64 %e, -1
  %1 = sub i64 %0, %s
  %xtraiter = and i64 %sub, 7
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body.i.prol.loopexit, label %for.body.i.prol.preheader

for.body.i.prol.preheader:                        ; preds = %for.body.i.preheader
  br label %for.body.i.prol

for.body.i.prol:                                  ; preds = %for.body.i.prol.preheader, %for.body.i.prol
  %i.0100.in.i.prol = phi i64 [ %i.0100.i.prol, %for.body.i.prol ], [ %e, %for.body.i.prol.preheader ]
  %r.099.i.prol = phi i64 [ %add.i79.i.prol, %for.body.i.prol ], [ %zero, %for.body.i.prol.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body.i.prol ], [ %xtraiter, %for.body.i.prol.preheader ]
  %i.0100.i.prol = add nsw i64 %i.0100.in.i.prol, -1
  %arrayidx.i.i.prol = getelementptr inbounds i64, i64* %g.coerce, i64 %i.0100.i.prol
  %2 = load i64, i64* %arrayidx.i.i.prol, align 8, !tbaa !49
  %add.i79.i.prol = add nsw i64 %2, %r.099.i.prol
  %arrayidx.i.prol = getelementptr inbounds i64, i64* %Out, i64 %i.0100.i.prol
  store i64 %add.i79.i.prol, i64* %arrayidx.i.prol, align 8, !tbaa !49
  %prol.iter.sub = add nsw i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body.i.prol.loopexit.loopexit, label %for.body.i.prol, !llvm.loop !76

for.body.i.prol.loopexit.loopexit:                ; preds = %for.body.i.prol
  %3 = sub i64 %e, %xtraiter
  br label %for.body.i.prol.loopexit

for.body.i.prol.loopexit:                         ; preds = %for.body.i.prol.loopexit.loopexit, %for.body.i.preheader
  %i.0100.in.i.unr = phi i64 [ %e, %for.body.i.preheader ], [ %3, %for.body.i.prol.loopexit.loopexit ]
  %r.099.i.unr = phi i64 [ %zero, %for.body.i.preheader ], [ %add.i79.i.prol, %for.body.i.prol.loopexit.loopexit ]
  %add.i79.i.lcssa.unr = phi i64 [ undef, %for.body.i.preheader ], [ %add.i79.i.prol, %for.body.i.prol.loopexit.loopexit ]
  %4 = icmp ult i64 %1, 7
  br i1 %4, label %cleanup, label %for.body.i.preheader330

for.body.i.preheader330:                          ; preds = %for.body.i.prol.loopexit
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.preheader330, %for.body.i
  %i.0100.in.i = phi i64 [ %i.0100.i.7, %for.body.i ], [ %i.0100.in.i.unr, %for.body.i.preheader330 ]
  %r.099.i = phi i64 [ %add.i79.i.7, %for.body.i ], [ %r.099.i.unr, %for.body.i.preheader330 ]
  %i.0100.i = add nsw i64 %i.0100.in.i, -1
  %arrayidx.i.i = getelementptr inbounds i64, i64* %g.coerce, i64 %i.0100.i
  %5 = load i64, i64* %arrayidx.i.i, align 8, !tbaa !49
  %add.i79.i = add nsw i64 %5, %r.099.i
  %arrayidx.i = getelementptr inbounds i64, i64* %Out, i64 %i.0100.i
  store i64 %add.i79.i, i64* %arrayidx.i, align 8, !tbaa !49
  %i.0100.i.1 = add nsw i64 %i.0100.in.i, -2
  %arrayidx.i.i.1 = getelementptr inbounds i64, i64* %g.coerce, i64 %i.0100.i.1
  %6 = load i64, i64* %arrayidx.i.i.1, align 8, !tbaa !49
  %add.i79.i.1 = add nsw i64 %6, %add.i79.i
  %arrayidx.i.1 = getelementptr inbounds i64, i64* %Out, i64 %i.0100.i.1
  store i64 %add.i79.i.1, i64* %arrayidx.i.1, align 8, !tbaa !49
  %i.0100.i.2 = add nsw i64 %i.0100.in.i, -3
  %arrayidx.i.i.2 = getelementptr inbounds i64, i64* %g.coerce, i64 %i.0100.i.2
  %7 = load i64, i64* %arrayidx.i.i.2, align 8, !tbaa !49
  %add.i79.i.2 = add nsw i64 %7, %add.i79.i.1
  %arrayidx.i.2 = getelementptr inbounds i64, i64* %Out, i64 %i.0100.i.2
  store i64 %add.i79.i.2, i64* %arrayidx.i.2, align 8, !tbaa !49
  %i.0100.i.3 = add nsw i64 %i.0100.in.i, -4
  %arrayidx.i.i.3 = getelementptr inbounds i64, i64* %g.coerce, i64 %i.0100.i.3
  %8 = load i64, i64* %arrayidx.i.i.3, align 8, !tbaa !49
  %add.i79.i.3 = add nsw i64 %8, %add.i79.i.2
  %arrayidx.i.3 = getelementptr inbounds i64, i64* %Out, i64 %i.0100.i.3
  store i64 %add.i79.i.3, i64* %arrayidx.i.3, align 8, !tbaa !49
  %i.0100.i.4 = add nsw i64 %i.0100.in.i, -5
  %arrayidx.i.i.4 = getelementptr inbounds i64, i64* %g.coerce, i64 %i.0100.i.4
  %9 = load i64, i64* %arrayidx.i.i.4, align 8, !tbaa !49
  %add.i79.i.4 = add nsw i64 %9, %add.i79.i.3
  %arrayidx.i.4 = getelementptr inbounds i64, i64* %Out, i64 %i.0100.i.4
  store i64 %add.i79.i.4, i64* %arrayidx.i.4, align 8, !tbaa !49
  %i.0100.i.5 = add nsw i64 %i.0100.in.i, -6
  %arrayidx.i.i.5 = getelementptr inbounds i64, i64* %g.coerce, i64 %i.0100.i.5
  %10 = load i64, i64* %arrayidx.i.i.5, align 8, !tbaa !49
  %add.i79.i.5 = add nsw i64 %10, %add.i79.i.4
  %arrayidx.i.5 = getelementptr inbounds i64, i64* %Out, i64 %i.0100.i.5
  store i64 %add.i79.i.5, i64* %arrayidx.i.5, align 8, !tbaa !49
  %i.0100.i.6 = add nsw i64 %i.0100.in.i, -7
  %arrayidx.i.i.6 = getelementptr inbounds i64, i64* %g.coerce, i64 %i.0100.i.6
  %11 = load i64, i64* %arrayidx.i.i.6, align 8, !tbaa !49
  %add.i79.i.6 = add nsw i64 %11, %add.i79.i.5
  %arrayidx.i.6 = getelementptr inbounds i64, i64* %Out, i64 %i.0100.i.6
  store i64 %add.i79.i.6, i64* %arrayidx.i.6, align 8, !tbaa !49
  %i.0100.i.7 = add nsw i64 %i.0100.in.i, -8
  %arrayidx.i.i.7 = getelementptr inbounds i64, i64* %g.coerce, i64 %i.0100.i.7
  %12 = load i64, i64* %arrayidx.i.i.7, align 8, !tbaa !49
  %add.i79.i.7 = add nsw i64 %12, %add.i79.i.6
  %arrayidx.i.7 = getelementptr inbounds i64, i64* %Out, i64 %i.0100.i.7
  store i64 %add.i79.i.7, i64* %arrayidx.i.7, align 8, !tbaa !49
  %cmp.i.7 = icmp sgt i64 %i.0100.i.7, %s
  br i1 %cmp.i.7, label %for.body.i, label %cleanup

if.else.i:                                        ; preds = %if.then.i
  br i1 %cmp98.i, label %for.body9.i.preheader, label %cleanup

for.body9.i.preheader:                            ; preds = %if.else.i
  %13 = add i64 %e, -1
  %14 = sub i64 %13, %s
  %xtraiter251 = and i64 %sub, 7
  %lcmp.mod252 = icmp eq i64 %xtraiter251, 0
  br i1 %lcmp.mod252, label %for.body9.i.prol.loopexit, label %for.body9.i.prol.preheader

for.body9.i.prol.preheader:                       ; preds = %for.body9.i.preheader
  br label %for.body9.i.prol

for.body9.i.prol:                                 ; preds = %for.body9.i.prol.preheader, %for.body9.i.prol
  %i5.0103.i.prol = phi i64 [ %inc.i.prol, %for.body9.i.prol ], [ %s, %for.body9.i.prol.preheader ]
  %r.1102.i.prol = phi i64 [ %add.i76.i.prol, %for.body9.i.prol ], [ %zero, %for.body9.i.prol.preheader ]
  %prol.iter253 = phi i64 [ %prol.iter253.sub, %for.body9.i.prol ], [ %xtraiter251, %for.body9.i.prol.preheader ]
  %arrayidx.i78.i.prol = getelementptr inbounds i64, i64* %g.coerce, i64 %i5.0103.i.prol
  %15 = load i64, i64* %arrayidx.i78.i.prol, align 8, !tbaa !49
  %add.i76.i.prol = add nsw i64 %15, %r.1102.i.prol
  %arrayidx13.i.prol = getelementptr inbounds i64, i64* %Out, i64 %i5.0103.i.prol
  store i64 %add.i76.i.prol, i64* %arrayidx13.i.prol, align 8, !tbaa !49
  %inc.i.prol = add nsw i64 %i5.0103.i.prol, 1
  %prol.iter253.sub = add nsw i64 %prol.iter253, -1
  %prol.iter253.cmp = icmp eq i64 %prol.iter253.sub, 0
  br i1 %prol.iter253.cmp, label %for.body9.i.prol.loopexit.loopexit, label %for.body9.i.prol, !llvm.loop !77

for.body9.i.prol.loopexit.loopexit:               ; preds = %for.body9.i.prol
  %16 = add i64 %xtraiter251, %s
  br label %for.body9.i.prol.loopexit

for.body9.i.prol.loopexit:                        ; preds = %for.body9.i.prol.loopexit.loopexit, %for.body9.i.preheader
  %add.i76.i.lcssa.unr = phi i64 [ undef, %for.body9.i.preheader ], [ %add.i76.i.prol, %for.body9.i.prol.loopexit.loopexit ]
  %i5.0103.i.unr = phi i64 [ %s, %for.body9.i.preheader ], [ %16, %for.body9.i.prol.loopexit.loopexit ]
  %r.1102.i.unr = phi i64 [ %zero, %for.body9.i.preheader ], [ %add.i76.i.prol, %for.body9.i.prol.loopexit.loopexit ]
  %17 = icmp ult i64 %14, 7
  br i1 %17, label %cleanup, label %for.body9.i.preheader331

for.body9.i.preheader331:                         ; preds = %for.body9.i.prol.loopexit
  br label %for.body9.i

for.body9.i:                                      ; preds = %for.body9.i.preheader331, %for.body9.i
  %i5.0103.i = phi i64 [ %inc.i.7, %for.body9.i ], [ %i5.0103.i.unr, %for.body9.i.preheader331 ]
  %r.1102.i = phi i64 [ %add.i76.i.7, %for.body9.i ], [ %r.1102.i.unr, %for.body9.i.preheader331 ]
  %arrayidx.i78.i = getelementptr inbounds i64, i64* %g.coerce, i64 %i5.0103.i
  %18 = load i64, i64* %arrayidx.i78.i, align 8, !tbaa !49
  %add.i76.i = add nsw i64 %18, %r.1102.i
  %arrayidx13.i = getelementptr inbounds i64, i64* %Out, i64 %i5.0103.i
  store i64 %add.i76.i, i64* %arrayidx13.i, align 8, !tbaa !49
  %inc.i = add nsw i64 %i5.0103.i, 1
  %arrayidx.i78.i.1 = getelementptr inbounds i64, i64* %g.coerce, i64 %inc.i
  %19 = load i64, i64* %arrayidx.i78.i.1, align 8, !tbaa !49
  %add.i76.i.1 = add nsw i64 %19, %add.i76.i
  %arrayidx13.i.1 = getelementptr inbounds i64, i64* %Out, i64 %inc.i
  store i64 %add.i76.i.1, i64* %arrayidx13.i.1, align 8, !tbaa !49
  %inc.i.1 = add nsw i64 %i5.0103.i, 2
  %arrayidx.i78.i.2 = getelementptr inbounds i64, i64* %g.coerce, i64 %inc.i.1
  %20 = load i64, i64* %arrayidx.i78.i.2, align 8, !tbaa !49
  %add.i76.i.2 = add nsw i64 %20, %add.i76.i.1
  %arrayidx13.i.2 = getelementptr inbounds i64, i64* %Out, i64 %inc.i.1
  store i64 %add.i76.i.2, i64* %arrayidx13.i.2, align 8, !tbaa !49
  %inc.i.2 = add nsw i64 %i5.0103.i, 3
  %arrayidx.i78.i.3 = getelementptr inbounds i64, i64* %g.coerce, i64 %inc.i.2
  %21 = load i64, i64* %arrayidx.i78.i.3, align 8, !tbaa !49
  %add.i76.i.3 = add nsw i64 %21, %add.i76.i.2
  %arrayidx13.i.3 = getelementptr inbounds i64, i64* %Out, i64 %inc.i.2
  store i64 %add.i76.i.3, i64* %arrayidx13.i.3, align 8, !tbaa !49
  %inc.i.3 = add nsw i64 %i5.0103.i, 4
  %arrayidx.i78.i.4 = getelementptr inbounds i64, i64* %g.coerce, i64 %inc.i.3
  %22 = load i64, i64* %arrayidx.i78.i.4, align 8, !tbaa !49
  %add.i76.i.4 = add nsw i64 %22, %add.i76.i.3
  %arrayidx13.i.4 = getelementptr inbounds i64, i64* %Out, i64 %inc.i.3
  store i64 %add.i76.i.4, i64* %arrayidx13.i.4, align 8, !tbaa !49
  %inc.i.4 = add nsw i64 %i5.0103.i, 5
  %arrayidx.i78.i.5 = getelementptr inbounds i64, i64* %g.coerce, i64 %inc.i.4
  %23 = load i64, i64* %arrayidx.i78.i.5, align 8, !tbaa !49
  %add.i76.i.5 = add nsw i64 %23, %add.i76.i.4
  %arrayidx13.i.5 = getelementptr inbounds i64, i64* %Out, i64 %inc.i.4
  store i64 %add.i76.i.5, i64* %arrayidx13.i.5, align 8, !tbaa !49
  %inc.i.5 = add nsw i64 %i5.0103.i, 6
  %arrayidx.i78.i.6 = getelementptr inbounds i64, i64* %g.coerce, i64 %inc.i.5
  %24 = load i64, i64* %arrayidx.i78.i.6, align 8, !tbaa !49
  %add.i76.i.6 = add nsw i64 %24, %add.i76.i.5
  %arrayidx13.i.6 = getelementptr inbounds i64, i64* %Out, i64 %inc.i.5
  store i64 %add.i76.i.6, i64* %arrayidx13.i.6, align 8, !tbaa !49
  %inc.i.6 = add nsw i64 %i5.0103.i, 7
  %arrayidx.i78.i.7 = getelementptr inbounds i64, i64* %g.coerce, i64 %inc.i.6
  %25 = load i64, i64* %arrayidx.i78.i.7, align 8, !tbaa !49
  %add.i76.i.7 = add nsw i64 %25, %add.i76.i.6
  %arrayidx13.i.7 = getelementptr inbounds i64, i64* %Out, i64 %inc.i.6
  store i64 %add.i76.i.7, i64* %arrayidx13.i.7, align 8, !tbaa !49
  %inc.i.7 = add nsw i64 %i5.0103.i, 8
  %exitcond.i.7 = icmp eq i64 %inc.i.7, %e
  br i1 %exitcond.i.7, label %cleanup, label %for.body9.i

if.else16.i:                                      ; preds = %if.then
  br i1 %back, label %if.then18.i, label %if.else31.i

if.then18.i:                                      ; preds = %if.else16.i
  br i1 %cmp98.i, label %for.body24.i.preheader, label %cleanup

for.body24.i.preheader:                           ; preds = %if.then18.i
  %26 = add i64 %e, -1
  %27 = sub i64 %26, %s
  %xtraiter254 = and i64 %sub, 7
  %lcmp.mod255 = icmp eq i64 %xtraiter254, 0
  br i1 %lcmp.mod255, label %for.body24.i.prol.loopexit, label %for.body24.i.prol.preheader

for.body24.i.prol.preheader:                      ; preds = %for.body24.i.preheader
  br label %for.body24.i.prol

for.body24.i.prol:                                ; preds = %for.body24.i.prol.preheader, %for.body24.i.prol
  %i19.0108.in.i.prol = phi i64 [ %i19.0108.i.prol, %for.body24.i.prol ], [ %e, %for.body24.i.prol.preheader ]
  %r.2107.i.prol = phi i64 [ %add.i73.i.prol, %for.body24.i.prol ], [ %zero, %for.body24.i.prol.preheader ]
  %prol.iter256 = phi i64 [ %prol.iter256.sub, %for.body24.i.prol ], [ %xtraiter254, %for.body24.i.prol.preheader ]
  %i19.0108.i.prol = add nsw i64 %i19.0108.in.i.prol, -1
  %arrayidx.i75.i.prol = getelementptr inbounds i64, i64* %g.coerce, i64 %i19.0108.i.prol
  %28 = load i64, i64* %arrayidx.i75.i.prol, align 8, !tbaa !49
  %arrayidx26.i.prol = getelementptr inbounds i64, i64* %Out, i64 %i19.0108.i.prol
  store i64 %r.2107.i.prol, i64* %arrayidx26.i.prol, align 8, !tbaa !49
  %add.i73.i.prol = add nsw i64 %28, %r.2107.i.prol
  %prol.iter256.sub = add nsw i64 %prol.iter256, -1
  %prol.iter256.cmp = icmp eq i64 %prol.iter256.sub, 0
  br i1 %prol.iter256.cmp, label %for.body24.i.prol.loopexit.loopexit, label %for.body24.i.prol, !llvm.loop !78

for.body24.i.prol.loopexit.loopexit:              ; preds = %for.body24.i.prol
  %29 = sub i64 %e, %xtraiter254
  br label %for.body24.i.prol.loopexit

for.body24.i.prol.loopexit:                       ; preds = %for.body24.i.prol.loopexit.loopexit, %for.body24.i.preheader
  %i19.0108.in.i.unr = phi i64 [ %e, %for.body24.i.preheader ], [ %29, %for.body24.i.prol.loopexit.loopexit ]
  %r.2107.i.unr = phi i64 [ %zero, %for.body24.i.preheader ], [ %add.i73.i.prol, %for.body24.i.prol.loopexit.loopexit ]
  %add.i73.i.lcssa.unr = phi i64 [ undef, %for.body24.i.preheader ], [ %add.i73.i.prol, %for.body24.i.prol.loopexit.loopexit ]
  %30 = icmp ult i64 %27, 7
  br i1 %30, label %cleanup, label %for.body24.i.preheader333

for.body24.i.preheader333:                        ; preds = %for.body24.i.prol.loopexit
  br label %for.body24.i

for.body24.i:                                     ; preds = %for.body24.i.preheader333, %for.body24.i
  %i19.0108.in.i = phi i64 [ %i19.0108.i.7, %for.body24.i ], [ %i19.0108.in.i.unr, %for.body24.i.preheader333 ]
  %r.2107.i = phi i64 [ %add.i73.i.7, %for.body24.i ], [ %r.2107.i.unr, %for.body24.i.preheader333 ]
  %i19.0108.i = add nsw i64 %i19.0108.in.i, -1
  %arrayidx.i75.i = getelementptr inbounds i64, i64* %g.coerce, i64 %i19.0108.i
  %31 = load i64, i64* %arrayidx.i75.i, align 8, !tbaa !49
  %arrayidx26.i = getelementptr inbounds i64, i64* %Out, i64 %i19.0108.i
  store i64 %r.2107.i, i64* %arrayidx26.i, align 8, !tbaa !49
  %add.i73.i = add nsw i64 %31, %r.2107.i
  %i19.0108.i.1 = add nsw i64 %i19.0108.in.i, -2
  %arrayidx.i75.i.1 = getelementptr inbounds i64, i64* %g.coerce, i64 %i19.0108.i.1
  %32 = load i64, i64* %arrayidx.i75.i.1, align 8, !tbaa !49
  %arrayidx26.i.1 = getelementptr inbounds i64, i64* %Out, i64 %i19.0108.i.1
  store i64 %add.i73.i, i64* %arrayidx26.i.1, align 8, !tbaa !49
  %add.i73.i.1 = add nsw i64 %32, %add.i73.i
  %i19.0108.i.2 = add nsw i64 %i19.0108.in.i, -3
  %arrayidx.i75.i.2 = getelementptr inbounds i64, i64* %g.coerce, i64 %i19.0108.i.2
  %33 = load i64, i64* %arrayidx.i75.i.2, align 8, !tbaa !49
  %arrayidx26.i.2 = getelementptr inbounds i64, i64* %Out, i64 %i19.0108.i.2
  store i64 %add.i73.i.1, i64* %arrayidx26.i.2, align 8, !tbaa !49
  %add.i73.i.2 = add nsw i64 %33, %add.i73.i.1
  %i19.0108.i.3 = add nsw i64 %i19.0108.in.i, -4
  %arrayidx.i75.i.3 = getelementptr inbounds i64, i64* %g.coerce, i64 %i19.0108.i.3
  %34 = load i64, i64* %arrayidx.i75.i.3, align 8, !tbaa !49
  %arrayidx26.i.3 = getelementptr inbounds i64, i64* %Out, i64 %i19.0108.i.3
  store i64 %add.i73.i.2, i64* %arrayidx26.i.3, align 8, !tbaa !49
  %add.i73.i.3 = add nsw i64 %34, %add.i73.i.2
  %i19.0108.i.4 = add nsw i64 %i19.0108.in.i, -5
  %arrayidx.i75.i.4 = getelementptr inbounds i64, i64* %g.coerce, i64 %i19.0108.i.4
  %35 = load i64, i64* %arrayidx.i75.i.4, align 8, !tbaa !49
  %arrayidx26.i.4 = getelementptr inbounds i64, i64* %Out, i64 %i19.0108.i.4
  store i64 %add.i73.i.3, i64* %arrayidx26.i.4, align 8, !tbaa !49
  %add.i73.i.4 = add nsw i64 %35, %add.i73.i.3
  %i19.0108.i.5 = add nsw i64 %i19.0108.in.i, -6
  %arrayidx.i75.i.5 = getelementptr inbounds i64, i64* %g.coerce, i64 %i19.0108.i.5
  %36 = load i64, i64* %arrayidx.i75.i.5, align 8, !tbaa !49
  %arrayidx26.i.5 = getelementptr inbounds i64, i64* %Out, i64 %i19.0108.i.5
  store i64 %add.i73.i.4, i64* %arrayidx26.i.5, align 8, !tbaa !49
  %add.i73.i.5 = add nsw i64 %36, %add.i73.i.4
  %i19.0108.i.6 = add nsw i64 %i19.0108.in.i, -7
  %arrayidx.i75.i.6 = getelementptr inbounds i64, i64* %g.coerce, i64 %i19.0108.i.6
  %37 = load i64, i64* %arrayidx.i75.i.6, align 8, !tbaa !49
  %arrayidx26.i.6 = getelementptr inbounds i64, i64* %Out, i64 %i19.0108.i.6
  store i64 %add.i73.i.5, i64* %arrayidx26.i.6, align 8, !tbaa !49
  %add.i73.i.6 = add nsw i64 %37, %add.i73.i.5
  %i19.0108.i.7 = add nsw i64 %i19.0108.in.i, -8
  %arrayidx.i75.i.7 = getelementptr inbounds i64, i64* %g.coerce, i64 %i19.0108.i.7
  %38 = load i64, i64* %arrayidx.i75.i.7, align 8, !tbaa !49
  %arrayidx26.i.7 = getelementptr inbounds i64, i64* %Out, i64 %i19.0108.i.7
  store i64 %add.i73.i.6, i64* %arrayidx26.i.7, align 8, !tbaa !49
  %add.i73.i.7 = add nsw i64 %38, %add.i73.i.6
  %cmp22.i.7 = icmp sgt i64 %i19.0108.i.7, %s
  br i1 %cmp22.i.7, label %for.body24.i, label %cleanup

if.else31.i:                                      ; preds = %if.else16.i
  br i1 %cmp98.i, label %for.body36.i.preheader, label %cleanup

for.body36.i.preheader:                           ; preds = %if.else31.i
  %39 = add i64 %e, -1
  %40 = sub i64 %39, %s
  %xtraiter257 = and i64 %sub, 7
  %lcmp.mod258 = icmp eq i64 %xtraiter257, 0
  br i1 %lcmp.mod258, label %for.body36.i.prol.loopexit, label %for.body36.i.prol.preheader

for.body36.i.prol.preheader:                      ; preds = %for.body36.i.preheader
  br label %for.body36.i.prol

for.body36.i.prol:                                ; preds = %for.body36.i.prol.preheader, %for.body36.i.prol
  %i32.0112.i.prol = phi i64 [ %inc42.i.prol, %for.body36.i.prol ], [ %s, %for.body36.i.prol.preheader ]
  %r.3111.i.prol = phi i64 [ %add.i.i.prol, %for.body36.i.prol ], [ %zero, %for.body36.i.prol.preheader ]
  %prol.iter259 = phi i64 [ %prol.iter259.sub, %for.body36.i.prol ], [ %xtraiter257, %for.body36.i.prol.preheader ]
  %arrayidx.i72.i.prol = getelementptr inbounds i64, i64* %g.coerce, i64 %i32.0112.i.prol
  %41 = load i64, i64* %arrayidx.i72.i.prol, align 8, !tbaa !49
  %arrayidx39.i.prol = getelementptr inbounds i64, i64* %Out, i64 %i32.0112.i.prol
  store i64 %r.3111.i.prol, i64* %arrayidx39.i.prol, align 8, !tbaa !49
  %add.i.i.prol = add nsw i64 %41, %r.3111.i.prol
  %inc42.i.prol = add nsw i64 %i32.0112.i.prol, 1
  %prol.iter259.sub = add nsw i64 %prol.iter259, -1
  %prol.iter259.cmp = icmp eq i64 %prol.iter259.sub, 0
  br i1 %prol.iter259.cmp, label %for.body36.i.prol.loopexit.loopexit, label %for.body36.i.prol, !llvm.loop !79

for.body36.i.prol.loopexit.loopexit:              ; preds = %for.body36.i.prol
  %42 = add i64 %xtraiter257, %s
  br label %for.body36.i.prol.loopexit

for.body36.i.prol.loopexit:                       ; preds = %for.body36.i.prol.loopexit.loopexit, %for.body36.i.preheader
  %add.i.i.lcssa.unr = phi i64 [ undef, %for.body36.i.preheader ], [ %add.i.i.prol, %for.body36.i.prol.loopexit.loopexit ]
  %i32.0112.i.unr = phi i64 [ %s, %for.body36.i.preheader ], [ %42, %for.body36.i.prol.loopexit.loopexit ]
  %r.3111.i.unr = phi i64 [ %zero, %for.body36.i.preheader ], [ %add.i.i.prol, %for.body36.i.prol.loopexit.loopexit ]
  %43 = icmp ult i64 %40, 7
  br i1 %43, label %cleanup, label %for.body36.i.preheader335

for.body36.i.preheader335:                        ; preds = %for.body36.i.prol.loopexit
  br label %for.body36.i

for.body36.i:                                     ; preds = %for.body36.i.preheader335, %for.body36.i
  %i32.0112.i = phi i64 [ %inc42.i.7, %for.body36.i ], [ %i32.0112.i.unr, %for.body36.i.preheader335 ]
  %r.3111.i = phi i64 [ %add.i.i.7, %for.body36.i ], [ %r.3111.i.unr, %for.body36.i.preheader335 ]
  %arrayidx.i72.i = getelementptr inbounds i64, i64* %g.coerce, i64 %i32.0112.i
  %44 = load i64, i64* %arrayidx.i72.i, align 8, !tbaa !49
  %arrayidx39.i = getelementptr inbounds i64, i64* %Out, i64 %i32.0112.i
  store i64 %r.3111.i, i64* %arrayidx39.i, align 8, !tbaa !49
  %add.i.i = add nsw i64 %44, %r.3111.i
  %inc42.i = add nsw i64 %i32.0112.i, 1
  %arrayidx.i72.i.1 = getelementptr inbounds i64, i64* %g.coerce, i64 %inc42.i
  %45 = load i64, i64* %arrayidx.i72.i.1, align 8, !tbaa !49
  %arrayidx39.i.1 = getelementptr inbounds i64, i64* %Out, i64 %inc42.i
  store i64 %add.i.i, i64* %arrayidx39.i.1, align 8, !tbaa !49
  %add.i.i.1 = add nsw i64 %45, %add.i.i
  %inc42.i.1 = add nsw i64 %i32.0112.i, 2
  %arrayidx.i72.i.2 = getelementptr inbounds i64, i64* %g.coerce, i64 %inc42.i.1
  %46 = load i64, i64* %arrayidx.i72.i.2, align 8, !tbaa !49
  %arrayidx39.i.2 = getelementptr inbounds i64, i64* %Out, i64 %inc42.i.1
  store i64 %add.i.i.1, i64* %arrayidx39.i.2, align 8, !tbaa !49
  %add.i.i.2 = add nsw i64 %46, %add.i.i.1
  %inc42.i.2 = add nsw i64 %i32.0112.i, 3
  %arrayidx.i72.i.3 = getelementptr inbounds i64, i64* %g.coerce, i64 %inc42.i.2
  %47 = load i64, i64* %arrayidx.i72.i.3, align 8, !tbaa !49
  %arrayidx39.i.3 = getelementptr inbounds i64, i64* %Out, i64 %inc42.i.2
  store i64 %add.i.i.2, i64* %arrayidx39.i.3, align 8, !tbaa !49
  %add.i.i.3 = add nsw i64 %47, %add.i.i.2
  %inc42.i.3 = add nsw i64 %i32.0112.i, 4
  %arrayidx.i72.i.4 = getelementptr inbounds i64, i64* %g.coerce, i64 %inc42.i.3
  %48 = load i64, i64* %arrayidx.i72.i.4, align 8, !tbaa !49
  %arrayidx39.i.4 = getelementptr inbounds i64, i64* %Out, i64 %inc42.i.3
  store i64 %add.i.i.3, i64* %arrayidx39.i.4, align 8, !tbaa !49
  %add.i.i.4 = add nsw i64 %48, %add.i.i.3
  %inc42.i.4 = add nsw i64 %i32.0112.i, 5
  %arrayidx.i72.i.5 = getelementptr inbounds i64, i64* %g.coerce, i64 %inc42.i.4
  %49 = load i64, i64* %arrayidx.i72.i.5, align 8, !tbaa !49
  %arrayidx39.i.5 = getelementptr inbounds i64, i64* %Out, i64 %inc42.i.4
  store i64 %add.i.i.4, i64* %arrayidx39.i.5, align 8, !tbaa !49
  %add.i.i.5 = add nsw i64 %49, %add.i.i.4
  %inc42.i.5 = add nsw i64 %i32.0112.i, 6
  %arrayidx.i72.i.6 = getelementptr inbounds i64, i64* %g.coerce, i64 %inc42.i.5
  %50 = load i64, i64* %arrayidx.i72.i.6, align 8, !tbaa !49
  %arrayidx39.i.6 = getelementptr inbounds i64, i64* %Out, i64 %inc42.i.5
  store i64 %add.i.i.5, i64* %arrayidx39.i.6, align 8, !tbaa !49
  %add.i.i.6 = add nsw i64 %50, %add.i.i.5
  %inc42.i.6 = add nsw i64 %i32.0112.i, 7
  %arrayidx.i72.i.7 = getelementptr inbounds i64, i64* %g.coerce, i64 %inc42.i.6
  %51 = load i64, i64* %arrayidx.i72.i.7, align 8, !tbaa !49
  %arrayidx39.i.7 = getelementptr inbounds i64, i64* %Out, i64 %inc42.i.6
  store i64 %add.i.i.6, i64* %arrayidx39.i.7, align 8, !tbaa !49
  %add.i.i.7 = add nsw i64 %51, %add.i.i.6
  %inc42.i.7 = add nsw i64 %i32.0112.i, 8
  %exitcond117.i.7 = icmp eq i64 %inc42.i.7, %e
  br i1 %exitcond117.i.7, label %cleanup, label %for.body36.i

pfor.detach.lr.ph:                                ; preds = %entry
  %52 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8317 = shl i32 %52, 3
  %mul = shl nsw i64 %add, 3
  %call9 = tail call noalias i8* @malloc(i64 %mul) #2
  %53 = bitcast i8* %call9 to i64*
  %54 = sub i64 -2, %s
  %55 = sub i64 -1025, %s
  %56 = xor i64 %e, -1
  %57 = icmp sgt i64 %div, 0
  %smax313 = select i1 %57, i64 %div, i64 0
  %58 = zext i32 %__cilkrts_wc8317 to i64
  %59 = add nsw i64 %smax313, -1
  %60 = add nsw i64 %59, %58
  %61 = udiv i64 %60, %58
  %62 = icmp ult i64 %61, 2048
  %63 = select i1 %62, i64 %61, i64 2048
  tail call fastcc void @_ZN8sequence4scanIllN5utils4addFIlEENS_4getAIllEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach.ls(i64 0, i64 %smax313, i64 %63, i64 %54, i64 %55, i64 %56, i64 %s, i64 %e, i64* %g.coerce, i64* %53)
  %call35 = tail call i64 @_ZN8sequence4scanIllN5utils4addFIlEENS_4getAIllEEEET_PS6_T0_S8_T1_T2_S6_bb(i64* %53, i64 0, i64 %add, i64* %53, i64 %zero, i1 zeroext false, i1 zeroext %back)
  %64 = xor i64 %s, -1
  br i1 %inclusive, label %pfor.detach55.us.preheader, label %pfor.detach55.preheader

pfor.detach55.preheader:                          ; preds = %pfor.detach.lr.ph
  tail call fastcc void @_ZN8sequence4scanIllN5utils4addFIlEENS_4getAIllEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.ls(i64 0, i64 %smax313, i64 %63, i64 %55, i64 %56, i64 %64, i64 %54, i64 %s, i64 %e, i64* %53, i1 %back, i64* %g.coerce, i64* %Out)
  br label %sync.continue78

pfor.detach55.us.preheader:                       ; preds = %pfor.detach.lr.ph
  tail call fastcc void @_ZN8sequence4scanIllN5utils4addFIlEENS_4getAIllEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.us.ls(i64 0, i64 %smax313, i64 %63, i64 %55, i64 %56, i64 %64, i64 %54, i64 %s, i64 %e, i64* %53, i1 %back, i64* %g.coerce, i64* %Out)
  br label %sync.continue78

sync.continue78:                                  ; preds = %pfor.detach55.us.preheader, %pfor.detach55.preheader
  tail call void @free(i8* %call9) #2
  br label %cleanup

cleanup:                                          ; preds = %for.body36.i, %for.body24.i, %for.body9.i, %for.body.i, %for.body36.i.prol.loopexit, %for.body24.i.prol.loopexit, %for.body9.i.prol.loopexit, %for.body.i.prol.loopexit, %if.else31.i, %if.then18.i, %if.else.i, %if.then3.i, %sync.continue78
  %retval.0 = phi i64 [ %call35, %sync.continue78 ], [ %zero, %if.then3.i ], [ %zero, %if.else.i ], [ %zero, %if.then18.i ], [ %zero, %if.else31.i ], [ %add.i79.i.lcssa.unr, %for.body.i.prol.loopexit ], [ %add.i76.i.lcssa.unr, %for.body9.i.prol.loopexit ], [ %add.i73.i.lcssa.unr, %for.body24.i.prol.loopexit ], [ %add.i.i.lcssa.unr, %for.body36.i.prol.loopexit ], [ %add.i79.i.7, %for.body.i ], [ %add.i76.i.7, %for.body9.i ], [ %add.i73.i.7, %for.body24.i ], [ %add.i.i.7, %for.body36.i ]
  ret i64 %retval.0
}

declare %"class.std::basic_filebuf"* @_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv(%"class.std::basic_filebuf"*) local_unnamed_addr #0

; Function Attrs: nounwind
declare void @_ZNSt12__basic_fileIcED1Ev(%"class.std::__basic_file"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt6localeD1Ev(%"class.std::locale"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_baseD2Ev(%"class.std::ios_base"*) unnamed_addr #1

; Function Attrs: nounwind readonly
declare zeroext i1 @_ZNKSt12__basic_fileIcE7is_openEv(%"class.std::__basic_file"*) local_unnamed_addr #11

; Function Attrs: nounwind
declare i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define linkonce_odr void @_Z3ANNILi1E6vertexI8_point2dIdELi1EEEvPPT0_ii(%struct.vertex** %v, i32 %n, i32 %k) local_unnamed_addr #7 comdat {
entry:
  %call.i = tail call %class.gTreeNode* @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE5gTreeEPPS5_i(%struct.vertex** %v, i32 %n) #2
  %count.i.i = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %call.i, i64 0, i32 3
  %0 = load i32, i32* %count.i.i, align 4, !tbaa !80
  %1 = sext i32 %0 to i64
  %2 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %1, i64 8) #2
  %3 = extractvalue { i64, i1 } %2, 1
  %4 = extractvalue { i64, i1 } %2, 0
  %5 = select i1 %3, i64 -1, i64 %4
  %call.i.i = tail call i8* @_Znam(i64 %5) #22
  %6 = bitcast i8* %call.i.i to %struct.vertex**
  tail call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT_(%class.gTreeNode* %call.i, i32 0, %struct.vertex** nonnull %6) #2
  %cmp24 = icmp sgt i32 %n, 0
  br i1 %cmp24, label %pfor.detach.lr.ph, label %sync.continue

pfor.detach.lr.ph:                                ; preds = %entry
  %cmp.i.i = icmp sgt i32 %k, 1
  %7 = zext i32 %k to i64
  %8 = shl nuw nsw i64 %7, 3
  br i1 %cmp.i.i, label %pfor.detach.lr.ph.split.us, label %pfor.detach.lr.ph.split

pfor.detach.lr.ph.split.us:                       ; preds = %pfor.detach.lr.ph
  %call.i.i17 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.26, i64 0, i64 0)) #2
  %call.i.i.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call.i.i17) #2
  tail call void @abort() #21
  unreachable

pfor.detach.lr.ph.split:                          ; preds = %pfor.detach.lr.ph
  %cmp515.i.i = icmp eq i32 %k, 1
  %wide.trip.count = zext i32 %n to i64
  br i1 %cmp515.i.i, label %pfor.detach.lr.ph.split.split.us, label %pfor.detach.preheader

pfor.detach.preheader:                            ; preds = %pfor.detach.lr.ph.split
  %9 = add nsw i64 %wide.trip.count, -1
  tail call fastcc void @_Z3ANNILi1E6vertexI8_point2dIdELi1EEEvPPT0_ii_pfor.detach.ls(i64 0, i64 %9, %struct.vertex** nonnull %6, i32 %k, %class.gTreeNode* %call.i)
  br label %sync.continue

pfor.detach.lr.ph.split.split.us:                 ; preds = %pfor.detach.lr.ph.split
  %10 = add nsw i64 %7, -1
  %xtraiter84 = and i64 %7, 7
  %lcmp.mod85 = icmp eq i64 %xtraiter84, 0
  %11 = add nsw i64 %wide.trip.count, -1
  tail call fastcc void @_Z3ANNILi1E6vertexI8_point2dIdELi1EEEvPPT0_ii_pfor.detach.us26.ls(i64 0, i64 %11, %struct.vertex** nonnull %6, %class.gTreeNode* %call.i, i64 %8, i64 %10, i1 %lcmp.mod85, i64 %xtraiter84, i64 %7)
  br label %sync.continue

sync.continue:                                    ; preds = %entry, %pfor.detach.lr.ph.split.split.us, %pfor.detach.preheader
  tail call void @free(i8* nonnull %call.i.i) #2
  %12 = bitcast %class.gTreeNode* %call.i to %class.gTreeNode.18*
  tail call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE3delEv(%class.gTreeNode.18* %12) #2
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN5timer7reportTEd(%struct.timer* %this, double %time) local_unnamed_addr #7 comdat align 2 {
entry:
  %call1.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27, i64 0, i64 0), i64 11) #2
  %vtable.i = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !32
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %0 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %0, align 8
  %add.ptr.i = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i
  %_M_precision.i.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 8
  %1 = bitcast i8* %_M_precision.i.i to i64*
  store i64 3, i64* %1, align 8, !tbaa !84
  %call.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* nonnull @_ZSt4cout, double %time) #2
  %2 = bitcast %"class.std::basic_ostream"* %call.i to i8**
  %vtable.i7 = load i8*, i8** %2, align 8, !tbaa !32
  %vbase.offset.ptr.i8 = getelementptr i8, i8* %vtable.i7, i64 -24
  %3 = bitcast i8* %vbase.offset.ptr.i8 to i64*
  %vbase.offset.i9 = load i64, i64* %3, align 8
  %4 = bitcast %"class.std::basic_ostream"* %call.i to i8*
  %add.ptr.i10 = getelementptr inbounds i8, i8* %4, i64 %vbase.offset.i9
  %_M_ctype.i.i = getelementptr inbounds i8, i8* %add.ptr.i10, i64 240
  %5 = bitcast i8* %_M_ctype.i.i to %"class.std::ctype"**
  %6 = load %"class.std::ctype"*, %"class.std::ctype"** %5, align 8, !tbaa !41
  %tobool.i.i.i = icmp eq %"class.std::ctype"* %6, null
  br i1 %tobool.i.i.i, label %if.then.i.i.i, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i

if.then.i.i.i:                                    ; preds = %entry
  tail call void @_ZSt16__throw_bad_castv() #21
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i: ; preds = %entry
  %_M_widen_ok.i.i.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %6, i64 0, i32 8
  %7 = load i8, i8* %_M_widen_ok.i.i.i, align 8, !tbaa !43
  %tobool.i3.i.i = icmp eq i8 %7, 0
  br i1 %tobool.i3.i.i, label %if.end.i.i.i, label %if.then.i4.i.i

if.then.i4.i.i:                                   ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  %arrayidx.i.i.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %6, i64 0, i32 9, i64 10
  %8 = load i8, i8* %arrayidx.i.i.i, align 1, !tbaa !22
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit

if.end.i.i.i:                                     ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull %6) #2
  %9 = bitcast %"class.std::ctype"* %6 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %9, align 8, !tbaa !32
  %vfn.i.i.i = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i, i64 6
  %10 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i, align 8
  %call.i.i.i = tail call signext i8 %10(%"class.std::ctype"* nonnull %6, i8 signext 10) #2
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit

_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit: ; preds = %if.then.i4.i.i, %if.end.i.i.i
  %retval.0.i.i.i = phi i8 [ %8, %if.then.i4.i.i ], [ %call.i.i.i, %if.end.i.i.i ]
  %call1.i11 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull %call.i, i8 signext %retval.0.i.i.i) #2
  %call.i.i12 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull %call1.i11) #2
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr i32 @_ZN7benchIO19writeIntArrayToFileIiEET_PS1_lPc(i32* %A, i64 %n, i8* %fileName) local_unnamed_addr #7 comdat {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %0 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %1 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp to %union.anon.1**
  store %union.anon.1* %0, %union.anon.1** %1, align 8, !tbaa !47
  %2 = load i8*, i8** getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN7benchIO11intHeaderIOB5cxx11E, i64 0, i32 0, i32 0), align 8, !tbaa !50
  %3 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN7benchIO11intHeaderIOB5cxx11E, i64 0, i32 1), align 8, !tbaa !52
  %cmp.i.i.i.i.i = icmp ne i8* %2, null
  %cmp.i.i.i.i = icmp eq i64 %3, 0
  %or.cond.i.i.i.i = or i1 %cmp.i.i.i.i.i, %cmp.i.i.i.i
  %4 = bitcast %union.anon.1* %0 to i8*
  br i1 %or.cond.i.i.i.i, label %if.end.i.i.i.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %entry
  call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.20, i64 0, i64 0)) #21
  unreachable

if.end.i.i.i.i:                                   ; preds = %entry
  %5 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #2
  store i64 %3, i64* %__dnew.i.i.i.i, align 8, !tbaa !49
  %cmp3.i.i.i.i = icmp ugt i64 %3, 15
  br i1 %cmp3.i.i.i.i, label %if.then4.i.i.i.i, label %if.end.if.end6_crit_edge.i.i.i.i

if.end.if.end6_crit_edge.i.i.i.i:                 ; preds = %if.end.i.i.i.i
  %_M_p.i.phi.trans.insert.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  br label %if.end6.i.i.i.i

if.then4.i.i.i.i:                                 ; preds = %if.end.i.i.i.i
  %call5.i.i.i.i = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i, i64 0) #2
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i.i, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !50
  %6 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !49
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2, i32 0
  store i64 %6, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !22
  br label %if.end6.i.i.i.i

if.end6.i.i.i.i:                                  ; preds = %if.then4.i.i.i.i, %if.end.if.end6_crit_edge.i.i.i.i
  %_M_p.i.pre-phi.i.i.i.i = phi i8** [ %_M_p.i.phi.trans.insert.i.i.i.i, %if.end.if.end6_crit_edge.i.i.i.i ], [ %_M_p.i13.i.i.i.i, %if.then4.i.i.i.i ]
  %7 = phi i8* [ %4, %if.end.if.end6_crit_edge.i.i.i.i ], [ %call5.i.i.i.i, %if.then4.i.i.i.i ]
  switch i64 %3, label %if.end.i.i.i.i.i.i.i [
    i64 1, label %if.then.i.i.i.i.i.i
    i64 0, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
  ]

if.then.i.i.i.i.i.i:                              ; preds = %if.end6.i.i.i.i
  %8 = load i8, i8* %2, align 1, !tbaa !22
  store i8 %8, i8* %7, align 1, !tbaa !22
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit

if.end.i.i.i.i.i.i.i:                             ; preds = %if.end6.i.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %2, i64 %3, i32 1, i1 false) #2
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit: ; preds = %if.end6.i.i.i.i, %if.then.i.i.i.i.i.i, %if.end.i.i.i.i.i.i.i
  %9 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !49
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 1
  store i64 %9, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !52
  %10 = load i8*, i8** %_M_p.i.pre-phi.i.i.i.i, align 8, !tbaa !50
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %10, i64 %9
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #2
  %call = call i32 @_ZN7benchIO16writeArrayToFileIiEEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_lPc(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp, i32* %A, i64 %n, i8* %fileName)
  %_M_p.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  %11 = load i8*, i8** %_M_p.i.i.i.i, align 8, !tbaa !50
  %cmp.i.i.i = icmp eq i8* %11, %4
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
  call void @_ZdlPv(i8* %11) #2
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit, %if.then.i.i
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define linkonce_odr %class.gTreeNode* @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE5gTreeEPPS5_i(%struct.vertex** %vv, i32 %n) local_unnamed_addr #7 comdat align 2 {
entry:
  %minMaxPair = alloca %"struct.std::pair", align 16
  %0 = bitcast %"struct.std::pair"* %minMaxPair to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #2
  call void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_(%"struct.std::pair"* nonnull sret %minMaxPair, i32 0, i32 %n, %struct.vertex** %vv) #2
  %1 = bitcast %"struct.std::pair"* %minMaxPair to <2 x double>*
  %2 = load <2 x double>, <2 x double>* %1, align 16
  %maxPt.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %minMaxPair, i64 0, i32 1, i32 0
  %3 = bitcast double* %maxPt.sroa.0.0..sroa_idx to <2 x double>*
  %4 = load <2 x double>, <2 x double>* %3, align 16
  %5 = fsub fast <2 x double> %4, %2
  %6 = extractelement <2 x double> %5, i32 0
  %div.i = fmul fast double %6, 5.000000e-01
  %7 = extractelement <2 x double> %5, i32 1
  %div2.i = fmul fast double %7, 5.000000e-01
  %8 = extractelement <2 x double> %2, i32 0
  %add.i = fadd fast double %div.i, %8
  %9 = extractelement <2 x double> %2, i32 1
  %add4.i = fadd fast double %div2.i, %9
  %conv = sext i32 %n to i64
  %mul = shl nsw i64 %conv, 3
  %call6 = call noalias i8* @malloc(i64 %mul) #2
  %10 = bitcast i8* %call6 to %struct.vertex**
  %cmp55 = icmp sgt i32 %n, 0
  br i1 %cmp55, label %pfor.detach.lr.ph, label %sync.continue

pfor.detach.lr.ph:                                ; preds = %entry
  %11 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8 = shl i32 %11, 3
  %wide.trip.count = zext i32 %n to i64
  %12 = add nsw i64 %wide.trip.count, -1
  %13 = zext i32 %__cilkrts_wc8 to i64
  %14 = add nsw i64 %wide.trip.count, -2
  %15 = add nsw i64 %14, %13
  %16 = udiv i64 %15, %13
  %17 = icmp ult i64 %16, 2048
  %18 = select i1 %17, i64 %16, i64 2048
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE5gTreeEPPS5_i_pfor.detach.ls(i64 0, i64 %12, i64 %18, %struct.vertex** %vv, %struct.vertex** %10)
  br label %sync.continue

sync.continue:                                    ; preds = %entry, %pfor.detach.lr.ph
  %call12 = call i8* @_Znwm(i64 112) #22
  %19 = bitcast i8* %call12 to %class.gTreeNode*
  %cmp.i.i = fcmp fast olt double %6, %7
  %20 = select i1 %cmp.i.i, double %7, double %6
  call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i(%class.gTreeNode* nonnull %19, %struct.vertex** %10, i64 %conv, double %add.i, double %add4.i, double %20, %class.gTreeNode* null, i32 0)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #2
  ret %class.gTreeNode* %19
}

; Function Attrs: nobuiltin
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #14

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i(%class.gTreeNode* %this, %struct.vertex** %S.coerce0, i64 %S.coerce1, double %cnt.coerce0, double %cnt.coerce1, double %sz, %class.gTreeNode* %newNodes, i32 %numNewNodes) unnamed_addr #7 comdat align 2 {
entry:
  %offsets67 = alloca [8 x i32], align 16
  %cnt.i227 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %this, i64 0, i32 2, i32 0
  store i32 0, i32* %cnt.i227, align 4, !tbaa !85
  %conv = trunc i64 %S.coerce1 to i32
  %count = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %this, i64 0, i32 3
  store i32 %conv, i32* %count, align 4, !tbaa !80
  %size = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %this, i64 0, i32 1
  store double %sz, double* %size, align 8, !tbaa !86
  %cnt.sroa.0.0..sroa_idx = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %this, i64 0, i32 0, i32 0
  store double %cnt.coerce0, double* %cnt.sroa.0.0..sroa_idx, align 8
  %cnt.sroa.2.0..sroa_idx216 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %this, i64 0, i32 0, i32 1
  store double %cnt.coerce1, double* %cnt.sroa.2.0..sroa_idx216, align 8
  %vertices = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %this, i64 0, i32 5
  %nodeMemory = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %this, i64 0, i32 6
  %conv.i = sitofp i32 %conv to double
  %0 = tail call fast double @llvm.log2.f64(double %conv.i) #2
  %div = fmul fast double %0, 4.600000e-01
  %conv7 = fptosi double %div to i32
  %cmp = icmp sgt i32 %conv7, 1
  %cmp9 = icmp sgt i32 %conv, 65536
  %or.cond = and i1 %cmp9, %cmp
  %1 = bitcast %struct.vertex*** %vertices to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull %1, i8 0, i64 16, i32 8, i1 false)
  br i1 %or.cond, label %for.body.lr.ph, label %if.else

for.body.lr.ph:                                   ; preds = %entry
  %mul12 = shl nsw i32 %conv7, 1
  %shl13 = shl i32 1, %mul12
  %conv14 = sext i32 %shl13 to i64
  %mul15 = shl nsw i64 %conv14, 2
  %call16 = tail call noalias i8* @malloc(i64 %mul15) #2
  %2 = bitcast i8* %call16 to i32*
  tail call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi(%struct.vertex** %S.coerce0, i32 %conv, i32 %shl13, i32 %conv7, double %sz, double %cnt.coerce0, double %cnt.coerce1, i32* %2)
  %3 = add i32 %conv7, -1
  %xtraiter = and i32 %conv7, 7
  %4 = icmp ult i32 %3, 7
  br i1 %4, label %for.cond.cleanup.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = sub i32 %conv7, %xtraiter
  br label %for.body

for.cond.cleanup.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %add.lcssa.ph = phi i32 [ undef, %for.body.lr.ph ], [ %add.7, %for.body ]
  %numNewNodes.addr.0242.unr = phi i32 [ 4, %for.body.lr.ph ], [ %add.7, %for.body ]
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod, label %for.cond.cleanup, label %for.body.epil.preheader

for.body.epil.preheader:                          ; preds = %for.cond.cleanup.unr-lcssa
  br label %for.body.epil

for.body.epil:                                    ; preds = %for.body.epil.preheader, %for.body.epil
  %numNewNodes.addr.0242.epil = phi i32 [ %add.epil, %for.body.epil ], [ %numNewNodes.addr.0242.unr, %for.body.epil.preheader ]
  %epil.iter = phi i32 [ %epil.iter.sub, %for.body.epil ], [ %xtraiter, %for.body.epil.preheader ]
  %shl26.epil = shl i32 %numNewNodes.addr.0242.epil, 2
  %add.epil = add nsw i32 %shl26.epil, 4
  %epil.iter.sub = add nsw i32 %epil.iter, -1
  %epil.iter.cmp = icmp eq i32 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond.cleanup, label %for.body.epil, !llvm.loop !87

for.cond.cleanup:                                 ; preds = %for.body.epil, %for.cond.cleanup.unr-lcssa
  %add.lcssa = phi i32 [ %add.lcssa.ph, %for.cond.cleanup.unr-lcssa ], [ %add.epil, %for.body.epil ]
  %phitmp = sext i32 %add.lcssa to i64
  %phitmp252 = mul nsw i64 %phitmp, 112
  %call32 = tail call noalias i8* @malloc(i64 %phitmp252) #2
  %5 = bitcast i8* %call32 to %class.gTreeNode*
  %6 = bitcast %class.gTreeNode** %nodeMemory to i8**
  store i8* %call32, i8** %6, align 8, !tbaa !88
  tail call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii(%class.gTreeNode* %this, %struct.vertex** %S.coerce0, i64 %S.coerce1, i32* %2, i32 %shl13, %class.gTreeNode* %5, %class.gTreeNode* %this, i32 0, i32 %conv7, i32 1)
  tail call void @free(i8* %call16) #2
  br label %if.end164

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %numNewNodes.addr.0242 = phi i32 [ 4, %for.body.lr.ph.new ], [ %add.7, %for.body ]
  %niter = phi i32 [ %unroll_iter, %for.body.lr.ph.new ], [ %niter.nsub.7, %for.body ]
  %add.6 = shl i32 %numNewNodes.addr.0242, 16
  %add.7 = add i32 %add.6, 87380
  %niter.nsub.7 = add i32 %niter, -8
  %niter.ncmp.7 = icmp eq i32 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %for.cond.cleanup.unr-lcssa, label %for.body

if.else:                                          ; preds = %entry
  %cmp37 = icmp sgt i32 %conv, 16
  br i1 %cmp37, label %if.then38, label %if.else143

if.then38:                                        ; preds = %if.else
  %cmp42 = icmp slt i32 %numNewNodes, 4
  br i1 %cmp42, label %if.then43, label %cond.end.3

if.then43:                                        ; preds = %if.then38
  %call60 = tail call noalias i8* @malloc(i64 448) #2
  %7 = bitcast i8* %call60 to %class.gTreeNode*
  %8 = bitcast %class.gTreeNode** %nodeMemory to i8**
  store i8* %call60, i8** %8, align 8, !tbaa !88
  br label %cond.end.3

if.else143:                                       ; preds = %if.else
  store %struct.vertex** %S.coerce0, %struct.vertex*** %vertices, align 8, !tbaa !89
  %cmp149246 = icmp sgt i32 %conv, 0
  br i1 %cmp149246, label %for.body151.lr.ph, label %if.end164

for.body151.lr.ph:                                ; preds = %if.else143
  store i32 %conv, i32* %cnt.i227, align 4
  br label %if.end164

if.end164:                                        ; preds = %if.else143, %for.body151.lr.ph, %cond.end.3, %for.cond.cleanup
  ret void

cond.end.3:                                       ; preds = %if.then38, %if.then43
  %numNewNodes.addr.1 = phi i32 [ 4, %if.then43 ], [ %numNewNodes, %if.then38 ]
  %newNodes.addr.0 = phi %class.gTreeNode* [ %7, %if.then43 ], [ %newNodes, %if.then38 ]
  %9 = bitcast [8 x i32]* %offsets67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #2
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %offsets67, i64 0, i64 0
  call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE15sortBlocksSmallEPPS5_iS1_Pi(%struct.vertex** %S.coerce0, i32 %conv, double %cnt.coerce0, double %cnt.coerce1, i32* nonnull %arraydecay)
  %sub105 = add nsw i32 %numNewNodes.addr.1, -4
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %offsets67, i64 0, i64 1
  %10 = load i32, i32* %arrayidx, align 4, !tbaa !59
  %11 = load i32, i32* %arraydecay, align 16, !tbaa !59
  %conv86 = sub i32 %10, %11
  %idx.ext = sext i32 %11 to i64
  %add.ptr = getelementptr inbounds %struct.vertex*, %struct.vertex** %S.coerce0, i64 %idx.ext
  %conv91 = sext i32 %conv86 to i64
  %12 = load double, double* %size, align 8, !tbaa !86
  %div94 = fmul fast double %12, 2.500000e-01
  %13 = load double, double* %cnt.sroa.0.0..sroa_idx, align 8, !tbaa !90
  %add.i230 = fsub fast double %13, %div94
  %14 = load double, double* %cnt.sroa.2.0..sroa_idx216, align 8, !tbaa !91
  %add9.i = fsub fast double %14, %div94
  %div99 = fmul fast double %12, 5.000000e-01
  %mul106 = mul nsw i32 %conv86, %sub105
  %15 = load i32, i32* %count, align 4, !tbaa !80
  %div108 = sdiv i32 %mul106, %15
  %add109 = add nsw i32 %div108, 1
  %call110 = call %class.gTreeNode* @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i(%struct.vertex** %add.ptr, i64 %conv91, double %add.i230, double %add9.i, double %div99, %class.gTreeNode* %newNodes.addr.0, i32 %add109)
  %arrayidx112 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %this, i64 0, i32 4, i64 0
  store %class.gTreeNode* %call110, %class.gTreeNode** %arrayidx112, align 8, !tbaa !53
  %16 = load i32, i32* %count, align 4, !tbaa !80
  %div119 = sdiv i32 %mul106, %16
  %add121 = add i32 %div119, 1
  %arrayidx.1 = getelementptr inbounds [8 x i32], [8 x i32]* %offsets67, i64 0, i64 2
  %17 = load i32, i32* %arrayidx.1, align 8, !tbaa !59
  %18 = load i32, i32* %arrayidx, align 4, !tbaa !59
  %conv86.1 = sub i32 %17, %18
  %idx.ext.1 = sext i32 %18 to i64
  %add.ptr.1 = getelementptr inbounds %struct.vertex*, %struct.vertex** %S.coerce0, i64 %idx.ext.1
  %conv91.1 = sext i32 %conv86.1 to i64
  %19 = load double, double* %size, align 8, !tbaa !86
  %div94.1 = fmul fast double %19, 2.500000e-01
  %20 = load double, double* %cnt.sroa.0.0..sroa_idx, align 8, !tbaa !90
  %add.i230.1 = fadd fast double %div94.1, %20
  %21 = load double, double* %cnt.sroa.2.0..sroa_idx216, align 8, !tbaa !91
  %add9.i.1 = fsub fast double %21, %div94.1
  %div99.1 = fmul fast double %19, 5.000000e-01
  %idx.ext100.1 = sext i32 %add121 to i64
  %add.ptr101.1 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %newNodes.addr.0, i64 %idx.ext100.1
  %mul106.1 = mul nsw i32 %conv86.1, %sub105
  %div108.1 = sdiv i32 %mul106.1, %16
  %add109.1 = add nsw i32 %div108.1, 1
  %call110.1 = call %class.gTreeNode* @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i(%struct.vertex** %add.ptr.1, i64 %conv91.1, double %add.i230.1, double %add9.i.1, double %div99.1, %class.gTreeNode* %add.ptr101.1, i32 %add109.1)
  %arrayidx112.1 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %this, i64 0, i32 4, i64 1
  store %class.gTreeNode* %call110.1, %class.gTreeNode** %arrayidx112.1, align 8, !tbaa !53
  %22 = load i32, i32* %count, align 4, !tbaa !80
  %div119.1 = sdiv i32 %mul106.1, %22
  %add120.1 = add i32 %div119, 2
  %add121.1 = add i32 %add120.1, %div119.1
  %arrayidx.2 = getelementptr inbounds [8 x i32], [8 x i32]* %offsets67, i64 0, i64 3
  %23 = load i32, i32* %arrayidx.2, align 4, !tbaa !59
  %24 = load i32, i32* %arrayidx.1, align 8, !tbaa !59
  %conv86.2 = sub i32 %23, %24
  %idx.ext.2 = sext i32 %24 to i64
  %add.ptr.2 = getelementptr inbounds %struct.vertex*, %struct.vertex** %S.coerce0, i64 %idx.ext.2
  %conv91.2 = sext i32 %conv86.2 to i64
  %25 = load double, double* %size, align 8, !tbaa !86
  %div94.2 = fmul fast double %25, 2.500000e-01
  %26 = load double, double* %cnt.sroa.0.0..sroa_idx, align 8, !tbaa !90
  %add.i230.2 = fsub fast double %26, %div94.2
  %27 = load double, double* %cnt.sroa.2.0..sroa_idx216, align 8, !tbaa !91
  %add9.i.2 = fadd fast double %27, %div94.2
  %div99.2 = fmul fast double %25, 5.000000e-01
  %idx.ext100.2 = sext i32 %add121.1 to i64
  %add.ptr101.2 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %newNodes.addr.0, i64 %idx.ext100.2
  %mul106.2 = mul nsw i32 %conv86.2, %sub105
  %div108.2 = sdiv i32 %mul106.2, %22
  %add109.2 = add nsw i32 %div108.2, 1
  %call110.2 = call %class.gTreeNode* @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i(%struct.vertex** %add.ptr.2, i64 %conv91.2, double %add.i230.2, double %add9.i.2, double %div99.2, %class.gTreeNode* %add.ptr101.2, i32 %add109.2)
  %arrayidx112.2 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %this, i64 0, i32 4, i64 2
  store %class.gTreeNode* %call110.2, %class.gTreeNode** %arrayidx112.2, align 8, !tbaa !53
  %28 = load i32, i32* %count, align 4, !tbaa !80
  %div119.2 = sdiv i32 %mul106.2, %28
  %add120.2 = add i32 %add121.1, 1
  %add121.2 = add i32 %add120.2, %div119.2
  %29 = load i32, i32* %arrayidx.2, align 4, !tbaa !59
  %conv86.3 = sub i32 %conv, %29
  %idx.ext.3 = sext i32 %29 to i64
  %add.ptr.3 = getelementptr inbounds %struct.vertex*, %struct.vertex** %S.coerce0, i64 %idx.ext.3
  %conv91.3 = sext i32 %conv86.3 to i64
  %30 = load double, double* %size, align 8, !tbaa !86
  %div94.3 = fmul fast double %30, 2.500000e-01
  %31 = load double, double* %cnt.sroa.0.0..sroa_idx, align 8, !tbaa !90
  %add.i230.3 = fadd fast double %div94.3, %31
  %32 = load double, double* %cnt.sroa.2.0..sroa_idx216, align 8, !tbaa !91
  %add9.i.3 = fadd fast double %32, %div94.3
  %div99.3 = fmul fast double %30, 5.000000e-01
  %idx.ext100.3 = sext i32 %add121.2 to i64
  %add.ptr101.3 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %newNodes.addr.0, i64 %idx.ext100.3
  %mul106.3 = mul nsw i32 %conv86.3, %sub105
  %div108.3 = sdiv i32 %mul106.3, %28
  %add109.3 = add nsw i32 %div108.3, 1
  %call110.3 = call %class.gTreeNode* @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i(%struct.vertex** %add.ptr.3, i64 %conv91.3, double %add.i230.3, double %add9.i.3, double %div99.3, %class.gTreeNode* %add.ptr101.3, i32 %add109.3)
  %arrayidx112.3 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %this, i64 0, i32 4, i64 3
  store %class.gTreeNode* %call110.3, %class.gTreeNode** %arrayidx112.3, align 8, !tbaa !53
  %33 = load %class.gTreeNode*, %class.gTreeNode** %arrayidx112, align 8, !tbaa !53
  %agg.tmp132.sroa.0.0..sroa_idx = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %33, i64 0, i32 2, i32 0
  %agg.tmp132.sroa.0.0.copyload = load i32, i32* %agg.tmp132.sroa.0.0..sroa_idx, align 4
  %34 = load i32, i32* %cnt.i227, align 4, !tbaa !85
  %add.i226 = add nsw i32 %34, %agg.tmp132.sroa.0.0.copyload
  store i32 %add.i226, i32* %cnt.i227, align 4
  %35 = load %class.gTreeNode*, %class.gTreeNode** %arrayidx112.1, align 8, !tbaa !53
  %agg.tmp132.sroa.0.0..sroa_idx.1 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %35, i64 0, i32 2, i32 0
  %agg.tmp132.sroa.0.0.copyload.1 = load i32, i32* %agg.tmp132.sroa.0.0..sroa_idx.1, align 4
  %add.i226.1 = add nsw i32 %agg.tmp132.sroa.0.0.copyload.1, %add.i226
  store i32 %add.i226.1, i32* %cnt.i227, align 4
  %36 = load %class.gTreeNode*, %class.gTreeNode** %arrayidx112.2, align 8, !tbaa !53
  %agg.tmp132.sroa.0.0..sroa_idx.2 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %36, i64 0, i32 2, i32 0
  %agg.tmp132.sroa.0.0.copyload.2 = load i32, i32* %agg.tmp132.sroa.0.0..sroa_idx.2, align 4
  %add.i226.2 = add nsw i32 %agg.tmp132.sroa.0.0.copyload.2, %add.i226.1
  store i32 %add.i226.2, i32* %cnt.i227, align 4
  %agg.tmp132.sroa.0.0..sroa_idx.3 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %call110.3, i64 0, i32 2, i32 0
  %agg.tmp132.sroa.0.0.copyload.3 = load i32, i32* %agg.tmp132.sroa.0.0..sroa_idx.3, align 4
  %add.i226.3 = add nsw i32 %agg.tmp132.sroa.0.0.copyload.3, %add.i226.2
  store i32 %add.i226.3, i32* %cnt.i227, align 4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #2
  br label %if.end164
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_(%"struct.std::pair"* noalias sret %agg.result, i32 %s, i32 %e, %struct.vertex** %g.coerce) local_unnamed_addr #7 comdat {
entry:
  %r = alloca %"struct.std::pair", align 8
  %sub = sub nsw i32 %e, %s
  %sub1 = add nsw i32 %sub, -1
  %div = sdiv i32 %sub1, 1024
  %add = add nsw i32 %div, 1
  %cmp = icmp slt i32 %sub, 1025
  br i1 %cmp, label %if.then, label %pfor.detach.lr.ph

if.then:                                          ; preds = %entry
  %idxprom.i.i = sext i32 %s to i64
  %arrayidx.i.i = getelementptr inbounds %struct.vertex*, %struct.vertex** %g.coerce, i64 %idxprom.i.i
  %0 = load %struct.vertex*, %struct.vertex** %arrayidx.i.i, align 8, !tbaa !53, !noalias !92
  %pt.i.i.i = getelementptr inbounds %struct.vertex, %struct.vertex* %0, i64 0, i32 1
  %1 = bitcast %"struct.std::pair"* %agg.result to i8*
  %2 = bitcast %class._point2d* %pt.i.i.i to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* nonnull %2, i64 16, i32 8, i1 false) #2, !tbaa.struct !97
  %second.i.i.i.i = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %agg.result, i64 0, i32 1
  %3 = bitcast %class._point2d* %second.i.i.i.i to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %3, i8* nonnull %2, i64 16, i32 8, i1 false) #2, !tbaa.struct !97
  %j.039.i = add nsw i32 %s, 1
  %cmp40.i = icmp slt i32 %j.039.i, %e
  br i1 %cmp40.i, label %for.body.lr.ph.i, label %cleanup

for.body.lr.ph.i:                                 ; preds = %if.then
  %agg.tmp.sroa.3.0..sroa_idx28.i = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %agg.result, i64 0, i32 1, i32 0
  %4 = bitcast %"struct.std::pair"* %agg.result to <2 x double>*
  %5 = load <2 x double>, <2 x double>* %4, align 8, !alias.scope !98
  %6 = bitcast double* %agg.tmp.sroa.3.0..sroa_idx28.i to <2 x double>*
  %7 = load <2 x double>, <2 x double>* %6, align 8, !alias.scope !98
  %8 = sext i32 %j.039.i to i64
  %9 = sub i32 3, %s
  %10 = add i32 %9, %e
  %11 = sub i32 -2, %s
  %12 = add i32 %11, %e
  %xtraiter = and i32 %10, 3
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body.i.prol.loopexit, label %for.body.i.prol.preheader

for.body.i.prol.preheader:                        ; preds = %for.body.lr.ph.i
  %13 = add nsw i32 %xtraiter, -1
  br label %for.body.i.prol

for.body.i.prol:                                  ; preds = %for.body.i.prol, %for.body.i.prol.preheader
  %indvars.iv.i.prol = phi i64 [ %8, %for.body.i.prol.preheader ], [ %indvars.iv.next.i.prol, %for.body.i.prol ]
  %14 = phi <2 x double> [ %5, %for.body.i.prol.preheader ], [ %20, %for.body.i.prol ]
  %15 = phi <2 x double> [ %7, %for.body.i.prol.preheader ], [ %22, %for.body.i.prol ]
  %prol.iter = phi i32 [ %xtraiter, %for.body.i.prol.preheader ], [ %prol.iter.sub, %for.body.i.prol ]
  %arrayidx.i10.i.prol = getelementptr inbounds %struct.vertex*, %struct.vertex** %g.coerce, i64 %indvars.iv.i.prol
  %16 = load %struct.vertex*, %struct.vertex** %arrayidx.i10.i.prol, align 8, !tbaa !53, !noalias !99
  %agg.tmp1.sroa.0.0..sroa_idx.i.prol = getelementptr inbounds %struct.vertex, %struct.vertex* %16, i64 0, i32 1, i32 0
  %17 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i.prol to <2 x double>*
  %18 = load <2 x double>, <2 x double>* %17, align 8, !noalias !98
  %19 = fcmp fast ogt <2 x double> %14, %18
  %20 = select <2 x i1> %19, <2 x double> %18, <2 x double> %14
  %21 = fcmp fast olt <2 x double> %15, %18
  %22 = select <2 x i1> %21, <2 x double> %18, <2 x double> %15
  %indvars.iv.next.i.prol = add nsw i64 %indvars.iv.i.prol, 1
  %prol.iter.sub = add nsw i32 %prol.iter, -1
  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body.i.prol.loopexit.loopexit, label %for.body.i.prol, !llvm.loop !102

for.body.i.prol.loopexit.loopexit:                ; preds = %for.body.i.prol
  %23 = zext i32 %13 to i64
  %24 = add nsw i64 %8, 1
  %25 = add nsw i64 %24, %23
  br label %for.body.i.prol.loopexit

for.body.i.prol.loopexit:                         ; preds = %for.body.i.prol.loopexit.loopexit, %for.body.lr.ph.i
  %.lcssa122.unr = phi <2 x double> [ undef, %for.body.lr.ph.i ], [ %20, %for.body.i.prol.loopexit.loopexit ]
  %.lcssa.unr = phi <2 x double> [ undef, %for.body.lr.ph.i ], [ %22, %for.body.i.prol.loopexit.loopexit ]
  %indvars.iv.i.unr = phi i64 [ %8, %for.body.lr.ph.i ], [ %25, %for.body.i.prol.loopexit.loopexit ]
  %.unr = phi <2 x double> [ %5, %for.body.lr.ph.i ], [ %20, %for.body.i.prol.loopexit.loopexit ]
  %.unr125 = phi <2 x double> [ %7, %for.body.lr.ph.i ], [ %22, %for.body.i.prol.loopexit.loopexit ]
  %26 = icmp ult i32 %12, 3
  br i1 %26, label %for.cond.for.cond.cleanup_crit_edge.i, label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %for.body.i.prol.loopexit
  br label %for.body.i

for.cond.for.cond.cleanup_crit_edge.i:            ; preds = %for.body.i, %for.body.i.prol.loopexit
  %.lcssa122 = phi <2 x double> [ %.lcssa122.unr, %for.body.i.prol.loopexit ], [ %54, %for.body.i ]
  %.lcssa = phi <2 x double> [ %.lcssa.unr, %for.body.i.prol.loopexit ], [ %56, %for.body.i ]
  store <2 x double> %.lcssa122, <2 x double>* %4, align 8, !alias.scope !98
  store <2 x double> %.lcssa, <2 x double>* %6, align 8, !alias.scope !98
  br label %cleanup

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body.i ], [ %indvars.iv.i.unr, %for.body.i.preheader ]
  %27 = phi <2 x double> [ %54, %for.body.i ], [ %.unr, %for.body.i.preheader ]
  %28 = phi <2 x double> [ %56, %for.body.i ], [ %.unr125, %for.body.i.preheader ]
  %arrayidx.i10.i = getelementptr inbounds %struct.vertex*, %struct.vertex** %g.coerce, i64 %indvars.iv.i
  %29 = load %struct.vertex*, %struct.vertex** %arrayidx.i10.i, align 8, !tbaa !53, !noalias !99
  %agg.tmp1.sroa.0.0..sroa_idx.i = getelementptr inbounds %struct.vertex, %struct.vertex* %29, i64 0, i32 1, i32 0
  %30 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i to <2 x double>*
  %31 = load <2 x double>, <2 x double>* %30, align 8, !noalias !98
  %32 = fcmp fast ogt <2 x double> %27, %31
  %33 = select <2 x i1> %32, <2 x double> %31, <2 x double> %27
  %34 = fcmp fast olt <2 x double> %28, %31
  %35 = select <2 x i1> %34, <2 x double> %31, <2 x double> %28
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, 1
  %arrayidx.i10.i.1 = getelementptr inbounds %struct.vertex*, %struct.vertex** %g.coerce, i64 %indvars.iv.next.i
  %36 = load %struct.vertex*, %struct.vertex** %arrayidx.i10.i.1, align 8, !tbaa !53, !noalias !99
  %agg.tmp1.sroa.0.0..sroa_idx.i.1 = getelementptr inbounds %struct.vertex, %struct.vertex* %36, i64 0, i32 1, i32 0
  %37 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i.1 to <2 x double>*
  %38 = load <2 x double>, <2 x double>* %37, align 8, !noalias !98
  %39 = fcmp fast ogt <2 x double> %33, %38
  %40 = select <2 x i1> %39, <2 x double> %38, <2 x double> %33
  %41 = fcmp fast olt <2 x double> %35, %38
  %42 = select <2 x i1> %41, <2 x double> %38, <2 x double> %35
  %indvars.iv.next.i.1 = add nsw i64 %indvars.iv.i, 2
  %arrayidx.i10.i.2 = getelementptr inbounds %struct.vertex*, %struct.vertex** %g.coerce, i64 %indvars.iv.next.i.1
  %43 = load %struct.vertex*, %struct.vertex** %arrayidx.i10.i.2, align 8, !tbaa !53, !noalias !99
  %agg.tmp1.sroa.0.0..sroa_idx.i.2 = getelementptr inbounds %struct.vertex, %struct.vertex* %43, i64 0, i32 1, i32 0
  %44 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i.2 to <2 x double>*
  %45 = load <2 x double>, <2 x double>* %44, align 8, !noalias !98
  %46 = fcmp fast ogt <2 x double> %40, %45
  %47 = select <2 x i1> %46, <2 x double> %45, <2 x double> %40
  %48 = fcmp fast olt <2 x double> %42, %45
  %49 = select <2 x i1> %48, <2 x double> %45, <2 x double> %42
  %indvars.iv.next.i.2 = add nsw i64 %indvars.iv.i, 3
  %arrayidx.i10.i.3 = getelementptr inbounds %struct.vertex*, %struct.vertex** %g.coerce, i64 %indvars.iv.next.i.2
  %50 = load %struct.vertex*, %struct.vertex** %arrayidx.i10.i.3, align 8, !tbaa !53, !noalias !99
  %agg.tmp1.sroa.0.0..sroa_idx.i.3 = getelementptr inbounds %struct.vertex, %struct.vertex* %50, i64 0, i32 1, i32 0
  %51 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i.3 to <2 x double>*
  %52 = load <2 x double>, <2 x double>* %51, align 8, !noalias !98
  %53 = fcmp fast ogt <2 x double> %47, %52
  %54 = select <2 x i1> %53, <2 x double> %52, <2 x double> %47
  %55 = fcmp fast olt <2 x double> %49, %52
  %56 = select <2 x i1> %55, <2 x double> %52, <2 x double> %49
  %indvars.iv.next.i.3 = add nsw i64 %indvars.iv.i, 4
  %lftr.wideiv.i.3 = trunc i64 %indvars.iv.next.i.3 to i32
  %exitcond.i.3 = icmp eq i32 %lftr.wideiv.i.3, %e
  br i1 %exitcond.i.3, label %for.cond.for.cond.cleanup_crit_edge.i, label %for.body.i

pfor.detach.lr.ph:                                ; preds = %entry
  %57 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8 = shl i32 %57, 3
  %conv = sext i32 %add to i64
  %mul = shl nsw i64 %conv, 5
  %call = tail call noalias i8* @malloc(i64 %mul) #2
  %58 = bitcast i8* %call to %"struct.std::pair"*
  %59 = sext i32 %s to i64
  %60 = sext i32 %e to i64
  %61 = sext i32 %div to i64
  %62 = xor i32 %s, 3
  %63 = sub i32 -2, %s
  %64 = add nsw i64 %59, 2
  %65 = icmp sgt i64 %61, 0
  %smax = select i1 %65, i64 %61, i64 0
  %66 = zext i32 %__cilkrts_wc8 to i64
  %67 = add nsw i64 %smax, -1
  %68 = add nsw i64 %67, %66
  %69 = udiv i64 %68, %66
  %70 = icmp ult i64 %69, 2048
  %71 = select i1 %70, i64 %69, i64 2048
  tail call fastcc void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2__pfor.detach.ls(i64 0, i64 %smax, i64 %71, i64 %64, i32 %63, i64 %59, i64 %60, i32 %e, %struct.vertex** %g.coerce, i32 %62, %"struct.std::pair"* %58)
  %72 = bitcast %"struct.std::pair"* %r to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %72) #2
  call void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_(%"struct.std::pair"* nonnull sret %r, i32 0, i32 %add, %"struct.std::pair"* %58)
  call void @free(i8* %call) #2
  %73 = bitcast %"struct.std::pair"* %agg.result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* nonnull %72, i64 32, i32 8, i1 false), !tbaa.struct !103
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %72) #2
  br label %cleanup

cleanup:                                          ; preds = %for.cond.for.cond.cleanup_crit_edge.i, %if.then, %pfor.detach.lr.ph
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_(%"struct.std::pair"* noalias sret %agg.result, i32 %s, i32 %e, %"struct.std::pair"* %g.coerce) local_unnamed_addr #7 comdat {
entry:
  %r = alloca %"struct.std::pair", align 8
  %sub = sub nsw i32 %e, %s
  %sub1 = add nsw i32 %sub, -1
  %div = sdiv i32 %sub1, 1024
  %add = add nsw i32 %div, 1
  %cmp = icmp slt i32 %sub, 1025
  br i1 %cmp, label %if.then, label %pfor.detach.lr.ph

if.then:                                          ; preds = %entry
  %idxprom.i.i = sext i32 %s to i64
  %arrayidx.i.i = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %g.coerce, i64 %idxprom.i.i
  %0 = bitcast %"struct.std::pair"* %agg.result to i8*
  %1 = bitcast %"struct.std::pair"* %arrayidx.i.i to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 32, i32 8, i1 false) #2, !tbaa.struct !103
  %j.038.i = add nsw i32 %s, 1
  %cmp39.i = icmp slt i32 %j.038.i, %e
  br i1 %cmp39.i, label %for.body.lr.ph.i, label %cleanup

for.body.lr.ph.i:                                 ; preds = %if.then
  %agg.tmp.sroa.3.0..sroa_idx26.i = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %agg.result, i64 0, i32 1, i32 0
  %2 = bitcast %"struct.std::pair"* %agg.result to <2 x double>*
  %3 = load <2 x double>, <2 x double>* %2, align 8, !alias.scope !104
  %4 = bitcast double* %agg.tmp.sroa.3.0..sroa_idx26.i to <2 x double>*
  %5 = load <2 x double>, <2 x double>* %4, align 8, !alias.scope !104
  %6 = sext i32 %j.038.i to i64
  %7 = sub i32 -2, %s
  %8 = add i32 %7, %e
  %9 = zext i32 %8 to i64
  %10 = add nuw nsw i64 %9, 1
  %min.iters.check157 = icmp ult i64 %10, 4
  br i1 %min.iters.check157, label %for.body.i.preheader, label %vector.ph158

for.body.i.preheader:                             ; preds = %middle.block155, %for.body.lr.ph.i
  %indvars.iv.i.ph = phi i64 [ %ind.end164, %middle.block155 ], [ %6, %for.body.lr.ph.i ]
  %.ph = phi <2 x double> [ %25, %middle.block155 ], [ %3, %for.body.lr.ph.i ]
  %.ph271 = phi <2 x double> [ %26, %middle.block155 ], [ %5, %for.body.lr.ph.i ]
  br label %for.body.i

vector.ph158:                                     ; preds = %for.body.lr.ph.i
  %11 = add i32 %8, 1
  %12 = and i32 %11, 3
  %n.mod.vf159 = zext i32 %12 to i64
  %n.vec160 = sub nsw i64 %10, %n.mod.vf159
  %minmax.ident.splat180 = shufflevector <2 x double> %5, <2 x double> undef, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %minmax.ident.splat189 = shufflevector <2 x double> %5, <2 x double> undef, <4 x i32> zeroinitializer
  %minmax.ident.splat198 = shufflevector <2 x double> %3, <2 x double> undef, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %minmax.ident.splat207 = shufflevector <2 x double> %3, <2 x double> undef, <4 x i32> zeroinitializer
  br label %vector.body154

vector.body154:                                   ; preds = %vector.body154, %vector.ph158
  %index161 = phi i64 [ 0, %vector.ph158 ], [ %index.next162, %vector.body154 ]
  %vec.phi170 = phi <4 x double> [ %minmax.ident.splat180, %vector.ph158 ], [ %23, %vector.body154 ]
  %vec.phi171 = phi <4 x double> [ %minmax.ident.splat189, %vector.ph158 ], [ %21, %vector.body154 ]
  %vec.phi172 = phi <4 x double> [ %minmax.ident.splat198, %vector.ph158 ], [ %19, %vector.body154 ]
  %vec.phi173 = phi <4 x double> [ %minmax.ident.splat207, %vector.ph158 ], [ %17, %vector.body154 ]
  %13 = add i64 %index161, %6
  %14 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %g.coerce, i64 %13, i32 0, i32 0
  %15 = bitcast double* %14 to <16 x double>*
  %wide.vec174 = load <16 x double>, <16 x double>* %15, align 8, !noalias !104
  %strided.vec175 = shufflevector <16 x double> %wide.vec174, <16 x double> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec176 = shufflevector <16 x double> %wide.vec174, <16 x double> undef, <4 x i32> <i32 1, i32 5, i32 9, i32 13>
  %strided.vec177 = shufflevector <16 x double> %wide.vec174, <16 x double> undef, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %strided.vec178 = shufflevector <16 x double> %wide.vec174, <16 x double> undef, <4 x i32> <i32 3, i32 7, i32 11, i32 15>
  %16 = fcmp fast ogt <4 x double> %vec.phi173, %strided.vec175
  %17 = select <4 x i1> %16, <4 x double> %strided.vec175, <4 x double> %vec.phi173
  %18 = fcmp fast ogt <4 x double> %vec.phi172, %strided.vec176
  %19 = select <4 x i1> %18, <4 x double> %strided.vec176, <4 x double> %vec.phi172
  %20 = fcmp fast olt <4 x double> %vec.phi171, %strided.vec177
  %21 = select <4 x i1> %20, <4 x double> %strided.vec177, <4 x double> %vec.phi171
  %22 = fcmp fast olt <4 x double> %vec.phi170, %strided.vec178
  %23 = select <4 x i1> %22, <4 x double> %strided.vec178, <4 x double> %vec.phi170
  %index.next162 = add i64 %index161, 4
  %24 = icmp eq i64 %index.next162, %n.vec160
  br i1 %24, label %middle.block155, label %vector.body154, !llvm.loop !107

middle.block155:                                  ; preds = %vector.body154
  %ind.end164 = add nsw i64 %n.vec160, %6
  %rdx.shuf208 = shufflevector <4 x double> %17, <4 x double> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %rdx.minmax.cmp209 = fcmp fast olt <4 x double> %17, %rdx.shuf208
  %rdx.minmax.select210 = select <4 x i1> %rdx.minmax.cmp209, <4 x double> %17, <4 x double> %rdx.shuf208
  %rdx.shuf211 = shufflevector <4 x double> %rdx.minmax.select210, <4 x double> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp212 = fcmp fast olt <4 x double> %rdx.minmax.select210, %rdx.shuf211
  %rdx.minmax.select213 = select <4 x i1> %rdx.minmax.cmp212, <4 x double> %rdx.minmax.select210, <4 x double> %rdx.shuf211
  %rdx.shuf199 = shufflevector <4 x double> %19, <4 x double> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %rdx.minmax.cmp200 = fcmp fast olt <4 x double> %19, %rdx.shuf199
  %rdx.minmax.select201 = select <4 x i1> %rdx.minmax.cmp200, <4 x double> %19, <4 x double> %rdx.shuf199
  %rdx.shuf202 = shufflevector <4 x double> %rdx.minmax.select201, <4 x double> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp203 = fcmp fast olt <4 x double> %rdx.minmax.select201, %rdx.shuf202
  %rdx.minmax.select204 = select <4 x i1> %rdx.minmax.cmp203, <4 x double> %rdx.minmax.select201, <4 x double> %rdx.shuf202
  %rdx.shuf190 = shufflevector <4 x double> %21, <4 x double> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %rdx.minmax.cmp191 = fcmp fast ogt <4 x double> %21, %rdx.shuf190
  %rdx.minmax.select192 = select <4 x i1> %rdx.minmax.cmp191, <4 x double> %21, <4 x double> %rdx.shuf190
  %rdx.shuf193 = shufflevector <4 x double> %rdx.minmax.select192, <4 x double> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp194 = fcmp fast ogt <4 x double> %rdx.minmax.select192, %rdx.shuf193
  %rdx.minmax.select195 = select <4 x i1> %rdx.minmax.cmp194, <4 x double> %rdx.minmax.select192, <4 x double> %rdx.shuf193
  %rdx.shuf181 = shufflevector <4 x double> %23, <4 x double> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %rdx.minmax.cmp182 = fcmp fast ogt <4 x double> %23, %rdx.shuf181
  %rdx.minmax.select183 = select <4 x i1> %rdx.minmax.cmp182, <4 x double> %23, <4 x double> %rdx.shuf181
  %rdx.shuf184 = shufflevector <4 x double> %rdx.minmax.select183, <4 x double> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp185 = fcmp fast ogt <4 x double> %rdx.minmax.select183, %rdx.shuf184
  %rdx.minmax.select186 = select <4 x i1> %rdx.minmax.cmp185, <4 x double> %rdx.minmax.select183, <4 x double> %rdx.shuf184
  %cmp.n165 = icmp eq i32 %12, 0
  %25 = shufflevector <4 x double> %rdx.minmax.select213, <4 x double> %rdx.minmax.select204, <2 x i32> <i32 0, i32 4>
  %26 = shufflevector <4 x double> %rdx.minmax.select195, <4 x double> %rdx.minmax.select186, <2 x i32> <i32 0, i32 4>
  br i1 %cmp.n165, label %for.cond.for.cond.cleanup_crit_edge.i, label %for.body.i.preheader

for.cond.for.cond.cleanup_crit_edge.i:            ; preds = %for.body.i, %middle.block155
  %27 = phi <2 x double> [ %25, %middle.block155 ], [ %36, %for.body.i ]
  %28 = phi <2 x double> [ %26, %middle.block155 ], [ %38, %for.body.i ]
  store <2 x double> %27, <2 x double>* %2, align 8, !alias.scope !104
  store <2 x double> %28, <2 x double>* %4, align 8, !alias.scope !104
  br label %cleanup

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ %indvars.iv.i.ph, %for.body.i.preheader ]
  %29 = phi <2 x double> [ %36, %for.body.i ], [ %.ph, %for.body.i.preheader ]
  %30 = phi <2 x double> [ %38, %for.body.i ], [ %.ph271, %for.body.i.preheader ]
  %agg.tmp1.sroa.0.0..sroa_idx.i = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %g.coerce, i64 %indvars.iv.i, i32 0, i32 0
  %31 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i to <2 x double>*
  %32 = load <2 x double>, <2 x double>* %31, align 8, !noalias !104
  %agg.tmp1.sroa.3.0..sroa_idx36.i = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %g.coerce, i64 %indvars.iv.i, i32 1, i32 0
  %33 = bitcast double* %agg.tmp1.sroa.3.0..sroa_idx36.i to <2 x double>*
  %34 = load <2 x double>, <2 x double>* %33, align 8, !noalias !104
  %35 = fcmp fast ogt <2 x double> %29, %32
  %36 = select <2 x i1> %35, <2 x double> %32, <2 x double> %29
  %37 = fcmp fast olt <2 x double> %30, %34
  %38 = select <2 x i1> %37, <2 x double> %34, <2 x double> %30
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, 1
  %lftr.wideiv.i = trunc i64 %indvars.iv.next.i to i32
  %exitcond.i = icmp eq i32 %lftr.wideiv.i, %e
  br i1 %exitcond.i, label %for.cond.for.cond.cleanup_crit_edge.i, label %for.body.i, !llvm.loop !108

pfor.detach.lr.ph:                                ; preds = %entry
  %39 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8 = shl i32 %39, 3
  %conv = sext i32 %add to i64
  %mul = shl nsw i64 %conv, 5
  %call = tail call noalias i8* @malloc(i64 %mul) #2
  %40 = bitcast i8* %call to %"struct.std::pair"*
  %41 = sext i32 %s to i64
  %42 = sext i32 %e to i64
  %43 = sext i32 %div to i64
  %44 = sub i32 -2, %s
  %45 = icmp sgt i64 %43, 0
  %smax = select i1 %45, i64 %43, i64 0
  %46 = zext i32 %__cilkrts_wc8 to i64
  %47 = add nsw i64 %smax, -1
  %48 = add nsw i64 %47, %46
  %49 = udiv i64 %48, %46
  %50 = icmp ult i64 %49, 2048
  %51 = select i1 %50, i64 %49, i64 2048
  tail call fastcc void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2__pfor.detach.ls(i64 0, i64 %smax, i64 %51, i32 %44, i64 %41, i64 %42, i32 %e, %"struct.std::pair"* %g.coerce, %"struct.std::pair"* %40)
  %52 = bitcast %"struct.std::pair"* %r to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %52) #2
  call void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_(%"struct.std::pair"* nonnull sret %r, i32 0, i32 %add, %"struct.std::pair"* %40)
  call void @free(i8* %call) #2
  %53 = bitcast %"struct.std::pair"* %agg.result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* nonnull %52, i64 32, i32 8, i1 false), !tbaa.struct !103
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52) #2
  br label %cleanup

cleanup:                                          ; preds = %for.cond.for.cond.cleanup_crit_edge.i, %if.then, %pfor.detach.lr.ph
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi(%struct.vertex** %S, i32 %count, i32 %quadrants, i32 %logdivs, double %size, double %center.coerce0, double %center.coerce1, i32* %offsets) local_unnamed_addr #7 comdat align 2 {
entry:
  %0 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8142 = shl i32 %0, 3
  %conv = sext i32 %count to i64
  %mul = shl nsw i64 %conv, 4
  %call = tail call noalias i8* @malloc(i64 %mul) #2
  %1 = bitcast i8* %call to %"struct.std::pair.6"*
  %shl = shl i32 1, %logdivs
  %div2.neg.neg = fmul fast double %size, 5.000000e-01
  %cmp87 = icmp sgt i32 %count, 0
  br i1 %cmp87, label %pfor.detach.lr.ph, label %sync.continue

pfor.detach.lr.ph:                                ; preds = %entry
  %cmp47.i = icmp sgt i32 %logdivs, 0
  %wide.trip.count92 = zext i32 %count to i64
  br i1 %cmp47.i, label %pfor.detach.us.preheader, label %pfor.detach.preheader

pfor.detach.preheader:                            ; preds = %pfor.detach.lr.ph
  %2 = add nsw i64 %wide.trip.count92, -1
  %3 = zext i32 %__cilkrts_wc8142 to i64
  %4 = add nsw i64 %wide.trip.count92, -2
  %5 = add nsw i64 %4, %3
  %6 = udiv i64 %5, %3
  %7 = icmp ult i64 %6, 2048
  %8 = select i1 %7, i64 %6, i64 2048
  tail call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.ls(i64 0, i64 %2, i64 %8, %struct.vertex** %S, %"struct.std::pair.6"* %1)
  br label %sync.continue

pfor.detach.us.preheader:                         ; preds = %pfor.detach.lr.ph
  %add9.i.neg = fsub fast double %div2.neg.neg, %center.coerce1
  %sub3.i = add nsw i32 %shl, -1
  %conv1 = sitofp i32 %shl to double
  %div = fdiv fast double %size, %conv1
  %9 = fdiv fast double 1.000000e+00, %div
  %add.i.neg = fsub fast double %div2.neg.neg, %center.coerce0
  %min.iters.check = icmp ult i32 %logdivs, 32
  %n.vec = and i32 %logdivs, -32
  %cmp.n = icmp eq i32 %n.vec, %logdivs
  %10 = add nsw i64 %wide.trip.count92, -1
  %11 = zext i32 %__cilkrts_wc8142 to i64
  %12 = add nsw i64 %wide.trip.count92, -2
  %13 = add nsw i64 %12, %11
  %14 = udiv i64 %13, %11
  %15 = icmp ult i64 %14, 2048
  %16 = select i1 %15, i64 %14, i64 2048
  tail call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.us.ls(i64 0, i64 %10, i64 %16, %struct.vertex** %S, double %add.i.neg, double %9, i32 %sub3.i, double %add9.i.neg, i1 %min.iters.check, i32 %n.vec, i1 %cmp.n, i32 %logdivs, %"struct.std::pair.6"* %1)
  br label %sync.continue

sync.continue:                                    ; preds = %entry, %pfor.detach.us.preheader, %pfor.detach.preheader
  %conv17 = sext i32 %quadrants to i64
  %cmp.i.i.i = icmp eq i32 %count, 2147483647
  %cond.i.i.i = select i1 %cmp.i.i.i, i64 8, i64 4
  %div.i.i.i = sdiv i64 %conv, 2048
  %add.i.i.i = add nsw i64 %div.i.i.i, 1
  %mul112.i.i.i = or i64 %cond.i.i.i, 16
  %add2.i.i.i = mul nsw i64 %mul112.i.i.i, %conv
  %mul3.i.i.i = shl nuw nsw i64 %cond.i.i.i, 8
  %mul4.i.i.i = mul nsw i64 %mul3.i.i.i, %add.i.i.i
  %add5.i.i.i = add nsw i64 %add2.i.i.i, %mul4.i.i.i
  %call1.i.i = tail call noalias i8* @malloc(i64 %add5.i.i.i) #2
  tail call void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1_(%"struct.std::pair.6"* %1, i32* %offsets, i64 %conv, i64 %conv17, i1 zeroext false, i8* %call1.i.i) #2
  tail call void @free(i8* %call1.i.i) #2
  br i1 %cmp87, label %pfor.detach30.lr.ph, label %sync.continue43

pfor.detach30.lr.ph:                              ; preds = %sync.continue
  %wide.trip.count = zext i32 %count to i64
  %17 = add nsw i64 %wide.trip.count, -1
  %18 = zext i32 %__cilkrts_wc8142 to i64
  %19 = add nsw i64 %wide.trip.count, -2
  %20 = add nsw i64 %19, %18
  %21 = udiv i64 %20, %18
  %22 = icmp ult i64 %21, 2048
  %23 = select i1 %22, i64 %21, i64 2048
  tail call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach30.ls(i64 0, i64 %17, i64 %23, %"struct.std::pair.6"* %1, %struct.vertex** %S)
  br label %sync.continue43

sync.continue43:                                  ; preds = %sync.continue, %pfor.detach30.lr.ph
  tail call void @free(i8* %call) #2
  ret void
}

; Function Attrs: nounwind stealable uwtable
define linkonce_odr void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii(%class.gTreeNode* %this, %struct.vertex** %S.coerce0, i64 %S.coerce1, i32* %offsets, i32 %quadrants, %class.gTreeNode* %newNodes, %class.gTreeNode* %parent, i32 %nodesToLeft, i32 %height, i32 %depth) local_unnamed_addr #15 comdat align 2 {
entry:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %entry
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %entry, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %entry ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %entry ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %__dnew.i.i.i.i.i = alloca i64, align 8
  %agg.tmp.i = alloca %"class.std::__cxx11::basic_string", align 8
  %count = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %parent, i64 0, i32 3
  store i32 0, i32* %count, align 4, !tbaa !80
  %cmp = icmp eq i32 %height, 1
  %size = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %parent, i64 0, i32 1
  %x.i = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %parent, i64 0, i32 0, i32 0
  %y.i = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %parent, i64 0, i32 0, i32 1
  %shl7 = shl i32 %nodesToLeft, 2
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %__cilkrts_enter_frame_1.exit
  %sub = add nsw i32 %quadrants, -1
  %9 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp.i to i8*
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp.i, i64 0, i32 2
  %11 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp.i to %union.anon.1**
  %12 = bitcast %union.anon.1* %10 to i8*
  %13 = bitcast i64* %__dnew.i.i.i.i.i to i8*
  %_M_p.i13.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp.i, i64 0, i32 0, i32 0
  %_M_allocated_capacity.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp.i, i64 0, i32 2, i32 0
  %_M_string_length.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp.i, i64 0, i32 1
  %14 = sext i32 %shl7 to i64
  %15 = load double, double* %size, align 8, !tbaa !86
  %div = fmul fast double %15, 2.500000e-01
  %16 = load double, double* %x.i, align 8, !tbaa !90
  %add.i = fsub fast double %16, %div
  %17 = load double, double* %y.i, align 8, !tbaa !91
  %add9.i = fsub fast double %17, %div
  %cmp8 = icmp eq i32 %shl7, %sub
  br i1 %cmp8, label %cond.end, label %cond.false

cond.false:                                       ; preds = %if.then
  %18 = or i64 %14, 1
  %arrayidx = getelementptr inbounds i32, i32* %offsets, i64 %18
  %19 = load i32, i32* %arrayidx, align 4, !tbaa !59
  %conv = sext i32 %19 to i64
  br label %cond.end

cond.end:                                         ; preds = %if.then, %cond.false
  %cond = phi i64 [ %conv, %cond.false ], [ %S.coerce1, %if.then ]
  %arrayidx11 = getelementptr inbounds i32, i32* %offsets, i64 %14
  %20 = load i32, i32* %arrayidx11, align 4, !tbaa !59
  %21 = trunc i64 %cond to i32
  %conv14 = sub i32 %21, %20
  %idx.ext = sext i32 %20 to i64
  %add.ptr = getelementptr inbounds %struct.vertex*, %struct.vertex** %S.coerce0, i64 %idx.ext
  %conv18 = sext i32 %conv14 to i64
  %add.ptr20 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %newNodes, i64 %14
  %arrayidx22 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %parent, i64 0, i32 4, i64 0
  store %class.gTreeNode* %add.ptr20, %class.gTreeNode** %arrayidx22, align 8, !tbaa !53
  %div25 = fmul fast double %15, 5.000000e-01
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9)
  store %union.anon.1* %10, %union.anon.1** %11, align 8, !tbaa !47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #2
  store i64 17, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !49
  %call5.i.i.i.i.i = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp.i, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i.i, i64 0) #2
  store i8* %call5.i.i.i.i.i, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %22 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !49
  store i64 %22, i64* %_M_allocated_capacity.i.i.i.i.i.i, align 8, !tbaa !22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call5.i.i.i.i.i, i8* nonnull getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i64 17, i32 1, i1 false) #2
  store i64 %22, i64* %_M_string_length.i.i.i.i.i.i.i, align 8, !tbaa !52
  %23 = load i8*, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds i8, i8* %23, i64 %22
  store i8 0, i8* %arrayidx.i.i.i.i.i.i, align 1, !tbaa !22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #2
  %24 = load i8*, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %cmp.i.i.i.i = icmp eq i8* %24, %12
  br i1 %cmp.i.i.i.i, label %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %cond.end
  call void @_ZdlPv(i8* %24) #2
  br label %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit

_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit: ; preds = %cond.end, %if.then.i.i.i
  %add.ptr.i = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %add.ptr20, i64 1
  call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i(%class.gTreeNode* %add.ptr20, %struct.vertex** %add.ptr, i64 %conv18, double %add.i, double %add9.i, double %div25, %class.gTreeNode* nonnull %add.ptr.i, i32 0) #2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9)
  %25 = load double, double* %size, align 8, !tbaa !86
  %div.1 = fmul fast double %25, 2.500000e-01
  %26 = load double, double* %x.i, align 8, !tbaa !90
  %add.i.1 = fadd fast double %div.1, %26
  %27 = load double, double* %y.i, align 8, !tbaa !91
  %add9.i.1 = fsub fast double %27, %div.1
  %28 = or i64 %14, 1
  %29 = trunc i64 %28 to i32
  %cmp8.1 = icmp eq i32 %sub, %29
  br i1 %cmp8.1, label %cond.end.1, label %cond.false.1

if.else:                                          ; preds = %__cilkrts_enter_frame_1.exit
  %idx.ext47 = sext i32 %shl7 to i64
  %add70 = add nsw i32 %depth, 1
  %sub69 = add nsw i32 %height, -1
  %mul58 = shl nsw i32 %depth, 1
  %shl59 = shl i32 1, %mul58
  %idx.ext60 = sext i32 %shl59 to i64
  %add.ptr61 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %newNodes, i64 %idx.ext60
  %30 = load double, double* %size, align 8, !tbaa !86
  %div40 = fmul fast double %30, 2.500000e-01
  %31 = bitcast %class.gTreeNode* %parent to <2 x double>*
  %32 = load <2 x double>, <2 x double>* %31, align 8, !tbaa !18
  %33 = insertelement <2 x double> undef, double %div40, i32 0
  %34 = shufflevector <2 x double> %33, <2 x double> undef, <2 x i32> zeroinitializer
  %35 = fsub fast <2 x double> %32, %34
  %add.ptr48 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %newNodes, i64 %idx.ext47
  %div51 = fmul fast double %30, 5.000000e-01
  %cnt.i.i = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %newNodes, i64 %idx.ext47, i32 2, i32 0
  store i32 0, i32* %cnt.i.i, align 4, !tbaa !85
  %count.i = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %newNodes, i64 %idx.ext47, i32 3
  store i32 0, i32* %count.i, align 4, !tbaa !80
  %size.i = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %newNodes, i64 %idx.ext47, i32 1
  store double %div51, double* %size.i, align 8, !tbaa !86
  %36 = bitcast %class.gTreeNode* %add.ptr48 to <2 x double>*
  store <2 x double> %35, <2 x double>* %36, align 8
  %vertices.i = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %newNodes, i64 %idx.ext47, i32 5
  %37 = bitcast %struct.vertex*** %vertices.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull %37, i8 0, i64 16, i32 8, i1 false) #2
  %arrayidx54 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %parent, i64 0, i32 4, i64 0
  store %class.gTreeNode* %add.ptr48, %class.gTreeNode** %arrayidx54, align 8, !tbaa !53
  %38 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %39 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %38, i16* nonnull %39) #2
  %40 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %41 = call i8* @llvm.frameaddress(i32 0)
  %42 = getelementptr inbounds [5 x i8*], [5 x i8*]* %40, i64 0, i64 0
  store volatile i8* %41, i8** %42, align 8
  %43 = call i8* @llvm.stacksave()
  %44 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %43, i8** %44, align 8
  %45 = bitcast [5 x i8*]* %40 to i8*
  %46 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %45) #23
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %if.else.split, label %det.cont72

if.else.split:                                    ; preds = %if.else
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii_det.achd71.cilk(%class.gTreeNode* %this, %struct.vertex** %S.coerce0, i64 %S.coerce1, i32* %offsets, i32 %quadrants, %class.gTreeNode* nonnull %add.ptr61, %class.gTreeNode* %add.ptr48, i32 %shl7, i32 %sub69, i32 %add70)
  br label %det.cont72

det.cont72:                                       ; preds = %if.else.split, %if.else
  %48 = load double, double* %size, align 8, !tbaa !86
  %div40.1 = fmul fast double %48, 2.500000e-01
  %49 = load double, double* %x.i, align 8, !tbaa !90
  %add.i175.1 = fadd fast double %div40.1, %49
  %50 = load double, double* %y.i, align 8, !tbaa !91
  %add9.i180.1 = fsub fast double %50, %div40.1
  %add.ptr43.1 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %newNodes, i64 1
  %add.ptr48.1 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %add.ptr43.1, i64 %idx.ext47
  %div51.1 = fmul fast double %48, 5.000000e-01
  %cnt.i.i.1 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %add.ptr48.1, i64 0, i32 2, i32 0
  store i32 0, i32* %cnt.i.i.1, align 4, !tbaa !85
  %count.i.1 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %add.ptr48.1, i64 0, i32 3
  store i32 0, i32* %count.i.1, align 4, !tbaa !80
  %size.i.1 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %add.ptr48.1, i64 0, i32 1
  store double %div51.1, double* %size.i.1, align 8, !tbaa !86
  %cnt.sroa.0.0..sroa_idx.i.1 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %add.ptr48.1, i64 0, i32 0, i32 0
  store double %add.i175.1, double* %cnt.sroa.0.0..sroa_idx.i.1, align 8
  %cnt.sroa.2.0..sroa_idx3.i.1 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %add.ptr48.1, i64 0, i32 0, i32 1
  store double %add9.i180.1, double* %cnt.sroa.2.0..sroa_idx3.i.1, align 8
  %vertices.i.1 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %add.ptr48.1, i64 0, i32 5
  %51 = bitcast %struct.vertex*** %vertices.i.1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull %51, i8 0, i64 16, i32 8, i1 false) #2
  %arrayidx54.1 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %parent, i64 0, i32 4, i64 1
  store %class.gTreeNode* %add.ptr48.1, %class.gTreeNode** %arrayidx54.1, align 8, !tbaa !53
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %38, i16* nonnull %39) #2
  store volatile i8* %41, i8** %42, align 8
  %52 = call i8* @llvm.stacksave()
  store volatile i8* %52, i8** %44, align 8
  %53 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %45) #23
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %det.cont72.split, label %det.cont72.1

det.cont72.split:                                 ; preds = %det.cont72
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii_det.achd71.1.cilk(i32 %shl7, %class.gTreeNode* %this, %struct.vertex** %S.coerce0, i64 %S.coerce1, i32* %offsets, i32 %quadrants, %class.gTreeNode* nonnull %add.ptr61, %class.gTreeNode* nonnull %add.ptr48.1, i32 %sub69, i32 %add70)
  br label %det.cont72.1

if.end:                                           ; preds = %det.cont72.2, %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.3
  %55 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %56 = load atomic i32, i32* %55 acquire, align 8
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %if.end
  %59 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %60 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %61 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %60, i16* nonnull %61) #2
  %62 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %63 = call i8* @llvm.frameaddress(i32 0) #2
  %64 = getelementptr inbounds [5 x i8*], [5 x i8*]* %62, i64 0, i64 0
  store volatile i8* %63, i8** %64, align 8
  %65 = call i8* @llvm.stacksave() #2
  %66 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %65, i8** %66, align 8
  %67 = bitcast [5 x i8*]* %62 to i8*
  %68 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %67) #24
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %if.end, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %70 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %71 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %70, i64 0, i32 12, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* %71, align 8
  %cnt.i = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %parent, i64 0, i32 2, i32 0
  %arrayidx88 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %parent, i64 0, i32 4, i64 0
  %74 = load %class.gTreeNode*, %class.gTreeNode** %arrayidx88, align 8, !tbaa !53
  %agg.tmp85.sroa.0.0..sroa_idx = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %74, i64 0, i32 2, i32 0
  %agg.tmp85.sroa.0.0.copyload = load i32, i32* %agg.tmp85.sroa.0.0..sroa_idx, align 4
  %75 = load i32, i32* %cnt.i, align 4, !tbaa !85
  %add.i183 = add nsw i32 %75, %agg.tmp85.sroa.0.0.copyload
  store i32 %add.i183, i32* %cnt.i, align 4
  %count96 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %74, i64 0, i32 3
  %76 = load i32, i32* %count96, align 4, !tbaa !80
  %77 = load i32, i32* %count, align 4, !tbaa !80
  %add98 = add nsw i32 %77, %76
  store i32 %add98, i32* %count, align 4, !tbaa !80
  %arrayidx88.1 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %parent, i64 0, i32 4, i64 1
  %78 = load %class.gTreeNode*, %class.gTreeNode** %arrayidx88.1, align 8, !tbaa !53
  %agg.tmp85.sroa.0.0..sroa_idx.1 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %78, i64 0, i32 2, i32 0
  %agg.tmp85.sroa.0.0.copyload.1 = load i32, i32* %agg.tmp85.sroa.0.0..sroa_idx.1, align 4
  %add.i183.1 = add nsw i32 %agg.tmp85.sroa.0.0.copyload.1, %add.i183
  store i32 %add.i183.1, i32* %cnt.i, align 4
  %count96.1 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %78, i64 0, i32 3
  %79 = load i32, i32* %count96.1, align 4, !tbaa !80
  %add98.1 = add nsw i32 %79, %add98
  store i32 %add98.1, i32* %count, align 4, !tbaa !80
  %arrayidx88.2 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %parent, i64 0, i32 4, i64 2
  %80 = load %class.gTreeNode*, %class.gTreeNode** %arrayidx88.2, align 8, !tbaa !53
  %agg.tmp85.sroa.0.0..sroa_idx.2 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %80, i64 0, i32 2, i32 0
  %agg.tmp85.sroa.0.0.copyload.2 = load i32, i32* %agg.tmp85.sroa.0.0..sroa_idx.2, align 4
  %add.i183.2 = add nsw i32 %agg.tmp85.sroa.0.0.copyload.2, %add.i183.1
  store i32 %add.i183.2, i32* %cnt.i, align 4
  %count96.2 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %80, i64 0, i32 3
  %81 = load i32, i32* %count96.2, align 4, !tbaa !80
  %add98.2 = add nsw i32 %81, %add98.1
  store i32 %add98.2, i32* %count, align 4, !tbaa !80
  %arrayidx88.3 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %parent, i64 0, i32 4, i64 3
  %82 = load %class.gTreeNode*, %class.gTreeNode** %arrayidx88.3, align 8, !tbaa !53
  %agg.tmp85.sroa.0.0..sroa_idx.3 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %82, i64 0, i32 2, i32 0
  %agg.tmp85.sroa.0.0.copyload.3 = load i32, i32* %agg.tmp85.sroa.0.0..sroa_idx.3, align 4
  %add.i183.3 = add nsw i32 %agg.tmp85.sroa.0.0.copyload.3, %add.i183.2
  store i32 %add.i183.3, i32* %cnt.i, align 4
  %count96.3 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %82, i64 0, i32 3
  %83 = load i32, i32* %count96.3, align 4, !tbaa !80
  %add98.3 = add nsw i32 %83, %add98.2
  store i32 %add98.3, i32* %count, align 4, !tbaa !80
  %cmp103 = icmp eq i32 %add98.3, 0
  br i1 %cmp103, label %if.then104, label %if.end106

if.then104:                                       ; preds = %__cilk_sync_nothrow.exit
  %vertices = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %parent, i64 0, i32 5
  store %struct.vertex** %S.coerce0, %struct.vertex*** %vertices, align 8, !tbaa !89
  br label %if.end106

if.end106:                                        ; preds = %if.then104, %__cilk_sync_nothrow.exit
  %84 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %85 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %84, i64 0, i32 9
  %88 = bitcast %struct.__cilkrts_stack_frame** %87 to i64*
  store atomic i64 %86, i64* %88 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %89 = load atomic i32, i32* %55 acquire, align 8
  %90 = icmp eq i32 %89, 16777216
  br i1 %90, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.end106
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.end106, %body.i
  ret void

cond.false.1:                                     ; preds = %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit
  %91 = add nsw i64 %28, 1
  %arrayidx.1 = getelementptr inbounds i32, i32* %offsets, i64 %91
  %92 = load i32, i32* %arrayidx.1, align 4, !tbaa !59
  %conv.1 = sext i32 %92 to i64
  br label %cond.end.1

cond.end.1:                                       ; preds = %cond.false.1, %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit
  %cond.1 = phi i64 [ %conv.1, %cond.false.1 ], [ %S.coerce1, %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit ]
  %arrayidx11.1 = getelementptr inbounds i32, i32* %offsets, i64 %28
  %93 = load i32, i32* %arrayidx11.1, align 4, !tbaa !59
  %94 = trunc i64 %cond.1 to i32
  %conv14.1 = sub i32 %94, %93
  %idx.ext.1 = sext i32 %93 to i64
  %add.ptr.1 = getelementptr inbounds %struct.vertex*, %struct.vertex** %S.coerce0, i64 %idx.ext.1
  %conv18.1 = sext i32 %conv14.1 to i64
  %add.ptr20.1 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %newNodes, i64 %28
  %arrayidx22.1 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %parent, i64 0, i32 4, i64 1
  store %class.gTreeNode* %add.ptr20.1, %class.gTreeNode** %arrayidx22.1, align 8, !tbaa !53
  %div25.1 = fmul fast double %25, 5.000000e-01
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9)
  store %union.anon.1* %10, %union.anon.1** %11, align 8, !tbaa !47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #2
  store i64 17, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !49
  %call5.i.i.i.i.i.1 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp.i, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i.i, i64 0) #2
  store i8* %call5.i.i.i.i.i.1, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %95 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !49
  store i64 %95, i64* %_M_allocated_capacity.i.i.i.i.i.i, align 8, !tbaa !22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call5.i.i.i.i.i.1, i8* nonnull getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i64 17, i32 1, i1 false) #2
  store i64 %95, i64* %_M_string_length.i.i.i.i.i.i.i, align 8, !tbaa !52
  %96 = load i8*, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %arrayidx.i.i.i.i.i.i.1 = getelementptr inbounds i8, i8* %96, i64 %95
  store i8 0, i8* %arrayidx.i.i.i.i.i.i.1, align 1, !tbaa !22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #2
  %97 = load i8*, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %cmp.i.i.i.i.1 = icmp eq i8* %97, %12
  br i1 %cmp.i.i.i.i.1, label %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.1, label %if.then.i.i.i.1

if.then.i.i.i.1:                                  ; preds = %cond.end.1
  call void @_ZdlPv(i8* %97) #2
  br label %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.1

_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.1: ; preds = %if.then.i.i.i.1, %cond.end.1
  %add.ptr.i.1 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %add.ptr20.1, i64 1
  call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i(%class.gTreeNode* nonnull %add.ptr20.1, %struct.vertex** %add.ptr.1, i64 %conv18.1, double %add.i.1, double %add9.i.1, double %div25.1, %class.gTreeNode* nonnull %add.ptr.i.1, i32 0) #2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9)
  %98 = load double, double* %size, align 8, !tbaa !86
  %div.2 = fmul fast double %98, 2.500000e-01
  %99 = load double, double* %x.i, align 8, !tbaa !90
  %add.i.2 = fsub fast double %99, %div.2
  %100 = load double, double* %y.i, align 8, !tbaa !91
  %add9.i.2 = fadd fast double %100, %div.2
  %101 = or i64 %14, 2
  %102 = trunc i64 %101 to i32
  %cmp8.2 = icmp eq i32 %sub, %102
  br i1 %cmp8.2, label %cond.end.2, label %cond.false.2

cond.false.2:                                     ; preds = %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.1
  %103 = or i64 %14, 3
  %arrayidx.2 = getelementptr inbounds i32, i32* %offsets, i64 %103
  %104 = load i32, i32* %arrayidx.2, align 4, !tbaa !59
  %conv.2 = sext i32 %104 to i64
  br label %cond.end.2

cond.end.2:                                       ; preds = %cond.false.2, %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.1
  %cond.2 = phi i64 [ %conv.2, %cond.false.2 ], [ %S.coerce1, %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.1 ]
  %arrayidx11.2 = getelementptr inbounds i32, i32* %offsets, i64 %101
  %105 = load i32, i32* %arrayidx11.2, align 4, !tbaa !59
  %106 = trunc i64 %cond.2 to i32
  %conv14.2 = sub i32 %106, %105
  %idx.ext.2 = sext i32 %105 to i64
  %add.ptr.2 = getelementptr inbounds %struct.vertex*, %struct.vertex** %S.coerce0, i64 %idx.ext.2
  %conv18.2 = sext i32 %conv14.2 to i64
  %add.ptr20.2 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %newNodes, i64 %101
  %arrayidx22.2 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %parent, i64 0, i32 4, i64 2
  store %class.gTreeNode* %add.ptr20.2, %class.gTreeNode** %arrayidx22.2, align 8, !tbaa !53
  %div25.2 = fmul fast double %98, 5.000000e-01
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9)
  store %union.anon.1* %10, %union.anon.1** %11, align 8, !tbaa !47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #2
  store i64 17, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !49
  %call5.i.i.i.i.i.2 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp.i, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i.i, i64 0) #2
  store i8* %call5.i.i.i.i.i.2, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %107 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !49
  store i64 %107, i64* %_M_allocated_capacity.i.i.i.i.i.i, align 8, !tbaa !22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call5.i.i.i.i.i.2, i8* nonnull getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i64 17, i32 1, i1 false) #2
  store i64 %107, i64* %_M_string_length.i.i.i.i.i.i.i, align 8, !tbaa !52
  %108 = load i8*, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %arrayidx.i.i.i.i.i.i.2 = getelementptr inbounds i8, i8* %108, i64 %107
  store i8 0, i8* %arrayidx.i.i.i.i.i.i.2, align 1, !tbaa !22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #2
  %109 = load i8*, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %cmp.i.i.i.i.2 = icmp eq i8* %109, %12
  br i1 %cmp.i.i.i.i.2, label %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.2, label %if.then.i.i.i.2

if.then.i.i.i.2:                                  ; preds = %cond.end.2
  call void @_ZdlPv(i8* %109) #2
  br label %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.2

_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.2: ; preds = %if.then.i.i.i.2, %cond.end.2
  %add.ptr.i.2 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %add.ptr20.2, i64 1
  call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i(%class.gTreeNode* nonnull %add.ptr20.2, %struct.vertex** %add.ptr.2, i64 %conv18.2, double %add.i.2, double %add9.i.2, double %div25.2, %class.gTreeNode* nonnull %add.ptr.i.2, i32 0) #2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9)
  %110 = load double, double* %size, align 8, !tbaa !86
  %div.3 = fmul fast double %110, 2.500000e-01
  %111 = load double, double* %x.i, align 8, !tbaa !90
  %add.i.3 = fadd fast double %div.3, %111
  %112 = load double, double* %y.i, align 8, !tbaa !91
  %add9.i.3 = fadd fast double %112, %div.3
  %113 = or i64 %14, 3
  %114 = trunc i64 %113 to i32
  %cmp8.3 = icmp eq i32 %sub, %114
  br i1 %cmp8.3, label %cond.end.3, label %cond.false.3

cond.false.3:                                     ; preds = %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.2
  %115 = add nsw i64 %113, 1
  %arrayidx.3 = getelementptr inbounds i32, i32* %offsets, i64 %115
  %116 = load i32, i32* %arrayidx.3, align 4, !tbaa !59
  %conv.3 = sext i32 %116 to i64
  br label %cond.end.3

cond.end.3:                                       ; preds = %cond.false.3, %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.2
  %cond.3 = phi i64 [ %conv.3, %cond.false.3 ], [ %S.coerce1, %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.2 ]
  %arrayidx11.3 = getelementptr inbounds i32, i32* %offsets, i64 %113
  %117 = load i32, i32* %arrayidx11.3, align 4, !tbaa !59
  %118 = trunc i64 %cond.3 to i32
  %conv14.3 = sub i32 %118, %117
  %idx.ext.3 = sext i32 %117 to i64
  %add.ptr.3 = getelementptr inbounds %struct.vertex*, %struct.vertex** %S.coerce0, i64 %idx.ext.3
  %conv18.3 = sext i32 %conv14.3 to i64
  %add.ptr20.3 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %newNodes, i64 %113
  %arrayidx22.3 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %parent, i64 0, i32 4, i64 3
  store %class.gTreeNode* %add.ptr20.3, %class.gTreeNode** %arrayidx22.3, align 8, !tbaa !53
  %div25.3 = fmul fast double %110, 5.000000e-01
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9)
  store %union.anon.1* %10, %union.anon.1** %11, align 8, !tbaa !47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #2
  store i64 17, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !49
  %call5.i.i.i.i.i.3 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp.i, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i.i, i64 0) #2
  store i8* %call5.i.i.i.i.i.3, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %119 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !49
  store i64 %119, i64* %_M_allocated_capacity.i.i.i.i.i.i, align 8, !tbaa !22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call5.i.i.i.i.i.3, i8* nonnull getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i64 17, i32 1, i1 false) #2
  store i64 %119, i64* %_M_string_length.i.i.i.i.i.i.i, align 8, !tbaa !52
  %120 = load i8*, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %arrayidx.i.i.i.i.i.i.3 = getelementptr inbounds i8, i8* %120, i64 %119
  store i8 0, i8* %arrayidx.i.i.i.i.i.i.3, align 1, !tbaa !22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #2
  %121 = load i8*, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %cmp.i.i.i.i.3 = icmp eq i8* %121, %12
  br i1 %cmp.i.i.i.i.3, label %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.3, label %if.then.i.i.i.3

if.then.i.i.i.3:                                  ; preds = %cond.end.3
  call void @_ZdlPv(i8* %121) #2
  br label %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.3

_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.3: ; preds = %if.then.i.i.i.3, %cond.end.3
  %add.ptr.i.3 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %add.ptr20.3, i64 1
  call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i(%class.gTreeNode* nonnull %add.ptr20.3, %struct.vertex** %add.ptr.3, i64 %conv18.3, double %add.i.3, double %add9.i.3, double %div25.3, %class.gTreeNode* nonnull %add.ptr.i.3, i32 0) #2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9)
  br label %if.end

det.cont72.1:                                     ; preds = %det.cont72.split, %det.cont72
  %122 = load double, double* %size, align 8, !tbaa !86
  %div40.2 = fmul fast double %122, 2.500000e-01
  %123 = load double, double* %x.i, align 8, !tbaa !90
  %add.i175.2 = fsub fast double %123, %div40.2
  %124 = load double, double* %y.i, align 8, !tbaa !91
  %add9.i180.2 = fadd fast double %124, %div40.2
  %add.ptr43.2 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %newNodes, i64 2
  %add.ptr48.2 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %add.ptr43.2, i64 %idx.ext47
  %div51.2 = fmul fast double %122, 5.000000e-01
  %cnt.i.i.2 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %add.ptr48.2, i64 0, i32 2, i32 0
  store i32 0, i32* %cnt.i.i.2, align 4, !tbaa !85
  %count.i.2 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %add.ptr48.2, i64 0, i32 3
  store i32 0, i32* %count.i.2, align 4, !tbaa !80
  %size.i.2 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %add.ptr48.2, i64 0, i32 1
  store double %div51.2, double* %size.i.2, align 8, !tbaa !86
  %cnt.sroa.0.0..sroa_idx.i.2 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %add.ptr48.2, i64 0, i32 0, i32 0
  store double %add.i175.2, double* %cnt.sroa.0.0..sroa_idx.i.2, align 8
  %cnt.sroa.2.0..sroa_idx3.i.2 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %add.ptr48.2, i64 0, i32 0, i32 1
  store double %add9.i180.2, double* %cnt.sroa.2.0..sroa_idx3.i.2, align 8
  %vertices.i.2 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %add.ptr48.2, i64 0, i32 5
  %125 = bitcast %struct.vertex*** %vertices.i.2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull %125, i8 0, i64 16, i32 8, i1 false) #2
  %arrayidx54.2 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %parent, i64 0, i32 4, i64 2
  store %class.gTreeNode* %add.ptr48.2, %class.gTreeNode** %arrayidx54.2, align 8, !tbaa !53
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %38, i16* nonnull %39) #2
  store volatile i8* %41, i8** %42, align 8
  %126 = call i8* @llvm.stacksave()
  store volatile i8* %126, i8** %44, align 8
  %127 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %45) #23
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %det.cont72.1.split, label %det.cont72.2

det.cont72.1.split:                               ; preds = %det.cont72.1
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii_det.achd71.2.cilk(i32 %shl7, %class.gTreeNode* %this, %struct.vertex** %S.coerce0, i64 %S.coerce1, i32* %offsets, i32 %quadrants, %class.gTreeNode* nonnull %add.ptr61, %class.gTreeNode* nonnull %add.ptr48.2, i32 %sub69, i32 %add70)
  br label %det.cont72.2

det.cont72.2:                                     ; preds = %det.cont72.1.split, %det.cont72.1
  %129 = load double, double* %size, align 8, !tbaa !86
  %div40.3 = fmul fast double %129, 2.500000e-01
  %130 = load <2 x double>, <2 x double>* %31, align 8, !tbaa !18
  %131 = insertelement <2 x double> undef, double %div40.3, i32 0
  %132 = shufflevector <2 x double> %131, <2 x double> undef, <2 x i32> zeroinitializer
  %133 = fadd fast <2 x double> %132, %130
  %add.ptr43.3 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %newNodes, i64 3
  %add.ptr48.3 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %add.ptr43.3, i64 %idx.ext47
  %div51.3 = fmul fast double %129, 5.000000e-01
  %cnt.i.i.3 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %add.ptr48.3, i64 0, i32 2, i32 0
  store i32 0, i32* %cnt.i.i.3, align 4, !tbaa !85
  %count.i.3 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %add.ptr48.3, i64 0, i32 3
  store i32 0, i32* %count.i.3, align 4, !tbaa !80
  %size.i.3 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %add.ptr48.3, i64 0, i32 1
  store double %div51.3, double* %size.i.3, align 8, !tbaa !86
  %134 = bitcast %class.gTreeNode* %add.ptr48.3 to <2 x double>*
  store <2 x double> %133, <2 x double>* %134, align 8
  %vertices.i.3 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %add.ptr48.3, i64 0, i32 5
  %135 = bitcast %struct.vertex*** %vertices.i.3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull %135, i8 0, i64 16, i32 8, i1 false) #2
  %arrayidx54.3 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %parent, i64 0, i32 4, i64 3
  store %class.gTreeNode* %add.ptr48.3, %class.gTreeNode** %arrayidx54.3, align 8, !tbaa !53
  %136 = or i32 %shl7, 3
  tail call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii(%class.gTreeNode* %this, %struct.vertex** %S.coerce0, i64 %S.coerce1, i32* %offsets, i32 %quadrants, %class.gTreeNode* nonnull %add.ptr61, %class.gTreeNode* nonnull %add.ptr48.3, i32 %136, i32 %sub69, i32 %add70)
  br label %if.end
}

; Function Attrs: nounwind stealable uwtable
define linkonce_odr void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE15sortBlocksSmallEPPS5_iS1_Pi(%struct.vertex** %S, i32 %count, double %center.coerce0, double %center.coerce1, i32* %offsets) local_unnamed_addr #15 comdat align 2 {
entry:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %entry
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %entry, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %entry ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %entry ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %conv = sext i32 %count to i64
  %mul = shl nsw i64 %conv, 4
  %call1 = tail call noalias i8* @malloc(i64 %mul) #2
  %9 = bitcast i8* %call1 to %"struct.std::pair.6"*
  %cmp94 = icmp sgt i32 %count, 0
  br i1 %cmp94, label %for.body.lr.ph, label %while.body32.lr.ph

for.body.lr.ph:                                   ; preds = %__cilkrts_enter_frame_1.exit
  %wide.trip.count105 = zext i32 %count to i64
  %xtraiter163 = and i64 %wide.trip.count105, 1
  %10 = icmp eq i32 %count, 1
  br i1 %10, label %for.cond.cleanup.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter165 = sub nsw i64 %wide.trip.count105, %xtraiter163
  br label %for.body

for.cond.cleanup.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv103.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next104.1, %for.body ]
  %lcmp.mod164 = icmp eq i64 %xtraiter163, 0
  br i1 %lcmp.mod164, label %for.cond.cleanup, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond.cleanup.unr-lcssa
  %arrayidx3.epil = getelementptr inbounds %struct.vertex*, %struct.vertex** %S, i64 %indvars.iv103.unr
  %11 = load %struct.vertex*, %struct.vertex** %arrayidx3.epil, align 8, !tbaa !53
  %x.i.epil = getelementptr inbounds %struct.vertex, %struct.vertex* %11, i64 0, i32 1, i32 0
  %12 = load double, double* %x.i.epil, align 8, !tbaa !90
  %cmp.i.epil = fcmp fast ogt double %12, %center.coerce0
  %index.0.i.epil = zext i1 %cmp.i.epil to i32
  %y.i.epil = getelementptr inbounds %struct.vertex, %struct.vertex* %11, i64 0, i32 1, i32 1
  %13 = load double, double* %y.i.epil, align 8, !tbaa !91
  %cmp4.i.epil = fcmp fast ogt double %13, %center.coerce1
  %add6.i.epil = or i32 %index.0.i.epil, 2
  %index.1.i.epil = select i1 %cmp4.i.epil, i32 %add6.i.epil, i32 %index.0.i.epil
  %14 = ptrtoint %struct.vertex* %11 to i64
  %first2.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %9, i64 %indvars.iv103.unr, i32 0
  store i32 %index.1.i.epil, i32* %first2.i.epil, align 8, !tbaa !109
  %second4.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %9, i64 %indvars.iv103.unr, i32 1
  %15 = bitcast %struct.vertex** %second4.i.epil to i64*
  store i64 %14, i64* %15, align 8, !tbaa !111
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.unr-lcssa, %for.body.epil
  %cmp.i68 = icmp slt i32 %count, 256
  br i1 %cmp.i68, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %for.cond.cleanup
  %cmp20.i = icmp sgt i32 %count, 20
  br i1 %cmp20.i, label %while.body.lr.ph.i, label %while.end.i

while.body.lr.ph.i:                               ; preds = %if.then.i
  %sub.ptr.rhs.cast4.i = ptrtoint i8* %call1 to i64
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i, %while.body.lr.ph.i
  %n.addr.021.i = phi i32 [ %count, %while.body.lr.ph.i ], [ %conv.i, %while.body.i ]
  %call.i69 = tail call { %"struct.std::pair.6"*, %"struct.std::pair.6"* } bitcast ({ %"struct.std::pair.23"*, %"struct.std::pair.23"* } (%"struct.std::pair.23"*, i32)* @_Z5splitISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEiES0_IPT_SF_ESF_T1_T0_ to { %"struct.std::pair.6"*, %"struct.std::pair.6"* } (%"struct.std::pair.6"*, i32)*)(%"struct.std::pair.6"* %9, i32 %n.addr.021.i) #2
  %16 = extractvalue { %"struct.std::pair.6"*, %"struct.std::pair.6"* } %call.i69, 0
  %17 = extractvalue { %"struct.std::pair.6"*, %"struct.std::pair.6"* } %call.i69, 1
  %idx.ext.i70 = sext i32 %n.addr.021.i to i64
  %add.ptr.i71 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %9, i64 %idx.ext.i70
  %sub.ptr.lhs.cast.i72 = ptrtoint %"struct.std::pair.6"* %add.ptr.i71 to i64
  %sub.ptr.rhs.cast.i73 = ptrtoint %"struct.std::pair.6"* %17 to i64
  %sub.ptr.sub.i74 = sub i64 %sub.ptr.lhs.cast.i72, %sub.ptr.rhs.cast.i73
  %sub.ptr.div.i75 = ashr exact i64 %sub.ptr.sub.i74, 4
  tail call void @_Z15quickSortSerialISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.6"* %17, i64 %sub.ptr.div.i75) #2
  %sub.ptr.lhs.cast3.i = ptrtoint %"struct.std::pair.6"* %16 to i64
  %sub.ptr.sub5.i = sub i64 %sub.ptr.lhs.cast3.i, %sub.ptr.rhs.cast4.i
  %18 = lshr exact i64 %sub.ptr.sub5.i, 4
  %conv.i = trunc i64 %18 to i32
  %cmp.i76 = icmp sgt i32 %conv.i, 20
  br i1 %cmp.i76, label %while.body.i, label %while.end.i.loopexit

while.end.i.loopexit:                             ; preds = %while.body.i
  %conv.i.le = trunc i64 %18 to i32
  br label %while.end.i

while.end.i:                                      ; preds = %while.end.i.loopexit, %if.then.i
  %n.addr.0.lcssa.i = phi i32 [ %count, %if.then.i ], [ %conv.i.le, %while.end.i.loopexit ]
  %cmp37.i.i = icmp sgt i32 %n.addr.0.lcssa.i, 0
  br i1 %cmp37.i.i, label %for.body.lr.ph.i.i, label %for.body15.preheader

for.body.lr.ph.i.i:                               ; preds = %while.end.i
  %wide.trip.count.i.i = zext i32 %n.addr.0.lcssa.i to i64
  %xtraiter159 = and i64 %wide.trip.count.i.i, 1
  %19 = icmp eq i32 %n.addr.0.lcssa.i, 1
  br i1 %19, label %_Z9quickSortISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEiEvPT_T1_T0_.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.new

for.body.lr.ph.i.i.new:                           ; preds = %for.body.lr.ph.i.i
  %unroll_iter161 = sub nsw i64 %wide.trip.count.i.i, %xtraiter159
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %while.end.i.i.1, %for.body.lr.ph.i.i.new
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.new ], [ %indvars.iv.next.i.i.1, %while.end.i.i.1 ]
  %niter162 = phi i64 [ %unroll_iter161, %for.body.lr.ph.i.i.new ], [ %niter162.nsub.1, %while.end.i.i.1 ]
  %arrayidx.i.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %9, i64 %indvars.iv.i.i
  %v.sroa.0.0..sroa_idx.i.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %arrayidx.i.i, i64 0, i32 0
  %v.sroa.0.0.copyload.i.i = load i32, i32* %v.sroa.0.0..sroa_idx.i.i, align 8
  %v.sroa.528.0..sroa_idx29.i.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %9, i64 %indvars.iv.i.i, i32 1
  %v.sroa.528.0..sroa_cast30.i.i = bitcast %struct.vertex** %v.sroa.528.0..sroa_idx29.i.i to i64*
  %v.sroa.528.0.copyload.i.i = load i64, i64* %v.sroa.528.0..sroa_cast30.i.i, align 8
  %incdec.ptr32.i.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %arrayidx.i.i, i64 -1
  %cmp133.i.i = icmp ult %"struct.std::pair.6"* %incdec.ptr32.i.i, %9
  br i1 %cmp133.i.i, label %while.end.i.i, label %land.rhs.i.i.preheader

land.rhs.i.i.preheader:                           ; preds = %for.body.i.i
  br label %land.rhs.i.i

land.rhs.i.i:                                     ; preds = %land.rhs.i.i.preheader, %while.body.i.i
  %incdec.ptr35.i.i = phi %"struct.std::pair.6"* [ %incdec.ptr.i.i, %while.body.i.i ], [ %incdec.ptr32.i.i, %land.rhs.i.i.preheader ]
  %B.034.i.i = phi %"struct.std::pair.6"* [ %incdec.ptr35.i.i, %while.body.i.i ], [ %arrayidx.i.i, %land.rhs.i.i.preheader ]
  %agg.tmp2.sroa.0.0..sroa_idx.i.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %incdec.ptr35.i.i, i64 0, i32 0
  %agg.tmp2.sroa.0.0.copyload.i.i = load i32, i32* %agg.tmp2.sroa.0.0..sroa_idx.i.i, align 8
  %cmp.i.i.i = icmp slt i32 %v.sroa.0.0.copyload.i.i, %agg.tmp2.sroa.0.0.copyload.i.i
  %first2.i22.i.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.034.i.i, i64 0, i32 0
  br i1 %cmp.i.i.i, label %while.body.i.i, label %while.end.i.i

while.body.i.i:                                   ; preds = %land.rhs.i.i
  store i32 %agg.tmp2.sroa.0.0.copyload.i.i, i32* %first2.i22.i.i, align 8, !tbaa !109
  %second.i23.i.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.034.i.i, i64 -1, i32 1
  %20 = bitcast %struct.vertex** %second.i23.i.i to i64*
  %21 = load i64, i64* %20, align 8, !tbaa !111
  %second3.i24.i.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.034.i.i, i64 0, i32 1
  %22 = bitcast %struct.vertex** %second3.i24.i.i to i64*
  store i64 %21, i64* %22, align 8, !tbaa !111
  %incdec.ptr.i.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %incdec.ptr35.i.i, i64 -1
  %cmp1.i.i = icmp ult %"struct.std::pair.6"* %incdec.ptr.i.i, %9
  br i1 %cmp1.i.i, label %while.end.i.i.loopexit.split.loop.exit, label %land.rhs.i.i

while.end.i.i.loopexit.split.loop.exit:           ; preds = %while.body.i.i
  %agg.tmp2.sroa.0.0..sroa_idx.i.i.le = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %incdec.ptr35.i.i, i64 0, i32 0
  br label %while.end.i.i

while.end.i.i:                                    ; preds = %land.rhs.i.i, %while.end.i.i.loopexit.split.loop.exit, %for.body.i.i
  %first2.i.pre-phi.i.i = phi i32* [ %v.sroa.0.0..sroa_idx.i.i, %for.body.i.i ], [ %agg.tmp2.sroa.0.0..sroa_idx.i.i.le, %while.end.i.i.loopexit.split.loop.exit ], [ %first2.i22.i.i, %land.rhs.i.i ]
  %B.0.lcssa.i.i = phi %"struct.std::pair.6"* [ %arrayidx.i.i, %for.body.i.i ], [ %incdec.ptr35.i.i, %while.end.i.i.loopexit.split.loop.exit ], [ %B.034.i.i, %land.rhs.i.i ]
  store i32 %v.sroa.0.0.copyload.i.i, i32* %first2.i.pre-phi.i.i, align 8, !tbaa !109
  %second3.i.i.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.0.lcssa.i.i, i64 0, i32 1
  %23 = bitcast %struct.vertex** %second3.i.i.i to i64*
  store i64 %v.sroa.528.0.copyload.i.i, i64* %23, align 8, !tbaa !111
  %indvars.iv.next.i.i = or i64 %indvars.iv.i.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %9, i64 %indvars.iv.next.i.i
  %v.sroa.0.0..sroa_idx.i.i.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %arrayidx.i.i.1, i64 0, i32 0
  %v.sroa.0.0.copyload.i.i.1 = load i32, i32* %v.sroa.0.0..sroa_idx.i.i.1, align 8
  %v.sroa.528.0..sroa_idx29.i.i.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %9, i64 %indvars.iv.next.i.i, i32 1
  %v.sroa.528.0..sroa_cast30.i.i.1 = bitcast %struct.vertex** %v.sroa.528.0..sroa_idx29.i.i.1 to i64*
  %v.sroa.528.0.copyload.i.i.1 = load i64, i64* %v.sroa.528.0..sroa_cast30.i.i.1, align 8
  %cmp133.i.i.1 = icmp ult %"struct.std::pair.6"* %arrayidx.i.i, %9
  br i1 %cmp133.i.i.1, label %while.end.i.i.1, label %land.rhs.i.i.1.preheader

land.rhs.i.i.1.preheader:                         ; preds = %while.end.i.i
  br label %land.rhs.i.i.1

if.else.i:                                        ; preds = %for.cond.cleanup
  %call.i = tail call { %"struct.std::pair.6"*, %"struct.std::pair.6"* } bitcast ({ %"struct.std::pair.23"*, %"struct.std::pair.23"* } (%"struct.std::pair.23"*, i32)* @_Z5splitISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEiES0_IPT_SF_ESF_T1_T0_ to { %"struct.std::pair.6"*, %"struct.std::pair.6"* } (%"struct.std::pair.6"*, i32)*)(%"struct.std::pair.6"* %9, i32 %count) #2
  %24 = extractvalue { %"struct.std::pair.6"*, %"struct.std::pair.6"* } %call.i, 1
  %25 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %26 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %25, i16* nonnull %26) #2
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %28 = call i8* @llvm.frameaddress(i32 0)
  %29 = getelementptr inbounds [5 x i8*], [5 x i8*]* %27, i64 0, i64 0
  store volatile i8* %28, i8** %29, align 8
  %30 = call i8* @llvm.stacksave()
  %31 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %30, i8** %31, align 8
  %32 = bitcast [5 x i8*]* %27 to i8*
  %33 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %32) #23
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %if.else.i.split, label %det.cont.i

if.else.i.split:                                  ; preds = %if.else.i
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE15sortBlocksSmallEPPS5_iS1_Pi_det.achd.i.cilk({ %"struct.std::pair.6"*, %"struct.std::pair.6"* } %call.i, i8* %call1, %"struct.std::pair.6"* %9)
  br label %det.cont.i

det.cont.i:                                       ; preds = %if.else.i.split, %if.else.i
  %add.ptr.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %9, i64 %conv
  %sub.ptr.lhs.cast4.i = ptrtoint %"struct.std::pair.6"* %add.ptr.i to i64
  %sub.ptr.rhs.cast5.i = ptrtoint %"struct.std::pair.6"* %24 to i64
  %sub.ptr.sub6.i = sub i64 %sub.ptr.lhs.cast4.i, %sub.ptr.rhs.cast5.i
  %sub.ptr.div7.i = ashr exact i64 %sub.ptr.sub6.i, 4
  tail call void @_Z9quickSortISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.6"* %24, i64 %sub.ptr.div7.i) #2
  %35 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %36 = load atomic i32, i32* %35 acquire, align 8
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %det.cont.i
  %39 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %25, i16* nonnull %26) #2
  store volatile i8* %28, i8** %29, align 8
  %40 = call i8* @llvm.stacksave() #2
  store volatile i8* %40, i8** %31, align 8
  %41 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %32) #24
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %det.cont.i, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %43 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %43, i64 0, i32 12, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %44, align 8
  br label %for.body15.preheader

for.body15.preheader:                             ; preds = %while.end.i, %_Z9quickSortISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEiEvPT_T1_T0_.exit.loopexit.unr-lcssa, %while.end.i.i.epil, %__cilk_sync_nothrow.exit
  br label %for.body15

_Z9quickSortISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEiEvPT_T1_T0_.exit.loopexit.unr-lcssa: ; preds = %while.end.i.i.1, %for.body.lr.ph.i.i
  %indvars.iv.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i.1, %while.end.i.i.1 ]
  %lcmp.mod160 = icmp eq i64 %xtraiter159, 0
  br i1 %lcmp.mod160, label %for.body15.preheader, label %for.body.i.i.epil

for.body.i.i.epil:                                ; preds = %_Z9quickSortISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEiEvPT_T1_T0_.exit.loopexit.unr-lcssa
  %arrayidx.i.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %9, i64 %indvars.iv.i.i.unr
  %v.sroa.0.0..sroa_idx.i.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %arrayidx.i.i.epil, i64 0, i32 0
  %v.sroa.0.0.copyload.i.i.epil = load i32, i32* %v.sroa.0.0..sroa_idx.i.i.epil, align 8
  %v.sroa.528.0..sroa_idx29.i.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %9, i64 %indvars.iv.i.i.unr, i32 1
  %v.sroa.528.0..sroa_cast30.i.i.epil = bitcast %struct.vertex** %v.sroa.528.0..sroa_idx29.i.i.epil to i64*
  %v.sroa.528.0.copyload.i.i.epil = load i64, i64* %v.sroa.528.0..sroa_cast30.i.i.epil, align 8
  %incdec.ptr32.i.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %arrayidx.i.i.epil, i64 -1
  %cmp133.i.i.epil = icmp ult %"struct.std::pair.6"* %incdec.ptr32.i.i.epil, %9
  br i1 %cmp133.i.i.epil, label %while.end.i.i.epil, label %land.rhs.i.i.epil.preheader

land.rhs.i.i.epil.preheader:                      ; preds = %for.body.i.i.epil
  br label %land.rhs.i.i.epil

land.rhs.i.i.epil:                                ; preds = %land.rhs.i.i.epil.preheader, %while.body.i.i.epil
  %incdec.ptr35.i.i.epil = phi %"struct.std::pair.6"* [ %incdec.ptr.i.i.epil, %while.body.i.i.epil ], [ %incdec.ptr32.i.i.epil, %land.rhs.i.i.epil.preheader ]
  %B.034.i.i.epil = phi %"struct.std::pair.6"* [ %incdec.ptr35.i.i.epil, %while.body.i.i.epil ], [ %arrayidx.i.i.epil, %land.rhs.i.i.epil.preheader ]
  %agg.tmp2.sroa.0.0..sroa_idx.i.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %incdec.ptr35.i.i.epil, i64 0, i32 0
  %agg.tmp2.sroa.0.0.copyload.i.i.epil = load i32, i32* %agg.tmp2.sroa.0.0..sroa_idx.i.i.epil, align 8
  %cmp.i.i.i.epil = icmp slt i32 %v.sroa.0.0.copyload.i.i.epil, %agg.tmp2.sroa.0.0.copyload.i.i.epil
  %first2.i22.i.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.034.i.i.epil, i64 0, i32 0
  br i1 %cmp.i.i.i.epil, label %while.body.i.i.epil, label %while.end.i.i.epil

while.body.i.i.epil:                              ; preds = %land.rhs.i.i.epil
  store i32 %agg.tmp2.sroa.0.0.copyload.i.i.epil, i32* %first2.i22.i.i.epil, align 8, !tbaa !109
  %second.i23.i.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.034.i.i.epil, i64 -1, i32 1
  %47 = bitcast %struct.vertex** %second.i23.i.i.epil to i64*
  %48 = load i64, i64* %47, align 8, !tbaa !111
  %second3.i24.i.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.034.i.i.epil, i64 0, i32 1
  %49 = bitcast %struct.vertex** %second3.i24.i.i.epil to i64*
  store i64 %48, i64* %49, align 8, !tbaa !111
  %incdec.ptr.i.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %incdec.ptr35.i.i.epil, i64 -1
  %cmp1.i.i.epil = icmp ult %"struct.std::pair.6"* %incdec.ptr.i.i.epil, %9
  br i1 %cmp1.i.i.epil, label %while.end.i.i.epil.loopexit.split.loop.exit, label %land.rhs.i.i.epil

while.end.i.i.epil.loopexit.split.loop.exit:      ; preds = %while.body.i.i.epil
  %agg.tmp2.sroa.0.0..sroa_idx.i.i.epil.le = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %incdec.ptr35.i.i.epil, i64 0, i32 0
  br label %while.end.i.i.epil

while.end.i.i.epil:                               ; preds = %land.rhs.i.i.epil, %while.end.i.i.epil.loopexit.split.loop.exit, %for.body.i.i.epil
  %first2.i.pre-phi.i.i.epil = phi i32* [ %v.sroa.0.0..sroa_idx.i.i.epil, %for.body.i.i.epil ], [ %agg.tmp2.sroa.0.0..sroa_idx.i.i.epil.le, %while.end.i.i.epil.loopexit.split.loop.exit ], [ %first2.i22.i.i.epil, %land.rhs.i.i.epil ]
  %B.0.lcssa.i.i.epil = phi %"struct.std::pair.6"* [ %arrayidx.i.i.epil, %for.body.i.i.epil ], [ %incdec.ptr35.i.i.epil, %while.end.i.i.epil.loopexit.split.loop.exit ], [ %B.034.i.i.epil, %land.rhs.i.i.epil ]
  store i32 %v.sroa.0.0.copyload.i.i.epil, i32* %first2.i.pre-phi.i.i.epil, align 8, !tbaa !109
  %second3.i.i.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.0.lcssa.i.i.epil, i64 0, i32 1
  %50 = bitcast %struct.vertex** %second3.i.i.i.epil to i64*
  store i64 %v.sroa.528.0.copyload.i.i.epil, i64* %50, align 8, !tbaa !111
  br label %for.body15.preheader

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv103 = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next104.1, %for.body ]
  %niter166 = phi i64 [ %unroll_iter165, %for.body.lr.ph.new ], [ %niter166.nsub.1, %for.body ]
  %arrayidx3 = getelementptr inbounds %struct.vertex*, %struct.vertex** %S, i64 %indvars.iv103
  %51 = load %struct.vertex*, %struct.vertex** %arrayidx3, align 8, !tbaa !53
  %x.i = getelementptr inbounds %struct.vertex, %struct.vertex* %51, i64 0, i32 1, i32 0
  %52 = load double, double* %x.i, align 8, !tbaa !90
  %cmp.i = fcmp fast ogt double %52, %center.coerce0
  %index.0.i = zext i1 %cmp.i to i32
  %y.i = getelementptr inbounds %struct.vertex, %struct.vertex* %51, i64 0, i32 1, i32 1
  %53 = load double, double* %y.i, align 8, !tbaa !91
  %cmp4.i = fcmp fast ogt double %53, %center.coerce1
  %add6.i = or i32 %index.0.i, 2
  %index.1.i = select i1 %cmp4.i, i32 %add6.i, i32 %index.0.i
  %54 = ptrtoint %struct.vertex* %51 to i64
  %first2.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %9, i64 %indvars.iv103, i32 0
  store i32 %index.1.i, i32* %first2.i, align 8, !tbaa !109
  %second4.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %9, i64 %indvars.iv103, i32 1
  %55 = bitcast %struct.vertex** %second4.i to i64*
  store i64 %54, i64* %55, align 8, !tbaa !111
  %indvars.iv.next104 = or i64 %indvars.iv103, 1
  %arrayidx3.1 = getelementptr inbounds %struct.vertex*, %struct.vertex** %S, i64 %indvars.iv.next104
  %56 = load %struct.vertex*, %struct.vertex** %arrayidx3.1, align 8, !tbaa !53
  %x.i.1 = getelementptr inbounds %struct.vertex, %struct.vertex* %56, i64 0, i32 1, i32 0
  %57 = load double, double* %x.i.1, align 8, !tbaa !90
  %cmp.i.1 = fcmp fast ogt double %57, %center.coerce0
  %index.0.i.1 = zext i1 %cmp.i.1 to i32
  %y.i.1 = getelementptr inbounds %struct.vertex, %struct.vertex* %56, i64 0, i32 1, i32 1
  %58 = load double, double* %y.i.1, align 8, !tbaa !91
  %cmp4.i.1 = fcmp fast ogt double %58, %center.coerce1
  %add6.i.1 = or i32 %index.0.i.1, 2
  %index.1.i.1 = select i1 %cmp4.i.1, i32 %add6.i.1, i32 %index.0.i.1
  %59 = ptrtoint %struct.vertex* %56 to i64
  %first2.i.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %9, i64 %indvars.iv.next104, i32 0
  store i32 %index.1.i.1, i32* %first2.i.1, align 8, !tbaa !109
  %second4.i.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %9, i64 %indvars.iv.next104, i32 1
  %60 = bitcast %struct.vertex** %second4.i.1 to i64*
  store i64 %59, i64* %60, align 8, !tbaa !111
  %indvars.iv.next104.1 = add nuw nsw i64 %indvars.iv103, 2
  %niter166.nsub.1 = add i64 %niter166, -2
  %niter166.ncmp.1 = icmp eq i64 %niter166.nsub.1, 0
  br i1 %niter166.ncmp.1, label %for.cond.cleanup.unr-lcssa, label %for.body

for.cond.cleanup14:                               ; preds = %for.inc26
  %cmp3183 = icmp slt i32 %j.1.lcssa, 3
  br i1 %cmp3183, label %while.body32.lr.ph, label %while.end35

while.body32.lr.ph:                               ; preds = %__cilkrts_enter_frame_1.exit, %for.cond.cleanup14
  %j.0.lcssa111 = phi i32 [ %j.1.lcssa, %for.cond.cleanup14 ], [ -1, %__cilkrts_enter_frame_1.exit ]
  %61 = sext i32 %j.0.lcssa111 to i64
  %62 = icmp sgt i64 %61, 2
  %smax = select i1 %62, i64 %61, i64 2
  %63 = sub nsw i64 1, %61
  %64 = add nsw i64 %63, %smax
  %min.iters.check132 = icmp ult i64 %64, 32
  br i1 %min.iters.check132, label %while.body32.preheader, label %vector.ph133

while.body32.preheader:                           ; preds = %middle.block130, %while.body32.lr.ph
  %indvars.iv.ph = phi i64 [ %ind.end139, %middle.block130 ], [ %61, %while.body32.lr.ph ]
  br label %while.body32

vector.ph133:                                     ; preds = %while.body32.lr.ph
  %n.vec135 = and i64 %64, -32
  %ind.end139 = add nsw i64 %n.vec135, %61
  %broadcast.splatinsert148 = insertelement <8 x i32> undef, i32 %count, i32 0
  %broadcast.splat149 = shufflevector <8 x i32> %broadcast.splatinsert148, <8 x i32> undef, <8 x i32> zeroinitializer
  %65 = add nsw i64 %n.vec135, -32
  %66 = lshr exact i64 %65, 5
  %67 = add nuw nsw i64 %66, 1
  %xtraiter = and i64 %67, 3
  %68 = icmp ult i64 %65, 96
  br i1 %68, label %middle.block130.unr-lcssa, label %vector.ph133.new

vector.ph133.new:                                 ; preds = %vector.ph133
  %unroll_iter = sub nsw i64 %67, %xtraiter
  %69 = add nsw i64 %61, 1
  br label %vector.body129

vector.body129:                                   ; preds = %vector.body129, %vector.ph133.new
  %index136 = phi i64 [ 0, %vector.ph133.new ], [ %index.next137.3, %vector.body129 ]
  %niter = phi i64 [ %unroll_iter, %vector.ph133.new ], [ %niter.nsub.3, %vector.body129 ]
  %70 = add i64 %69, %index136
  %71 = getelementptr inbounds i32, i32* %offsets, i64 %70
  %72 = bitcast i32* %71 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %72, align 4, !tbaa !59
  %73 = getelementptr i32, i32* %71, i64 8
  %74 = bitcast i32* %73 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %74, align 4, !tbaa !59
  %75 = getelementptr i32, i32* %71, i64 16
  %76 = bitcast i32* %75 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %76, align 4, !tbaa !59
  %77 = getelementptr i32, i32* %71, i64 24
  %78 = bitcast i32* %77 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %78, align 4, !tbaa !59
  %index.next137 = or i64 %index136, 32
  %79 = add i64 %69, %index.next137
  %80 = getelementptr inbounds i32, i32* %offsets, i64 %79
  %81 = bitcast i32* %80 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %81, align 4, !tbaa !59
  %82 = getelementptr i32, i32* %80, i64 8
  %83 = bitcast i32* %82 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %83, align 4, !tbaa !59
  %84 = getelementptr i32, i32* %80, i64 16
  %85 = bitcast i32* %84 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %85, align 4, !tbaa !59
  %86 = getelementptr i32, i32* %80, i64 24
  %87 = bitcast i32* %86 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %87, align 4, !tbaa !59
  %index.next137.1 = or i64 %index136, 64
  %88 = add i64 %69, %index.next137.1
  %89 = getelementptr inbounds i32, i32* %offsets, i64 %88
  %90 = bitcast i32* %89 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %90, align 4, !tbaa !59
  %91 = getelementptr i32, i32* %89, i64 8
  %92 = bitcast i32* %91 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %92, align 4, !tbaa !59
  %93 = getelementptr i32, i32* %89, i64 16
  %94 = bitcast i32* %93 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %94, align 4, !tbaa !59
  %95 = getelementptr i32, i32* %89, i64 24
  %96 = bitcast i32* %95 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %96, align 4, !tbaa !59
  %index.next137.2 = or i64 %index136, 96
  %97 = add i64 %69, %index.next137.2
  %98 = getelementptr inbounds i32, i32* %offsets, i64 %97
  %99 = bitcast i32* %98 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %99, align 4, !tbaa !59
  %100 = getelementptr i32, i32* %98, i64 8
  %101 = bitcast i32* %100 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %101, align 4, !tbaa !59
  %102 = getelementptr i32, i32* %98, i64 16
  %103 = bitcast i32* %102 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %103, align 4, !tbaa !59
  %104 = getelementptr i32, i32* %98, i64 24
  %105 = bitcast i32* %104 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %105, align 4, !tbaa !59
  %index.next137.3 = add i64 %index136, 128
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %middle.block130.unr-lcssa, label %vector.body129, !llvm.loop !112

middle.block130.unr-lcssa:                        ; preds = %vector.body129, %vector.ph133
  %index136.unr = phi i64 [ 0, %vector.ph133 ], [ %index.next137.3, %vector.body129 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block130, label %vector.body129.epil.preheader

vector.body129.epil.preheader:                    ; preds = %middle.block130.unr-lcssa
  %106 = add nsw i64 %61, 1
  br label %vector.body129.epil

vector.body129.epil:                              ; preds = %vector.body129.epil, %vector.body129.epil.preheader
  %index136.epil = phi i64 [ %index136.unr, %vector.body129.epil.preheader ], [ %index.next137.epil, %vector.body129.epil ]
  %epil.iter = phi i64 [ %xtraiter, %vector.body129.epil.preheader ], [ %epil.iter.sub, %vector.body129.epil ]
  %107 = add i64 %106, %index136.epil
  %108 = getelementptr inbounds i32, i32* %offsets, i64 %107
  %109 = bitcast i32* %108 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %109, align 4, !tbaa !59
  %110 = getelementptr i32, i32* %108, i64 8
  %111 = bitcast i32* %110 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %111, align 4, !tbaa !59
  %112 = getelementptr i32, i32* %108, i64 16
  %113 = bitcast i32* %112 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %113, align 4, !tbaa !59
  %114 = getelementptr i32, i32* %108, i64 24
  %115 = bitcast i32* %114 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %115, align 4, !tbaa !59
  %index.next137.epil = add i64 %index136.epil, 32
  %epil.iter.sub = add nsw i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block130, label %vector.body129.epil, !llvm.loop !113

middle.block130:                                  ; preds = %vector.body129.epil, %middle.block130.unr-lcssa
  %cmp.n140 = icmp eq i64 %64, %n.vec135
  br i1 %cmp.n140, label %while.end35, label %while.body32.preheader

for.body15:                                       ; preds = %for.body15.preheader, %for.inc26
  %indvars.iv101 = phi i64 [ %indvars.iv.next102, %for.inc26 ], [ 0, %for.body15.preheader ]
  %j.088 = phi i32 [ %j.1.lcssa, %for.inc26 ], [ -1, %for.body15.preheader ]
  %second = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %9, i64 %indvars.iv101, i32 1
  %116 = bitcast %struct.vertex** %second to i64*
  %117 = load i64, i64* %116, align 8, !tbaa !111
  %arrayidx19 = getelementptr inbounds %struct.vertex*, %struct.vertex** %S, i64 %indvars.iv101
  %118 = bitcast %struct.vertex** %arrayidx19 to i64*
  store i64 %117, i64* %118, align 8, !tbaa !53
  %first = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %9, i64 %indvars.iv101, i32 0
  %119 = load i32, i32* %first, align 8, !tbaa !109
  %cmp2285 = icmp eq i32 %119, %j.088
  br i1 %cmp2285, label %for.inc26, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %for.body15
  %120 = sext i32 %j.088 to i64
  %121 = trunc i64 %indvars.iv101 to i32
  %122 = xor i32 %j.088, -1
  %123 = add i32 %119, %122
  %124 = zext i32 %123 to i64
  %125 = add nuw nsw i64 %124, 1
  %min.iters.check = icmp ult i64 %125, 32
  br i1 %min.iters.check, label %while.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %while.body.lr.ph
  %126 = add i32 %123, 1
  %127 = and i32 %126, 31
  %n.mod.vf = zext i32 %127 to i64
  %n.vec = sub nsw i64 %125, %n.mod.vf
  %broadcast.splatinsert121 = insertelement <8 x i32> undef, i32 %121, i32 0
  %broadcast.splat122 = shufflevector <8 x i32> %broadcast.splatinsert121, <8 x i32> undef, <8 x i32> zeroinitializer
  %128 = add nsw i64 %120, 1
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %129 = add i64 %128, %index
  %130 = getelementptr inbounds i32, i32* %offsets, i64 %129
  %131 = bitcast i32* %130 to <8 x i32>*
  store <8 x i32> %broadcast.splat122, <8 x i32>* %131, align 4, !tbaa !59
  %132 = getelementptr i32, i32* %130, i64 8
  %133 = bitcast i32* %132 to <8 x i32>*
  store <8 x i32> %broadcast.splat122, <8 x i32>* %133, align 4, !tbaa !59
  %134 = getelementptr i32, i32* %130, i64 16
  %135 = bitcast i32* %134 to <8 x i32>*
  store <8 x i32> %broadcast.splat122, <8 x i32>* %135, align 4, !tbaa !59
  %136 = getelementptr i32, i32* %130, i64 24
  %137 = bitcast i32* %136 to <8 x i32>*
  store <8 x i32> %broadcast.splat122, <8 x i32>* %137, align 4, !tbaa !59
  %index.next = add i64 %index, 32
  %138 = icmp eq i64 %index.next, %n.vec
  br i1 %138, label %middle.block, label %vector.body, !llvm.loop !114

middle.block:                                     ; preds = %vector.body
  %ind.end = add nsw i64 %n.vec, %120
  %cmp.n = icmp eq i32 %127, 0
  br i1 %cmp.n, label %for.inc26, label %while.body.preheader

while.body.preheader:                             ; preds = %middle.block, %while.body.lr.ph
  %indvars.iv99.ph = phi i64 [ %ind.end, %middle.block ], [ %120, %while.body.lr.ph ]
  br label %while.body

while.body:                                       ; preds = %while.body.preheader, %while.body
  %indvars.iv99 = phi i64 [ %indvars.iv.next100, %while.body ], [ %indvars.iv99.ph, %while.body.preheader ]
  %indvars.iv.next100 = add nsw i64 %indvars.iv99, 1
  %arrayidx25 = getelementptr inbounds i32, i32* %offsets, i64 %indvars.iv.next100
  store i32 %121, i32* %arrayidx25, align 4, !tbaa !59
  %139 = trunc i64 %indvars.iv.next100 to i32
  %cmp22 = icmp eq i32 %119, %139
  br i1 %cmp22, label %for.inc26, label %while.body, !llvm.loop !115

for.inc26:                                        ; preds = %while.body, %middle.block, %for.body15
  %j.1.lcssa = phi i32 [ %j.088, %for.body15 ], [ %119, %middle.block ], [ %119, %while.body ]
  %indvars.iv.next102 = add nuw nsw i64 %indvars.iv101, 1
  %exitcond = icmp eq i64 %indvars.iv.next102, %wide.trip.count105
  br i1 %exitcond, label %for.cond.cleanup14, label %for.body15

while.body32:                                     ; preds = %while.body32.preheader, %while.body32
  %indvars.iv = phi i64 [ %indvars.iv.next, %while.body32 ], [ %indvars.iv.ph, %while.body32.preheader ]
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %arrayidx34 = getelementptr inbounds i32, i32* %offsets, i64 %indvars.iv.next
  store i32 %count, i32* %arrayidx34, align 4, !tbaa !59
  %cmp31 = icmp slt i64 %indvars.iv, 2
  br i1 %cmp31, label %while.body32, label %while.end35, !llvm.loop !116

while.end35:                                      ; preds = %while.body32, %middle.block130, %for.cond.cleanup14
  tail call void @free(i8* %call1) #2
  %140 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %141 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %140, i64 0, i32 9
  %144 = bitcast %struct.__cilkrts_stack_frame** %143 to i64*
  store atomic i64 %142, i64* %144 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %145 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %146 = load atomic i32, i32* %145 acquire, align 8
  %147 = icmp eq i32 %146, 16777216
  br i1 %147, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %while.end35
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %while.end35, %body.i
  ret void

land.rhs.i.i.1:                                   ; preds = %land.rhs.i.i.1.preheader, %while.body.i.i.1
  %incdec.ptr35.i.i.1 = phi %"struct.std::pair.6"* [ %incdec.ptr.i.i.1, %while.body.i.i.1 ], [ %arrayidx.i.i, %land.rhs.i.i.1.preheader ]
  %B.034.i.i.1 = phi %"struct.std::pair.6"* [ %incdec.ptr35.i.i.1, %while.body.i.i.1 ], [ %arrayidx.i.i.1, %land.rhs.i.i.1.preheader ]
  %agg.tmp2.sroa.0.0..sroa_idx.i.i.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %incdec.ptr35.i.i.1, i64 0, i32 0
  %agg.tmp2.sroa.0.0.copyload.i.i.1 = load i32, i32* %agg.tmp2.sroa.0.0..sroa_idx.i.i.1, align 8
  %cmp.i.i.i.1 = icmp slt i32 %v.sroa.0.0.copyload.i.i.1, %agg.tmp2.sroa.0.0.copyload.i.i.1
  %first2.i22.i.i.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.034.i.i.1, i64 0, i32 0
  br i1 %cmp.i.i.i.1, label %while.body.i.i.1, label %while.end.i.i.1

while.body.i.i.1:                                 ; preds = %land.rhs.i.i.1
  store i32 %agg.tmp2.sroa.0.0.copyload.i.i.1, i32* %first2.i22.i.i.1, align 8, !tbaa !109
  %second.i23.i.i.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.034.i.i.1, i64 -1, i32 1
  %148 = bitcast %struct.vertex** %second.i23.i.i.1 to i64*
  %149 = load i64, i64* %148, align 8, !tbaa !111
  %second3.i24.i.i.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.034.i.i.1, i64 0, i32 1
  %150 = bitcast %struct.vertex** %second3.i24.i.i.1 to i64*
  store i64 %149, i64* %150, align 8, !tbaa !111
  %incdec.ptr.i.i.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %incdec.ptr35.i.i.1, i64 -1
  %cmp1.i.i.1 = icmp ult %"struct.std::pair.6"* %incdec.ptr.i.i.1, %9
  br i1 %cmp1.i.i.1, label %while.end.i.i.1.loopexit.split.loop.exit, label %land.rhs.i.i.1

while.end.i.i.1.loopexit.split.loop.exit:         ; preds = %while.body.i.i.1
  %agg.tmp2.sroa.0.0..sroa_idx.i.i.1.le = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %incdec.ptr35.i.i.1, i64 0, i32 0
  br label %while.end.i.i.1

while.end.i.i.1:                                  ; preds = %land.rhs.i.i.1, %while.end.i.i.1.loopexit.split.loop.exit, %while.end.i.i
  %first2.i.pre-phi.i.i.1 = phi i32* [ %v.sroa.0.0..sroa_idx.i.i.1, %while.end.i.i ], [ %agg.tmp2.sroa.0.0..sroa_idx.i.i.1.le, %while.end.i.i.1.loopexit.split.loop.exit ], [ %first2.i22.i.i.1, %land.rhs.i.i.1 ]
  %B.0.lcssa.i.i.1 = phi %"struct.std::pair.6"* [ %arrayidx.i.i.1, %while.end.i.i ], [ %incdec.ptr35.i.i.1, %while.end.i.i.1.loopexit.split.loop.exit ], [ %B.034.i.i.1, %land.rhs.i.i.1 ]
  store i32 %v.sroa.0.0.copyload.i.i.1, i32* %first2.i.pre-phi.i.i.1, align 8, !tbaa !109
  %second3.i.i.i.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.0.lcssa.i.i.1, i64 0, i32 1
  %151 = bitcast %struct.vertex** %second3.i.i.i.1 to i64*
  store i64 %v.sroa.528.0.copyload.i.i.1, i64* %151, align 8, !tbaa !111
  %indvars.iv.next.i.i.1 = add nuw nsw i64 %indvars.iv.i.i, 2
  %niter162.nsub.1 = add i64 %niter162, -2
  %niter162.ncmp.1 = icmp eq i64 %niter162.nsub.1, 0
  br i1 %niter162.ncmp.1, label %_Z9quickSortISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEiEvPT_T1_T0_.exit.loopexit.unr-lcssa, label %for.body.i.i
}

; Function Attrs: nounwind uwtable
define linkonce_odr %class.gTreeNode* @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i(%struct.vertex** %S.coerce0, i64 %S.coerce1, double %cnt.coerce0, double %cnt.coerce1, double %sz, %class.gTreeNode* %newNodes, i32 %numNewNodes) local_unnamed_addr #7 comdat align 2 {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %cmp = icmp slt i32 %numNewNodes, 1
  %0 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %1 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp to %union.anon.1**
  store %union.anon.1* %0, %union.anon.1** %1, align 8, !tbaa !47
  %2 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #2
  store i64 17, i64* %__dnew.i.i.i.i, align 8, !tbaa !49
  %call5.i.i.i.i = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i, i64 0) #2
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i.i, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !50
  %3 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !49
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2, i32 0
  store i64 %3, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call5.i.i.i.i, i8* nonnull getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i64 17, i32 1, i1 false) #2
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 1
  store i64 %3, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !52
  %4 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !50
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %4, i64 %3
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #2
  br i1 %cmp, label %if.then.i, label %_ZN5utilsL8myAssertEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit

if.then.i:                                        ; preds = %entry
  %call.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.tmp) #2
  %call.i.i7 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call.i) #2
  call void @abort() #21
  unreachable

_ZN5utilsL8myAssertEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit: ; preds = %entry
  %5 = bitcast %union.anon.1* %0 to i8*
  %6 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !50
  %cmp.i.i.i = icmp eq i8* %6, %5
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %_ZN5utilsL8myAssertEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit
  call void @_ZdlPv(i8* %6) #2
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %_ZN5utilsL8myAssertEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit, %if.then.i.i
  %add.ptr = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %newNodes, i64 1
  %sub = add nsw i32 %numNewNodes, -1
  call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i(%class.gTreeNode* %newNodes, %struct.vertex** %S.coerce0, i64 %S.coerce1, double %cnt.coerce0, double %cnt.coerce1, double %sz, %class.gTreeNode* nonnull %add.ptr, i32 %sub)
  ret %class.gTreeNode* %newNodes
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.log2.f64(double) #16

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1_(%"struct.std::pair.6"* %A, i32* %bucketOffsets, i64 %n, i64 %m, i1 zeroext %bottomUp, i8* %tmpSpace) local_unnamed_addr #7 comdat {
entry:
  %0 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8185 = shl i32 %0, 3
  %agg.tmp.i = alloca %"struct.intSort::eBits", align 8
  %agg.tmp = alloca %"struct.intSort::eBits", align 8
  %cmp6.i = icmp sgt i64 %m, 1
  br i1 %cmp6.i, label %while.body.lr.ph.i, label %_ZN5utilsL6log2UpIlEEiT_.exit

while.body.lr.ph.i:                               ; preds = %entry
  %sub.i = add nsw i64 %m, -1
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i, %while.body.lr.ph.i
  %b.08.i = phi i64 [ %sub.i, %while.body.lr.ph.i ], [ %shr5.i, %while.body.i ]
  %a.07.i = phi i32 [ 0, %while.body.lr.ph.i ], [ %inc.i, %while.body.i ]
  %shr5.i = lshr i64 %b.08.i, 1
  %inc.i = add nuw nsw i32 %a.07.i, 1
  %cmp.i = icmp eq i64 %shr5.i, 0
  br i1 %cmp.i, label %_ZN5utilsL6log2UpIlEEiT_.exit, label %while.body.i

_ZN5utilsL6log2UpIlEEiT_.exit:                    ; preds = %while.body.i, %entry
  %a.0.lcssa.i = phi i32 [ 0, %entry ], [ %inc.i, %while.body.i ]
  %conv = sext i32 %a.0.lcssa.i to i64
  %div = sdiv i64 %n, 2048
  %add = add nsw i64 %div, 1
  %1 = bitcast i8* %tmpSpace to %"struct.std::pair.6"*
  %mul = shl i64 %n, 4
  %add.ptr = getelementptr inbounds i8, i8* %tmpSpace, i64 %mul
  %add.ptr3 = getelementptr inbounds i8, i8* %add.ptr, i64 %n
  %2 = bitcast i8* %add.ptr3 to [256 x i32]*
  %cmp = icmp slt i32 %a.0.lcssa.i, 9
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %_ZN5utilsL6log2UpIlEEiT_.exit
  %shl = shl i64 1, %conv
  %_mask.i = getelementptr inbounds %"struct.intSort::eBits", %"struct.intSort::eBits"* %agg.tmp, i64 0, i32 1
  %shl.i = shl i32 1, %a.0.lcssa.i
  %sub.i169 = add nsw i32 %shl.i, -1
  %conv.i = sext i32 %sub.i169 to i64
  store i64 %conv.i, i64* %_mask.i, align 8, !tbaa !117
  %_offset.i = getelementptr inbounds %"struct.intSort::eBits", %"struct.intSort::eBits"* %agg.tmp, i64 0, i32 2
  store i64 0, i64* %_offset.i, align 8, !tbaa !120
  call void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_(%"struct.std::pair.6"* %A, %"struct.std::pair.6"* %1, i8* %add.ptr, [256 x i32]* %2, i64 %add, i64 %n, i64 %shl, i1 zeroext true, %"struct.intSort::eBits"* byval nonnull align 8 %agg.tmp)
  %cmp5 = icmp ne i32* %bucketOffsets, null
  %cmp10176 = icmp sgt i64 %m, 0
  %or.cond = and i1 %cmp5, %cmp10176
  br i1 %or.cond, label %pfor.detach.preheader, label %cleanup

pfor.detach.preheader:                            ; preds = %if.then
  %3 = add i64 %m, -1
  %4 = zext i32 %__cilkrts_wc8185 to i64
  %5 = add i64 %m, -2
  %6 = add i64 %5, %4
  %7 = udiv i64 %6, %4
  %8 = icmp ult i64 %7, 2048
  %9 = select i1 %8, i64 %7, i64 2048
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach.ls(i64 0, i64 %3, i64 %9, [256 x i32]* %2, i32* nonnull %bucketOffsets)
  br label %cleanup

if.else:                                          ; preds = %_ZN5utilsL6log2UpIlEEiT_.exit
  br i1 %bottomUp, label %while.body.lr.ph.i171, label %if.else17

while.body.lr.ph.i171:                            ; preds = %if.else
  %10 = getelementptr inbounds %"struct.intSort::eBits", %"struct.intSort::eBits"* %agg.tmp.i, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10)
  %sub.i170 = add nsw i64 %conv, -1
  %div.i = sdiv i64 %sub.i170, 8
  %add.i = add nsw i64 %div.i, 1
  %div2.i = sdiv i64 %sub.i170, %add.i
  %add3.i = add nsw i64 %div2.i, 1
  %_mask.i.i = getelementptr inbounds %"struct.intSort::eBits", %"struct.intSort::eBits"* %agg.tmp.i, i64 0, i32 1
  %_offset.i.i = getelementptr inbounds %"struct.intSort::eBits", %"struct.intSort::eBits"* %agg.tmp.i, i64 0, i32 2
  br label %while.body.i175

while.body.i175:                                  ; preds = %while.body.i175, %while.body.lr.ph.i171
  %bitOffset.025.i = phi i64 [ 0, %while.body.lr.ph.i171 ], [ %add8.i, %while.body.i175 ]
  %rbits.024.i = phi i64 [ %add3.i, %while.body.lr.ph.i171 ], [ %spec.select.i, %while.body.i175 ]
  %add4.i = add nsw i64 %rbits.024.i, %bitOffset.025.i
  %cmp5.i = icmp sgt i64 %add4.i, %conv
  %sub6.i = sub nsw i64 %conv, %bitOffset.025.i
  %spec.select.i = select i1 %cmp5.i, i64 %sub6.i, i64 %rbits.024.i
  %sh_prom.i = trunc i64 %spec.select.i to i32
  %shl.i172 = shl i32 1, %sh_prom.i
  %conv.i173 = sext i32 %shl.i172 to i64
  %sub.i.i = add nsw i32 %shl.i172, -1
  %conv.i.i = sext i32 %sub.i.i to i64
  store i64 %conv.i.i, i64* %_mask.i.i, align 8, !tbaa !117
  store i64 %bitOffset.025.i, i64* %_offset.i.i, align 8, !tbaa !120
  call void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_(%"struct.std::pair.6"* %A, %"struct.std::pair.6"* %1, i8* %add.ptr, [256 x i32]* %2, i64 %add, i64 %n, i64 %conv.i173, i1 zeroext true, %"struct.intSort::eBits"* byval nonnull align 8 %agg.tmp.i) #2
  %add8.i = add nsw i64 %spec.select.i, %bitOffset.025.i
  %cmp.i174 = icmp slt i64 %add8.i, %conv
  br i1 %cmp.i174, label %while.body.i175, label %_ZN7intSort17radixLoopBottomUpISt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllbT0_.exit

_ZN7intSort17radixLoopBottomUpISt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllbT0_.exit: ; preds = %while.body.i175
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10)
  br label %if.end20

if.else17:                                        ; preds = %if.else
  tail call void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0_(%"struct.std::pair.6"* %A, %"struct.std::pair.6"* %1, i8* %add.ptr, [256 x i32]* %2, i64 %add, i64 %n, i64 %conv)
  br label %if.end20

if.end20:                                         ; preds = %_ZN7intSort17radixLoopBottomUpISt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllbT0_.exit, %if.else17
  %cmp21 = icmp eq i32* %bucketOffsets, null
  br i1 %cmp21, label %cleanup, label %if.then22

if.then22:                                        ; preds = %if.end20
  %cmp32180 = icmp sgt i64 %m, 0
  br i1 %cmp32180, label %pfor.detach34.lr.ph, label %sync.continue45

pfor.detach34.lr.ph:                              ; preds = %if.then22
  %conv40 = trunc i64 %n to i32
  %11 = add i64 %m, -1
  %12 = zext i32 %__cilkrts_wc8185 to i64
  %13 = add i64 %m, -2
  %14 = add i64 %13, %12
  %15 = udiv i64 %14, %12
  %16 = icmp ult i64 %15, 2048
  %17 = select i1 %16, i64 %15, i64 2048
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach34.ls(i64 0, i64 %11, i64 %17, i32* nonnull %bucketOffsets, i32 %conv40)
  br label %sync.continue45

sync.continue45:                                  ; preds = %if.then22, %pfor.detach34.lr.ph
  %cmp57178 = icmp sgt i64 %n, 1
  br i1 %cmp57178, label %pfor.detach59.preheader, label %sync.continue83

pfor.detach59.preheader:                          ; preds = %sync.continue45
  %18 = add i64 %n, -2
  %19 = zext i32 %__cilkrts_wc8185 to i64
  %20 = add i64 %n, -3
  %21 = add i64 %20, %19
  %22 = udiv i64 %21, %19
  %23 = icmp ult i64 %22, 2048
  %24 = select i1 %23, i64 %22, i64 2048
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach59.ls(i64 0, i64 %18, i64 %24, %"struct.std::pair.6"* %A, i32* nonnull %bucketOffsets)
  br label %sync.continue83

sync.continue83:                                  ; preds = %sync.continue45, %pfor.detach59.preheader
  %agg.tmp85.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A, i64 0, i32 0
  %agg.tmp85.sroa.0.0.copyload = load i32, i32* %agg.tmp85.sroa.0.0..sroa_idx, align 8
  %idxprom = sext i32 %agg.tmp85.sroa.0.0.copyload to i64
  %arrayidx88 = getelementptr inbounds i32, i32* %bucketOffsets, i64 %idxprom
  store i32 0, i32* %arrayidx88, align 4, !tbaa !59
  %conv90 = trunc i64 %n to i32
  %call.i = call i32 @_ZN8sequence4scanIilN5utils4minFIiEENS_4getAIilEEEET_PS6_T0_S8_T1_T2_S6_bb(i32* nonnull %bucketOffsets, i64 0, i64 %m, i32* nonnull %bucketOffsets, i32 %conv90, i1 zeroext true, i1 zeroext true) #2
  br label %cleanup

cleanup:                                          ; preds = %if.then, %pfor.detach.preheader, %sync.continue83, %if.end20
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_(%"struct.std::pair.6"* %A, %"struct.std::pair.6"* %B, i8* %Tmp, [256 x i32]* %BK, i64 %numBK, i64 %n, i64 %m, i1 zeroext %top, %"struct.intSort::eBits"* byval align 8 %extract) local_unnamed_addr #7 comdat {
entry:
  %ref.tmp29 = alloca %struct.transpose, align 8
  %ref.tmp42 = alloca %struct.blockTrans, align 8
  %div = sdiv i64 %numBK, 3
  %div2 = sdiv i64 %n, 8192
  %add = add nsw i64 %div2, 1
  %cmp.i = icmp slt i64 %add, %div
  %.sroa.speculated135 = select i1 %cmp.i, i64 %add, i64 %div
  %cmp = icmp slt i64 %.sroa.speculated135, 2
  br i1 %cmp, label %if.then, label %pfor.detach.lr.ph

if.then:                                          ; preds = %entry
  %agg.tmp.sroa.2.0..sroa_idx = getelementptr inbounds %"struct.intSort::eBits", %"struct.intSort::eBits"* %extract, i64 0, i32 1
  %agg.tmp.sroa.2.0.copyload = load i64, i64* %agg.tmp.sroa.2.0..sroa_idx, align 8
  %agg.tmp.sroa.3.0..sroa_idx = getelementptr inbounds %"struct.intSort::eBits", %"struct.intSort::eBits"* %extract, i64 0, i32 2
  %agg.tmp.sroa.3.0.copyload = load i64, i64* %agg.tmp.sroa.3.0..sroa_idx, align 8
  %cmp74.i.i = icmp sgt i64 %m, 0
  br i1 %cmp74.i.i, label %for.body.lr.ph.i.i, label %for.cond.cleanup.i.i

for.body.lr.ph.i.i:                               ; preds = %if.then
  %counts78.i.i = bitcast [256 x i32]* %BK to i8*
  %0 = shl i64 %m, 2
  tail call void @llvm.memset.p0i8.i64(i8* %counts78.i.i, i8 0, i64 %0, i32 4, i1 false) #2
  br label %for.cond.cleanup.i.i

for.cond.cleanup.i.i:                             ; preds = %for.body.lr.ph.i.i, %if.then
  %cmp272.i.i = icmp sgt i64 %n, 0
  br i1 %cmp272.i.i, label %for.body4.lr.ph.i.i, label %for.cond.cleanup3.i.i

for.body4.lr.ph.i.i:                              ; preds = %for.cond.cleanup.i.i
  %sh_prom.i.i.i = trunc i64 %agg.tmp.sroa.3.0.copyload to i32
  %xtraiter170 = and i64 %n, 1
  %1 = icmp eq i64 %n, 1
  br i1 %1, label %for.body4.i.i.epil, label %for.body4.lr.ph.i.i.new

for.body4.lr.ph.i.i.new:                          ; preds = %for.body4.lr.ph.i.i
  %unroll_iter172 = sub i64 %n, %xtraiter170
  br label %for.body4.i.i

for.cond.cleanup3.i.i.loopexit.unr-lcssa:         ; preds = %for.body4.i.i
  %lcmp.mod171 = icmp eq i64 %xtraiter170, 0
  br i1 %lcmp.mod171, label %for.cond.cleanup3.i.i, label %for.body4.i.i.epil

for.body4.i.i.epil:                               ; preds = %for.body4.lr.ph.i.i, %for.cond.cleanup3.i.i.loopexit.unr-lcssa
  %j.073.i.i.unr205 = phi i64 [ %inc11.i.i.1, %for.cond.cleanup3.i.i.loopexit.unr-lcssa ], [ 0, %for.body4.lr.ph.i.i ]
  %agg.tmp.sroa.0.0..sroa_idx.i.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A, i64 %j.073.i.i.unr205, i32 0
  %agg.tmp.sroa.0.0.copyload.i.i.epil = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.i.epil, align 8
  %shr.i.i.i.epil = ashr i32 %agg.tmp.sroa.0.0.copyload.i.i.epil, %sh_prom.i.i.i
  %conv.i.i.i.epil = sext i32 %shr.i.i.i.epil to i64
  %and.i.i.i.epil = and i64 %agg.tmp.sroa.2.0.copyload, %conv.i.i.i.epil
  %conv.i.i.epil = trunc i64 %and.i.i.i.epil to i8
  %arrayidx6.i.i.epil = getelementptr inbounds i8, i8* %Tmp, i64 %j.073.i.i.unr205
  store i8 %conv.i.i.epil, i8* %arrayidx6.i.i.epil, align 1, !tbaa !22
  %conv7.i.i.epil = and i64 %and.i.i.i.epil, 255
  %arrayidx8.i.i.epil = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %conv7.i.i.epil
  %2 = load i32, i32* %arrayidx8.i.i.epil, align 4, !tbaa !59
  %inc9.i.i.epil = add i32 %2, 1
  store i32 %inc9.i.i.epil, i32* %arrayidx8.i.i.epil, align 4, !tbaa !59
  br label %for.cond.cleanup3.i.i

for.cond.cleanup3.i.i:                            ; preds = %for.body4.i.i.epil, %for.cond.cleanup3.i.i.loopexit.unr-lcssa, %for.cond.cleanup.i.i
  br i1 %cmp74.i.i, label %for.body17.i.i.preheader, label %for.cond.cleanup16.i.i

for.body17.i.i.preheader:                         ; preds = %for.cond.cleanup3.i.i
  %3 = add i64 %m, -1
  %xtraiter165 = and i64 %m, 7
  %4 = icmp ult i64 %3, 7
  br i1 %4, label %for.cond.cleanup16.i.i.loopexit.unr-lcssa, label %for.body17.i.i.preheader.new

for.body17.i.i.preheader.new:                     ; preds = %for.body17.i.i.preheader
  %unroll_iter168 = sub i64 %m, %xtraiter165
  br label %for.body17.i.i

for.body4.i.i:                                    ; preds = %for.body4.i.i, %for.body4.lr.ph.i.i.new
  %j.073.i.i = phi i64 [ 0, %for.body4.lr.ph.i.i.new ], [ %inc11.i.i.1, %for.body4.i.i ]
  %niter173 = phi i64 [ %unroll_iter172, %for.body4.lr.ph.i.i.new ], [ %niter173.nsub.1, %for.body4.i.i ]
  %agg.tmp.sroa.0.0..sroa_idx.i.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A, i64 %j.073.i.i, i32 0
  %agg.tmp.sroa.0.0.copyload.i.i = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.i, align 8
  %shr.i.i.i = ashr i32 %agg.tmp.sroa.0.0.copyload.i.i, %sh_prom.i.i.i
  %conv.i.i.i = sext i32 %shr.i.i.i to i64
  %and.i.i.i = and i64 %agg.tmp.sroa.2.0.copyload, %conv.i.i.i
  %conv.i.i = trunc i64 %and.i.i.i to i8
  %arrayidx6.i.i = getelementptr inbounds i8, i8* %Tmp, i64 %j.073.i.i
  store i8 %conv.i.i, i8* %arrayidx6.i.i, align 1, !tbaa !22
  %conv7.i.i = and i64 %and.i.i.i, 255
  %arrayidx8.i.i = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %conv7.i.i
  %5 = load i32, i32* %arrayidx8.i.i, align 4, !tbaa !59
  %inc9.i.i = add i32 %5, 1
  store i32 %inc9.i.i, i32* %arrayidx8.i.i, align 4, !tbaa !59
  %inc11.i.i = or i64 %j.073.i.i, 1
  %agg.tmp.sroa.0.0..sroa_idx.i.i.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A, i64 %inc11.i.i, i32 0
  %agg.tmp.sroa.0.0.copyload.i.i.1 = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.i.1, align 8
  %shr.i.i.i.1 = ashr i32 %agg.tmp.sroa.0.0.copyload.i.i.1, %sh_prom.i.i.i
  %conv.i.i.i.1 = sext i32 %shr.i.i.i.1 to i64
  %and.i.i.i.1 = and i64 %agg.tmp.sroa.2.0.copyload, %conv.i.i.i.1
  %conv.i.i.1 = trunc i64 %and.i.i.i.1 to i8
  %arrayidx6.i.i.1 = getelementptr inbounds i8, i8* %Tmp, i64 %inc11.i.i
  store i8 %conv.i.i.1, i8* %arrayidx6.i.i.1, align 1, !tbaa !22
  %conv7.i.i.1 = and i64 %and.i.i.i.1, 255
  %arrayidx8.i.i.1 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %conv7.i.i.1
  %6 = load i32, i32* %arrayidx8.i.i.1, align 4, !tbaa !59
  %inc9.i.i.1 = add i32 %6, 1
  store i32 %inc9.i.i.1, i32* %arrayidx8.i.i.1, align 4, !tbaa !59
  %inc11.i.i.1 = add nuw nsw i64 %j.073.i.i, 2
  %niter173.nsub.1 = add i64 %niter173, -2
  %niter173.ncmp.1 = icmp eq i64 %niter173.nsub.1, 0
  br i1 %niter173.ncmp.1, label %for.cond.cleanup3.i.i.loopexit.unr-lcssa, label %for.body4.i.i

for.cond.cleanup16.i.i.loopexit.unr-lcssa:        ; preds = %for.body17.i.i, %for.body17.i.i.preheader
  %i13.071.i.i.unr = phi i64 [ 0, %for.body17.i.i.preheader ], [ %inc21.i.i.7, %for.body17.i.i ]
  %s.070.i.i.unr = phi i32 [ 0, %for.body17.i.i.preheader ], [ %add.i.i.7, %for.body17.i.i ]
  %lcmp.mod167 = icmp eq i64 %xtraiter165, 0
  br i1 %lcmp.mod167, label %for.cond.cleanup16.i.i, label %for.body17.i.i.epil.preheader

for.body17.i.i.epil.preheader:                    ; preds = %for.cond.cleanup16.i.i.loopexit.unr-lcssa
  br label %for.body17.i.i.epil

for.body17.i.i.epil:                              ; preds = %for.body17.i.i.epil.preheader, %for.body17.i.i.epil
  %i13.071.i.i.epil = phi i64 [ %inc21.i.i.epil, %for.body17.i.i.epil ], [ %i13.071.i.i.unr, %for.body17.i.i.epil.preheader ]
  %s.070.i.i.epil = phi i32 [ %add.i.i.epil, %for.body17.i.i.epil ], [ %s.070.i.i.unr, %for.body17.i.i.epil.preheader ]
  %epil.iter166 = phi i64 [ %epil.iter166.sub, %for.body17.i.i.epil ], [ %xtraiter165, %for.body17.i.i.epil.preheader ]
  %arrayidx18.i.i.epil = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %i13.071.i.i.epil
  %7 = load i32, i32* %arrayidx18.i.i.epil, align 4, !tbaa !59
  %add.i.i.epil = add i32 %7, %s.070.i.i.epil
  store i32 %add.i.i.epil, i32* %arrayidx18.i.i.epil, align 4, !tbaa !59
  %inc21.i.i.epil = add nuw nsw i64 %i13.071.i.i.epil, 1
  %epil.iter166.sub = add nsw i64 %epil.iter166, -1
  %epil.iter166.cmp = icmp eq i64 %epil.iter166.sub, 0
  br i1 %epil.iter166.cmp, label %for.cond.cleanup16.i.i, label %for.body17.i.i.epil, !llvm.loop !121

for.cond.cleanup16.i.i:                           ; preds = %for.body17.i.i.epil, %for.cond.cleanup16.i.i.loopexit.unr-lcssa, %for.cond.cleanup3.i.i
  br i1 %cmp272.i.i, label %for.body27.i.i.preheader, label %cleanup

for.body27.i.i.preheader:                         ; preds = %for.cond.cleanup16.i.i
  br label %for.body27.i.i

for.body17.i.i:                                   ; preds = %for.body17.i.i, %for.body17.i.i.preheader.new
  %i13.071.i.i = phi i64 [ 0, %for.body17.i.i.preheader.new ], [ %inc21.i.i.7, %for.body17.i.i ]
  %s.070.i.i = phi i32 [ 0, %for.body17.i.i.preheader.new ], [ %add.i.i.7, %for.body17.i.i ]
  %niter169 = phi i64 [ %unroll_iter168, %for.body17.i.i.preheader.new ], [ %niter169.nsub.7, %for.body17.i.i ]
  %arrayidx18.i.i = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %i13.071.i.i
  %8 = load i32, i32* %arrayidx18.i.i, align 4, !tbaa !59
  %add.i.i = add i32 %8, %s.070.i.i
  store i32 %add.i.i, i32* %arrayidx18.i.i, align 4, !tbaa !59
  %inc21.i.i = or i64 %i13.071.i.i, 1
  %arrayidx18.i.i.1 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i
  %9 = load i32, i32* %arrayidx18.i.i.1, align 4, !tbaa !59
  %add.i.i.1 = add i32 %9, %add.i.i
  store i32 %add.i.i.1, i32* %arrayidx18.i.i.1, align 4, !tbaa !59
  %inc21.i.i.1 = or i64 %i13.071.i.i, 2
  %arrayidx18.i.i.2 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i.1
  %10 = load i32, i32* %arrayidx18.i.i.2, align 4, !tbaa !59
  %add.i.i.2 = add i32 %10, %add.i.i.1
  store i32 %add.i.i.2, i32* %arrayidx18.i.i.2, align 4, !tbaa !59
  %inc21.i.i.2 = or i64 %i13.071.i.i, 3
  %arrayidx18.i.i.3 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i.2
  %11 = load i32, i32* %arrayidx18.i.i.3, align 4, !tbaa !59
  %add.i.i.3 = add i32 %11, %add.i.i.2
  store i32 %add.i.i.3, i32* %arrayidx18.i.i.3, align 4, !tbaa !59
  %inc21.i.i.3 = or i64 %i13.071.i.i, 4
  %arrayidx18.i.i.4 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i.3
  %12 = load i32, i32* %arrayidx18.i.i.4, align 4, !tbaa !59
  %add.i.i.4 = add i32 %12, %add.i.i.3
  store i32 %add.i.i.4, i32* %arrayidx18.i.i.4, align 4, !tbaa !59
  %inc21.i.i.4 = or i64 %i13.071.i.i, 5
  %arrayidx18.i.i.5 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i.4
  %13 = load i32, i32* %arrayidx18.i.i.5, align 4, !tbaa !59
  %add.i.i.5 = add i32 %13, %add.i.i.4
  store i32 %add.i.i.5, i32* %arrayidx18.i.i.5, align 4, !tbaa !59
  %inc21.i.i.5 = or i64 %i13.071.i.i, 6
  %arrayidx18.i.i.6 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i.5
  %14 = load i32, i32* %arrayidx18.i.i.6, align 4, !tbaa !59
  %add.i.i.6 = add i32 %14, %add.i.i.5
  store i32 %add.i.i.6, i32* %arrayidx18.i.i.6, align 4, !tbaa !59
  %inc21.i.i.6 = or i64 %i13.071.i.i, 7
  %arrayidx18.i.i.7 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i.6
  %15 = load i32, i32* %arrayidx18.i.i.7, align 4, !tbaa !59
  %add.i.i.7 = add i32 %15, %add.i.i.6
  store i32 %add.i.i.7, i32* %arrayidx18.i.i.7, align 4, !tbaa !59
  %inc21.i.i.7 = add nuw nsw i64 %i13.071.i.i, 8
  %niter169.nsub.7 = add i64 %niter169, -8
  %niter169.ncmp.7 = icmp eq i64 %niter169.nsub.7, 0
  br i1 %niter169.ncmp.7, label %for.cond.cleanup16.i.i.loopexit.unr-lcssa, label %for.body17.i.i

for.body27.i.i:                                   ; preds = %for.body27.i.i.preheader, %for.body27.i.i
  %j23.068.in.i.i = phi i64 [ %j23.068.i.i, %for.body27.i.i ], [ %n, %for.body27.i.i.preheader ]
  %j23.068.i.i = add nsw i64 %j23.068.in.i.i, -1
  %arrayidx28.i.i = getelementptr inbounds i8, i8* %Tmp, i64 %j23.068.i.i
  %16 = load i8, i8* %arrayidx28.i.i, align 1, !tbaa !22
  %idxprom29.i.i = zext i8 %16 to i64
  %arrayidx30.i.i = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %idxprom29.i.i
  %17 = load i32, i32* %arrayidx30.i.i, align 4, !tbaa !59
  %dec.i.i = add i32 %17, -1
  store i32 %dec.i.i, i32* %arrayidx30.i.i, align 4, !tbaa !59
  %idxprom32.i.i = zext i32 %dec.i.i to i64
  %first.i.i.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A, i64 %j23.068.i.i, i32 0
  %18 = load i32, i32* %first.i.i.i, align 8, !tbaa !109
  %first2.i.i.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B, i64 %idxprom32.i.i, i32 0
  store i32 %18, i32* %first2.i.i.i, align 8, !tbaa !109
  %second.i.i.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A, i64 %j23.068.i.i, i32 1
  %19 = bitcast %struct.vertex** %second.i.i.i to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !111
  %second3.i.i.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B, i64 %idxprom32.i.i, i32 1
  %21 = bitcast %struct.vertex** %second3.i.i.i to i64*
  store i64 %20, i64* %21, align 8, !tbaa !111
  %cmp25.i.i = icmp sgt i64 %j23.068.in.i.i, 1
  br i1 %cmp25.i.i, label %for.body27.i.i, label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %for.body27.i.i
  %22 = add i64 %n, -1
  %xtraiter = and i64 %n, 3
  %23 = icmp ult i64 %22, 3
  br i1 %23, label %cleanup.loopexit.unr-lcssa, label %for.body.i.preheader.new

for.body.i.preheader.new:                         ; preds = %for.body.i.preheader
  %unroll_iter = sub i64 %n, %xtraiter
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.i.preheader.new
  %i.018.i = phi i64 [ 0, %for.body.i.preheader.new ], [ %inc.i.3, %for.body.i ]
  %niter = phi i64 [ %unroll_iter, %for.body.i.preheader.new ], [ %niter.nsub.3, %for.body.i ]
  %first.i.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B, i64 %i.018.i, i32 0
  %24 = load i32, i32* %first.i.i, align 8, !tbaa !109
  %first2.i.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A, i64 %i.018.i, i32 0
  store i32 %24, i32* %first2.i.i, align 8, !tbaa !109
  %second.i.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B, i64 %i.018.i, i32 1
  %25 = bitcast %struct.vertex** %second.i.i to i64*
  %26 = load i64, i64* %25, align 8, !tbaa !111
  %second3.i.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A, i64 %i.018.i, i32 1
  %27 = bitcast %struct.vertex** %second3.i.i to i64*
  store i64 %26, i64* %27, align 8, !tbaa !111
  %inc.i = or i64 %i.018.i, 1
  %first.i.i.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B, i64 %inc.i, i32 0
  %28 = load i32, i32* %first.i.i.1, align 8, !tbaa !109
  %first2.i.i.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A, i64 %inc.i, i32 0
  store i32 %28, i32* %first2.i.i.1, align 8, !tbaa !109
  %second.i.i.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B, i64 %inc.i, i32 1
  %29 = bitcast %struct.vertex** %second.i.i.1 to i64*
  %30 = load i64, i64* %29, align 8, !tbaa !111
  %second3.i.i.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A, i64 %inc.i, i32 1
  %31 = bitcast %struct.vertex** %second3.i.i.1 to i64*
  store i64 %30, i64* %31, align 8, !tbaa !111
  %inc.i.1 = or i64 %i.018.i, 2
  %first.i.i.2 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B, i64 %inc.i.1, i32 0
  %32 = load i32, i32* %first.i.i.2, align 8, !tbaa !109
  %first2.i.i.2 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A, i64 %inc.i.1, i32 0
  store i32 %32, i32* %first2.i.i.2, align 8, !tbaa !109
  %second.i.i.2 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B, i64 %inc.i.1, i32 1
  %33 = bitcast %struct.vertex** %second.i.i.2 to i64*
  %34 = load i64, i64* %33, align 8, !tbaa !111
  %second3.i.i.2 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A, i64 %inc.i.1, i32 1
  %35 = bitcast %struct.vertex** %second3.i.i.2 to i64*
  store i64 %34, i64* %35, align 8, !tbaa !111
  %inc.i.2 = or i64 %i.018.i, 3
  %first.i.i.3 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B, i64 %inc.i.2, i32 0
  %36 = load i32, i32* %first.i.i.3, align 8, !tbaa !109
  %first2.i.i.3 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A, i64 %inc.i.2, i32 0
  store i32 %36, i32* %first2.i.i.3, align 8, !tbaa !109
  %second.i.i.3 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B, i64 %inc.i.2, i32 1
  %37 = bitcast %struct.vertex** %second.i.i.3 to i64*
  %38 = load i64, i64* %37, align 8, !tbaa !111
  %second3.i.i.3 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A, i64 %inc.i.2, i32 1
  %39 = bitcast %struct.vertex** %second3.i.i.3 to i64*
  store i64 %38, i64* %39, align 8, !tbaa !111
  %inc.i.3 = add nuw nsw i64 %i.018.i, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %cleanup.loopexit.unr-lcssa, label %for.body.i

pfor.detach.lr.ph:                                ; preds = %entry
  %add3 = add i64 %n, -1
  %sub = add i64 %add3, %.sroa.speculated135
  %div4 = sdiv i64 %sub, %.sroa.speculated135
  %40 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 0
  %41 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 0
  %mul5 = shl nsw i64 %.sroa.speculated135, 1
  %42 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %mul5, i64 0
  %agg.tmp28.sroa.2.0..sroa_idx = getelementptr inbounds %"struct.intSort::eBits", %"struct.intSort::eBits"* %extract, i64 0, i32 1
  %agg.tmp28.sroa.2.0.copyload = load i64, i64* %agg.tmp28.sroa.2.0..sroa_idx, align 8
  %agg.tmp28.sroa.3.0..sroa_idx = getelementptr inbounds %"struct.intSort::eBits", %"struct.intSort::eBits"* %extract, i64 0, i32 2
  %agg.tmp28.sroa.3.0.copyload = load i64, i64* %agg.tmp28.sroa.3.0..sroa_idx, align 8
  %cmp74.i = icmp sgt i64 %m, 0
  %sh_prom.i.i = trunc i64 %agg.tmp28.sroa.3.0.copyload to i32
  br i1 %cmp74.i, label %pfor.detach.us.preheader, label %pfor.detach.preheader

pfor.detach.preheader:                            ; preds = %pfor.detach.lr.ph
  %43 = xor i64 %div, -1
  %44 = sub nsw i64 -2, %div2
  %45 = icmp slt i64 %44, %43
  %smax202 = select i1 %45, i64 %43, i64 %44
  %46 = sub nsw i64 -2, %smax202
  tail call fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.ls(i64 0, i64 %46, i64 %div4, i64 %n, %"struct.std::pair.6"* %A, i8* %Tmp, i64 %m, [256 x i32]* %BK, i64 %mul5, i32 %sh_prom.i.i, i64 %agg.tmp28.sroa.2.0.copyload, %"struct.std::pair.6"* %B)
  br label %sync.continue

pfor.detach.us.preheader:                         ; preds = %pfor.detach.lr.ph
  %47 = shl i64 %m, 2
  %48 = add i64 %m, -1
  %xtraiter189 = and i64 %m, 7
  %49 = icmp ult i64 %48, 7
  %unroll_iter192 = sub i64 %m, %xtraiter189
  %lcmp.mod191 = icmp eq i64 %xtraiter189, 0
  %50 = xor i64 %div, -1
  %51 = sub nsw i64 -2, %div2
  %52 = icmp slt i64 %51, %50
  %smax203 = select i1 %52, i64 %50, i64 %51
  %53 = sub nsw i64 -2, %smax203
  tail call fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.us.ls(i64 0, i64 %53, i64 %div4, i64 %n, %"struct.std::pair.6"* %A, i8* %Tmp, i64 %m, [256 x i32]* %BK, i64 %mul5, i64 %47, i32 %sh_prom.i.i, i64 %agg.tmp28.sroa.2.0.copyload, i1 %49, i64 %unroll_iter192, i1 %lcmp.mod191, i64 %xtraiter189, %"struct.std::pair.6"* %B)
  br label %sync.continue

sync.continue:                                    ; preds = %pfor.detach.us.preheader, %pfor.detach.preheader
  %54 = bitcast %struct.transpose* %ref.tmp29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #2
  %A.i116 = getelementptr inbounds %struct.transpose, %struct.transpose* %ref.tmp29, i64 0, i32 0
  store i32* %40, i32** %A.i116, align 8, !tbaa !122
  %B.i117 = getelementptr inbounds %struct.transpose, %struct.transpose* %ref.tmp29, i64 0, i32 1
  store i32* %41, i32** %B.i117, align 8, !tbaa !124
  %conv30 = trunc i64 %.sroa.speculated135 to i32
  %conv31 = trunc i64 %m to i32
  call void @_ZN9transposeIjjE6transREjjjjjj(%struct.transpose* nonnull %ref.tmp29, i32 0, i32 %conv30, i32 %conv31, i32 0, i32 %conv31, i32 %conv30) #2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #2
  %mul33 = mul nsw i64 %.sroa.speculated135, %m
  br i1 %top, label %if.then32, label %if.else

if.then32:                                        ; preds = %sync.continue
  %call.i = call i32 @_ZN8sequence4scanIjlN5utils4addFIjEENS_4getAIjlEEEET_PS6_T0_S8_T1_T2_S6_bb(i32* %41, i64 0, i64 %mul33, i32* %41, i32 0, i1 zeroext false, i1 zeroext false) #2
  br label %if.end41

if.else:                                          ; preds = %sync.continue
  %cmp34110.i.i = icmp sgt i64 %mul33, 0
  br i1 %cmp34110.i.i, label %for.body36.i.i.preheader, label %if.end41

for.body36.i.i.preheader:                         ; preds = %if.else
  %55 = add i64 %mul33, -1
  %xtraiter179 = and i64 %mul33, 7
  %56 = icmp ult i64 %55, 7
  br i1 %56, label %if.end41.loopexit.unr-lcssa, label %for.body36.i.i.preheader.new

for.body36.i.i.preheader.new:                     ; preds = %for.body36.i.i.preheader
  %unroll_iter182 = sub i64 %mul33, %xtraiter179
  br label %for.body36.i.i

for.body36.i.i:                                   ; preds = %for.body36.i.i, %for.body36.i.i.preheader.new
  %i32.0112.i.i = phi i64 [ 0, %for.body36.i.i.preheader.new ], [ %inc42.i.i.7, %for.body36.i.i ]
  %r.3111.i.i = phi i32 [ 0, %for.body36.i.i.preheader.new ], [ %add.i.i.i.7, %for.body36.i.i ]
  %niter183 = phi i64 [ %unroll_iter182, %for.body36.i.i.preheader.new ], [ %niter183.nsub.7, %for.body36.i.i ]
  %arrayidx.i72.i.i = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %i32.0112.i.i
  %57 = load i32, i32* %arrayidx.i72.i.i, align 4, !tbaa !59
  store i32 %r.3111.i.i, i32* %arrayidx.i72.i.i, align 4, !tbaa !59
  %add.i.i.i = add i32 %57, %r.3111.i.i
  %inc42.i.i = or i64 %i32.0112.i.i, 1
  %arrayidx.i72.i.i.1 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i
  %58 = load i32, i32* %arrayidx.i72.i.i.1, align 4, !tbaa !59
  store i32 %add.i.i.i, i32* %arrayidx.i72.i.i.1, align 4, !tbaa !59
  %add.i.i.i.1 = add i32 %58, %add.i.i.i
  %inc42.i.i.1 = or i64 %i32.0112.i.i, 2
  %arrayidx.i72.i.i.2 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i.1
  %59 = load i32, i32* %arrayidx.i72.i.i.2, align 4, !tbaa !59
  store i32 %add.i.i.i.1, i32* %arrayidx.i72.i.i.2, align 4, !tbaa !59
  %add.i.i.i.2 = add i32 %59, %add.i.i.i.1
  %inc42.i.i.2 = or i64 %i32.0112.i.i, 3
  %arrayidx.i72.i.i.3 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i.2
  %60 = load i32, i32* %arrayidx.i72.i.i.3, align 4, !tbaa !59
  store i32 %add.i.i.i.2, i32* %arrayidx.i72.i.i.3, align 4, !tbaa !59
  %add.i.i.i.3 = add i32 %60, %add.i.i.i.2
  %inc42.i.i.3 = or i64 %i32.0112.i.i, 4
  %arrayidx.i72.i.i.4 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i.3
  %61 = load i32, i32* %arrayidx.i72.i.i.4, align 4, !tbaa !59
  store i32 %add.i.i.i.3, i32* %arrayidx.i72.i.i.4, align 4, !tbaa !59
  %add.i.i.i.4 = add i32 %61, %add.i.i.i.3
  %inc42.i.i.4 = or i64 %i32.0112.i.i, 5
  %arrayidx.i72.i.i.5 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i.4
  %62 = load i32, i32* %arrayidx.i72.i.i.5, align 4, !tbaa !59
  store i32 %add.i.i.i.4, i32* %arrayidx.i72.i.i.5, align 4, !tbaa !59
  %add.i.i.i.5 = add i32 %62, %add.i.i.i.4
  %inc42.i.i.5 = or i64 %i32.0112.i.i, 6
  %arrayidx.i72.i.i.6 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i.5
  %63 = load i32, i32* %arrayidx.i72.i.i.6, align 4, !tbaa !59
  store i32 %add.i.i.i.5, i32* %arrayidx.i72.i.i.6, align 4, !tbaa !59
  %add.i.i.i.6 = add i32 %63, %add.i.i.i.5
  %inc42.i.i.6 = or i64 %i32.0112.i.i, 7
  %arrayidx.i72.i.i.7 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i.6
  %64 = load i32, i32* %arrayidx.i72.i.i.7, align 4, !tbaa !59
  store i32 %add.i.i.i.6, i32* %arrayidx.i72.i.i.7, align 4, !tbaa !59
  %add.i.i.i.7 = add i32 %64, %add.i.i.i.6
  %inc42.i.i.7 = add nuw nsw i64 %i32.0112.i.i, 8
  %niter183.nsub.7 = add i64 %niter183, -8
  %niter183.ncmp.7 = icmp eq i64 %niter183.nsub.7, 0
  br i1 %niter183.ncmp.7, label %if.end41.loopexit.unr-lcssa, label %for.body36.i.i

if.end41.loopexit.unr-lcssa:                      ; preds = %for.body36.i.i, %for.body36.i.i.preheader
  %i32.0112.i.i.unr = phi i64 [ 0, %for.body36.i.i.preheader ], [ %inc42.i.i.7, %for.body36.i.i ]
  %r.3111.i.i.unr = phi i32 [ 0, %for.body36.i.i.preheader ], [ %add.i.i.i.7, %for.body36.i.i ]
  %lcmp.mod181 = icmp eq i64 %xtraiter179, 0
  br i1 %lcmp.mod181, label %if.end41, label %for.body36.i.i.epil.preheader

for.body36.i.i.epil.preheader:                    ; preds = %if.end41.loopexit.unr-lcssa
  br label %for.body36.i.i.epil

for.body36.i.i.epil:                              ; preds = %for.body36.i.i.epil.preheader, %for.body36.i.i.epil
  %i32.0112.i.i.epil = phi i64 [ %inc42.i.i.epil, %for.body36.i.i.epil ], [ %i32.0112.i.i.unr, %for.body36.i.i.epil.preheader ]
  %r.3111.i.i.epil = phi i32 [ %add.i.i.i.epil, %for.body36.i.i.epil ], [ %r.3111.i.i.unr, %for.body36.i.i.epil.preheader ]
  %epil.iter180 = phi i64 [ %epil.iter180.sub, %for.body36.i.i.epil ], [ %xtraiter179, %for.body36.i.i.epil.preheader ]
  %arrayidx.i72.i.i.epil = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %i32.0112.i.i.epil
  %65 = load i32, i32* %arrayidx.i72.i.i.epil, align 4, !tbaa !59
  store i32 %r.3111.i.i.epil, i32* %arrayidx.i72.i.i.epil, align 4, !tbaa !59
  %add.i.i.i.epil = add i32 %65, %r.3111.i.i.epil
  %inc42.i.i.epil = add nuw nsw i64 %i32.0112.i.i.epil, 1
  %epil.iter180.sub = add nsw i64 %epil.iter180, -1
  %epil.iter180.cmp = icmp eq i64 %epil.iter180.sub, 0
  br i1 %epil.iter180.cmp, label %if.end41, label %for.body36.i.i.epil, !llvm.loop !125

if.end41:                                         ; preds = %for.body36.i.i.epil, %if.end41.loopexit.unr-lcssa, %if.else, %if.then32
  %66 = bitcast %struct.blockTrans* %ref.tmp42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %66) #2
  %A.i = getelementptr inbounds %struct.blockTrans, %struct.blockTrans* %ref.tmp42, i64 0, i32 0
  store %"struct.std::pair.6"* %B, %"struct.std::pair.6"** %A.i, align 8, !tbaa !126
  %B.i = getelementptr inbounds %struct.blockTrans, %struct.blockTrans* %ref.tmp42, i64 0, i32 1
  store %"struct.std::pair.6"* %A, %"struct.std::pair.6"** %B.i, align 8, !tbaa !128
  %OA.i = getelementptr inbounds %struct.blockTrans, %struct.blockTrans* %ref.tmp42, i64 0, i32 2
  store i32* %42, i32** %OA.i, align 8, !tbaa !129
  %OB.i = getelementptr inbounds %struct.blockTrans, %struct.blockTrans* %ref.tmp42, i64 0, i32 3
  store i32* %41, i32** %OB.i, align 8, !tbaa !130
  %L.i = getelementptr inbounds %struct.blockTrans, %struct.blockTrans* %ref.tmp42, i64 0, i32 4
  store i32* %40, i32** %L.i, align 8, !tbaa !131
  call void @_ZN10blockTransISt4pairIiP6vertexI8_point2dIdELi1EEEjE6transREjjjjjj(%struct.blockTrans* nonnull %ref.tmp42, i32 0, i32 %conv30, i32 %conv31, i32 0, i32 %conv31, i32 %conv30) #2
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %66) #2
  br i1 %cmp74.i, label %for.body.preheader, label %cleanup

for.body.preheader:                               ; preds = %if.end41
  %67 = add i64 %m, -1
  %xtraiter174 = and i64 %m, 7
  %68 = icmp ult i64 %67, 7
  br i1 %68, label %cleanup.loopexit163.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter177 = sub i64 %m, %xtraiter174
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.preheader.new
  %j.0154 = phi i64 [ 0, %for.body.preheader.new ], [ %inc50.7, %for.body ]
  %niter178 = phi i64 [ %unroll_iter177, %for.body.preheader.new ], [ %niter178.nsub.7, %for.body ]
  %mul46 = mul nsw i64 %j.0154, %.sroa.speculated135
  %arrayidx47 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46
  %69 = load i32, i32* %arrayidx47, align 4, !tbaa !59
  %arrayidx49 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %j.0154
  store i32 %69, i32* %arrayidx49, align 4, !tbaa !59
  %inc50 = or i64 %j.0154, 1
  %mul46.1 = mul nsw i64 %inc50, %.sroa.speculated135
  %arrayidx47.1 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.1
  %70 = load i32, i32* %arrayidx47.1, align 4, !tbaa !59
  %arrayidx49.1 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50
  store i32 %70, i32* %arrayidx49.1, align 4, !tbaa !59
  %inc50.1 = or i64 %j.0154, 2
  %mul46.2 = mul nsw i64 %inc50.1, %.sroa.speculated135
  %arrayidx47.2 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.2
  %71 = load i32, i32* %arrayidx47.2, align 4, !tbaa !59
  %arrayidx49.2 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50.1
  store i32 %71, i32* %arrayidx49.2, align 4, !tbaa !59
  %inc50.2 = or i64 %j.0154, 3
  %mul46.3 = mul nsw i64 %inc50.2, %.sroa.speculated135
  %arrayidx47.3 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.3
  %72 = load i32, i32* %arrayidx47.3, align 4, !tbaa !59
  %arrayidx49.3 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50.2
  store i32 %72, i32* %arrayidx49.3, align 4, !tbaa !59
  %inc50.3 = or i64 %j.0154, 4
  %mul46.4 = mul nsw i64 %inc50.3, %.sroa.speculated135
  %arrayidx47.4 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.4
  %73 = load i32, i32* %arrayidx47.4, align 4, !tbaa !59
  %arrayidx49.4 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50.3
  store i32 %73, i32* %arrayidx49.4, align 4, !tbaa !59
  %inc50.4 = or i64 %j.0154, 5
  %mul46.5 = mul nsw i64 %inc50.4, %.sroa.speculated135
  %arrayidx47.5 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.5
  %74 = load i32, i32* %arrayidx47.5, align 4, !tbaa !59
  %arrayidx49.5 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50.4
  store i32 %74, i32* %arrayidx49.5, align 4, !tbaa !59
  %inc50.5 = or i64 %j.0154, 6
  %mul46.6 = mul nsw i64 %inc50.5, %.sroa.speculated135
  %arrayidx47.6 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.6
  %75 = load i32, i32* %arrayidx47.6, align 4, !tbaa !59
  %arrayidx49.6 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50.5
  store i32 %75, i32* %arrayidx49.6, align 4, !tbaa !59
  %inc50.6 = or i64 %j.0154, 7
  %mul46.7 = mul nsw i64 %inc50.6, %.sroa.speculated135
  %arrayidx47.7 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.7
  %76 = load i32, i32* %arrayidx47.7, align 4, !tbaa !59
  %arrayidx49.7 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50.6
  store i32 %76, i32* %arrayidx49.7, align 4, !tbaa !59
  %inc50.7 = add nuw nsw i64 %j.0154, 8
  %niter178.nsub.7 = add i64 %niter178, -8
  %niter178.ncmp.7 = icmp eq i64 %niter178.nsub.7, 0
  br i1 %niter178.ncmp.7, label %cleanup.loopexit163.unr-lcssa, label %for.body

cleanup.loopexit.unr-lcssa:                       ; preds = %for.body.i, %for.body.i.preheader
  %i.018.i.unr = phi i64 [ 0, %for.body.i.preheader ], [ %inc.i.3, %for.body.i ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %cleanup, label %for.body.i.epil.preheader

for.body.i.epil.preheader:                        ; preds = %cleanup.loopexit.unr-lcssa
  br label %for.body.i.epil

for.body.i.epil:                                  ; preds = %for.body.i.epil.preheader, %for.body.i.epil
  %i.018.i.epil = phi i64 [ %inc.i.epil, %for.body.i.epil ], [ %i.018.i.unr, %for.body.i.epil.preheader ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body.i.epil ], [ %xtraiter, %for.body.i.epil.preheader ]
  %first.i.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B, i64 %i.018.i.epil, i32 0
  %77 = load i32, i32* %first.i.i.epil, align 8, !tbaa !109
  %first2.i.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A, i64 %i.018.i.epil, i32 0
  store i32 %77, i32* %first2.i.i.epil, align 8, !tbaa !109
  %second.i.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B, i64 %i.018.i.epil, i32 1
  %78 = bitcast %struct.vertex** %second.i.i.epil to i64*
  %79 = load i64, i64* %78, align 8, !tbaa !111
  %second3.i.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A, i64 %i.018.i.epil, i32 1
  %80 = bitcast %struct.vertex** %second3.i.i.epil to i64*
  store i64 %79, i64* %80, align 8, !tbaa !111
  %inc.i.epil = add nuw nsw i64 %i.018.i.epil, 1
  %epil.iter.sub = add nsw i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %cleanup, label %for.body.i.epil, !llvm.loop !132

cleanup.loopexit163.unr-lcssa:                    ; preds = %for.body, %for.body.preheader
  %j.0154.unr = phi i64 [ 0, %for.body.preheader ], [ %inc50.7, %for.body ]
  %lcmp.mod176 = icmp eq i64 %xtraiter174, 0
  br i1 %lcmp.mod176, label %cleanup, label %for.body.epil.preheader

for.body.epil.preheader:                          ; preds = %cleanup.loopexit163.unr-lcssa
  br label %for.body.epil

for.body.epil:                                    ; preds = %for.body.epil.preheader, %for.body.epil
  %j.0154.epil = phi i64 [ %inc50.epil, %for.body.epil ], [ %j.0154.unr, %for.body.epil.preheader ]
  %epil.iter175 = phi i64 [ %epil.iter175.sub, %for.body.epil ], [ %xtraiter174, %for.body.epil.preheader ]
  %mul46.epil = mul nsw i64 %j.0154.epil, %.sroa.speculated135
  %arrayidx47.epil = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.epil
  %81 = load i32, i32* %arrayidx47.epil, align 4, !tbaa !59
  %arrayidx49.epil = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %j.0154.epil
  store i32 %81, i32* %arrayidx49.epil, align 4, !tbaa !59
  %inc50.epil = add nuw nsw i64 %j.0154.epil, 1
  %epil.iter175.sub = add nsw i64 %epil.iter175, -1
  %epil.iter175.cmp = icmp eq i64 %epil.iter175.sub, 0
  br i1 %epil.iter175.cmp, label %cleanup, label %for.body.epil, !llvm.loop !133

cleanup:                                          ; preds = %for.body.epil, %for.body.i.epil, %cleanup.loopexit163.unr-lcssa, %cleanup.loopexit.unr-lcssa, %if.end41, %for.cond.cleanup16.i.i
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0_(%"struct.std::pair.6"* %A, %"struct.std::pair.6"* %B, i8* %Tmp, [256 x i32]* %BK, i64 %numBK, i64 %n, i64 %bits) local_unnamed_addr #7 comdat {
entry:
  %0 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8 = shl i32 %0, 3
  %agg.tmp.i = alloca %"struct.intSort::eBits", align 8
  %agg.tmp = alloca %"struct.intSort::eBits", align 8
  %agg.tmp6 = alloca %"struct.intSort::eBits", align 8
  %cmp = icmp eq i64 %n, 0
  br i1 %cmp, label %cleanup.cont, label %if.end

if.end:                                           ; preds = %entry
  %cmp1 = icmp slt i64 %bits, 9
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  %shl = shl i64 1, %bits
  %_mask.i = getelementptr inbounds %"struct.intSort::eBits", %"struct.intSort::eBits"* %agg.tmp, i64 0, i32 1
  %sh_prom.i = trunc i64 %bits to i32
  %shl.i = shl i32 1, %sh_prom.i
  %sub.i = add nsw i32 %shl.i, -1
  %conv.i = sext i32 %sub.i to i64
  store i64 %conv.i, i64* %_mask.i, align 8, !tbaa !117
  %_offset.i = getelementptr inbounds %"struct.intSort::eBits", %"struct.intSort::eBits"* %agg.tmp, i64 0, i32 2
  store i64 0, i64* %_offset.i, align 8, !tbaa !120
  call void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_(%"struct.std::pair.6"* %A, %"struct.std::pair.6"* %B, i8* %Tmp, [256 x i32]* %BK, i64 %numBK, i64 %n, i64 %shl, i1 zeroext true, %"struct.intSort::eBits"* byval nonnull align 8 %agg.tmp)
  br label %cleanup.cont

if.else:                                          ; preds = %if.end
  %cmp4 = icmp sgt i64 %numBK, 256
  br i1 %cmp4, label %if.then5, label %while.body.lr.ph.i

if.then5:                                         ; preds = %if.else
  %sub = add nsw i64 %bits, -8
  %_mask.i90 = getelementptr inbounds %"struct.intSort::eBits", %"struct.intSort::eBits"* %agg.tmp6, i64 0, i32 1
  store i64 255, i64* %_mask.i90, align 8, !tbaa !117
  %_offset.i91 = getelementptr inbounds %"struct.intSort::eBits", %"struct.intSort::eBits"* %agg.tmp6, i64 0, i32 2
  store i64 %sub, i64* %_offset.i91, align 8, !tbaa !120
  call void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_(%"struct.std::pair.6"* %A, %"struct.std::pair.6"* %B, i8* %Tmp, [256 x i32]* %BK, i64 %numBK, i64 %n, i64 256, i1 zeroext true, %"struct.intSort::eBits"* byval nonnull align 8 %agg.tmp6)
  %sub9 = add nsw i64 %numBK, -257
  %conv = sitofp i64 %sub9 to float
  %conv10 = sitofp i64 %n to float
  %div = fdiv fast float %conv, %conv10
  %1 = zext i32 %__cilkrts_wc8 to i64
  %2 = add nuw nsw i64 %1, 254
  %3 = udiv i64 %2, %1
  %4 = icmp ult i64 %3, 2048
  %5 = select i1 %4, i64 %3, i64 2048
  call fastcc void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0__pfor.detach.ls(i64 0, i64 255, i64 %5, [256 x i32]* %BK, float %conv10, i64 %n, float %div, %"struct.std::pair.6"* %A, %"struct.std::pair.6"* %B, i8* %Tmp, i64 %sub)
  br label %cleanup.cont

while.body.lr.ph.i:                               ; preds = %if.else
  %6 = getelementptr inbounds %"struct.intSort::eBits", %"struct.intSort::eBits"* %agg.tmp.i, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6)
  %sub.i92 = add nsw i64 %bits, -1
  %div.i = sdiv i64 %sub.i92, 8
  %add.i = add nsw i64 %div.i, 1
  %div2.i = sdiv i64 %sub.i92, %add.i
  %add3.i = add nsw i64 %div2.i, 1
  %_mask.i.i = getelementptr inbounds %"struct.intSort::eBits", %"struct.intSort::eBits"* %agg.tmp.i, i64 0, i32 1
  %_offset.i.i = getelementptr inbounds %"struct.intSort::eBits", %"struct.intSort::eBits"* %agg.tmp.i, i64 0, i32 2
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i, %while.body.lr.ph.i
  %bitOffset.025.i = phi i64 [ 0, %while.body.lr.ph.i ], [ %add8.i, %while.body.i ]
  %rbits.024.i = phi i64 [ %add3.i, %while.body.lr.ph.i ], [ %spec.select.i, %while.body.i ]
  %add4.i = add nsw i64 %rbits.024.i, %bitOffset.025.i
  %cmp5.i = icmp sgt i64 %add4.i, %bits
  %sub6.i = sub nsw i64 %bits, %bitOffset.025.i
  %spec.select.i = select i1 %cmp5.i, i64 %sub6.i, i64 %rbits.024.i
  %sh_prom.i93 = trunc i64 %spec.select.i to i32
  %shl.i94 = shl i32 1, %sh_prom.i93
  %conv.i95 = sext i32 %shl.i94 to i64
  %sub.i.i = add nsw i32 %shl.i94, -1
  %conv.i.i = sext i32 %sub.i.i to i64
  store i64 %conv.i.i, i64* %_mask.i.i, align 8, !tbaa !117
  store i64 %bitOffset.025.i, i64* %_offset.i.i, align 8, !tbaa !120
  call void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_(%"struct.std::pair.6"* %A, %"struct.std::pair.6"* %B, i8* %Tmp, [256 x i32]* %BK, i64 %numBK, i64 %n, i64 %conv.i95, i1 zeroext false, %"struct.intSort::eBits"* byval nonnull align 8 %agg.tmp.i) #2
  %add8.i = add nsw i64 %spec.select.i, %bitOffset.025.i
  %cmp.i = icmp slt i64 %add8.i, %bits
  br i1 %cmp.i, label %while.body.i, label %_ZN7intSort17radixLoopBottomUpISt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllbT0_.exit

_ZN7intSort17radixLoopBottomUpISt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllbT0_.exit: ; preds = %while.body.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6)
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.then5, %if.then2, %_ZN7intSort17radixLoopBottomUpISt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllbT0_.exit, %entry
  ret void
}

; Function Attrs: nounwind stealable uwtable
define linkonce_odr void @_ZN9transposeIjjE6transREjjjjjj(%struct.transpose* %this, i32 %rStart, i32 %rCount, i32 %rLength, i32 %cStart, i32 %cCount, i32 %cLength) local_unnamed_addr #15 comdat align 2 {
entry:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %entry
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %entry, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %entry ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %entry ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %9 = or i32 %cCount, %rCount
  %10 = icmp ult i32 %9, 64
  br i1 %10, label %if.then, label %if.else.preheader

if.else.preheader:                                ; preds = %__cilkrts_enter_frame_1.exit
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %13 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %14 = getelementptr inbounds [5 x i8*], [5 x i8*]* %13, i64 0, i64 0
  %15 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %16 = bitcast [5 x i8*]* %13 to i8*
  br label %if.else

if.then:                                          ; preds = %det.cont, %__cilkrts_enter_frame_1.exit
  %cStart.tr.lcssa = phi i32 [ %cStart, %__cilkrts_enter_frame_1.exit ], [ %add20, %det.cont ]
  %cCount.tr.lcssa = phi i32 [ %cCount, %__cilkrts_enter_frame_1.exit ], [ %sub, %det.cont ]
  %add = add i32 %rCount, %rStart
  %cmp384 = icmp ugt i32 %add, %rStart
  br i1 %cmp384, label %for.body.lr.ph, label %if.end32

for.body.lr.ph:                                   ; preds = %if.then
  %add5 = add i32 %cCount.tr.lcssa, %cStart.tr.lcssa
  %cmp682 = icmp ult i32 %cStart.tr.lcssa, %add5
  br i1 %cmp682, label %for.body.lr.ph.split.us, label %if.end32

for.body.lr.ph.split.us:                          ; preds = %for.body.lr.ph
  %B = getelementptr inbounds %struct.transpose, %struct.transpose* %this, i64 0, i32 1
  %A = getelementptr inbounds %struct.transpose, %struct.transpose* %this, i64 0, i32 0
  %17 = zext i32 %cStart.tr.lcssa to i64
  %18 = load i32*, i32** %A, align 8, !tbaa !122
  %19 = load i32*, i32** %B, align 8, !tbaa !124
  %wide.trip.count = zext i32 %add5 to i64
  %20 = sub nsw i64 %wide.trip.count, %17
  %21 = add nsw i64 %wide.trip.count, -1
  %22 = sub nsw i64 %21, %17
  %23 = add i32 %cStart.tr.lcssa, %rStart
  %24 = sub nsw i64 0, %17
  %scevgep103 = getelementptr i32, i32* %19, i64 %24
  %scevgep108 = getelementptr i32, i32* %18, i64 %24
  %25 = add nsw i64 %20, -32
  %26 = lshr i64 %25, 5
  %27 = add nuw nsw i64 %26, 1
  %min.iters.check = icmp ult i64 %20, 32
  %ident.check = icmp ne i32 %cLength, 1
  %28 = trunc i64 %22 to i32
  %29 = icmp ugt i64 %22, 4294967295
  %n.vec = and i64 %20, -32
  %ind.end = add nsw i64 %n.vec, %17
  %xtraiter = and i64 %27, 1
  %30 = icmp eq i64 %26, 0
  %unroll_iter = sub nsw i64 %27, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %20, %n.vec
  %.pre = sub nsw i64 %wide.trip.count, %ind.end
  %.pre140 = sub nsw i64 %21, %ind.end
  br label %for.body.us

for.body.us:                                      ; preds = %for.cond4.for.cond.cleanup7_crit_edge.us, %for.body.lr.ph.split.us
  %indvars.iv132 = phi i64 [ %indvars.iv.next, %for.cond4.for.cond.cleanup7_crit_edge.us ], [ 0, %for.body.lr.ph.split.us ]
  %i.085.us = phi i32 [ %inc15.us, %for.cond4.for.cond.cleanup7_crit_edge.us ], [ %rStart, %for.body.lr.ph.split.us ]
  %31 = trunc i64 %indvars.iv132 to i32
  %32 = add i32 %23, %31
  %33 = zext i32 %32 to i64
  %scevgep = getelementptr i32, i32* %19, i64 %33
  %34 = add nuw nsw i64 %33, %wide.trip.count
  %scevgep104 = getelementptr i32, i32* %scevgep103, i64 %34
  %reass.add = add i32 %31, %rStart
  %reass.mul = mul i32 %reass.add, %rLength
  %35 = add i32 %reass.mul, %cStart.tr.lcssa
  %36 = zext i32 %35 to i64
  %scevgep106 = getelementptr i32, i32* %18, i64 %36
  %37 = add nuw nsw i64 %36, %wide.trip.count
  %scevgep109 = getelementptr i32, i32* %scevgep108, i64 %37
  %mul.us = mul i32 %i.085.us, %rLength
  br i1 %min.iters.check, label %for.body8.us.preheader, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %for.body.us
  %38 = add i32 %32, %28
  %39 = icmp ult i32 %38, %32
  %40 = or i1 %29, %39
  %41 = or i1 %ident.check, %40
  %42 = add i32 %35, %28
  %43 = icmp ult i32 %42, %35
  %44 = or i1 %43, %41
  br i1 %44, label %for.body8.us.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %vector.scevcheck
  %bound0 = icmp ult i32* %scevgep, %scevgep109
  %bound1 = icmp ult i32* %scevgep106, %scevgep104
  %memcheck.conflict = and i1 %bound1, %bound0
  br i1 %memcheck.conflict, label %for.body8.us.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %30, label %middle.block.unr-lcssa, label %vector.body.preheader

vector.body.preheader:                            ; preds = %vector.ph
  br label %vector.body

vector.body:                                      ; preds = %vector.body.preheader, %vector.body
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %vector.body.preheader ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body ], [ %unroll_iter, %vector.body.preheader ]
  %45 = trunc i64 %index to i32
  %46 = add i32 %cStart.tr.lcssa, %45
  %47 = add i32 %46, %mul.us
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i32, i32* %18, i64 %48
  %50 = bitcast i32* %49 to <8 x i32>*
  %wide.load = load <8 x i32>, <8 x i32>* %50, align 4, !tbaa !59, !alias.scope !134
  %51 = getelementptr i32, i32* %49, i64 8
  %52 = bitcast i32* %51 to <8 x i32>*
  %wide.load121 = load <8 x i32>, <8 x i32>* %52, align 4, !tbaa !59, !alias.scope !134
  %53 = getelementptr i32, i32* %49, i64 16
  %54 = bitcast i32* %53 to <8 x i32>*
  %wide.load122 = load <8 x i32>, <8 x i32>* %54, align 4, !tbaa !59, !alias.scope !134
  %55 = getelementptr i32, i32* %49, i64 24
  %56 = bitcast i32* %55 to <8 x i32>*
  %wide.load123 = load <8 x i32>, <8 x i32>* %56, align 4, !tbaa !59, !alias.scope !134
  %57 = add i32 %46, %i.085.us
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i32, i32* %19, i64 %58
  %60 = bitcast i32* %59 to <8 x i32>*
  store <8 x i32> %wide.load, <8 x i32>* %60, align 4, !tbaa !59, !alias.scope !137, !noalias !134
  %61 = getelementptr i32, i32* %59, i64 8
  %62 = bitcast i32* %61 to <8 x i32>*
  store <8 x i32> %wide.load121, <8 x i32>* %62, align 4, !tbaa !59, !alias.scope !137, !noalias !134
  %63 = getelementptr i32, i32* %59, i64 16
  %64 = bitcast i32* %63 to <8 x i32>*
  store <8 x i32> %wide.load122, <8 x i32>* %64, align 4, !tbaa !59, !alias.scope !137, !noalias !134
  %65 = getelementptr i32, i32* %59, i64 24
  %66 = bitcast i32* %65 to <8 x i32>*
  store <8 x i32> %wide.load123, <8 x i32>* %66, align 4, !tbaa !59, !alias.scope !137, !noalias !134
  %67 = or i32 %45, 32
  %68 = add i32 %67, %cStart.tr.lcssa
  %69 = add i32 %68, %mul.us
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i32, i32* %18, i64 %70
  %72 = bitcast i32* %71 to <8 x i32>*
  %wide.load.1 = load <8 x i32>, <8 x i32>* %72, align 4, !tbaa !59, !alias.scope !134
  %73 = getelementptr i32, i32* %71, i64 8
  %74 = bitcast i32* %73 to <8 x i32>*
  %wide.load121.1 = load <8 x i32>, <8 x i32>* %74, align 4, !tbaa !59, !alias.scope !134
  %75 = getelementptr i32, i32* %71, i64 16
  %76 = bitcast i32* %75 to <8 x i32>*
  %wide.load122.1 = load <8 x i32>, <8 x i32>* %76, align 4, !tbaa !59, !alias.scope !134
  %77 = getelementptr i32, i32* %71, i64 24
  %78 = bitcast i32* %77 to <8 x i32>*
  %wide.load123.1 = load <8 x i32>, <8 x i32>* %78, align 4, !tbaa !59, !alias.scope !134
  %79 = add i32 %68, %i.085.us
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds i32, i32* %19, i64 %80
  %82 = bitcast i32* %81 to <8 x i32>*
  store <8 x i32> %wide.load.1, <8 x i32>* %82, align 4, !tbaa !59, !alias.scope !137, !noalias !134
  %83 = getelementptr i32, i32* %81, i64 8
  %84 = bitcast i32* %83 to <8 x i32>*
  store <8 x i32> %wide.load121.1, <8 x i32>* %84, align 4, !tbaa !59, !alias.scope !137, !noalias !134
  %85 = getelementptr i32, i32* %81, i64 16
  %86 = bitcast i32* %85 to <8 x i32>*
  store <8 x i32> %wide.load122.1, <8 x i32>* %86, align 4, !tbaa !59, !alias.scope !137, !noalias !134
  %87 = getelementptr i32, i32* %81, i64 24
  %88 = bitcast i32* %87 to <8 x i32>*
  store <8 x i32> %wide.load123.1, <8 x i32>* %88, align 4, !tbaa !59, !alias.scope !137, !noalias !134
  %index.next.1 = add i64 %index, 64
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !139

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %89 = trunc i64 %index.unr to i32
  %90 = add i32 %cStart.tr.lcssa, %89
  %91 = add i32 %90, %mul.us
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds i32, i32* %18, i64 %92
  %94 = bitcast i32* %93 to <8 x i32>*
  %wide.load.epil = load <8 x i32>, <8 x i32>* %94, align 4, !tbaa !59, !alias.scope !134
  %95 = getelementptr i32, i32* %93, i64 8
  %96 = bitcast i32* %95 to <8 x i32>*
  %wide.load121.epil = load <8 x i32>, <8 x i32>* %96, align 4, !tbaa !59, !alias.scope !134
  %97 = getelementptr i32, i32* %93, i64 16
  %98 = bitcast i32* %97 to <8 x i32>*
  %wide.load122.epil = load <8 x i32>, <8 x i32>* %98, align 4, !tbaa !59, !alias.scope !134
  %99 = getelementptr i32, i32* %93, i64 24
  %100 = bitcast i32* %99 to <8 x i32>*
  %wide.load123.epil = load <8 x i32>, <8 x i32>* %100, align 4, !tbaa !59, !alias.scope !134
  %101 = add i32 %90, %i.085.us
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds i32, i32* %19, i64 %102
  %104 = bitcast i32* %103 to <8 x i32>*
  store <8 x i32> %wide.load.epil, <8 x i32>* %104, align 4, !tbaa !59, !alias.scope !137, !noalias !134
  %105 = getelementptr i32, i32* %103, i64 8
  %106 = bitcast i32* %105 to <8 x i32>*
  store <8 x i32> %wide.load121.epil, <8 x i32>* %106, align 4, !tbaa !59, !alias.scope !137, !noalias !134
  %107 = getelementptr i32, i32* %103, i64 16
  %108 = bitcast i32* %107 to <8 x i32>*
  store <8 x i32> %wide.load122.epil, <8 x i32>* %108, align 4, !tbaa !59, !alias.scope !137, !noalias !134
  %109 = getelementptr i32, i32* %103, i64 24
  %110 = bitcast i32* %109 to <8 x i32>*
  store <8 x i32> %wide.load123.epil, <8 x i32>* %110, align 4, !tbaa !59, !alias.scope !137, !noalias !134
  br label %middle.block

middle.block:                                     ; preds = %middle.block.unr-lcssa, %vector.body.epil
  br i1 %cmp.n, label %for.cond4.for.cond.cleanup7_crit_edge.us, label %for.body8.us.preheader

for.body8.us.preheader:                           ; preds = %middle.block, %vector.memcheck, %vector.scevcheck, %for.body.us
  %.pre-phi141 = phi i64 [ %22, %vector.memcheck ], [ %22, %vector.scevcheck ], [ %22, %for.body.us ], [ %.pre140, %middle.block ]
  %.pre-phi = phi i64 [ %20, %vector.memcheck ], [ %20, %vector.scevcheck ], [ %20, %for.body.us ], [ %.pre, %middle.block ]
  %indvars.iv.ph = phi i64 [ %17, %vector.memcheck ], [ %17, %vector.scevcheck ], [ %17, %for.body.us ], [ %ind.end, %middle.block ]
  %xtraiter126 = and i64 %.pre-phi, 3
  %lcmp.mod127 = icmp eq i64 %xtraiter126, 0
  br i1 %lcmp.mod127, label %for.body8.us.prol.loopexit, label %for.body8.us.prol.preheader

for.body8.us.prol.preheader:                      ; preds = %for.body8.us.preheader
  br label %for.body8.us.prol

for.body8.us.prol:                                ; preds = %for.body8.us.prol.preheader, %for.body8.us.prol
  %indvars.iv.prol = phi i64 [ %indvars.iv.next.prol, %for.body8.us.prol ], [ %indvars.iv.ph, %for.body8.us.prol.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body8.us.prol ], [ %xtraiter126, %for.body8.us.prol.preheader ]
  %111 = trunc i64 %indvars.iv.prol to i32
  %add9.us.prol = add i32 %mul.us, %111
  %idxprom.us.prol = zext i32 %add9.us.prol to i64
  %arrayidx.us.prol = getelementptr inbounds i32, i32* %18, i64 %idxprom.us.prol
  %112 = load i32, i32* %arrayidx.us.prol, align 4, !tbaa !59
  %mul10.us.prol = mul i32 %111, %cLength
  %add11.us.prol = add i32 %mul10.us.prol, %i.085.us
  %idxprom12.us.prol = zext i32 %add11.us.prol to i64
  %arrayidx13.us.prol = getelementptr inbounds i32, i32* %19, i64 %idxprom12.us.prol
  store i32 %112, i32* %arrayidx13.us.prol, align 4, !tbaa !59
  %indvars.iv.next.prol = add nuw nsw i64 %indvars.iv.prol, 1
  %prol.iter.sub = add nsw i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body8.us.prol.loopexit.loopexit, label %for.body8.us.prol, !llvm.loop !140

for.body8.us.prol.loopexit.loopexit:              ; preds = %for.body8.us.prol
  %113 = add nsw i64 %xtraiter126, %indvars.iv.ph
  br label %for.body8.us.prol.loopexit

for.body8.us.prol.loopexit:                       ; preds = %for.body8.us.prol.loopexit.loopexit, %for.body8.us.preheader
  %indvars.iv.unr = phi i64 [ %indvars.iv.ph, %for.body8.us.preheader ], [ %113, %for.body8.us.prol.loopexit.loopexit ]
  %114 = icmp ult i64 %.pre-phi141, 3
  br i1 %114, label %for.cond4.for.cond.cleanup7_crit_edge.us, label %for.body8.us.preheader147

for.body8.us.preheader147:                        ; preds = %for.body8.us.prol.loopexit
  br label %for.body8.us

for.body8.us:                                     ; preds = %for.body8.us.preheader147, %for.body8.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body8.us ], [ %indvars.iv.unr, %for.body8.us.preheader147 ]
  %115 = trunc i64 %indvars.iv to i32
  %add9.us = add i32 %mul.us, %115
  %idxprom.us = zext i32 %add9.us to i64
  %arrayidx.us = getelementptr inbounds i32, i32* %18, i64 %idxprom.us
  %116 = load i32, i32* %arrayidx.us, align 4, !tbaa !59
  %mul10.us = mul i32 %115, %cLength
  %add11.us = add i32 %mul10.us, %i.085.us
  %idxprom12.us = zext i32 %add11.us to i64
  %arrayidx13.us = getelementptr inbounds i32, i32* %19, i64 %idxprom12.us
  store i32 %116, i32* %arrayidx13.us, align 4, !tbaa !59
  %117 = add i32 %115, 1
  %add9.us.1 = add i32 %117, %mul.us
  %idxprom.us.1 = zext i32 %add9.us.1 to i64
  %arrayidx.us.1 = getelementptr inbounds i32, i32* %18, i64 %idxprom.us.1
  %118 = load i32, i32* %arrayidx.us.1, align 4, !tbaa !59
  %mul10.us.1 = mul i32 %117, %cLength
  %add11.us.1 = add i32 %mul10.us.1, %i.085.us
  %idxprom12.us.1 = zext i32 %add11.us.1 to i64
  %arrayidx13.us.1 = getelementptr inbounds i32, i32* %19, i64 %idxprom12.us.1
  store i32 %118, i32* %arrayidx13.us.1, align 4, !tbaa !59
  %119 = add i32 %115, 2
  %add9.us.2 = add i32 %119, %mul.us
  %idxprom.us.2 = zext i32 %add9.us.2 to i64
  %arrayidx.us.2 = getelementptr inbounds i32, i32* %18, i64 %idxprom.us.2
  %120 = load i32, i32* %arrayidx.us.2, align 4, !tbaa !59
  %mul10.us.2 = mul i32 %119, %cLength
  %add11.us.2 = add i32 %mul10.us.2, %i.085.us
  %idxprom12.us.2 = zext i32 %add11.us.2 to i64
  %arrayidx13.us.2 = getelementptr inbounds i32, i32* %19, i64 %idxprom12.us.2
  store i32 %120, i32* %arrayidx13.us.2, align 4, !tbaa !59
  %121 = add i32 %115, 3
  %add9.us.3 = add i32 %121, %mul.us
  %idxprom.us.3 = zext i32 %add9.us.3 to i64
  %arrayidx.us.3 = getelementptr inbounds i32, i32* %18, i64 %idxprom.us.3
  %122 = load i32, i32* %arrayidx.us.3, align 4, !tbaa !59
  %mul10.us.3 = mul i32 %121, %cLength
  %add11.us.3 = add i32 %mul10.us.3, %i.085.us
  %idxprom12.us.3 = zext i32 %add11.us.3 to i64
  %arrayidx13.us.3 = getelementptr inbounds i32, i32* %19, i64 %idxprom12.us.3
  store i32 %122, i32* %arrayidx13.us.3, align 4, !tbaa !59
  %indvars.iv.next.3 = add nsw i64 %indvars.iv, 4
  %exitcond.3 = icmp eq i64 %indvars.iv.next.3, %wide.trip.count
  br i1 %exitcond.3, label %for.cond4.for.cond.cleanup7_crit_edge.us, label %for.body8.us, !llvm.loop !141

for.cond4.for.cond.cleanup7_crit_edge.us:         ; preds = %for.body8.us, %for.body8.us.prol.loopexit, %middle.block
  %inc15.us = add nuw i32 %i.085.us, 1
  %exitcond93 = icmp eq i32 %inc15.us, %add
  %indvars.iv.next = add nuw nsw i64 %indvars.iv132, 1
  br i1 %exitcond93, label %if.end32, label %for.body.us

if.else:                                          ; preds = %if.else.preheader, %det.cont
  %cCount.tr88 = phi i32 [ %sub, %det.cont ], [ %cCount, %if.else.preheader ]
  %cStart.tr87 = phi i32 [ %add20, %det.cont ], [ %cStart, %if.else.preheader ]
  %cmp17 = icmp ugt i32 %cCount.tr88, %rCount
  br i1 %cmp17, label %if.then18, label %if.else22

if.then18:                                        ; preds = %if.else
  %div = lshr i32 %cCount.tr88, 1
  %sub = sub i32 %cCount.tr88, %div
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %11, i16* nonnull %12) #2
  %123 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %123, i8** %14, align 8
  %124 = call i8* @llvm.stacksave()
  store volatile i8* %124, i8** %15, align 8
  %125 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %16) #23
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %if.then18.split, label %det.cont

if.then18.split:                                  ; preds = %if.then18
  call fastcc void @_ZN9transposeIjjE6transREjjjjjj_det.achd.cilk(%struct.transpose* %this, i32 %rStart, i32 %rCount, i32 %rLength, i32 %cStart.tr87, i32 %div, i32 %cLength)
  br label %det.cont

det.cont:                                         ; preds = %if.then18.split, %if.then18
  %add20 = add i32 %div, %cStart.tr87
  %127 = or i32 %sub, %rCount
  %128 = icmp ult i32 %127, 64
  br i1 %128, label %if.then, label %if.else

if.else22:                                        ; preds = %if.else
  %div24 = lshr i32 %rCount, 1
  %sub27 = sub i32 %rCount, %div24
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %11, i16* nonnull %12) #2
  %129 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %129, i8** %14, align 8
  %130 = call i8* @llvm.stacksave()
  store volatile i8* %130, i8** %15, align 8
  %131 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %16) #23
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %if.else22.split, label %det.cont29

if.else22.split:                                  ; preds = %if.else22
  call fastcc void @_ZN9transposeIjjE6transREjjjjjj_det.achd28.cilk(%struct.transpose* %this, i32 %rStart, i32 %div24, i32 %rLength, i32 %cStart.tr87, i32 %cCount.tr88, i32 %cLength)
  br label %det.cont29

det.cont29:                                       ; preds = %if.else22.split, %if.else22
  %add30 = add i32 %div24, %rStart
  tail call void @_ZN9transposeIjjE6transREjjjjjj(%struct.transpose* %this, i32 %add30, i32 %sub27, i32 %rLength, i32 %cStart.tr87, i32 %cCount.tr88, i32 %cLength)
  %133 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %134 = load atomic i32, i32* %133 acquire, align 8
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %det.cont29
  %137 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %11, i16* nonnull %12) #2
  store volatile i8* %129, i8** %14, align 8
  %138 = call i8* @llvm.stacksave() #2
  store volatile i8* %138, i8** %15, align 8
  %139 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %16) #24
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %det.cont29, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %141 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %142 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %141, i64 0, i32 12, i32 0
  %143 = load i64, i64* %142, align 8
  %144 = add i64 %143, 1
  store i64 %144, i64* %142, align 8
  br label %if.end32

if.end32:                                         ; preds = %for.cond4.for.cond.cleanup7_crit_edge.us, %__cilk_sync_nothrow.exit, %for.body.lr.ph, %if.then
  %145 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %146 = load atomic i32, i32* %145 acquire, align 8
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %__cilk_sync_nothrow.exit135, label %cilk.sync.savestate.i133

cilk.sync.savestate.i133:                         ; preds = %if.end32
  %149 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %150 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %151 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %150, i16* nonnull %151) #2
  %152 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %153 = call i8* @llvm.frameaddress(i32 0) #2
  %154 = getelementptr inbounds [5 x i8*], [5 x i8*]* %152, i64 0, i64 0
  store volatile i8* %153, i8** %154, align 8
  %155 = call i8* @llvm.stacksave() #2
  %156 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %155, i8** %156, align 8
  %157 = bitcast [5 x i8*]* %152 to i8*
  %158 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %157) #24
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %cilk.sync.runtimecall.i134, label %__cilk_sync_nothrow.exit135

cilk.sync.runtimecall.i134:                       ; preds = %cilk.sync.savestate.i133
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit135

__cilk_sync_nothrow.exit135:                      ; preds = %if.end32, %cilk.sync.savestate.i133, %cilk.sync.runtimecall.i134
  %160 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %161 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %160, i64 0, i32 12, i32 0
  %162 = load i64, i64* %161, align 8
  %163 = add i64 %162, 1
  store i64 %163, i64* %161, align 8
  %164 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %165 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %164, i64 0, i32 9
  %168 = bitcast %struct.__cilkrts_stack_frame** %167 to i64*
  store atomic i64 %166, i64* %168 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %169 = load atomic i32, i32* %145 acquire, align 8
  %170 = icmp eq i32 %169, 16777216
  br i1 %170, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit135
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit135, %body.i
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr i32 @_ZN8sequence4scanIjlN5utils4addFIjEENS_4getAIjlEEEET_PS6_T0_S8_T1_T2_S6_bb(i32* %Out, i64 %s, i64 %e, i32* %g.coerce, i32 %zero, i1 zeroext %inclusive, i1 zeroext %back) local_unnamed_addr #7 comdat {
entry:
  %sub = sub i64 %e, %s
  %sub2 = add nsw i64 %sub, -1
  %div = sdiv i64 %sub2, 1024
  %add = add nsw i64 %div, 1
  %cmp = icmp slt i64 %sub, 2049
  br i1 %cmp, label %if.then, label %pfor.detach.lr.ph

if.then:                                          ; preds = %entry
  %cmp98.i = icmp sgt i64 %e, %s
  br i1 %inclusive, label %if.then.i, label %if.else16.i

if.then.i:                                        ; preds = %if.then
  br i1 %back, label %if.then3.i, label %if.else.i

if.then3.i:                                       ; preds = %if.then.i
  br i1 %cmp98.i, label %for.body.i.preheader, label %cleanup

for.body.i.preheader:                             ; preds = %if.then3.i
  %0 = add i64 %e, -1
  %1 = sub i64 %0, %s
  %xtraiter = and i64 %sub, 7
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body.i.prol.loopexit, label %for.body.i.prol.preheader

for.body.i.prol.preheader:                        ; preds = %for.body.i.preheader
  br label %for.body.i.prol

for.body.i.prol:                                  ; preds = %for.body.i.prol.preheader, %for.body.i.prol
  %i.0100.in.i.prol = phi i64 [ %i.0100.i.prol, %for.body.i.prol ], [ %e, %for.body.i.prol.preheader ]
  %r.099.i.prol = phi i32 [ %add.i79.i.prol, %for.body.i.prol ], [ %zero, %for.body.i.prol.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body.i.prol ], [ %xtraiter, %for.body.i.prol.preheader ]
  %i.0100.i.prol = add nsw i64 %i.0100.in.i.prol, -1
  %arrayidx.i.i.prol = getelementptr inbounds i32, i32* %g.coerce, i64 %i.0100.i.prol
  %2 = load i32, i32* %arrayidx.i.i.prol, align 4, !tbaa !59
  %add.i79.i.prol = add i32 %2, %r.099.i.prol
  %arrayidx.i.prol = getelementptr inbounds i32, i32* %Out, i64 %i.0100.i.prol
  store i32 %add.i79.i.prol, i32* %arrayidx.i.prol, align 4, !tbaa !59
  %prol.iter.sub = add nsw i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body.i.prol.loopexit.loopexit, label %for.body.i.prol, !llvm.loop !142

for.body.i.prol.loopexit.loopexit:                ; preds = %for.body.i.prol
  %3 = sub i64 %e, %xtraiter
  br label %for.body.i.prol.loopexit

for.body.i.prol.loopexit:                         ; preds = %for.body.i.prol.loopexit.loopexit, %for.body.i.preheader
  %i.0100.in.i.unr = phi i64 [ %e, %for.body.i.preheader ], [ %3, %for.body.i.prol.loopexit.loopexit ]
  %r.099.i.unr = phi i32 [ %zero, %for.body.i.preheader ], [ %add.i79.i.prol, %for.body.i.prol.loopexit.loopexit ]
  %add.i79.i.lcssa.unr = phi i32 [ undef, %for.body.i.preheader ], [ %add.i79.i.prol, %for.body.i.prol.loopexit.loopexit ]
  %4 = icmp ult i64 %1, 7
  br i1 %4, label %cleanup, label %for.body.i.preheader332

for.body.i.preheader332:                          ; preds = %for.body.i.prol.loopexit
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.preheader332, %for.body.i
  %i.0100.in.i = phi i64 [ %i.0100.i.7, %for.body.i ], [ %i.0100.in.i.unr, %for.body.i.preheader332 ]
  %r.099.i = phi i32 [ %add.i79.i.7, %for.body.i ], [ %r.099.i.unr, %for.body.i.preheader332 ]
  %i.0100.i = add nsw i64 %i.0100.in.i, -1
  %arrayidx.i.i = getelementptr inbounds i32, i32* %g.coerce, i64 %i.0100.i
  %5 = load i32, i32* %arrayidx.i.i, align 4, !tbaa !59
  %add.i79.i = add i32 %5, %r.099.i
  %arrayidx.i = getelementptr inbounds i32, i32* %Out, i64 %i.0100.i
  store i32 %add.i79.i, i32* %arrayidx.i, align 4, !tbaa !59
  %i.0100.i.1 = add nsw i64 %i.0100.in.i, -2
  %arrayidx.i.i.1 = getelementptr inbounds i32, i32* %g.coerce, i64 %i.0100.i.1
  %6 = load i32, i32* %arrayidx.i.i.1, align 4, !tbaa !59
  %add.i79.i.1 = add i32 %6, %add.i79.i
  %arrayidx.i.1 = getelementptr inbounds i32, i32* %Out, i64 %i.0100.i.1
  store i32 %add.i79.i.1, i32* %arrayidx.i.1, align 4, !tbaa !59
  %i.0100.i.2 = add nsw i64 %i.0100.in.i, -3
  %arrayidx.i.i.2 = getelementptr inbounds i32, i32* %g.coerce, i64 %i.0100.i.2
  %7 = load i32, i32* %arrayidx.i.i.2, align 4, !tbaa !59
  %add.i79.i.2 = add i32 %7, %add.i79.i.1
  %arrayidx.i.2 = getelementptr inbounds i32, i32* %Out, i64 %i.0100.i.2
  store i32 %add.i79.i.2, i32* %arrayidx.i.2, align 4, !tbaa !59
  %i.0100.i.3 = add nsw i64 %i.0100.in.i, -4
  %arrayidx.i.i.3 = getelementptr inbounds i32, i32* %g.coerce, i64 %i.0100.i.3
  %8 = load i32, i32* %arrayidx.i.i.3, align 4, !tbaa !59
  %add.i79.i.3 = add i32 %8, %add.i79.i.2
  %arrayidx.i.3 = getelementptr inbounds i32, i32* %Out, i64 %i.0100.i.3
  store i32 %add.i79.i.3, i32* %arrayidx.i.3, align 4, !tbaa !59
  %i.0100.i.4 = add nsw i64 %i.0100.in.i, -5
  %arrayidx.i.i.4 = getelementptr inbounds i32, i32* %g.coerce, i64 %i.0100.i.4
  %9 = load i32, i32* %arrayidx.i.i.4, align 4, !tbaa !59
  %add.i79.i.4 = add i32 %9, %add.i79.i.3
  %arrayidx.i.4 = getelementptr inbounds i32, i32* %Out, i64 %i.0100.i.4
  store i32 %add.i79.i.4, i32* %arrayidx.i.4, align 4, !tbaa !59
  %i.0100.i.5 = add nsw i64 %i.0100.in.i, -6
  %arrayidx.i.i.5 = getelementptr inbounds i32, i32* %g.coerce, i64 %i.0100.i.5
  %10 = load i32, i32* %arrayidx.i.i.5, align 4, !tbaa !59
  %add.i79.i.5 = add i32 %10, %add.i79.i.4
  %arrayidx.i.5 = getelementptr inbounds i32, i32* %Out, i64 %i.0100.i.5
  store i32 %add.i79.i.5, i32* %arrayidx.i.5, align 4, !tbaa !59
  %i.0100.i.6 = add nsw i64 %i.0100.in.i, -7
  %arrayidx.i.i.6 = getelementptr inbounds i32, i32* %g.coerce, i64 %i.0100.i.6
  %11 = load i32, i32* %arrayidx.i.i.6, align 4, !tbaa !59
  %add.i79.i.6 = add i32 %11, %add.i79.i.5
  %arrayidx.i.6 = getelementptr inbounds i32, i32* %Out, i64 %i.0100.i.6
  store i32 %add.i79.i.6, i32* %arrayidx.i.6, align 4, !tbaa !59
  %i.0100.i.7 = add nsw i64 %i.0100.in.i, -8
  %arrayidx.i.i.7 = getelementptr inbounds i32, i32* %g.coerce, i64 %i.0100.i.7
  %12 = load i32, i32* %arrayidx.i.i.7, align 4, !tbaa !59
  %add.i79.i.7 = add i32 %12, %add.i79.i.6
  %arrayidx.i.7 = getelementptr inbounds i32, i32* %Out, i64 %i.0100.i.7
  store i32 %add.i79.i.7, i32* %arrayidx.i.7, align 4, !tbaa !59
  %cmp.i.7 = icmp sgt i64 %i.0100.i.7, %s
  br i1 %cmp.i.7, label %for.body.i, label %cleanup

if.else.i:                                        ; preds = %if.then.i
  br i1 %cmp98.i, label %for.body9.i.preheader, label %cleanup

for.body9.i.preheader:                            ; preds = %if.else.i
  %13 = add i64 %e, -1
  %14 = sub i64 %13, %s
  %xtraiter253 = and i64 %sub, 7
  %lcmp.mod254 = icmp eq i64 %xtraiter253, 0
  br i1 %lcmp.mod254, label %for.body9.i.prol.loopexit, label %for.body9.i.prol.preheader

for.body9.i.prol.preheader:                       ; preds = %for.body9.i.preheader
  br label %for.body9.i.prol

for.body9.i.prol:                                 ; preds = %for.body9.i.prol.preheader, %for.body9.i.prol
  %i5.0103.i.prol = phi i64 [ %inc.i.prol, %for.body9.i.prol ], [ %s, %for.body9.i.prol.preheader ]
  %r.1102.i.prol = phi i32 [ %add.i76.i.prol, %for.body9.i.prol ], [ %zero, %for.body9.i.prol.preheader ]
  %prol.iter255 = phi i64 [ %prol.iter255.sub, %for.body9.i.prol ], [ %xtraiter253, %for.body9.i.prol.preheader ]
  %arrayidx.i78.i.prol = getelementptr inbounds i32, i32* %g.coerce, i64 %i5.0103.i.prol
  %15 = load i32, i32* %arrayidx.i78.i.prol, align 4, !tbaa !59
  %add.i76.i.prol = add i32 %15, %r.1102.i.prol
  %arrayidx13.i.prol = getelementptr inbounds i32, i32* %Out, i64 %i5.0103.i.prol
  store i32 %add.i76.i.prol, i32* %arrayidx13.i.prol, align 4, !tbaa !59
  %inc.i.prol = add nsw i64 %i5.0103.i.prol, 1
  %prol.iter255.sub = add nsw i64 %prol.iter255, -1
  %prol.iter255.cmp = icmp eq i64 %prol.iter255.sub, 0
  br i1 %prol.iter255.cmp, label %for.body9.i.prol.loopexit.loopexit, label %for.body9.i.prol, !llvm.loop !143

for.body9.i.prol.loopexit.loopexit:               ; preds = %for.body9.i.prol
  %16 = add i64 %xtraiter253, %s
  br label %for.body9.i.prol.loopexit

for.body9.i.prol.loopexit:                        ; preds = %for.body9.i.prol.loopexit.loopexit, %for.body9.i.preheader
  %add.i76.i.lcssa.unr = phi i32 [ undef, %for.body9.i.preheader ], [ %add.i76.i.prol, %for.body9.i.prol.loopexit.loopexit ]
  %i5.0103.i.unr = phi i64 [ %s, %for.body9.i.preheader ], [ %16, %for.body9.i.prol.loopexit.loopexit ]
  %r.1102.i.unr = phi i32 [ %zero, %for.body9.i.preheader ], [ %add.i76.i.prol, %for.body9.i.prol.loopexit.loopexit ]
  %17 = icmp ult i64 %14, 7
  br i1 %17, label %cleanup, label %for.body9.i.preheader333

for.body9.i.preheader333:                         ; preds = %for.body9.i.prol.loopexit
  br label %for.body9.i

for.body9.i:                                      ; preds = %for.body9.i.preheader333, %for.body9.i
  %i5.0103.i = phi i64 [ %inc.i.7, %for.body9.i ], [ %i5.0103.i.unr, %for.body9.i.preheader333 ]
  %r.1102.i = phi i32 [ %add.i76.i.7, %for.body9.i ], [ %r.1102.i.unr, %for.body9.i.preheader333 ]
  %arrayidx.i78.i = getelementptr inbounds i32, i32* %g.coerce, i64 %i5.0103.i
  %18 = load i32, i32* %arrayidx.i78.i, align 4, !tbaa !59
  %add.i76.i = add i32 %18, %r.1102.i
  %arrayidx13.i = getelementptr inbounds i32, i32* %Out, i64 %i5.0103.i
  store i32 %add.i76.i, i32* %arrayidx13.i, align 4, !tbaa !59
  %inc.i = add nsw i64 %i5.0103.i, 1
  %arrayidx.i78.i.1 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc.i
  %19 = load i32, i32* %arrayidx.i78.i.1, align 4, !tbaa !59
  %add.i76.i.1 = add i32 %19, %add.i76.i
  %arrayidx13.i.1 = getelementptr inbounds i32, i32* %Out, i64 %inc.i
  store i32 %add.i76.i.1, i32* %arrayidx13.i.1, align 4, !tbaa !59
  %inc.i.1 = add nsw i64 %i5.0103.i, 2
  %arrayidx.i78.i.2 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc.i.1
  %20 = load i32, i32* %arrayidx.i78.i.2, align 4, !tbaa !59
  %add.i76.i.2 = add i32 %20, %add.i76.i.1
  %arrayidx13.i.2 = getelementptr inbounds i32, i32* %Out, i64 %inc.i.1
  store i32 %add.i76.i.2, i32* %arrayidx13.i.2, align 4, !tbaa !59
  %inc.i.2 = add nsw i64 %i5.0103.i, 3
  %arrayidx.i78.i.3 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc.i.2
  %21 = load i32, i32* %arrayidx.i78.i.3, align 4, !tbaa !59
  %add.i76.i.3 = add i32 %21, %add.i76.i.2
  %arrayidx13.i.3 = getelementptr inbounds i32, i32* %Out, i64 %inc.i.2
  store i32 %add.i76.i.3, i32* %arrayidx13.i.3, align 4, !tbaa !59
  %inc.i.3 = add nsw i64 %i5.0103.i, 4
  %arrayidx.i78.i.4 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc.i.3
  %22 = load i32, i32* %arrayidx.i78.i.4, align 4, !tbaa !59
  %add.i76.i.4 = add i32 %22, %add.i76.i.3
  %arrayidx13.i.4 = getelementptr inbounds i32, i32* %Out, i64 %inc.i.3
  store i32 %add.i76.i.4, i32* %arrayidx13.i.4, align 4, !tbaa !59
  %inc.i.4 = add nsw i64 %i5.0103.i, 5
  %arrayidx.i78.i.5 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc.i.4
  %23 = load i32, i32* %arrayidx.i78.i.5, align 4, !tbaa !59
  %add.i76.i.5 = add i32 %23, %add.i76.i.4
  %arrayidx13.i.5 = getelementptr inbounds i32, i32* %Out, i64 %inc.i.4
  store i32 %add.i76.i.5, i32* %arrayidx13.i.5, align 4, !tbaa !59
  %inc.i.5 = add nsw i64 %i5.0103.i, 6
  %arrayidx.i78.i.6 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc.i.5
  %24 = load i32, i32* %arrayidx.i78.i.6, align 4, !tbaa !59
  %add.i76.i.6 = add i32 %24, %add.i76.i.5
  %arrayidx13.i.6 = getelementptr inbounds i32, i32* %Out, i64 %inc.i.5
  store i32 %add.i76.i.6, i32* %arrayidx13.i.6, align 4, !tbaa !59
  %inc.i.6 = add nsw i64 %i5.0103.i, 7
  %arrayidx.i78.i.7 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc.i.6
  %25 = load i32, i32* %arrayidx.i78.i.7, align 4, !tbaa !59
  %add.i76.i.7 = add i32 %25, %add.i76.i.6
  %arrayidx13.i.7 = getelementptr inbounds i32, i32* %Out, i64 %inc.i.6
  store i32 %add.i76.i.7, i32* %arrayidx13.i.7, align 4, !tbaa !59
  %inc.i.7 = add nsw i64 %i5.0103.i, 8
  %exitcond.i.7 = icmp eq i64 %inc.i.7, %e
  br i1 %exitcond.i.7, label %cleanup, label %for.body9.i

if.else16.i:                                      ; preds = %if.then
  br i1 %back, label %if.then18.i, label %if.else31.i

if.then18.i:                                      ; preds = %if.else16.i
  br i1 %cmp98.i, label %for.body24.i.preheader, label %cleanup

for.body24.i.preheader:                           ; preds = %if.then18.i
  %26 = add i64 %e, -1
  %27 = sub i64 %26, %s
  %xtraiter256 = and i64 %sub, 7
  %lcmp.mod257 = icmp eq i64 %xtraiter256, 0
  br i1 %lcmp.mod257, label %for.body24.i.prol.loopexit, label %for.body24.i.prol.preheader

for.body24.i.prol.preheader:                      ; preds = %for.body24.i.preheader
  br label %for.body24.i.prol

for.body24.i.prol:                                ; preds = %for.body24.i.prol.preheader, %for.body24.i.prol
  %i19.0108.in.i.prol = phi i64 [ %i19.0108.i.prol, %for.body24.i.prol ], [ %e, %for.body24.i.prol.preheader ]
  %r.2107.i.prol = phi i32 [ %add.i73.i.prol, %for.body24.i.prol ], [ %zero, %for.body24.i.prol.preheader ]
  %prol.iter258 = phi i64 [ %prol.iter258.sub, %for.body24.i.prol ], [ %xtraiter256, %for.body24.i.prol.preheader ]
  %i19.0108.i.prol = add nsw i64 %i19.0108.in.i.prol, -1
  %arrayidx.i75.i.prol = getelementptr inbounds i32, i32* %g.coerce, i64 %i19.0108.i.prol
  %28 = load i32, i32* %arrayidx.i75.i.prol, align 4, !tbaa !59
  %arrayidx26.i.prol = getelementptr inbounds i32, i32* %Out, i64 %i19.0108.i.prol
  store i32 %r.2107.i.prol, i32* %arrayidx26.i.prol, align 4, !tbaa !59
  %add.i73.i.prol = add i32 %28, %r.2107.i.prol
  %prol.iter258.sub = add nsw i64 %prol.iter258, -1
  %prol.iter258.cmp = icmp eq i64 %prol.iter258.sub, 0
  br i1 %prol.iter258.cmp, label %for.body24.i.prol.loopexit.loopexit, label %for.body24.i.prol, !llvm.loop !144

for.body24.i.prol.loopexit.loopexit:              ; preds = %for.body24.i.prol
  %29 = sub i64 %e, %xtraiter256
  br label %for.body24.i.prol.loopexit

for.body24.i.prol.loopexit:                       ; preds = %for.body24.i.prol.loopexit.loopexit, %for.body24.i.preheader
  %i19.0108.in.i.unr = phi i64 [ %e, %for.body24.i.preheader ], [ %29, %for.body24.i.prol.loopexit.loopexit ]
  %r.2107.i.unr = phi i32 [ %zero, %for.body24.i.preheader ], [ %add.i73.i.prol, %for.body24.i.prol.loopexit.loopexit ]
  %add.i73.i.lcssa.unr = phi i32 [ undef, %for.body24.i.preheader ], [ %add.i73.i.prol, %for.body24.i.prol.loopexit.loopexit ]
  %30 = icmp ult i64 %27, 7
  br i1 %30, label %cleanup, label %for.body24.i.preheader335

for.body24.i.preheader335:                        ; preds = %for.body24.i.prol.loopexit
  br label %for.body24.i

for.body24.i:                                     ; preds = %for.body24.i.preheader335, %for.body24.i
  %i19.0108.in.i = phi i64 [ %i19.0108.i.7, %for.body24.i ], [ %i19.0108.in.i.unr, %for.body24.i.preheader335 ]
  %r.2107.i = phi i32 [ %add.i73.i.7, %for.body24.i ], [ %r.2107.i.unr, %for.body24.i.preheader335 ]
  %i19.0108.i = add nsw i64 %i19.0108.in.i, -1
  %arrayidx.i75.i = getelementptr inbounds i32, i32* %g.coerce, i64 %i19.0108.i
  %31 = load i32, i32* %arrayidx.i75.i, align 4, !tbaa !59
  %arrayidx26.i = getelementptr inbounds i32, i32* %Out, i64 %i19.0108.i
  store i32 %r.2107.i, i32* %arrayidx26.i, align 4, !tbaa !59
  %add.i73.i = add i32 %31, %r.2107.i
  %i19.0108.i.1 = add nsw i64 %i19.0108.in.i, -2
  %arrayidx.i75.i.1 = getelementptr inbounds i32, i32* %g.coerce, i64 %i19.0108.i.1
  %32 = load i32, i32* %arrayidx.i75.i.1, align 4, !tbaa !59
  %arrayidx26.i.1 = getelementptr inbounds i32, i32* %Out, i64 %i19.0108.i.1
  store i32 %add.i73.i, i32* %arrayidx26.i.1, align 4, !tbaa !59
  %add.i73.i.1 = add i32 %32, %add.i73.i
  %i19.0108.i.2 = add nsw i64 %i19.0108.in.i, -3
  %arrayidx.i75.i.2 = getelementptr inbounds i32, i32* %g.coerce, i64 %i19.0108.i.2
  %33 = load i32, i32* %arrayidx.i75.i.2, align 4, !tbaa !59
  %arrayidx26.i.2 = getelementptr inbounds i32, i32* %Out, i64 %i19.0108.i.2
  store i32 %add.i73.i.1, i32* %arrayidx26.i.2, align 4, !tbaa !59
  %add.i73.i.2 = add i32 %33, %add.i73.i.1
  %i19.0108.i.3 = add nsw i64 %i19.0108.in.i, -4
  %arrayidx.i75.i.3 = getelementptr inbounds i32, i32* %g.coerce, i64 %i19.0108.i.3
  %34 = load i32, i32* %arrayidx.i75.i.3, align 4, !tbaa !59
  %arrayidx26.i.3 = getelementptr inbounds i32, i32* %Out, i64 %i19.0108.i.3
  store i32 %add.i73.i.2, i32* %arrayidx26.i.3, align 4, !tbaa !59
  %add.i73.i.3 = add i32 %34, %add.i73.i.2
  %i19.0108.i.4 = add nsw i64 %i19.0108.in.i, -5
  %arrayidx.i75.i.4 = getelementptr inbounds i32, i32* %g.coerce, i64 %i19.0108.i.4
  %35 = load i32, i32* %arrayidx.i75.i.4, align 4, !tbaa !59
  %arrayidx26.i.4 = getelementptr inbounds i32, i32* %Out, i64 %i19.0108.i.4
  store i32 %add.i73.i.3, i32* %arrayidx26.i.4, align 4, !tbaa !59
  %add.i73.i.4 = add i32 %35, %add.i73.i.3
  %i19.0108.i.5 = add nsw i64 %i19.0108.in.i, -6
  %arrayidx.i75.i.5 = getelementptr inbounds i32, i32* %g.coerce, i64 %i19.0108.i.5
  %36 = load i32, i32* %arrayidx.i75.i.5, align 4, !tbaa !59
  %arrayidx26.i.5 = getelementptr inbounds i32, i32* %Out, i64 %i19.0108.i.5
  store i32 %add.i73.i.4, i32* %arrayidx26.i.5, align 4, !tbaa !59
  %add.i73.i.5 = add i32 %36, %add.i73.i.4
  %i19.0108.i.6 = add nsw i64 %i19.0108.in.i, -7
  %arrayidx.i75.i.6 = getelementptr inbounds i32, i32* %g.coerce, i64 %i19.0108.i.6
  %37 = load i32, i32* %arrayidx.i75.i.6, align 4, !tbaa !59
  %arrayidx26.i.6 = getelementptr inbounds i32, i32* %Out, i64 %i19.0108.i.6
  store i32 %add.i73.i.5, i32* %arrayidx26.i.6, align 4, !tbaa !59
  %add.i73.i.6 = add i32 %37, %add.i73.i.5
  %i19.0108.i.7 = add nsw i64 %i19.0108.in.i, -8
  %arrayidx.i75.i.7 = getelementptr inbounds i32, i32* %g.coerce, i64 %i19.0108.i.7
  %38 = load i32, i32* %arrayidx.i75.i.7, align 4, !tbaa !59
  %arrayidx26.i.7 = getelementptr inbounds i32, i32* %Out, i64 %i19.0108.i.7
  store i32 %add.i73.i.6, i32* %arrayidx26.i.7, align 4, !tbaa !59
  %add.i73.i.7 = add i32 %38, %add.i73.i.6
  %cmp22.i.7 = icmp sgt i64 %i19.0108.i.7, %s
  br i1 %cmp22.i.7, label %for.body24.i, label %cleanup

if.else31.i:                                      ; preds = %if.else16.i
  br i1 %cmp98.i, label %for.body36.i.preheader, label %cleanup

for.body36.i.preheader:                           ; preds = %if.else31.i
  %39 = add i64 %e, -1
  %40 = sub i64 %39, %s
  %xtraiter259 = and i64 %sub, 7
  %lcmp.mod260 = icmp eq i64 %xtraiter259, 0
  br i1 %lcmp.mod260, label %for.body36.i.prol.loopexit, label %for.body36.i.prol.preheader

for.body36.i.prol.preheader:                      ; preds = %for.body36.i.preheader
  br label %for.body36.i.prol

for.body36.i.prol:                                ; preds = %for.body36.i.prol.preheader, %for.body36.i.prol
  %i32.0112.i.prol = phi i64 [ %inc42.i.prol, %for.body36.i.prol ], [ %s, %for.body36.i.prol.preheader ]
  %r.3111.i.prol = phi i32 [ %add.i.i.prol, %for.body36.i.prol ], [ %zero, %for.body36.i.prol.preheader ]
  %prol.iter261 = phi i64 [ %prol.iter261.sub, %for.body36.i.prol ], [ %xtraiter259, %for.body36.i.prol.preheader ]
  %arrayidx.i72.i.prol = getelementptr inbounds i32, i32* %g.coerce, i64 %i32.0112.i.prol
  %41 = load i32, i32* %arrayidx.i72.i.prol, align 4, !tbaa !59
  %arrayidx39.i.prol = getelementptr inbounds i32, i32* %Out, i64 %i32.0112.i.prol
  store i32 %r.3111.i.prol, i32* %arrayidx39.i.prol, align 4, !tbaa !59
  %add.i.i.prol = add i32 %41, %r.3111.i.prol
  %inc42.i.prol = add nsw i64 %i32.0112.i.prol, 1
  %prol.iter261.sub = add nsw i64 %prol.iter261, -1
  %prol.iter261.cmp = icmp eq i64 %prol.iter261.sub, 0
  br i1 %prol.iter261.cmp, label %for.body36.i.prol.loopexit.loopexit, label %for.body36.i.prol, !llvm.loop !145

for.body36.i.prol.loopexit.loopexit:              ; preds = %for.body36.i.prol
  %42 = add i64 %xtraiter259, %s
  br label %for.body36.i.prol.loopexit

for.body36.i.prol.loopexit:                       ; preds = %for.body36.i.prol.loopexit.loopexit, %for.body36.i.preheader
  %add.i.i.lcssa.unr = phi i32 [ undef, %for.body36.i.preheader ], [ %add.i.i.prol, %for.body36.i.prol.loopexit.loopexit ]
  %i32.0112.i.unr = phi i64 [ %s, %for.body36.i.preheader ], [ %42, %for.body36.i.prol.loopexit.loopexit ]
  %r.3111.i.unr = phi i32 [ %zero, %for.body36.i.preheader ], [ %add.i.i.prol, %for.body36.i.prol.loopexit.loopexit ]
  %43 = icmp ult i64 %40, 7
  br i1 %43, label %cleanup, label %for.body36.i.preheader337

for.body36.i.preheader337:                        ; preds = %for.body36.i.prol.loopexit
  br label %for.body36.i

for.body36.i:                                     ; preds = %for.body36.i.preheader337, %for.body36.i
  %i32.0112.i = phi i64 [ %inc42.i.7, %for.body36.i ], [ %i32.0112.i.unr, %for.body36.i.preheader337 ]
  %r.3111.i = phi i32 [ %add.i.i.7, %for.body36.i ], [ %r.3111.i.unr, %for.body36.i.preheader337 ]
  %arrayidx.i72.i = getelementptr inbounds i32, i32* %g.coerce, i64 %i32.0112.i
  %44 = load i32, i32* %arrayidx.i72.i, align 4, !tbaa !59
  %arrayidx39.i = getelementptr inbounds i32, i32* %Out, i64 %i32.0112.i
  store i32 %r.3111.i, i32* %arrayidx39.i, align 4, !tbaa !59
  %add.i.i = add i32 %44, %r.3111.i
  %inc42.i = add nsw i64 %i32.0112.i, 1
  %arrayidx.i72.i.1 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc42.i
  %45 = load i32, i32* %arrayidx.i72.i.1, align 4, !tbaa !59
  %arrayidx39.i.1 = getelementptr inbounds i32, i32* %Out, i64 %inc42.i
  store i32 %add.i.i, i32* %arrayidx39.i.1, align 4, !tbaa !59
  %add.i.i.1 = add i32 %45, %add.i.i
  %inc42.i.1 = add nsw i64 %i32.0112.i, 2
  %arrayidx.i72.i.2 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc42.i.1
  %46 = load i32, i32* %arrayidx.i72.i.2, align 4, !tbaa !59
  %arrayidx39.i.2 = getelementptr inbounds i32, i32* %Out, i64 %inc42.i.1
  store i32 %add.i.i.1, i32* %arrayidx39.i.2, align 4, !tbaa !59
  %add.i.i.2 = add i32 %46, %add.i.i.1
  %inc42.i.2 = add nsw i64 %i32.0112.i, 3
  %arrayidx.i72.i.3 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc42.i.2
  %47 = load i32, i32* %arrayidx.i72.i.3, align 4, !tbaa !59
  %arrayidx39.i.3 = getelementptr inbounds i32, i32* %Out, i64 %inc42.i.2
  store i32 %add.i.i.2, i32* %arrayidx39.i.3, align 4, !tbaa !59
  %add.i.i.3 = add i32 %47, %add.i.i.2
  %inc42.i.3 = add nsw i64 %i32.0112.i, 4
  %arrayidx.i72.i.4 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc42.i.3
  %48 = load i32, i32* %arrayidx.i72.i.4, align 4, !tbaa !59
  %arrayidx39.i.4 = getelementptr inbounds i32, i32* %Out, i64 %inc42.i.3
  store i32 %add.i.i.3, i32* %arrayidx39.i.4, align 4, !tbaa !59
  %add.i.i.4 = add i32 %48, %add.i.i.3
  %inc42.i.4 = add nsw i64 %i32.0112.i, 5
  %arrayidx.i72.i.5 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc42.i.4
  %49 = load i32, i32* %arrayidx.i72.i.5, align 4, !tbaa !59
  %arrayidx39.i.5 = getelementptr inbounds i32, i32* %Out, i64 %inc42.i.4
  store i32 %add.i.i.4, i32* %arrayidx39.i.5, align 4, !tbaa !59
  %add.i.i.5 = add i32 %49, %add.i.i.4
  %inc42.i.5 = add nsw i64 %i32.0112.i, 6
  %arrayidx.i72.i.6 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc42.i.5
  %50 = load i32, i32* %arrayidx.i72.i.6, align 4, !tbaa !59
  %arrayidx39.i.6 = getelementptr inbounds i32, i32* %Out, i64 %inc42.i.5
  store i32 %add.i.i.5, i32* %arrayidx39.i.6, align 4, !tbaa !59
  %add.i.i.6 = add i32 %50, %add.i.i.5
  %inc42.i.6 = add nsw i64 %i32.0112.i, 7
  %arrayidx.i72.i.7 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc42.i.6
  %51 = load i32, i32* %arrayidx.i72.i.7, align 4, !tbaa !59
  %arrayidx39.i.7 = getelementptr inbounds i32, i32* %Out, i64 %inc42.i.6
  store i32 %add.i.i.6, i32* %arrayidx39.i.7, align 4, !tbaa !59
  %add.i.i.7 = add i32 %51, %add.i.i.6
  %inc42.i.7 = add nsw i64 %i32.0112.i, 8
  %exitcond117.i.7 = icmp eq i64 %inc42.i.7, %e
  br i1 %exitcond117.i.7, label %cleanup, label %for.body36.i

pfor.detach.lr.ph:                                ; preds = %entry
  %52 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8319 = shl i32 %52, 3
  %mul = shl nsw i64 %add, 2
  %call9 = tail call noalias i8* @malloc(i64 %mul) #2
  %53 = bitcast i8* %call9 to i32*
  %54 = sub i64 -2, %s
  %55 = sub i64 -1025, %s
  %56 = xor i64 %e, -1
  %57 = icmp sgt i64 %div, 0
  %smax315 = select i1 %57, i64 %div, i64 0
  %58 = zext i32 %__cilkrts_wc8319 to i64
  %59 = add nsw i64 %smax315, -1
  %60 = add nsw i64 %59, %58
  %61 = udiv i64 %60, %58
  %62 = icmp ult i64 %61, 2048
  %63 = select i1 %62, i64 %61, i64 2048
  tail call fastcc void @_ZN8sequence4scanIjlN5utils4addFIjEENS_4getAIjlEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach.ls(i64 0, i64 %smax315, i64 %63, i64 %54, i64 %55, i64 %56, i64 %s, i64 %e, i32* %g.coerce, i32* %53)
  %call35 = tail call i32 @_ZN8sequence4scanIjlN5utils4addFIjEENS_4getAIjlEEEET_PS6_T0_S8_T1_T2_S6_bb(i32* %53, i64 0, i64 %add, i32* %53, i32 %zero, i1 zeroext false, i1 zeroext %back)
  %64 = xor i64 %s, -1
  br i1 %inclusive, label %pfor.detach55.us.preheader, label %pfor.detach55.preheader

pfor.detach55.preheader:                          ; preds = %pfor.detach.lr.ph
  tail call fastcc void @_ZN8sequence4scanIjlN5utils4addFIjEENS_4getAIjlEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.ls(i64 0, i64 %smax315, i64 %63, i64 %55, i64 %56, i64 %64, i64 %54, i64 %s, i64 %e, i32* %53, i1 %back, i32* %g.coerce, i32* %Out)
  br label %sync.continue78

pfor.detach55.us.preheader:                       ; preds = %pfor.detach.lr.ph
  tail call fastcc void @_ZN8sequence4scanIjlN5utils4addFIjEENS_4getAIjlEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.us.ls(i64 0, i64 %smax315, i64 %63, i64 %55, i64 %56, i64 %64, i64 %54, i64 %s, i64 %e, i32* %53, i1 %back, i32* %g.coerce, i32* %Out)
  br label %sync.continue78

sync.continue78:                                  ; preds = %pfor.detach55.us.preheader, %pfor.detach55.preheader
  tail call void @free(i8* %call9) #2
  br label %cleanup

cleanup:                                          ; preds = %for.body36.i, %for.body24.i, %for.body9.i, %for.body.i, %for.body36.i.prol.loopexit, %for.body24.i.prol.loopexit, %for.body9.i.prol.loopexit, %for.body.i.prol.loopexit, %if.else31.i, %if.then18.i, %if.else.i, %if.then3.i, %sync.continue78
  %retval.0 = phi i32 [ %call35, %sync.continue78 ], [ %zero, %if.then3.i ], [ %zero, %if.else.i ], [ %zero, %if.then18.i ], [ %zero, %if.else31.i ], [ %add.i79.i.lcssa.unr, %for.body.i.prol.loopexit ], [ %add.i76.i.lcssa.unr, %for.body9.i.prol.loopexit ], [ %add.i73.i.lcssa.unr, %for.body24.i.prol.loopexit ], [ %add.i.i.lcssa.unr, %for.body36.i.prol.loopexit ], [ %add.i79.i.7, %for.body.i ], [ %add.i76.i.7, %for.body9.i ], [ %add.i73.i.7, %for.body24.i ], [ %add.i.i.7, %for.body36.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind stealable uwtable
define linkonce_odr void @_ZN10blockTransISt4pairIiP6vertexI8_point2dIdELi1EEEjE6transREjjjjjj(%struct.blockTrans* %this, i32 %rStart, i32 %rCount, i32 %rLength, i32 %cStart, i32 %cCount, i32 %cLength) local_unnamed_addr #15 comdat align 2 {
entry:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %entry
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %entry, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %entry ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %entry ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %9 = or i32 %cCount, %rCount
  %10 = icmp ult i32 %9, 64
  br i1 %10, label %if.then, label %if.else.preheader

if.else.preheader:                                ; preds = %__cilkrts_enter_frame_1.exit
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %13 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %14 = getelementptr inbounds [5 x i8*], [5 x i8*]* %13, i64 0, i64 0
  %15 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %16 = bitcast [5 x i8*]* %13 to i8*
  br label %if.else

if.then:                                          ; preds = %det.cont, %__cilkrts_enter_frame_1.exit
  %cStart.tr.lcssa = phi i32 [ %cStart, %__cilkrts_enter_frame_1.exit ], [ %add34, %det.cont ]
  %cCount.tr.lcssa = phi i32 [ %cCount, %__cilkrts_enter_frame_1.exit ], [ %sub, %det.cont ]
  %add = add i32 %rCount, %rStart
  %cmp3110 = icmp ugt i32 %add, %rStart
  br i1 %cmp3110, label %for.body.lr.ph, label %if.end46

for.body.lr.ph:                                   ; preds = %if.then
  %add5 = add i32 %cCount.tr.lcssa, %cStart.tr.lcssa
  %cmp6108 = icmp ult i32 %cStart.tr.lcssa, %add5
  br i1 %cmp6108, label %for.body.lr.ph.split.us, label %if.end46

for.body.lr.ph.split.us:                          ; preds = %for.body.lr.ph
  %L = getelementptr inbounds %struct.blockTrans, %struct.blockTrans* %this, i64 0, i32 4
  %OB = getelementptr inbounds %struct.blockTrans, %struct.blockTrans* %this, i64 0, i32 3
  %B = getelementptr inbounds %struct.blockTrans, %struct.blockTrans* %this, i64 0, i32 1
  %OA = getelementptr inbounds %struct.blockTrans, %struct.blockTrans* %this, i64 0, i32 2
  %A = getelementptr inbounds %struct.blockTrans, %struct.blockTrans* %this, i64 0, i32 0
  %17 = zext i32 %cStart.tr.lcssa to i64
  %18 = load %"struct.std::pair.6"*, %"struct.std::pair.6"** %A, align 8, !tbaa !126
  %19 = load i32*, i32** %OA, align 8, !tbaa !129
  %20 = load %"struct.std::pair.6"*, %"struct.std::pair.6"** %B, align 8, !tbaa !128
  %21 = load i32*, i32** %OB, align 8, !tbaa !130
  %22 = load i32*, i32** %L, align 8, !tbaa !131
  %wide.trip.count = zext i32 %add5 to i64
  br label %for.body.us

for.body.us:                                      ; preds = %for.cond4.for.cond.cleanup7_crit_edge.us, %for.body.lr.ph.split.us
  %i.0111.us = phi i32 [ %rStart, %for.body.lr.ph.split.us ], [ %inc29.us, %for.cond4.for.cond.cleanup7_crit_edge.us ]
  %mul.us = mul i32 %i.0111.us, %rLength
  br label %for.body8.us

for.body8.us:                                     ; preds = %for.cond.cleanup22.us, %for.body.us
  %indvars.iv = phi i64 [ %17, %for.body.us ], [ %indvars.iv.next, %for.cond.cleanup22.us ]
  %23 = trunc i64 %indvars.iv to i32
  %add9.us = add i32 %mul.us, %23
  %idxprom.us = zext i32 %add9.us to i64
  %arrayidx19.us = getelementptr inbounds i32, i32* %22, i64 %idxprom.us
  %24 = load i32, i32* %arrayidx19.us, align 4, !tbaa !59
  %cmp21104.us = icmp eq i32 %24, 0
  br i1 %cmp21104.us, label %for.cond.cleanup22.us, label %for.body23.lr.ph.us

for.cond.cleanup22.us.loopexit.unr-lcssa:         ; preds = %for.body23.us, %for.body23.lr.ph.us
  %pa.0107.us.unr = phi %"struct.std::pair.6"* [ %add.ptr.us, %for.body23.lr.ph.us ], [ %incdec.ptr.us.7, %for.body23.us ]
  %pb.0105.us.unr = phi %"struct.std::pair.6"* [ %add.ptr15.us, %for.body23.lr.ph.us ], [ %incdec.ptr24.us.7, %for.body23.us ]
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod, label %for.cond.cleanup22.us, label %for.body23.us.epil.preheader

for.body23.us.epil.preheader:                     ; preds = %for.cond.cleanup22.us.loopexit.unr-lcssa
  br label %for.body23.us.epil

for.body23.us.epil:                               ; preds = %for.body23.us.epil.preheader, %for.body23.us.epil
  %pa.0107.us.epil = phi %"struct.std::pair.6"* [ %incdec.ptr.us.epil, %for.body23.us.epil ], [ %pa.0107.us.unr, %for.body23.us.epil.preheader ]
  %pb.0105.us.epil = phi %"struct.std::pair.6"* [ %incdec.ptr24.us.epil, %for.body23.us.epil ], [ %pb.0105.us.unr, %for.body23.us.epil.preheader ]
  %epil.iter = phi i32 [ %epil.iter.sub, %for.body23.us.epil ], [ %xtraiter, %for.body23.us.epil.preheader ]
  %incdec.ptr.us.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pa.0107.us.epil, i64 1
  %incdec.ptr24.us.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pb.0105.us.epil, i64 1
  %first.i.us.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pa.0107.us.epil, i64 0, i32 0
  %25 = load i32, i32* %first.i.us.epil, align 8, !tbaa !109
  %first2.i.us.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pb.0105.us.epil, i64 0, i32 0
  store i32 %25, i32* %first2.i.us.epil, align 8, !tbaa !109
  %second.i.us.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pa.0107.us.epil, i64 0, i32 1
  %26 = bitcast %struct.vertex** %second.i.us.epil to i64*
  %27 = load i64, i64* %26, align 8, !tbaa !111
  %second3.i.us.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pb.0105.us.epil, i64 0, i32 1
  %28 = bitcast %struct.vertex** %second3.i.us.epil to i64*
  store i64 %27, i64* %28, align 8, !tbaa !111
  %epil.iter.sub = add nsw i32 %epil.iter, -1
  %epil.iter.cmp = icmp eq i32 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond.cleanup22.us, label %for.body23.us.epil, !llvm.loop !146

for.cond.cleanup22.us:                            ; preds = %for.body23.us.epil, %for.cond.cleanup22.us.loopexit.unr-lcssa, %for.body8.us
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond119 = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond119, label %for.cond4.for.cond.cleanup7_crit_edge.us, label %for.body8.us

for.body23.us:                                    ; preds = %for.body23.us, %for.body23.lr.ph.us.new
  %pa.0107.us = phi %"struct.std::pair.6"* [ %add.ptr.us, %for.body23.lr.ph.us.new ], [ %incdec.ptr.us.7, %for.body23.us ]
  %pb.0105.us = phi %"struct.std::pair.6"* [ %add.ptr15.us, %for.body23.lr.ph.us.new ], [ %incdec.ptr24.us.7, %for.body23.us ]
  %niter = phi i32 [ %unroll_iter, %for.body23.lr.ph.us.new ], [ %niter.nsub.7, %for.body23.us ]
  %first.i.us = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pa.0107.us, i64 0, i32 0
  %29 = load i32, i32* %first.i.us, align 8, !tbaa !109
  %first2.i.us = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pb.0105.us, i64 0, i32 0
  store i32 %29, i32* %first2.i.us, align 8, !tbaa !109
  %second.i.us = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pa.0107.us, i64 0, i32 1
  %30 = bitcast %struct.vertex** %second.i.us to i64*
  %31 = load i64, i64* %30, align 8, !tbaa !111
  %second3.i.us = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pb.0105.us, i64 0, i32 1
  %32 = bitcast %struct.vertex** %second3.i.us to i64*
  store i64 %31, i64* %32, align 8, !tbaa !111
  %first.i.us.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pa.0107.us, i64 1, i32 0
  %33 = load i32, i32* %first.i.us.1, align 8, !tbaa !109
  %first2.i.us.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pb.0105.us, i64 1, i32 0
  store i32 %33, i32* %first2.i.us.1, align 8, !tbaa !109
  %second.i.us.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pa.0107.us, i64 1, i32 1
  %34 = bitcast %struct.vertex** %second.i.us.1 to i64*
  %35 = load i64, i64* %34, align 8, !tbaa !111
  %second3.i.us.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pb.0105.us, i64 1, i32 1
  %36 = bitcast %struct.vertex** %second3.i.us.1 to i64*
  store i64 %35, i64* %36, align 8, !tbaa !111
  %first.i.us.2 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pa.0107.us, i64 2, i32 0
  %37 = load i32, i32* %first.i.us.2, align 8, !tbaa !109
  %first2.i.us.2 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pb.0105.us, i64 2, i32 0
  store i32 %37, i32* %first2.i.us.2, align 8, !tbaa !109
  %second.i.us.2 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pa.0107.us, i64 2, i32 1
  %38 = bitcast %struct.vertex** %second.i.us.2 to i64*
  %39 = load i64, i64* %38, align 8, !tbaa !111
  %second3.i.us.2 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pb.0105.us, i64 2, i32 1
  %40 = bitcast %struct.vertex** %second3.i.us.2 to i64*
  store i64 %39, i64* %40, align 8, !tbaa !111
  %first.i.us.3 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pa.0107.us, i64 3, i32 0
  %41 = load i32, i32* %first.i.us.3, align 8, !tbaa !109
  %first2.i.us.3 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pb.0105.us, i64 3, i32 0
  store i32 %41, i32* %first2.i.us.3, align 8, !tbaa !109
  %second.i.us.3 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pa.0107.us, i64 3, i32 1
  %42 = bitcast %struct.vertex** %second.i.us.3 to i64*
  %43 = load i64, i64* %42, align 8, !tbaa !111
  %second3.i.us.3 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pb.0105.us, i64 3, i32 1
  %44 = bitcast %struct.vertex** %second3.i.us.3 to i64*
  store i64 %43, i64* %44, align 8, !tbaa !111
  %first.i.us.4 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pa.0107.us, i64 4, i32 0
  %45 = load i32, i32* %first.i.us.4, align 8, !tbaa !109
  %first2.i.us.4 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pb.0105.us, i64 4, i32 0
  store i32 %45, i32* %first2.i.us.4, align 8, !tbaa !109
  %second.i.us.4 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pa.0107.us, i64 4, i32 1
  %46 = bitcast %struct.vertex** %second.i.us.4 to i64*
  %47 = load i64, i64* %46, align 8, !tbaa !111
  %second3.i.us.4 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pb.0105.us, i64 4, i32 1
  %48 = bitcast %struct.vertex** %second3.i.us.4 to i64*
  store i64 %47, i64* %48, align 8, !tbaa !111
  %first.i.us.5 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pa.0107.us, i64 5, i32 0
  %49 = load i32, i32* %first.i.us.5, align 8, !tbaa !109
  %first2.i.us.5 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pb.0105.us, i64 5, i32 0
  store i32 %49, i32* %first2.i.us.5, align 8, !tbaa !109
  %second.i.us.5 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pa.0107.us, i64 5, i32 1
  %50 = bitcast %struct.vertex** %second.i.us.5 to i64*
  %51 = load i64, i64* %50, align 8, !tbaa !111
  %second3.i.us.5 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pb.0105.us, i64 5, i32 1
  %52 = bitcast %struct.vertex** %second3.i.us.5 to i64*
  store i64 %51, i64* %52, align 8, !tbaa !111
  %first.i.us.6 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pa.0107.us, i64 6, i32 0
  %53 = load i32, i32* %first.i.us.6, align 8, !tbaa !109
  %first2.i.us.6 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pb.0105.us, i64 6, i32 0
  store i32 %53, i32* %first2.i.us.6, align 8, !tbaa !109
  %second.i.us.6 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pa.0107.us, i64 6, i32 1
  %54 = bitcast %struct.vertex** %second.i.us.6 to i64*
  %55 = load i64, i64* %54, align 8, !tbaa !111
  %second3.i.us.6 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pb.0105.us, i64 6, i32 1
  %56 = bitcast %struct.vertex** %second3.i.us.6 to i64*
  store i64 %55, i64* %56, align 8, !tbaa !111
  %incdec.ptr.us.7 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pa.0107.us, i64 8
  %incdec.ptr24.us.7 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pb.0105.us, i64 8
  %first.i.us.7 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pa.0107.us, i64 7, i32 0
  %57 = load i32, i32* %first.i.us.7, align 8, !tbaa !109
  %first2.i.us.7 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pb.0105.us, i64 7, i32 0
  store i32 %57, i32* %first2.i.us.7, align 8, !tbaa !109
  %second.i.us.7 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pa.0107.us, i64 7, i32 1
  %58 = bitcast %struct.vertex** %second.i.us.7 to i64*
  %59 = load i64, i64* %58, align 8, !tbaa !111
  %second3.i.us.7 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %pb.0105.us, i64 7, i32 1
  %60 = bitcast %struct.vertex** %second3.i.us.7 to i64*
  store i64 %59, i64* %60, align 8, !tbaa !111
  %niter.nsub.7 = add i32 %niter, -8
  %niter.ncmp.7 = icmp eq i32 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %for.cond.cleanup22.us.loopexit.unr-lcssa, label %for.body23.us

for.body23.lr.ph.us:                              ; preds = %for.body8.us
  %mul10.us = mul i32 %23, %cLength
  %add11.us = add i32 %mul10.us, %i.0111.us
  %idxprom12.us = zext i32 %add11.us to i64
  %arrayidx13.us = getelementptr inbounds i32, i32* %21, i64 %idxprom12.us
  %61 = load i32, i32* %arrayidx13.us, align 4, !tbaa !59
  %idx.ext14.us = zext i32 %61 to i64
  %add.ptr15.us = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %20, i64 %idx.ext14.us
  %arrayidx.us = getelementptr inbounds i32, i32* %19, i64 %idxprom.us
  %62 = load i32, i32* %arrayidx.us, align 4, !tbaa !59
  %idx.ext.us = zext i32 %62 to i64
  %add.ptr.us = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %18, i64 %idx.ext.us
  %63 = add i32 %24, -1
  %xtraiter = and i32 %24, 7
  %64 = icmp ult i32 %63, 7
  br i1 %64, label %for.cond.cleanup22.us.loopexit.unr-lcssa, label %for.body23.lr.ph.us.new

for.body23.lr.ph.us.new:                          ; preds = %for.body23.lr.ph.us
  %unroll_iter = sub i32 %24, %xtraiter
  br label %for.body23.us

for.cond4.for.cond.cleanup7_crit_edge.us:         ; preds = %for.cond.cleanup22.us
  %inc29.us = add nuw i32 %i.0111.us, 1
  %exitcond120 = icmp eq i32 %inc29.us, %add
  br i1 %exitcond120, label %if.end46, label %for.body.us

if.else:                                          ; preds = %if.else.preheader, %det.cont
  %cCount.tr114 = phi i32 [ %sub, %det.cont ], [ %cCount, %if.else.preheader ]
  %cStart.tr113 = phi i32 [ %add34, %det.cont ], [ %cStart, %if.else.preheader ]
  %cmp31 = icmp ugt i32 %cCount.tr114, %rCount
  br i1 %cmp31, label %if.then32, label %if.else36

if.then32:                                        ; preds = %if.else
  %div = lshr i32 %cCount.tr114, 1
  %sub = sub i32 %cCount.tr114, %div
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %11, i16* nonnull %12) #2
  %65 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %65, i8** %14, align 8
  %66 = call i8* @llvm.stacksave()
  store volatile i8* %66, i8** %15, align 8
  %67 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %16) #23
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %if.then32.split, label %det.cont

if.then32.split:                                  ; preds = %if.then32
  call fastcc void @_ZN10blockTransISt4pairIiP6vertexI8_point2dIdELi1EEEjE6transREjjjjjj_det.achd.cilk(%struct.blockTrans* %this, i32 %rStart, i32 %rCount, i32 %rLength, i32 %cStart.tr113, i32 %div, i32 %cLength)
  br label %det.cont

det.cont:                                         ; preds = %if.then32.split, %if.then32
  %add34 = add i32 %div, %cStart.tr113
  %69 = or i32 %sub, %rCount
  %70 = icmp ult i32 %69, 64
  br i1 %70, label %if.then, label %if.else

if.else36:                                        ; preds = %if.else
  %div38 = lshr i32 %rCount, 1
  %sub41 = sub i32 %rCount, %div38
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %11, i16* nonnull %12) #2
  %71 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %71, i8** %14, align 8
  %72 = call i8* @llvm.stacksave()
  store volatile i8* %72, i8** %15, align 8
  %73 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %16) #23
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %if.else36.split, label %det.cont43

if.else36.split:                                  ; preds = %if.else36
  call fastcc void @_ZN10blockTransISt4pairIiP6vertexI8_point2dIdELi1EEEjE6transREjjjjjj_det.achd42.cilk(%struct.blockTrans* %this, i32 %rStart, i32 %div38, i32 %rLength, i32 %cStart.tr113, i32 %cCount.tr114, i32 %cLength)
  br label %det.cont43

det.cont43:                                       ; preds = %if.else36.split, %if.else36
  %add44 = add i32 %div38, %rStart
  tail call void @_ZN10blockTransISt4pairIiP6vertexI8_point2dIdELi1EEEjE6transREjjjjjj(%struct.blockTrans* %this, i32 %add44, i32 %sub41, i32 %rLength, i32 %cStart.tr113, i32 %cCount.tr114, i32 %cLength)
  %75 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %76 = load atomic i32, i32* %75 acquire, align 8
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %det.cont43
  %79 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %11, i16* nonnull %12) #2
  store volatile i8* %71, i8** %14, align 8
  %80 = call i8* @llvm.stacksave() #2
  store volatile i8* %80, i8** %15, align 8
  %81 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %16) #24
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %det.cont43, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %83 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %84 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %83, i64 0, i32 12, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, 1
  store i64 %86, i64* %84, align 8
  br label %if.end46

if.end46:                                         ; preds = %for.cond4.for.cond.cleanup7_crit_edge.us, %__cilk_sync_nothrow.exit, %for.body.lr.ph, %if.then
  %87 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %88 = load atomic i32, i32* %87 acquire, align 8
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %__cilk_sync_nothrow.exit134, label %cilk.sync.savestate.i132

cilk.sync.savestate.i132:                         ; preds = %if.end46
  %91 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %92 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %93 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %92, i16* nonnull %93) #2
  %94 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %95 = call i8* @llvm.frameaddress(i32 0) #2
  %96 = getelementptr inbounds [5 x i8*], [5 x i8*]* %94, i64 0, i64 0
  store volatile i8* %95, i8** %96, align 8
  %97 = call i8* @llvm.stacksave() #2
  %98 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %97, i8** %98, align 8
  %99 = bitcast [5 x i8*]* %94 to i8*
  %100 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %99) #24
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %cilk.sync.runtimecall.i133, label %__cilk_sync_nothrow.exit134

cilk.sync.runtimecall.i133:                       ; preds = %cilk.sync.savestate.i132
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit134

__cilk_sync_nothrow.exit134:                      ; preds = %if.end46, %cilk.sync.savestate.i132, %cilk.sync.runtimecall.i133
  %102 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %103 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %102, i64 0, i32 12, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = add i64 %104, 1
  store i64 %105, i64* %103, align 8
  %106 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %107 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %106, i64 0, i32 9
  %110 = bitcast %struct.__cilkrts_stack_frame** %109 to i64*
  store atomic i64 %108, i64* %110 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %111 = load atomic i32, i32* %87 acquire, align 8
  %112 = icmp eq i32 %111, 16777216
  br i1 %112, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit134
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit134, %body.i
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #16

; Function Attrs: nounwind uwtable
define linkonce_odr i32 @_ZN8sequence4scanIilN5utils4minFIiEENS_4getAIilEEEET_PS6_T0_S8_T1_T2_S6_bb(i32* %Out, i64 %s, i64 %e, i32* %g.coerce, i32 %zero, i1 zeroext %inclusive, i1 zeroext %back) local_unnamed_addr #7 comdat {
entry:
  %sub = sub i64 %e, %s
  %sub2 = add nsw i64 %sub, -1
  %div = sdiv i64 %sub2, 1024
  %add = add nsw i64 %div, 1
  %cmp = icmp slt i64 %sub, 2049
  br i1 %cmp, label %if.then, label %pfor.detach.lr.ph

if.then:                                          ; preds = %entry
  %cmp101.i = icmp sgt i64 %e, %s
  br i1 %inclusive, label %if.then.i, label %if.else16.i

if.then.i:                                        ; preds = %if.then
  br i1 %back, label %if.then3.i, label %if.else.i

if.then3.i:                                       ; preds = %if.then.i
  br i1 %cmp101.i, label %for.body.i.preheader, label %cleanup

for.body.i.preheader:                             ; preds = %if.then3.i
  %0 = add i64 %e, -1
  %1 = sub i64 %0, %s
  %xtraiter = and i64 %sub, 7
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body.i.prol.loopexit, label %for.body.i.prol.preheader

for.body.i.prol.preheader:                        ; preds = %for.body.i.preheader
  br label %for.body.i.prol

for.body.i.prol:                                  ; preds = %for.body.i.prol.preheader, %for.body.i.prol
  %i.0103.in.i.prol = phi i64 [ %i.0103.i.prol, %for.body.i.prol ], [ %e, %for.body.i.prol.preheader ]
  %r.0102.i.prol = phi i32 [ %..i82.i.prol, %for.body.i.prol ], [ %zero, %for.body.i.prol.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body.i.prol ], [ %xtraiter, %for.body.i.prol.preheader ]
  %i.0103.i.prol = add nsw i64 %i.0103.in.i.prol, -1
  %arrayidx.i.i.prol = getelementptr inbounds i32, i32* %g.coerce, i64 %i.0103.i.prol
  %2 = load i32, i32* %arrayidx.i.i.prol, align 4, !tbaa !59
  %cmp.i81.i.prol = icmp slt i32 %r.0102.i.prol, %2
  %..i82.i.prol = select i1 %cmp.i81.i.prol, i32 %r.0102.i.prol, i32 %2
  %arrayidx.i.prol = getelementptr inbounds i32, i32* %Out, i64 %i.0103.i.prol
  store i32 %..i82.i.prol, i32* %arrayidx.i.prol, align 4, !tbaa !59
  %prol.iter.sub = add nsw i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body.i.prol.loopexit.loopexit, label %for.body.i.prol, !llvm.loop !147

for.body.i.prol.loopexit.loopexit:                ; preds = %for.body.i.prol
  %3 = sub i64 %e, %xtraiter
  br label %for.body.i.prol.loopexit

for.body.i.prol.loopexit:                         ; preds = %for.body.i.prol.loopexit.loopexit, %for.body.i.preheader
  %i.0103.in.i.unr = phi i64 [ %e, %for.body.i.preheader ], [ %3, %for.body.i.prol.loopexit.loopexit ]
  %r.0102.i.unr = phi i32 [ %zero, %for.body.i.preheader ], [ %..i82.i.prol, %for.body.i.prol.loopexit.loopexit ]
  %..i82.i.lcssa.unr = phi i32 [ undef, %for.body.i.preheader ], [ %..i82.i.prol, %for.body.i.prol.loopexit.loopexit ]
  %4 = icmp ult i64 %1, 7
  br i1 %4, label %cleanup, label %for.body.i.preheader330

for.body.i.preheader330:                          ; preds = %for.body.i.prol.loopexit
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.preheader330, %for.body.i
  %i.0103.in.i = phi i64 [ %i.0103.i.7, %for.body.i ], [ %i.0103.in.i.unr, %for.body.i.preheader330 ]
  %r.0102.i = phi i32 [ %..i82.i.7, %for.body.i ], [ %r.0102.i.unr, %for.body.i.preheader330 ]
  %i.0103.i = add nsw i64 %i.0103.in.i, -1
  %arrayidx.i.i = getelementptr inbounds i32, i32* %g.coerce, i64 %i.0103.i
  %5 = load i32, i32* %arrayidx.i.i, align 4, !tbaa !59
  %cmp.i81.i = icmp slt i32 %r.0102.i, %5
  %..i82.i = select i1 %cmp.i81.i, i32 %r.0102.i, i32 %5
  %arrayidx.i = getelementptr inbounds i32, i32* %Out, i64 %i.0103.i
  store i32 %..i82.i, i32* %arrayidx.i, align 4, !tbaa !59
  %i.0103.i.1 = add nsw i64 %i.0103.in.i, -2
  %arrayidx.i.i.1 = getelementptr inbounds i32, i32* %g.coerce, i64 %i.0103.i.1
  %6 = load i32, i32* %arrayidx.i.i.1, align 4, !tbaa !59
  %cmp.i81.i.1 = icmp slt i32 %..i82.i, %6
  %..i82.i.1 = select i1 %cmp.i81.i.1, i32 %..i82.i, i32 %6
  %arrayidx.i.1 = getelementptr inbounds i32, i32* %Out, i64 %i.0103.i.1
  store i32 %..i82.i.1, i32* %arrayidx.i.1, align 4, !tbaa !59
  %i.0103.i.2 = add nsw i64 %i.0103.in.i, -3
  %arrayidx.i.i.2 = getelementptr inbounds i32, i32* %g.coerce, i64 %i.0103.i.2
  %7 = load i32, i32* %arrayidx.i.i.2, align 4, !tbaa !59
  %cmp.i81.i.2 = icmp slt i32 %..i82.i.1, %7
  %..i82.i.2 = select i1 %cmp.i81.i.2, i32 %..i82.i.1, i32 %7
  %arrayidx.i.2 = getelementptr inbounds i32, i32* %Out, i64 %i.0103.i.2
  store i32 %..i82.i.2, i32* %arrayidx.i.2, align 4, !tbaa !59
  %i.0103.i.3 = add nsw i64 %i.0103.in.i, -4
  %arrayidx.i.i.3 = getelementptr inbounds i32, i32* %g.coerce, i64 %i.0103.i.3
  %8 = load i32, i32* %arrayidx.i.i.3, align 4, !tbaa !59
  %cmp.i81.i.3 = icmp slt i32 %..i82.i.2, %8
  %..i82.i.3 = select i1 %cmp.i81.i.3, i32 %..i82.i.2, i32 %8
  %arrayidx.i.3 = getelementptr inbounds i32, i32* %Out, i64 %i.0103.i.3
  store i32 %..i82.i.3, i32* %arrayidx.i.3, align 4, !tbaa !59
  %i.0103.i.4 = add nsw i64 %i.0103.in.i, -5
  %arrayidx.i.i.4 = getelementptr inbounds i32, i32* %g.coerce, i64 %i.0103.i.4
  %9 = load i32, i32* %arrayidx.i.i.4, align 4, !tbaa !59
  %cmp.i81.i.4 = icmp slt i32 %..i82.i.3, %9
  %..i82.i.4 = select i1 %cmp.i81.i.4, i32 %..i82.i.3, i32 %9
  %arrayidx.i.4 = getelementptr inbounds i32, i32* %Out, i64 %i.0103.i.4
  store i32 %..i82.i.4, i32* %arrayidx.i.4, align 4, !tbaa !59
  %i.0103.i.5 = add nsw i64 %i.0103.in.i, -6
  %arrayidx.i.i.5 = getelementptr inbounds i32, i32* %g.coerce, i64 %i.0103.i.5
  %10 = load i32, i32* %arrayidx.i.i.5, align 4, !tbaa !59
  %cmp.i81.i.5 = icmp slt i32 %..i82.i.4, %10
  %..i82.i.5 = select i1 %cmp.i81.i.5, i32 %..i82.i.4, i32 %10
  %arrayidx.i.5 = getelementptr inbounds i32, i32* %Out, i64 %i.0103.i.5
  store i32 %..i82.i.5, i32* %arrayidx.i.5, align 4, !tbaa !59
  %i.0103.i.6 = add nsw i64 %i.0103.in.i, -7
  %arrayidx.i.i.6 = getelementptr inbounds i32, i32* %g.coerce, i64 %i.0103.i.6
  %11 = load i32, i32* %arrayidx.i.i.6, align 4, !tbaa !59
  %cmp.i81.i.6 = icmp slt i32 %..i82.i.5, %11
  %..i82.i.6 = select i1 %cmp.i81.i.6, i32 %..i82.i.5, i32 %11
  %arrayidx.i.6 = getelementptr inbounds i32, i32* %Out, i64 %i.0103.i.6
  store i32 %..i82.i.6, i32* %arrayidx.i.6, align 4, !tbaa !59
  %i.0103.i.7 = add nsw i64 %i.0103.in.i, -8
  %arrayidx.i.i.7 = getelementptr inbounds i32, i32* %g.coerce, i64 %i.0103.i.7
  %12 = load i32, i32* %arrayidx.i.i.7, align 4, !tbaa !59
  %cmp.i81.i.7 = icmp slt i32 %..i82.i.6, %12
  %..i82.i.7 = select i1 %cmp.i81.i.7, i32 %..i82.i.6, i32 %12
  %arrayidx.i.7 = getelementptr inbounds i32, i32* %Out, i64 %i.0103.i.7
  store i32 %..i82.i.7, i32* %arrayidx.i.7, align 4, !tbaa !59
  %cmp.i.7 = icmp sgt i64 %i.0103.i.7, %s
  br i1 %cmp.i.7, label %for.body.i, label %cleanup

if.else.i:                                        ; preds = %if.then.i
  br i1 %cmp101.i, label %for.body9.i.preheader, label %cleanup

for.body9.i.preheader:                            ; preds = %if.else.i
  %13 = add i64 %e, -1
  %14 = sub i64 %13, %s
  %xtraiter263 = and i64 %sub, 7
  %lcmp.mod264 = icmp eq i64 %xtraiter263, 0
  br i1 %lcmp.mod264, label %for.body9.i.prol.loopexit, label %for.body9.i.prol.preheader

for.body9.i.prol.preheader:                       ; preds = %for.body9.i.preheader
  br label %for.body9.i.prol

for.body9.i.prol:                                 ; preds = %for.body9.i.prol.preheader, %for.body9.i.prol
  %i5.0106.i.prol = phi i64 [ %inc.i.prol, %for.body9.i.prol ], [ %s, %for.body9.i.prol.preheader ]
  %r.1105.i.prol = phi i32 [ %..i78.i.prol, %for.body9.i.prol ], [ %zero, %for.body9.i.prol.preheader ]
  %prol.iter265 = phi i64 [ %prol.iter265.sub, %for.body9.i.prol ], [ %xtraiter263, %for.body9.i.prol.preheader ]
  %arrayidx.i80.i.prol = getelementptr inbounds i32, i32* %g.coerce, i64 %i5.0106.i.prol
  %15 = load i32, i32* %arrayidx.i80.i.prol, align 4, !tbaa !59
  %cmp.i77.i.prol = icmp slt i32 %r.1105.i.prol, %15
  %..i78.i.prol = select i1 %cmp.i77.i.prol, i32 %r.1105.i.prol, i32 %15
  %arrayidx13.i.prol = getelementptr inbounds i32, i32* %Out, i64 %i5.0106.i.prol
  store i32 %..i78.i.prol, i32* %arrayidx13.i.prol, align 4, !tbaa !59
  %inc.i.prol = add nsw i64 %i5.0106.i.prol, 1
  %prol.iter265.sub = add nsw i64 %prol.iter265, -1
  %prol.iter265.cmp = icmp eq i64 %prol.iter265.sub, 0
  br i1 %prol.iter265.cmp, label %for.body9.i.prol.loopexit.loopexit, label %for.body9.i.prol, !llvm.loop !148

for.body9.i.prol.loopexit.loopexit:               ; preds = %for.body9.i.prol
  %16 = add i64 %xtraiter263, %s
  br label %for.body9.i.prol.loopexit

for.body9.i.prol.loopexit:                        ; preds = %for.body9.i.prol.loopexit.loopexit, %for.body9.i.preheader
  %..i78.i.lcssa.unr = phi i32 [ undef, %for.body9.i.preheader ], [ %..i78.i.prol, %for.body9.i.prol.loopexit.loopexit ]
  %i5.0106.i.unr = phi i64 [ %s, %for.body9.i.preheader ], [ %16, %for.body9.i.prol.loopexit.loopexit ]
  %r.1105.i.unr = phi i32 [ %zero, %for.body9.i.preheader ], [ %..i78.i.prol, %for.body9.i.prol.loopexit.loopexit ]
  %17 = icmp ult i64 %14, 7
  br i1 %17, label %cleanup, label %for.body9.i.preheader331

for.body9.i.preheader331:                         ; preds = %for.body9.i.prol.loopexit
  br label %for.body9.i

for.body9.i:                                      ; preds = %for.body9.i.preheader331, %for.body9.i
  %i5.0106.i = phi i64 [ %inc.i.7, %for.body9.i ], [ %i5.0106.i.unr, %for.body9.i.preheader331 ]
  %r.1105.i = phi i32 [ %..i78.i.7, %for.body9.i ], [ %r.1105.i.unr, %for.body9.i.preheader331 ]
  %arrayidx.i80.i = getelementptr inbounds i32, i32* %g.coerce, i64 %i5.0106.i
  %18 = load i32, i32* %arrayidx.i80.i, align 4, !tbaa !59
  %cmp.i77.i = icmp slt i32 %r.1105.i, %18
  %..i78.i = select i1 %cmp.i77.i, i32 %r.1105.i, i32 %18
  %arrayidx13.i = getelementptr inbounds i32, i32* %Out, i64 %i5.0106.i
  store i32 %..i78.i, i32* %arrayidx13.i, align 4, !tbaa !59
  %inc.i = add nsw i64 %i5.0106.i, 1
  %arrayidx.i80.i.1 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc.i
  %19 = load i32, i32* %arrayidx.i80.i.1, align 4, !tbaa !59
  %cmp.i77.i.1 = icmp slt i32 %..i78.i, %19
  %..i78.i.1 = select i1 %cmp.i77.i.1, i32 %..i78.i, i32 %19
  %arrayidx13.i.1 = getelementptr inbounds i32, i32* %Out, i64 %inc.i
  store i32 %..i78.i.1, i32* %arrayidx13.i.1, align 4, !tbaa !59
  %inc.i.1 = add nsw i64 %i5.0106.i, 2
  %arrayidx.i80.i.2 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc.i.1
  %20 = load i32, i32* %arrayidx.i80.i.2, align 4, !tbaa !59
  %cmp.i77.i.2 = icmp slt i32 %..i78.i.1, %20
  %..i78.i.2 = select i1 %cmp.i77.i.2, i32 %..i78.i.1, i32 %20
  %arrayidx13.i.2 = getelementptr inbounds i32, i32* %Out, i64 %inc.i.1
  store i32 %..i78.i.2, i32* %arrayidx13.i.2, align 4, !tbaa !59
  %inc.i.2 = add nsw i64 %i5.0106.i, 3
  %arrayidx.i80.i.3 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc.i.2
  %21 = load i32, i32* %arrayidx.i80.i.3, align 4, !tbaa !59
  %cmp.i77.i.3 = icmp slt i32 %..i78.i.2, %21
  %..i78.i.3 = select i1 %cmp.i77.i.3, i32 %..i78.i.2, i32 %21
  %arrayidx13.i.3 = getelementptr inbounds i32, i32* %Out, i64 %inc.i.2
  store i32 %..i78.i.3, i32* %arrayidx13.i.3, align 4, !tbaa !59
  %inc.i.3 = add nsw i64 %i5.0106.i, 4
  %arrayidx.i80.i.4 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc.i.3
  %22 = load i32, i32* %arrayidx.i80.i.4, align 4, !tbaa !59
  %cmp.i77.i.4 = icmp slt i32 %..i78.i.3, %22
  %..i78.i.4 = select i1 %cmp.i77.i.4, i32 %..i78.i.3, i32 %22
  %arrayidx13.i.4 = getelementptr inbounds i32, i32* %Out, i64 %inc.i.3
  store i32 %..i78.i.4, i32* %arrayidx13.i.4, align 4, !tbaa !59
  %inc.i.4 = add nsw i64 %i5.0106.i, 5
  %arrayidx.i80.i.5 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc.i.4
  %23 = load i32, i32* %arrayidx.i80.i.5, align 4, !tbaa !59
  %cmp.i77.i.5 = icmp slt i32 %..i78.i.4, %23
  %..i78.i.5 = select i1 %cmp.i77.i.5, i32 %..i78.i.4, i32 %23
  %arrayidx13.i.5 = getelementptr inbounds i32, i32* %Out, i64 %inc.i.4
  store i32 %..i78.i.5, i32* %arrayidx13.i.5, align 4, !tbaa !59
  %inc.i.5 = add nsw i64 %i5.0106.i, 6
  %arrayidx.i80.i.6 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc.i.5
  %24 = load i32, i32* %arrayidx.i80.i.6, align 4, !tbaa !59
  %cmp.i77.i.6 = icmp slt i32 %..i78.i.5, %24
  %..i78.i.6 = select i1 %cmp.i77.i.6, i32 %..i78.i.5, i32 %24
  %arrayidx13.i.6 = getelementptr inbounds i32, i32* %Out, i64 %inc.i.5
  store i32 %..i78.i.6, i32* %arrayidx13.i.6, align 4, !tbaa !59
  %inc.i.6 = add nsw i64 %i5.0106.i, 7
  %arrayidx.i80.i.7 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc.i.6
  %25 = load i32, i32* %arrayidx.i80.i.7, align 4, !tbaa !59
  %cmp.i77.i.7 = icmp slt i32 %..i78.i.6, %25
  %..i78.i.7 = select i1 %cmp.i77.i.7, i32 %..i78.i.6, i32 %25
  %arrayidx13.i.7 = getelementptr inbounds i32, i32* %Out, i64 %inc.i.6
  store i32 %..i78.i.7, i32* %arrayidx13.i.7, align 4, !tbaa !59
  %inc.i.7 = add nsw i64 %i5.0106.i, 8
  %exitcond.i.7 = icmp eq i64 %inc.i.7, %e
  br i1 %exitcond.i.7, label %cleanup, label %for.body9.i

if.else16.i:                                      ; preds = %if.then
  br i1 %back, label %if.then18.i, label %if.else31.i

if.then18.i:                                      ; preds = %if.else16.i
  br i1 %cmp101.i, label %for.body24.i.preheader, label %cleanup

for.body24.i.preheader:                           ; preds = %if.then18.i
  %26 = add i64 %e, -1
  %27 = sub i64 %26, %s
  %xtraiter266 = and i64 %sub, 7
  %lcmp.mod267 = icmp eq i64 %xtraiter266, 0
  br i1 %lcmp.mod267, label %for.body24.i.prol.loopexit, label %for.body24.i.prol.preheader

for.body24.i.prol.preheader:                      ; preds = %for.body24.i.preheader
  br label %for.body24.i.prol

for.body24.i.prol:                                ; preds = %for.body24.i.prol.preheader, %for.body24.i.prol
  %i19.0111.in.i.prol = phi i64 [ %i19.0111.i.prol, %for.body24.i.prol ], [ %e, %for.body24.i.prol.preheader ]
  %r.2110.i.prol = phi i32 [ %..i74.i.prol, %for.body24.i.prol ], [ %zero, %for.body24.i.prol.preheader ]
  %prol.iter268 = phi i64 [ %prol.iter268.sub, %for.body24.i.prol ], [ %xtraiter266, %for.body24.i.prol.preheader ]
  %i19.0111.i.prol = add nsw i64 %i19.0111.in.i.prol, -1
  %arrayidx.i76.i.prol = getelementptr inbounds i32, i32* %g.coerce, i64 %i19.0111.i.prol
  %28 = load i32, i32* %arrayidx.i76.i.prol, align 4, !tbaa !59
  %arrayidx26.i.prol = getelementptr inbounds i32, i32* %Out, i64 %i19.0111.i.prol
  store i32 %r.2110.i.prol, i32* %arrayidx26.i.prol, align 4, !tbaa !59
  %cmp.i73.i.prol = icmp slt i32 %r.2110.i.prol, %28
  %..i74.i.prol = select i1 %cmp.i73.i.prol, i32 %r.2110.i.prol, i32 %28
  %prol.iter268.sub = add nsw i64 %prol.iter268, -1
  %prol.iter268.cmp = icmp eq i64 %prol.iter268.sub, 0
  br i1 %prol.iter268.cmp, label %for.body24.i.prol.loopexit.loopexit, label %for.body24.i.prol, !llvm.loop !149

for.body24.i.prol.loopexit.loopexit:              ; preds = %for.body24.i.prol
  %29 = sub i64 %e, %xtraiter266
  br label %for.body24.i.prol.loopexit

for.body24.i.prol.loopexit:                       ; preds = %for.body24.i.prol.loopexit.loopexit, %for.body24.i.preheader
  %i19.0111.in.i.unr = phi i64 [ %e, %for.body24.i.preheader ], [ %29, %for.body24.i.prol.loopexit.loopexit ]
  %r.2110.i.unr = phi i32 [ %zero, %for.body24.i.preheader ], [ %..i74.i.prol, %for.body24.i.prol.loopexit.loopexit ]
  %..i74.i.lcssa.unr = phi i32 [ undef, %for.body24.i.preheader ], [ %..i74.i.prol, %for.body24.i.prol.loopexit.loopexit ]
  %30 = icmp ult i64 %27, 7
  br i1 %30, label %cleanup, label %for.body24.i.preheader333

for.body24.i.preheader333:                        ; preds = %for.body24.i.prol.loopexit
  br label %for.body24.i

for.body24.i:                                     ; preds = %for.body24.i.preheader333, %for.body24.i
  %i19.0111.in.i = phi i64 [ %i19.0111.i.7, %for.body24.i ], [ %i19.0111.in.i.unr, %for.body24.i.preheader333 ]
  %r.2110.i = phi i32 [ %..i74.i.7, %for.body24.i ], [ %r.2110.i.unr, %for.body24.i.preheader333 ]
  %i19.0111.i = add nsw i64 %i19.0111.in.i, -1
  %arrayidx.i76.i = getelementptr inbounds i32, i32* %g.coerce, i64 %i19.0111.i
  %31 = load i32, i32* %arrayidx.i76.i, align 4, !tbaa !59
  %arrayidx26.i = getelementptr inbounds i32, i32* %Out, i64 %i19.0111.i
  store i32 %r.2110.i, i32* %arrayidx26.i, align 4, !tbaa !59
  %cmp.i73.i = icmp slt i32 %r.2110.i, %31
  %..i74.i = select i1 %cmp.i73.i, i32 %r.2110.i, i32 %31
  %i19.0111.i.1 = add nsw i64 %i19.0111.in.i, -2
  %arrayidx.i76.i.1 = getelementptr inbounds i32, i32* %g.coerce, i64 %i19.0111.i.1
  %32 = load i32, i32* %arrayidx.i76.i.1, align 4, !tbaa !59
  %arrayidx26.i.1 = getelementptr inbounds i32, i32* %Out, i64 %i19.0111.i.1
  store i32 %..i74.i, i32* %arrayidx26.i.1, align 4, !tbaa !59
  %cmp.i73.i.1 = icmp slt i32 %..i74.i, %32
  %..i74.i.1 = select i1 %cmp.i73.i.1, i32 %..i74.i, i32 %32
  %i19.0111.i.2 = add nsw i64 %i19.0111.in.i, -3
  %arrayidx.i76.i.2 = getelementptr inbounds i32, i32* %g.coerce, i64 %i19.0111.i.2
  %33 = load i32, i32* %arrayidx.i76.i.2, align 4, !tbaa !59
  %arrayidx26.i.2 = getelementptr inbounds i32, i32* %Out, i64 %i19.0111.i.2
  store i32 %..i74.i.1, i32* %arrayidx26.i.2, align 4, !tbaa !59
  %cmp.i73.i.2 = icmp slt i32 %..i74.i.1, %33
  %..i74.i.2 = select i1 %cmp.i73.i.2, i32 %..i74.i.1, i32 %33
  %i19.0111.i.3 = add nsw i64 %i19.0111.in.i, -4
  %arrayidx.i76.i.3 = getelementptr inbounds i32, i32* %g.coerce, i64 %i19.0111.i.3
  %34 = load i32, i32* %arrayidx.i76.i.3, align 4, !tbaa !59
  %arrayidx26.i.3 = getelementptr inbounds i32, i32* %Out, i64 %i19.0111.i.3
  store i32 %..i74.i.2, i32* %arrayidx26.i.3, align 4, !tbaa !59
  %cmp.i73.i.3 = icmp slt i32 %..i74.i.2, %34
  %..i74.i.3 = select i1 %cmp.i73.i.3, i32 %..i74.i.2, i32 %34
  %i19.0111.i.4 = add nsw i64 %i19.0111.in.i, -5
  %arrayidx.i76.i.4 = getelementptr inbounds i32, i32* %g.coerce, i64 %i19.0111.i.4
  %35 = load i32, i32* %arrayidx.i76.i.4, align 4, !tbaa !59
  %arrayidx26.i.4 = getelementptr inbounds i32, i32* %Out, i64 %i19.0111.i.4
  store i32 %..i74.i.3, i32* %arrayidx26.i.4, align 4, !tbaa !59
  %cmp.i73.i.4 = icmp slt i32 %..i74.i.3, %35
  %..i74.i.4 = select i1 %cmp.i73.i.4, i32 %..i74.i.3, i32 %35
  %i19.0111.i.5 = add nsw i64 %i19.0111.in.i, -6
  %arrayidx.i76.i.5 = getelementptr inbounds i32, i32* %g.coerce, i64 %i19.0111.i.5
  %36 = load i32, i32* %arrayidx.i76.i.5, align 4, !tbaa !59
  %arrayidx26.i.5 = getelementptr inbounds i32, i32* %Out, i64 %i19.0111.i.5
  store i32 %..i74.i.4, i32* %arrayidx26.i.5, align 4, !tbaa !59
  %cmp.i73.i.5 = icmp slt i32 %..i74.i.4, %36
  %..i74.i.5 = select i1 %cmp.i73.i.5, i32 %..i74.i.4, i32 %36
  %i19.0111.i.6 = add nsw i64 %i19.0111.in.i, -7
  %arrayidx.i76.i.6 = getelementptr inbounds i32, i32* %g.coerce, i64 %i19.0111.i.6
  %37 = load i32, i32* %arrayidx.i76.i.6, align 4, !tbaa !59
  %arrayidx26.i.6 = getelementptr inbounds i32, i32* %Out, i64 %i19.0111.i.6
  store i32 %..i74.i.5, i32* %arrayidx26.i.6, align 4, !tbaa !59
  %cmp.i73.i.6 = icmp slt i32 %..i74.i.5, %37
  %..i74.i.6 = select i1 %cmp.i73.i.6, i32 %..i74.i.5, i32 %37
  %i19.0111.i.7 = add nsw i64 %i19.0111.in.i, -8
  %arrayidx.i76.i.7 = getelementptr inbounds i32, i32* %g.coerce, i64 %i19.0111.i.7
  %38 = load i32, i32* %arrayidx.i76.i.7, align 4, !tbaa !59
  %arrayidx26.i.7 = getelementptr inbounds i32, i32* %Out, i64 %i19.0111.i.7
  store i32 %..i74.i.6, i32* %arrayidx26.i.7, align 4, !tbaa !59
  %cmp.i73.i.7 = icmp slt i32 %..i74.i.6, %38
  %..i74.i.7 = select i1 %cmp.i73.i.7, i32 %..i74.i.6, i32 %38
  %cmp22.i.7 = icmp sgt i64 %i19.0111.i.7, %s
  br i1 %cmp22.i.7, label %for.body24.i, label %cleanup

if.else31.i:                                      ; preds = %if.else16.i
  br i1 %cmp101.i, label %for.body36.i.preheader, label %cleanup

for.body36.i.preheader:                           ; preds = %if.else31.i
  %39 = add i64 %e, -1
  %40 = sub i64 %39, %s
  %xtraiter269 = and i64 %sub, 7
  %lcmp.mod270 = icmp eq i64 %xtraiter269, 0
  br i1 %lcmp.mod270, label %for.body36.i.prol.loopexit, label %for.body36.i.prol.preheader

for.body36.i.prol.preheader:                      ; preds = %for.body36.i.preheader
  br label %for.body36.i.prol

for.body36.i.prol:                                ; preds = %for.body36.i.prol.preheader, %for.body36.i.prol
  %i32.0115.i.prol = phi i64 [ %inc42.i.prol, %for.body36.i.prol ], [ %s, %for.body36.i.prol.preheader ]
  %r.3114.i.prol = phi i32 [ %..i.i.prol, %for.body36.i.prol ], [ %zero, %for.body36.i.prol.preheader ]
  %prol.iter271 = phi i64 [ %prol.iter271.sub, %for.body36.i.prol ], [ %xtraiter269, %for.body36.i.prol.preheader ]
  %arrayidx.i72.i.prol = getelementptr inbounds i32, i32* %g.coerce, i64 %i32.0115.i.prol
  %41 = load i32, i32* %arrayidx.i72.i.prol, align 4, !tbaa !59
  %arrayidx39.i.prol = getelementptr inbounds i32, i32* %Out, i64 %i32.0115.i.prol
  store i32 %r.3114.i.prol, i32* %arrayidx39.i.prol, align 4, !tbaa !59
  %cmp.i.i.prol = icmp slt i32 %r.3114.i.prol, %41
  %..i.i.prol = select i1 %cmp.i.i.prol, i32 %r.3114.i.prol, i32 %41
  %inc42.i.prol = add nsw i64 %i32.0115.i.prol, 1
  %prol.iter271.sub = add nsw i64 %prol.iter271, -1
  %prol.iter271.cmp = icmp eq i64 %prol.iter271.sub, 0
  br i1 %prol.iter271.cmp, label %for.body36.i.prol.loopexit.loopexit, label %for.body36.i.prol, !llvm.loop !150

for.body36.i.prol.loopexit.loopexit:              ; preds = %for.body36.i.prol
  %42 = add i64 %xtraiter269, %s
  br label %for.body36.i.prol.loopexit

for.body36.i.prol.loopexit:                       ; preds = %for.body36.i.prol.loopexit.loopexit, %for.body36.i.preheader
  %..i.i.lcssa.unr = phi i32 [ undef, %for.body36.i.preheader ], [ %..i.i.prol, %for.body36.i.prol.loopexit.loopexit ]
  %i32.0115.i.unr = phi i64 [ %s, %for.body36.i.preheader ], [ %42, %for.body36.i.prol.loopexit.loopexit ]
  %r.3114.i.unr = phi i32 [ %zero, %for.body36.i.preheader ], [ %..i.i.prol, %for.body36.i.prol.loopexit.loopexit ]
  %43 = icmp ult i64 %40, 7
  br i1 %43, label %cleanup, label %for.body36.i.preheader335

for.body36.i.preheader335:                        ; preds = %for.body36.i.prol.loopexit
  br label %for.body36.i

for.body36.i:                                     ; preds = %for.body36.i.preheader335, %for.body36.i
  %i32.0115.i = phi i64 [ %inc42.i.7, %for.body36.i ], [ %i32.0115.i.unr, %for.body36.i.preheader335 ]
  %r.3114.i = phi i32 [ %..i.i.7, %for.body36.i ], [ %r.3114.i.unr, %for.body36.i.preheader335 ]
  %arrayidx.i72.i = getelementptr inbounds i32, i32* %g.coerce, i64 %i32.0115.i
  %44 = load i32, i32* %arrayidx.i72.i, align 4, !tbaa !59
  %arrayidx39.i = getelementptr inbounds i32, i32* %Out, i64 %i32.0115.i
  store i32 %r.3114.i, i32* %arrayidx39.i, align 4, !tbaa !59
  %cmp.i.i = icmp slt i32 %r.3114.i, %44
  %..i.i = select i1 %cmp.i.i, i32 %r.3114.i, i32 %44
  %inc42.i = add nsw i64 %i32.0115.i, 1
  %arrayidx.i72.i.1 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc42.i
  %45 = load i32, i32* %arrayidx.i72.i.1, align 4, !tbaa !59
  %arrayidx39.i.1 = getelementptr inbounds i32, i32* %Out, i64 %inc42.i
  store i32 %..i.i, i32* %arrayidx39.i.1, align 4, !tbaa !59
  %cmp.i.i.1 = icmp slt i32 %..i.i, %45
  %..i.i.1 = select i1 %cmp.i.i.1, i32 %..i.i, i32 %45
  %inc42.i.1 = add nsw i64 %i32.0115.i, 2
  %arrayidx.i72.i.2 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc42.i.1
  %46 = load i32, i32* %arrayidx.i72.i.2, align 4, !tbaa !59
  %arrayidx39.i.2 = getelementptr inbounds i32, i32* %Out, i64 %inc42.i.1
  store i32 %..i.i.1, i32* %arrayidx39.i.2, align 4, !tbaa !59
  %cmp.i.i.2 = icmp slt i32 %..i.i.1, %46
  %..i.i.2 = select i1 %cmp.i.i.2, i32 %..i.i.1, i32 %46
  %inc42.i.2 = add nsw i64 %i32.0115.i, 3
  %arrayidx.i72.i.3 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc42.i.2
  %47 = load i32, i32* %arrayidx.i72.i.3, align 4, !tbaa !59
  %arrayidx39.i.3 = getelementptr inbounds i32, i32* %Out, i64 %inc42.i.2
  store i32 %..i.i.2, i32* %arrayidx39.i.3, align 4, !tbaa !59
  %cmp.i.i.3 = icmp slt i32 %..i.i.2, %47
  %..i.i.3 = select i1 %cmp.i.i.3, i32 %..i.i.2, i32 %47
  %inc42.i.3 = add nsw i64 %i32.0115.i, 4
  %arrayidx.i72.i.4 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc42.i.3
  %48 = load i32, i32* %arrayidx.i72.i.4, align 4, !tbaa !59
  %arrayidx39.i.4 = getelementptr inbounds i32, i32* %Out, i64 %inc42.i.3
  store i32 %..i.i.3, i32* %arrayidx39.i.4, align 4, !tbaa !59
  %cmp.i.i.4 = icmp slt i32 %..i.i.3, %48
  %..i.i.4 = select i1 %cmp.i.i.4, i32 %..i.i.3, i32 %48
  %inc42.i.4 = add nsw i64 %i32.0115.i, 5
  %arrayidx.i72.i.5 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc42.i.4
  %49 = load i32, i32* %arrayidx.i72.i.5, align 4, !tbaa !59
  %arrayidx39.i.5 = getelementptr inbounds i32, i32* %Out, i64 %inc42.i.4
  store i32 %..i.i.4, i32* %arrayidx39.i.5, align 4, !tbaa !59
  %cmp.i.i.5 = icmp slt i32 %..i.i.4, %49
  %..i.i.5 = select i1 %cmp.i.i.5, i32 %..i.i.4, i32 %49
  %inc42.i.5 = add nsw i64 %i32.0115.i, 6
  %arrayidx.i72.i.6 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc42.i.5
  %50 = load i32, i32* %arrayidx.i72.i.6, align 4, !tbaa !59
  %arrayidx39.i.6 = getelementptr inbounds i32, i32* %Out, i64 %inc42.i.5
  store i32 %..i.i.5, i32* %arrayidx39.i.6, align 4, !tbaa !59
  %cmp.i.i.6 = icmp slt i32 %..i.i.5, %50
  %..i.i.6 = select i1 %cmp.i.i.6, i32 %..i.i.5, i32 %50
  %inc42.i.6 = add nsw i64 %i32.0115.i, 7
  %arrayidx.i72.i.7 = getelementptr inbounds i32, i32* %g.coerce, i64 %inc42.i.6
  %51 = load i32, i32* %arrayidx.i72.i.7, align 4, !tbaa !59
  %arrayidx39.i.7 = getelementptr inbounds i32, i32* %Out, i64 %inc42.i.6
  store i32 %..i.i.6, i32* %arrayidx39.i.7, align 4, !tbaa !59
  %cmp.i.i.7 = icmp slt i32 %..i.i.6, %51
  %..i.i.7 = select i1 %cmp.i.i.7, i32 %..i.i.6, i32 %51
  %inc42.i.7 = add nsw i64 %i32.0115.i, 8
  %exitcond120.i.7 = icmp eq i64 %inc42.i.7, %e
  br i1 %exitcond120.i.7, label %cleanup, label %for.body36.i

pfor.detach.lr.ph:                                ; preds = %entry
  %52 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8317 = shl i32 %52, 3
  %mul = shl nsw i64 %add, 2
  %call9 = tail call noalias i8* @malloc(i64 %mul) #2
  %53 = bitcast i8* %call9 to i32*
  %54 = sub i64 -2, %s
  %55 = sub i64 -1025, %s
  %56 = xor i64 %e, -1
  %57 = icmp sgt i64 %div, 0
  %smax313 = select i1 %57, i64 %div, i64 0
  %58 = zext i32 %__cilkrts_wc8317 to i64
  %59 = add nsw i64 %smax313, -1
  %60 = add nsw i64 %59, %58
  %61 = udiv i64 %60, %58
  %62 = icmp ult i64 %61, 2048
  %63 = select i1 %62, i64 %61, i64 2048
  tail call fastcc void @_ZN8sequence4scanIilN5utils4minFIiEENS_4getAIilEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach.ls(i64 0, i64 %smax313, i64 %63, i64 %54, i64 %55, i64 %56, i64 %s, i64 %e, i32* %g.coerce, i32* %53)
  %call35 = tail call i32 @_ZN8sequence4scanIilN5utils4minFIiEENS_4getAIilEEEET_PS6_T0_S8_T1_T2_S6_bb(i32* %53, i64 0, i64 %add, i32* %53, i32 %zero, i1 zeroext false, i1 zeroext %back)
  %64 = xor i64 %s, -1
  br i1 %inclusive, label %pfor.detach55.us.preheader, label %pfor.detach55.preheader

pfor.detach55.preheader:                          ; preds = %pfor.detach.lr.ph
  tail call fastcc void @_ZN8sequence4scanIilN5utils4minFIiEENS_4getAIilEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.ls(i64 0, i64 %smax313, i64 %63, i64 %55, i64 %56, i64 %64, i64 %54, i64 %s, i64 %e, i32* %53, i1 %back, i32* %g.coerce, i32* %Out)
  br label %sync.continue78

pfor.detach55.us.preheader:                       ; preds = %pfor.detach.lr.ph
  tail call fastcc void @_ZN8sequence4scanIilN5utils4minFIiEENS_4getAIilEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.us.ls(i64 0, i64 %smax313, i64 %63, i64 %55, i64 %56, i64 %64, i64 %54, i64 %s, i64 %e, i32* %53, i1 %back, i32* %g.coerce, i32* %Out)
  br label %sync.continue78

sync.continue78:                                  ; preds = %pfor.detach55.us.preheader, %pfor.detach55.preheader
  tail call void @free(i8* %call9) #2
  br label %cleanup

cleanup:                                          ; preds = %for.body36.i, %for.body24.i, %for.body9.i, %for.body.i, %for.body36.i.prol.loopexit, %for.body24.i.prol.loopexit, %for.body9.i.prol.loopexit, %for.body.i.prol.loopexit, %if.else31.i, %if.then18.i, %if.else.i, %if.then3.i, %sync.continue78
  %retval.0 = phi i32 [ %call35, %sync.continue78 ], [ %zero, %if.then3.i ], [ %zero, %if.else.i ], [ %zero, %if.then18.i ], [ %zero, %if.else31.i ], [ %..i82.i.lcssa.unr, %for.body.i.prol.loopexit ], [ %..i78.i.lcssa.unr, %for.body9.i.prol.loopexit ], [ %..i74.i.lcssa.unr, %for.body24.i.prol.loopexit ], [ %..i.i.lcssa.unr, %for.body36.i.prol.loopexit ], [ %..i82.i.7, %for.body.i ], [ %..i78.i.7, %for.body9.i ], [ %..i74.i.7, %for.body24.i ], [ %..i.i.7, %for.body36.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind stealable uwtable
define linkonce_odr void @_Z9quickSortISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.6"* %A, i64 %n) local_unnamed_addr #15 comdat {
entry:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %entry
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %entry, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %entry ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %entry ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %cmp21 = icmp slt i64 %n, 256
  br i1 %cmp21, label %if.then, label %if.else.preheader

if.else.preheader:                                ; preds = %__cilkrts_enter_frame_1.exit
  %9 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %12 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 0
  %13 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %14 = bitcast [5 x i8*]* %11 to i8*
  br label %if.else

if.then:                                          ; preds = %det.cont, %__cilkrts_enter_frame_1.exit
  %A.tr.lcssa = phi %"struct.std::pair.6"* [ %A, %__cilkrts_enter_frame_1.exit ], [ %41, %det.cont ]
  %n.tr.lcssa = phi i64 [ %n, %__cilkrts_enter_frame_1.exit ], [ %sub.ptr.div7, %det.cont ]
  tail call void @_Z15quickSortSerialISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.6"* %A.tr.lcssa, i64 %n.tr.lcssa)
  %15 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %16 = load atomic i32, i32* %15 acquire, align 8
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %if.then
  %19 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %21 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %20, i16* nonnull %21) #2
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %23 = call i8* @llvm.frameaddress(i32 0) #2
  %24 = getelementptr inbounds [5 x i8*], [5 x i8*]* %22, i64 0, i64 0
  store volatile i8* %23, i8** %24, align 8
  %25 = call i8* @llvm.stacksave() #2
  %26 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %25, i8** %26, align 8
  %27 = bitcast [5 x i8*]* %22 to i8*
  %28 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %27) #24
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %if.then, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %30 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %31 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %30, i64 0, i32 12, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, 1
  store i64 %33, i64* %31, align 8
  %34 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %35 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %34, i64 0, i32 9
  %38 = bitcast %struct.__cilkrts_stack_frame** %37 to i64*
  store atomic i64 %36, i64* %38 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %39 = load atomic i32, i32* %15 acquire, align 8
  %40 = icmp eq i32 %39, 16777216
  br i1 %40, label %__cilk_parent_epilogue.exit, label %body.i

if.else:                                          ; preds = %if.else.preheader, %det.cont
  %n.tr23 = phi i64 [ %sub.ptr.div7, %det.cont ], [ %n, %if.else.preheader ]
  %A.tr22 = phi %"struct.std::pair.6"* [ %41, %det.cont ], [ %A, %if.else.preheader ]
  %call = tail call { %"struct.std::pair.6"*, %"struct.std::pair.6"* } bitcast ({ %"struct.std::pair.23"*, %"struct.std::pair.23"* } (%"struct.std::pair.23"*, i64)* @_Z5splitISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElES0_IPT_SF_ESF_T1_T0_ to { %"struct.std::pair.6"*, %"struct.std::pair.6"* } (%"struct.std::pair.6"*, i64)*)(%"struct.std::pair.6"* %A.tr22, i64 %n.tr23) #2
  %41 = extractvalue { %"struct.std::pair.6"*, %"struct.std::pair.6"* } %call, 1
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %9, i16* nonnull %10) #2
  %42 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %42, i8** %12, align 8
  %43 = call i8* @llvm.stacksave()
  store volatile i8* %43, i8** %13, align 8
  %44 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %14) #23
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %if.else.split, label %det.cont

if.else.split:                                    ; preds = %if.else
  call fastcc void @_Z9quickSortISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0__det.achd.cilk({ %"struct.std::pair.6"*, %"struct.std::pair.6"* } %call, %"struct.std::pair.6"* %A.tr22)
  br label %det.cont

det.cont:                                         ; preds = %if.else.split, %if.else
  %add.ptr = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A.tr22, i64 %n.tr23
  %sub.ptr.lhs.cast4 = ptrtoint %"struct.std::pair.6"* %add.ptr to i64
  %sub.ptr.rhs.cast5 = ptrtoint %"struct.std::pair.6"* %41 to i64
  %sub.ptr.sub6 = sub i64 %sub.ptr.lhs.cast4, %sub.ptr.rhs.cast5
  %sub.ptr.div7 = ashr exact i64 %sub.ptr.sub6, 4
  %cmp = icmp slt i64 %sub.ptr.sub6, 4096
  br i1 %cmp, label %if.then, label %if.else

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_Z15quickSortSerialISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.6"* %A, i64 %n) local_unnamed_addr #7 comdat {
entry:
  %cmp20 = icmp sgt i64 %n, 20
  br i1 %cmp20, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %entry
  %sub.ptr.rhs.cast4 = ptrtoint %"struct.std::pair.6"* %A to i64
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.body
  %n.addr.021 = phi i64 [ %n, %while.body.lr.ph ], [ %sub.ptr.div6, %while.body ]
  %call = tail call { %"struct.std::pair.6"*, %"struct.std::pair.6"* } bitcast ({ %"struct.std::pair.23"*, %"struct.std::pair.23"* } (%"struct.std::pair.23"*, i64)* @_Z5splitISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElES0_IPT_SF_ESF_T1_T0_ to { %"struct.std::pair.6"*, %"struct.std::pair.6"* } (%"struct.std::pair.6"*, i64)*)(%"struct.std::pair.6"* %A, i64 %n.addr.021) #2
  %0 = extractvalue { %"struct.std::pair.6"*, %"struct.std::pair.6"* } %call, 0
  %1 = extractvalue { %"struct.std::pair.6"*, %"struct.std::pair.6"* } %call, 1
  %add.ptr = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A, i64 %n.addr.021
  %sub.ptr.lhs.cast = ptrtoint %"struct.std::pair.6"* %add.ptr to i64
  %sub.ptr.rhs.cast = ptrtoint %"struct.std::pair.6"* %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 4
  tail call void @_Z15quickSortSerialISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.6"* %1, i64 %sub.ptr.div)
  %sub.ptr.lhs.cast3 = ptrtoint %"struct.std::pair.6"* %0 to i64
  %sub.ptr.sub5 = sub i64 %sub.ptr.lhs.cast3, %sub.ptr.rhs.cast4
  %sub.ptr.div6 = ashr exact i64 %sub.ptr.sub5, 4
  %cmp = icmp sgt i64 %sub.ptr.sub5, 320
  br i1 %cmp, label %while.body, label %while.end

while.end:                                        ; preds = %while.body, %entry
  %n.addr.0.lcssa = phi i64 [ %n, %entry ], [ %sub.ptr.div6, %while.body ]
  %cmp37.i = icmp sgt i64 %n.addr.0.lcssa, 0
  br i1 %cmp37.i, label %for.body.i.preheader, label %_Z13insertionSortISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_.exit

for.body.i.preheader:                             ; preds = %while.end
  %xtraiter = and i64 %n.addr.0.lcssa, 1
  %2 = icmp eq i64 %n.addr.0.lcssa, 1
  br i1 %2, label %for.body.i.epil, label %for.body.i.preheader.new

for.body.i.preheader.new:                         ; preds = %for.body.i.preheader
  %unroll_iter = sub i64 %n.addr.0.lcssa, %xtraiter
  br label %for.body.i

for.body.i:                                       ; preds = %while.end.i.1, %for.body.i.preheader.new
  %i.038.i = phi i64 [ 0, %for.body.i.preheader.new ], [ %inc.i.1, %while.end.i.1 ]
  %niter = phi i64 [ %unroll_iter, %for.body.i.preheader.new ], [ %niter.nsub.1, %while.end.i.1 ]
  %arrayidx.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A, i64 %i.038.i
  %v.sroa.0.0..sroa_idx.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %arrayidx.i, i64 0, i32 0
  %v.sroa.0.0.copyload.i = load i32, i32* %v.sroa.0.0..sroa_idx.i, align 8
  %v.sroa.528.0..sroa_idx29.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A, i64 %i.038.i, i32 1
  %v.sroa.528.0..sroa_cast30.i = bitcast %struct.vertex** %v.sroa.528.0..sroa_idx29.i to i64*
  %v.sroa.528.0.copyload.i = load i64, i64* %v.sroa.528.0..sroa_cast30.i, align 8
  %incdec.ptr32.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %arrayidx.i, i64 -1
  %cmp133.i = icmp ult %"struct.std::pair.6"* %incdec.ptr32.i, %A
  br i1 %cmp133.i, label %while.end.i, label %land.rhs.i.preheader

land.rhs.i.preheader:                             ; preds = %for.body.i
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %land.rhs.i.preheader, %while.body.i
  %incdec.ptr35.i = phi %"struct.std::pair.6"* [ %incdec.ptr.i, %while.body.i ], [ %incdec.ptr32.i, %land.rhs.i.preheader ]
  %B.034.i = phi %"struct.std::pair.6"* [ %incdec.ptr35.i, %while.body.i ], [ %arrayidx.i, %land.rhs.i.preheader ]
  %agg.tmp2.sroa.0.0..sroa_idx.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %incdec.ptr35.i, i64 0, i32 0
  %agg.tmp2.sroa.0.0.copyload.i = load i32, i32* %agg.tmp2.sroa.0.0..sroa_idx.i, align 8
  %cmp.i.i = icmp slt i32 %v.sroa.0.0.copyload.i, %agg.tmp2.sroa.0.0.copyload.i
  %first2.i22.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.034.i, i64 0, i32 0
  br i1 %cmp.i.i, label %while.body.i, label %while.end.i

while.body.i:                                     ; preds = %land.rhs.i
  store i32 %agg.tmp2.sroa.0.0.copyload.i, i32* %first2.i22.i, align 8, !tbaa !109
  %second.i23.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.034.i, i64 -1, i32 1
  %3 = bitcast %struct.vertex** %second.i23.i to i64*
  %4 = load i64, i64* %3, align 8, !tbaa !111
  %second3.i24.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.034.i, i64 0, i32 1
  %5 = bitcast %struct.vertex** %second3.i24.i to i64*
  store i64 %4, i64* %5, align 8, !tbaa !111
  %incdec.ptr.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %incdec.ptr35.i, i64 -1
  %cmp1.i = icmp ult %"struct.std::pair.6"* %incdec.ptr.i, %A
  br i1 %cmp1.i, label %while.end.i.loopexit.split.loop.exit, label %land.rhs.i

while.end.i.loopexit.split.loop.exit:             ; preds = %while.body.i
  %agg.tmp2.sroa.0.0..sroa_idx.i.le = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %incdec.ptr35.i, i64 0, i32 0
  br label %while.end.i

while.end.i:                                      ; preds = %land.rhs.i, %while.end.i.loopexit.split.loop.exit, %for.body.i
  %first2.i.pre-phi.i = phi i32* [ %v.sroa.0.0..sroa_idx.i, %for.body.i ], [ %agg.tmp2.sroa.0.0..sroa_idx.i.le, %while.end.i.loopexit.split.loop.exit ], [ %first2.i22.i, %land.rhs.i ]
  %B.0.lcssa.i = phi %"struct.std::pair.6"* [ %arrayidx.i, %for.body.i ], [ %incdec.ptr35.i, %while.end.i.loopexit.split.loop.exit ], [ %B.034.i, %land.rhs.i ]
  store i32 %v.sroa.0.0.copyload.i, i32* %first2.i.pre-phi.i, align 8, !tbaa !109
  %second3.i.i = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.0.lcssa.i, i64 0, i32 1
  %6 = bitcast %struct.vertex** %second3.i.i to i64*
  store i64 %v.sroa.528.0.copyload.i, i64* %6, align 8, !tbaa !111
  %inc.i = or i64 %i.038.i, 1
  %arrayidx.i.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A, i64 %inc.i
  %v.sroa.0.0..sroa_idx.i.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %arrayidx.i.1, i64 0, i32 0
  %v.sroa.0.0.copyload.i.1 = load i32, i32* %v.sroa.0.0..sroa_idx.i.1, align 8
  %v.sroa.528.0..sroa_idx29.i.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A, i64 %inc.i, i32 1
  %v.sroa.528.0..sroa_cast30.i.1 = bitcast %struct.vertex** %v.sroa.528.0..sroa_idx29.i.1 to i64*
  %v.sroa.528.0.copyload.i.1 = load i64, i64* %v.sroa.528.0..sroa_cast30.i.1, align 8
  br label %land.rhs.i.1

_Z13insertionSortISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_.exit.loopexit.unr-lcssa: ; preds = %while.end.i.1
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %_Z13insertionSortISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_.exit, label %for.body.i.epil

for.body.i.epil:                                  ; preds = %for.body.i.preheader, %_Z13insertionSortISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_.exit.loopexit.unr-lcssa
  %i.038.i.unr53 = phi i64 [ %inc.i.1, %_Z13insertionSortISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_.exit.loopexit.unr-lcssa ], [ 0, %for.body.i.preheader ]
  %arrayidx.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A, i64 %i.038.i.unr53
  %v.sroa.0.0..sroa_idx.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %arrayidx.i.epil, i64 0, i32 0
  %v.sroa.0.0.copyload.i.epil = load i32, i32* %v.sroa.0.0..sroa_idx.i.epil, align 8
  %v.sroa.528.0..sroa_idx29.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A, i64 %i.038.i.unr53, i32 1
  %v.sroa.528.0..sroa_cast30.i.epil = bitcast %struct.vertex** %v.sroa.528.0..sroa_idx29.i.epil to i64*
  %v.sroa.528.0.copyload.i.epil = load i64, i64* %v.sroa.528.0..sroa_cast30.i.epil, align 8
  %incdec.ptr32.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %arrayidx.i.epil, i64 -1
  %cmp133.i.epil = icmp ult %"struct.std::pair.6"* %incdec.ptr32.i.epil, %A
  br i1 %cmp133.i.epil, label %while.end.i.epil, label %land.rhs.i.epil.preheader

land.rhs.i.epil.preheader:                        ; preds = %for.body.i.epil
  br label %land.rhs.i.epil

land.rhs.i.epil:                                  ; preds = %land.rhs.i.epil.preheader, %while.body.i.epil
  %incdec.ptr35.i.epil = phi %"struct.std::pair.6"* [ %incdec.ptr.i.epil, %while.body.i.epil ], [ %incdec.ptr32.i.epil, %land.rhs.i.epil.preheader ]
  %B.034.i.epil = phi %"struct.std::pair.6"* [ %incdec.ptr35.i.epil, %while.body.i.epil ], [ %arrayidx.i.epil, %land.rhs.i.epil.preheader ]
  %agg.tmp2.sroa.0.0..sroa_idx.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %incdec.ptr35.i.epil, i64 0, i32 0
  %agg.tmp2.sroa.0.0.copyload.i.epil = load i32, i32* %agg.tmp2.sroa.0.0..sroa_idx.i.epil, align 8
  %cmp.i.i.epil = icmp slt i32 %v.sroa.0.0.copyload.i.epil, %agg.tmp2.sroa.0.0.copyload.i.epil
  %first2.i22.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.034.i.epil, i64 0, i32 0
  br i1 %cmp.i.i.epil, label %while.body.i.epil, label %while.end.i.epil

while.body.i.epil:                                ; preds = %land.rhs.i.epil
  store i32 %agg.tmp2.sroa.0.0.copyload.i.epil, i32* %first2.i22.i.epil, align 8, !tbaa !109
  %second.i23.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.034.i.epil, i64 -1, i32 1
  %7 = bitcast %struct.vertex** %second.i23.i.epil to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !111
  %second3.i24.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.034.i.epil, i64 0, i32 1
  %9 = bitcast %struct.vertex** %second3.i24.i.epil to i64*
  store i64 %8, i64* %9, align 8, !tbaa !111
  %incdec.ptr.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %incdec.ptr35.i.epil, i64 -1
  %cmp1.i.epil = icmp ult %"struct.std::pair.6"* %incdec.ptr.i.epil, %A
  br i1 %cmp1.i.epil, label %while.end.i.epil.loopexit.split.loop.exit, label %land.rhs.i.epil

while.end.i.epil.loopexit.split.loop.exit:        ; preds = %while.body.i.epil
  %agg.tmp2.sroa.0.0..sroa_idx.i.epil.le = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %incdec.ptr35.i.epil, i64 0, i32 0
  br label %while.end.i.epil

while.end.i.epil:                                 ; preds = %land.rhs.i.epil, %while.end.i.epil.loopexit.split.loop.exit, %for.body.i.epil
  %first2.i.pre-phi.i.epil = phi i32* [ %v.sroa.0.0..sroa_idx.i.epil, %for.body.i.epil ], [ %agg.tmp2.sroa.0.0..sroa_idx.i.epil.le, %while.end.i.epil.loopexit.split.loop.exit ], [ %first2.i22.i.epil, %land.rhs.i.epil ]
  %B.0.lcssa.i.epil = phi %"struct.std::pair.6"* [ %arrayidx.i.epil, %for.body.i.epil ], [ %incdec.ptr35.i.epil, %while.end.i.epil.loopexit.split.loop.exit ], [ %B.034.i.epil, %land.rhs.i.epil ]
  store i32 %v.sroa.0.0.copyload.i.epil, i32* %first2.i.pre-phi.i.epil, align 8, !tbaa !109
  %second3.i.i.epil = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.0.lcssa.i.epil, i64 0, i32 1
  %10 = bitcast %struct.vertex** %second3.i.i.epil to i64*
  store i64 %v.sroa.528.0.copyload.i.epil, i64* %10, align 8, !tbaa !111
  br label %_Z13insertionSortISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_.exit

_Z13insertionSortISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_.exit: ; preds = %while.end.i.epil, %_Z13insertionSortISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_.exit.loopexit.unr-lcssa, %while.end
  ret void

land.rhs.i.1:                                     ; preds = %while.body.i.1, %while.end.i
  %incdec.ptr35.i.1 = phi %"struct.std::pair.6"* [ %incdec.ptr.i.1, %while.body.i.1 ], [ %arrayidx.i, %while.end.i ]
  %B.034.i.1 = phi %"struct.std::pair.6"* [ %incdec.ptr35.i.1, %while.body.i.1 ], [ %arrayidx.i.1, %while.end.i ]
  %agg.tmp2.sroa.0.0..sroa_idx.i.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %incdec.ptr35.i.1, i64 0, i32 0
  %agg.tmp2.sroa.0.0.copyload.i.1 = load i32, i32* %agg.tmp2.sroa.0.0..sroa_idx.i.1, align 8
  %cmp.i.i.1 = icmp slt i32 %v.sroa.0.0.copyload.i.1, %agg.tmp2.sroa.0.0.copyload.i.1
  %first2.i22.i.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.034.i.1, i64 0, i32 0
  br i1 %cmp.i.i.1, label %while.body.i.1, label %while.end.i.1

while.body.i.1:                                   ; preds = %land.rhs.i.1
  store i32 %agg.tmp2.sroa.0.0.copyload.i.1, i32* %first2.i22.i.1, align 8, !tbaa !109
  %second.i23.i.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.034.i.1, i64 -1, i32 1
  %11 = bitcast %struct.vertex** %second.i23.i.1 to i64*
  %12 = load i64, i64* %11, align 8, !tbaa !111
  %second3.i24.i.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.034.i.1, i64 0, i32 1
  %13 = bitcast %struct.vertex** %second3.i24.i.1 to i64*
  store i64 %12, i64* %13, align 8, !tbaa !111
  %incdec.ptr.i.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %incdec.ptr35.i.1, i64 -1
  %cmp1.i.1 = icmp ult %"struct.std::pair.6"* %incdec.ptr.i.1, %A
  br i1 %cmp1.i.1, label %while.end.i.1.split.loop.exit78, label %land.rhs.i.1

while.end.i.1.split.loop.exit78:                  ; preds = %while.body.i.1
  %agg.tmp2.sroa.0.0..sroa_idx.i.1.le = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %incdec.ptr35.i.1, i64 0, i32 0
  br label %while.end.i.1

while.end.i.1:                                    ; preds = %land.rhs.i.1, %while.end.i.1.split.loop.exit78
  %first2.i.pre-phi.i.1 = phi i32* [ %agg.tmp2.sroa.0.0..sroa_idx.i.1.le, %while.end.i.1.split.loop.exit78 ], [ %first2.i22.i.1, %land.rhs.i.1 ]
  %B.0.lcssa.i.1 = phi %"struct.std::pair.6"* [ %incdec.ptr35.i.1, %while.end.i.1.split.loop.exit78 ], [ %B.034.i.1, %land.rhs.i.1 ]
  store i32 %v.sroa.0.0.copyload.i.1, i32* %first2.i.pre-phi.i.1, align 8, !tbaa !109
  %second3.i.i.1 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.0.lcssa.i.1, i64 0, i32 1
  %14 = bitcast %struct.vertex** %second3.i.i.1 to i64*
  store i64 %v.sroa.528.0.copyload.i.1, i64* %14, align 8, !tbaa !111
  %inc.i.1 = add nuw nsw i64 %i.038.i, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %_Z13insertionSortISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_.exit.loopexit.unr-lcssa, label %for.body.i
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #16

; Function Attrs: nobuiltin
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #14

; Function Attrs: nounwind stealable uwtable
define linkonce_odr void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT_(%class.gTreeNode* %this, i32 %s, %struct.vertex** %f.coerce) local_unnamed_addr #15 comdat align 2 {
entry:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %entry
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %entry, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %entry ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %entry ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %vertices.i = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %this, i64 0, i32 5
  %9 = load %struct.vertex**, %struct.vertex*** %vertices.i, align 8, !tbaa !89
  %cmp.i = icmp eq %struct.vertex** %9, null
  br i1 %cmp.i, label %if.else, label %if.then

if.then:                                          ; preds = %__cilkrts_enter_frame_1.exit
  %count = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %this, i64 0, i32 3
  %10 = load i32, i32* %count, align 4, !tbaa !80
  %cmp35 = icmp sgt i32 %10, 0
  br i1 %cmp35, label %for.body.lr.ph, label %if.end

for.body.lr.ph:                                   ; preds = %if.then
  %11 = sext i32 %s to i64
  %12 = sext i32 %10 to i64
  %13 = bitcast %struct.vertex** %9 to i64*
  %14 = load i64, i64* %13, align 8, !tbaa !53
  %arrayidx.i39 = getelementptr inbounds %struct.vertex*, %struct.vertex** %f.coerce, i64 %11
  %15 = bitcast %struct.vertex** %arrayidx.i39 to i64*
  store i64 %14, i64* %15, align 8, !tbaa !53
  %cmp40 = icmp eq i32 %10, 1
  br i1 %cmp40, label %if.end, label %for.body.for.body_crit_edge.preheader

for.body.for.body_crit_edge.preheader:            ; preds = %for.body.lr.ph
  br label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body.for.body_crit_edge.preheader, %for.body.for.body_crit_edge
  %indvars.iv.next41 = phi i64 [ %indvars.iv.next, %for.body.for.body_crit_edge ], [ 1, %for.body.for.body_crit_edge.preheader ]
  %.pre = load %struct.vertex**, %struct.vertex*** %vertices.i, align 8, !tbaa !89
  %arrayidx = getelementptr inbounds %struct.vertex*, %struct.vertex** %.pre, i64 %indvars.iv.next41
  %16 = bitcast %struct.vertex** %arrayidx to i64*
  %17 = load i64, i64* %16, align 8, !tbaa !53
  %18 = add nsw i64 %indvars.iv.next41, %11
  %arrayidx.i = getelementptr inbounds %struct.vertex*, %struct.vertex** %f.coerce, i64 %18
  %19 = bitcast %struct.vertex** %arrayidx.i to i64*
  store i64 %17, i64* %19, align 8, !tbaa !53
  %indvars.iv.next = add nuw nsw i64 %indvars.iv.next41, 1
  %cmp = icmp slt i64 %indvars.iv.next, %12
  br i1 %cmp, label %for.body.for.body_crit_edge, label %if.end

if.else:                                          ; preds = %__cilkrts_enter_frame_1.exit
  %arrayidx9 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %this, i64 0, i32 4, i64 0
  %20 = load %class.gTreeNode*, %class.gTreeNode** %arrayidx9, align 8, !tbaa !53
  %21 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  %23 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %24 = call i8* @llvm.frameaddress(i32 0)
  %25 = getelementptr inbounds [5 x i8*], [5 x i8*]* %23, i64 0, i64 0
  store volatile i8* %24, i8** %25, align 8
  %26 = call i8* @llvm.stacksave()
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %26, i8** %27, align 8
  %28 = bitcast [5 x i8*]* %23 to i8*
  %29 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #23
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %if.else.split, label %det.cont

if.else.split:                                    ; preds = %if.else
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.1.cilk(%class.gTreeNode* align 1 %20, i32 %s, %struct.vertex** align 1 %f.coerce)
  br label %det.cont

det.cont:                                         ; preds = %if.else.split, %if.else
  %31 = load %class.gTreeNode*, %class.gTreeNode** %arrayidx9, align 8, !tbaa !53
  %count14 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %31, i64 0, i32 3
  %32 = load i32, i32* %count14, align 4, !tbaa !80
  %add15 = add nsw i32 %32, %s
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %34 = load atomic i32, i32* %33 acquire, align 8
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %det.cont
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %38 = call i8* @llvm.stacksave() #2
  store volatile i8* %38, i8** %27, align 8
  %39 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #24
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %det.cont, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 12, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %42, align 8
  %arrayidx9.1 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %this, i64 0, i32 4, i64 1
  %45 = load %class.gTreeNode*, %class.gTreeNode** %arrayidx9.1, align 8, !tbaa !53
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %46 = call i8* @llvm.stacksave()
  store volatile i8* %46, i8** %27, align 8
  %47 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #23
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %for.inc16.split, label %det.cont.1

for.inc16.split:                                  ; preds = %__cilk_sync_nothrow.exit
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.1.cilk(%class.gTreeNode* %45, i32 %add15, %struct.vertex** %f.coerce)
  br label %det.cont.1

if.end:                                           ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph, %__cilk_sync_nothrow.exit47, %if.then
  %49 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %50 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %49, i64 0, i32 9
  %53 = bitcast %struct.__cilkrts_stack_frame** %52 to i64*
  store atomic i64 %51, i64* %53 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %54 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %55 = load atomic i32, i32* %54 acquire, align 8
  %56 = icmp eq i32 %55, 16777216
  br i1 %56, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.end
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.end, %body.i
  ret void

det.cont.1:                                       ; preds = %for.inc16.split, %__cilk_sync_nothrow.exit
  %57 = load %class.gTreeNode*, %class.gTreeNode** %arrayidx9.1, align 8, !tbaa !53
  %count14.1 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %57, i64 0, i32 3
  %58 = load i32, i32* %count14.1, align 4, !tbaa !80
  %add15.1 = add nsw i32 %58, %add15
  %59 = load atomic i32, i32* %33 acquire, align 8
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %__cilk_sync_nothrow.exit44, label %cilk.sync.savestate.i42

cilk.sync.savestate.i42:                          ; preds = %det.cont.1
  %62 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %63 = call i8* @llvm.stacksave() #2
  store volatile i8* %63, i8** %27, align 8
  %64 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #24
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %cilk.sync.runtimecall.i43, label %__cilk_sync_nothrow.exit44

cilk.sync.runtimecall.i43:                        ; preds = %cilk.sync.savestate.i42
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit44

__cilk_sync_nothrow.exit44:                       ; preds = %det.cont.1, %cilk.sync.savestate.i42, %cilk.sync.runtimecall.i43
  %66 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %67 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %66, i64 0, i32 12, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  store i64 %69, i64* %67, align 8
  %arrayidx9.2 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %this, i64 0, i32 4, i64 2
  %70 = load %class.gTreeNode*, %class.gTreeNode** %arrayidx9.2, align 8, !tbaa !53
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %71 = call i8* @llvm.stacksave()
  store volatile i8* %71, i8** %27, align 8
  %72 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #23
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %for.inc16.1.split, label %det.cont.2

for.inc16.1.split:                                ; preds = %__cilk_sync_nothrow.exit44
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.2.cilk(%class.gTreeNode* %70, i32 %add15.1, %struct.vertex** %f.coerce)
  br label %det.cont.2

det.cont.2:                                       ; preds = %for.inc16.1.split, %__cilk_sync_nothrow.exit44
  %74 = load %class.gTreeNode*, %class.gTreeNode** %arrayidx9.2, align 8, !tbaa !53
  %count14.2 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %74, i64 0, i32 3
  %75 = load i32, i32* %count14.2, align 4, !tbaa !80
  %add15.2 = add nsw i32 %75, %add15.1
  %76 = load atomic i32, i32* %33 acquire, align 8
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %__cilk_sync_nothrow.exit47, label %cilk.sync.savestate.i45

cilk.sync.savestate.i45:                          ; preds = %det.cont.2
  %79 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %80 = call i8* @llvm.stacksave() #2
  store volatile i8* %80, i8** %27, align 8
  %81 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #24
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %cilk.sync.runtimecall.i46, label %__cilk_sync_nothrow.exit47

cilk.sync.runtimecall.i46:                        ; preds = %cilk.sync.savestate.i45
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit47

__cilk_sync_nothrow.exit47:                       ; preds = %det.cont.2, %cilk.sync.savestate.i45, %cilk.sync.runtimecall.i46
  %83 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %84 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %83, i64 0, i32 12, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, 1
  store i64 %86, i64* %84, align 8
  %arrayidx9.3 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %this, i64 0, i32 4, i64 3
  %87 = load %class.gTreeNode*, %class.gTreeNode** %arrayidx9.3, align 8, !tbaa !53
  tail call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT_(%class.gTreeNode* %87, i32 %add15.2, %struct.vertex** %f.coerce)
  br label %if.end
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE3kNN10nearestNghEP9gTreeNodeIS2_7_vect2dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %this, %class.gTreeNode* %T) local_unnamed_addr #7 comdat align 2 {
entry:
  %vertices.i = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %T, i64 0, i32 5
  %0 = load %struct.vertex**, %struct.vertex*** %vertices.i, align 8, !tbaa !89
  %cmp.i = icmp eq %struct.vertex** %0, null
  br i1 %cmp.i, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %count = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %T, i64 0, i32 3
  %1 = load i32, i32* %count, align 4, !tbaa !80
  %cmp45 = icmp sgt i32 %1, 0
  br i1 %cmp45, label %for.body.lr.ph, label %if.end22

for.body.lr.ph:                                   ; preds = %if.then
  %ps = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %this, i64 0, i32 0
  %arrayidx.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %this, i64 0, i32 2, i64 0
  %arrayidx4.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %this, i64 0, i32 1, i64 0
  %k.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %this, i64 0, i32 4
  %2 = sext i32 %1 to i64
  br label %for.body

for.body:                                         ; preds = %if.end.for.body_crit_edge, %for.body.lr.ph
  %3 = phi %struct.vertex** [ %0, %for.body.lr.ph ], [ %.pre, %if.end.for.body_crit_edge ]
  %indvars.iv48 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next49, %if.end.for.body_crit_edge ]
  %arrayidx = getelementptr inbounds %struct.vertex*, %struct.vertex** %3, i64 %indvars.iv48
  %4 = load %struct.vertex*, %struct.vertex** %arrayidx, align 8, !tbaa !53
  %5 = load %struct.vertex*, %struct.vertex** %ps, align 8, !tbaa !151
  %cmp2 = icmp eq %struct.vertex* %4, %5
  br i1 %cmp2, label %if.end, label %if.then3

if.then3:                                         ; preds = %for.body
  %opt.sroa.0.0..sroa_idx.i = getelementptr inbounds %struct.vertex, %struct.vertex* %4, i64 0, i32 1, i32 0
  %6 = bitcast double* %opt.sroa.0.0..sroa_idx.i to <2 x double>*
  %7 = load <2 x double>, <2 x double>* %6, align 8
  %x.i.i = getelementptr inbounds %struct.vertex, %struct.vertex* %5, i64 0, i32 1, i32 0
  %8 = bitcast double* %x.i.i to <2 x double>*
  %9 = load <2 x double>, <2 x double>* %8, align 8, !tbaa !18
  %10 = fsub fast <2 x double> %9, %7
  %11 = fmul fast <2 x double> %10, %10
  %12 = extractelement <2 x double> %11, i32 0
  %13 = extractelement <2 x double> %11, i32 1
  %add.i.i = fadd fast double %13, %12
  %14 = tail call fast double @llvm.sqrt.f64(double %add.i.i) #2
  %15 = load double, double* %arrayidx.i, align 8, !tbaa !18
  %cmp.i39 = fcmp fast olt double %14, %15
  br i1 %cmp.i39, label %if.then.i, label %if.end

if.then.i:                                        ; preds = %if.then3
  store %struct.vertex* %4, %struct.vertex** %arrayidx4.i, align 8, !tbaa !53
  store double %14, double* %arrayidx.i, align 8, !tbaa !18
  %16 = load i32, i32* %k.i, align 4, !tbaa !153
  %cmp747.i = icmp sgt i32 %16, 1
  br i1 %cmp747.i, label %land.rhs.lr.ph.i, label %if.end

land.rhs.lr.ph.i:                                 ; preds = %if.then.i
  %17 = sext i32 %16 to i64
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %for.body.i, %land.rhs.lr.ph.i
  %18 = phi double [ %14, %land.rhs.lr.ph.i ], [ %25, %for.body.i ]
  %indvars.iv.i = phi i64 [ 1, %land.rhs.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %19 = add nsw i64 %indvars.iv.i, -1
  %arrayidx12.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %this, i64 0, i32 2, i64 %indvars.iv.i
  %20 = load double, double* %arrayidx12.i, align 8, !tbaa !18
  %cmp13.i = fcmp fast olt double %18, %20
  br i1 %cmp13.i, label %for.body.i, label %if.end

for.body.i:                                       ; preds = %land.rhs.i
  %arrayidx9.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %this, i64 0, i32 2, i64 %19
  %arrayidx24.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %this, i64 0, i32 1, i64 %19
  %21 = bitcast %struct.vertex** %arrayidx24.i to <2 x i64>*
  %22 = load <2 x i64>, <2 x i64>* %21, align 8, !tbaa !22
  store double %20, double* %arrayidx9.i, align 8, !tbaa !18
  %arrayidx27.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %this, i64 0, i32 1, i64 %indvars.iv.i
  %23 = bitcast %struct.vertex** %arrayidx24.i to double*
  store double %20, double* %23, align 8, !tbaa !53
  %24 = bitcast %struct.vertex** %arrayidx27.i to <2 x i64>*
  store <2 x i64> %22, <2 x i64>* %24, align 8, !tbaa !22
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %cmp7.i = icmp slt i64 %indvars.iv.next.i, %17
  %bc = bitcast <2 x i64> %22 to <2 x double>
  %25 = extractelement <2 x double> %bc, i32 1
  br i1 %cmp7.i, label %land.rhs.i, label %if.end

if.end:                                           ; preds = %for.body.i, %land.rhs.i, %if.then.i, %if.then3, %for.body
  %indvars.iv.next49 = add nuw nsw i64 %indvars.iv48, 1
  %cmp = icmp slt i64 %indvars.iv.next49, %2
  br i1 %cmp, label %if.end.for.body_crit_edge, label %if.end22

if.end.for.body_crit_edge:                        ; preds = %if.end
  %.pre = load %struct.vertex**, %struct.vertex*** %vertices.i, align 8, !tbaa !89
  br label %for.body

if.else:                                          ; preds = %entry
  %ps5 = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %this, i64 0, i32 0
  %26 = load %struct.vertex*, %struct.vertex** %ps5, align 8, !tbaa !151
  %agg.tmp.sroa.0.0..sroa_idx.i = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %T, i64 0, i32 0, i32 0
  %agg.tmp.sroa.0.0.copyload.i = load double, double* %agg.tmp.sroa.0.0..sroa_idx.i, align 8
  %agg.tmp.sroa.2.0..sroa_idx2.i = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %T, i64 0, i32 0, i32 1
  %agg.tmp.sroa.2.0.copyload.i = load double, double* %agg.tmp.sroa.2.0..sroa_idx2.i, align 8
  %x.i.i40 = getelementptr inbounds %struct.vertex, %struct.vertex* %26, i64 0, i32 1, i32 0
  %27 = load double, double* %x.i.i40, align 8, !tbaa !90
  %cmp.i.i = fcmp fast ogt double %27, %agg.tmp.sroa.0.0.copyload.i
  %index.0.i.i = zext i1 %cmp.i.i to i32
  %y.i.i41 = getelementptr inbounds %struct.vertex, %struct.vertex* %26, i64 0, i32 1, i32 1
  %28 = load double, double* %y.i.i41, align 8, !tbaa !91
  %cmp4.i.i = fcmp fast ogt double %28, %agg.tmp.sroa.2.0.copyload.i
  %add6.i.i = or i32 %index.0.i.i, 2
  %index.1.i.i = select i1 %cmp4.i.i, i32 %add6.i.i, i32 %index.0.i.i
  %29 = zext i32 %index.1.i.i to i64
  %arrayidx8 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %T, i64 0, i32 4, i64 %29
  %30 = load %class.gTreeNode*, %class.gTreeNode** %arrayidx8, align 8, !tbaa !53
  tail call void @_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE3kNN10nearestNghEP9gTreeNodeIS2_7_vect2dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %this, %class.gTreeNode* %30)
  %quads = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %this, i64 0, i32 3
  %31 = load i32, i32* %quads, align 8, !tbaa !154
  %cmp1043 = icmp sgt i32 %31, 0
  br i1 %cmp1043, label %for.body12.preheader, label %if.end22

for.body12.preheader:                             ; preds = %if.else
  br label %for.body12

for.body12:                                       ; preds = %for.body12.preheader, %for.inc19
  %32 = phi i32 [ %34, %for.inc19 ], [ %31, %for.body12.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc19 ], [ 0, %for.body12.preheader ]
  %cmp13 = icmp eq i64 %indvars.iv, %29
  br i1 %cmp13, label %for.inc19, label %if.then14

if.then14:                                        ; preds = %for.body12
  %arrayidx17 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %T, i64 0, i32 4, i64 %indvars.iv
  %33 = load %class.gTreeNode*, %class.gTreeNode** %arrayidx17, align 8, !tbaa !53
  tail call void @_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE3kNN14nearestNghTrimEP9gTreeNodeIS2_7_vect2dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* nonnull %this, %class.gTreeNode* %33)
  %.pre50 = load i32, i32* %quads, align 8, !tbaa !154
  br label %for.inc19

for.inc19:                                        ; preds = %for.body12, %if.then14
  %34 = phi i32 [ %32, %for.body12 ], [ %.pre50, %if.then14 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %35 = sext i32 %34 to i64
  %cmp10 = icmp slt i64 %indvars.iv.next, %35
  br i1 %cmp10, label %for.body12, label %if.end22

if.end22:                                         ; preds = %if.end, %for.inc19, %if.then, %if.else
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE3kNN14nearestNghTrimEP9gTreeNodeIS2_7_vect2dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %this, %class.gTreeNode* %T) local_unnamed_addr #7 comdat align 2 {
entry:
  %ps = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %this, i64 0, i32 0
  %0 = load %struct.vertex*, %struct.vertex** %ps, align 8, !tbaa !151
  %agg.tmp.sroa.0.0..sroa_idx = getelementptr inbounds %struct.vertex, %struct.vertex* %0, i64 0, i32 1, i32 0
  %1 = bitcast double* %agg.tmp.sroa.0.0..sroa_idx to <2 x double>*
  %2 = load <2 x double>, <2 x double>* %1, align 8
  %size = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %T, i64 0, i32 1
  %3 = load double, double* %size, align 8, !tbaa !86
  %div = fmul fast double %3, 5.000000e-01
  %arrayidx = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %this, i64 0, i32 2, i64 0
  %4 = load double, double* %arrayidx, align 8, !tbaa !18
  %add = fadd fast double %div, %4
  %x.i = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %T, i64 0, i32 0, i32 0
  %5 = load double, double* %x.i, align 8, !tbaa !90
  %sub.i = fsub fast double %5, %add
  %6 = extractelement <2 x double> %2, i32 0
  %cmp.i = fcmp fast ogt double %sub.i, %6
  %add.i = fadd fast double %5, %add
  %cmp5.i = fcmp fast olt double %add.i, %6
  %or.cond.i = or i1 %cmp.i, %cmp5.i
  br i1 %or.cond.i, label %if.end14, label %lor.lhs.false6.i

lor.lhs.false6.i:                                 ; preds = %entry
  %y.i = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %T, i64 0, i32 0, i32 1
  %7 = load double, double* %y.i, align 8, !tbaa !91
  %sub7.i = fsub fast double %7, %add
  %8 = extractelement <2 x double> %2, i32 1
  %cmp9.i = fcmp fast ogt double %sub7.i, %8
  %add11.i = fadd fast double %7, %add
  %cmp13.i = fcmp fast olt double %add11.i, %8
  %or.cond = or i1 %cmp9.i, %cmp13.i
  br i1 %or.cond, label %if.end14, label %if.then

if.then:                                          ; preds = %lor.lhs.false6.i
  %vertices.i = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %T, i64 0, i32 5
  %9 = load %struct.vertex**, %struct.vertex*** %vertices.i, align 8, !tbaa !89
  %cmp.i27 = icmp eq %struct.vertex** %9, null
  br i1 %cmp.i27, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.then
  %count = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %T, i64 0, i32 3
  %10 = load i32, i32* %count, align 4, !tbaa !80
  %cmp33 = icmp sgt i32 %10, 0
  br i1 %cmp33, label %for.body.lr.ph, label %if.end14

for.body.lr.ph:                                   ; preds = %if.then3
  %arrayidx4.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %this, i64 0, i32 1, i64 0
  %k.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %this, i64 0, i32 4
  %11 = sext i32 %10 to i64
  br label %for.body

for.body:                                         ; preds = %_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE3kNN6updateEPS3_.exit.for.body_crit_edge, %for.body.lr.ph
  %12 = phi double [ %4, %for.body.lr.ph ], [ %.pre41, %_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE3kNN6updateEPS3_.exit.for.body_crit_edge ]
  %13 = phi %struct.vertex** [ %9, %for.body.lr.ph ], [ %.pre, %_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE3kNN6updateEPS3_.exit.for.body_crit_edge ]
  %indvars.iv36 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next37, %_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE3kNN6updateEPS3_.exit.for.body_crit_edge ]
  %14 = phi <2 x double> [ %2, %for.body.lr.ph ], [ %34, %_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE3kNN6updateEPS3_.exit.for.body_crit_edge ]
  %arrayidx4 = getelementptr inbounds %struct.vertex*, %struct.vertex** %13, i64 %indvars.iv36
  %15 = load %struct.vertex*, %struct.vertex** %arrayidx4, align 8, !tbaa !53
  %opt.sroa.0.0..sroa_idx.i = getelementptr inbounds %struct.vertex, %struct.vertex* %15, i64 0, i32 1, i32 0
  %16 = bitcast double* %opt.sroa.0.0..sroa_idx.i to <2 x double>*
  %17 = load <2 x double>, <2 x double>* %16, align 8
  %18 = fsub fast <2 x double> %14, %17
  %19 = fmul fast <2 x double> %18, %18
  %20 = extractelement <2 x double> %19, i32 0
  %21 = extractelement <2 x double> %19, i32 1
  %add.i.i = fadd fast double %21, %20
  %22 = tail call fast double @llvm.sqrt.f64(double %add.i.i) #2
  %cmp.i28 = fcmp fast olt double %22, %12
  br i1 %cmp.i28, label %if.then.i, label %_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE3kNN6updateEPS3_.exit

if.then.i:                                        ; preds = %for.body
  store %struct.vertex* %15, %struct.vertex** %arrayidx4.i, align 8, !tbaa !53
  store double %22, double* %arrayidx, align 8, !tbaa !18
  %23 = load i32, i32* %k.i, align 4, !tbaa !153
  %cmp747.i = icmp sgt i32 %23, 1
  br i1 %cmp747.i, label %land.rhs.lr.ph.i, label %_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE3kNN6updateEPS3_.exit

land.rhs.lr.ph.i:                                 ; preds = %if.then.i
  %24 = sext i32 %23 to i64
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %for.body.i, %land.rhs.lr.ph.i
  %25 = phi double [ %22, %land.rhs.lr.ph.i ], [ %32, %for.body.i ]
  %indvars.iv.i = phi i64 [ 1, %land.rhs.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %26 = add nsw i64 %indvars.iv.i, -1
  %arrayidx12.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %this, i64 0, i32 2, i64 %indvars.iv.i
  %27 = load double, double* %arrayidx12.i, align 8, !tbaa !18
  %cmp13.i29 = fcmp fast olt double %25, %27
  br i1 %cmp13.i29, label %for.body.i, label %_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE3kNN6updateEPS3_.exit

for.body.i:                                       ; preds = %land.rhs.i
  %arrayidx9.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %this, i64 0, i32 2, i64 %26
  %arrayidx24.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %this, i64 0, i32 1, i64 %26
  %28 = bitcast %struct.vertex** %arrayidx24.i to <2 x i64>*
  %29 = load <2 x i64>, <2 x i64>* %28, align 8, !tbaa !22
  store double %27, double* %arrayidx9.i, align 8, !tbaa !18
  %arrayidx27.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %this, i64 0, i32 1, i64 %indvars.iv.i
  %30 = bitcast %struct.vertex** %arrayidx24.i to double*
  store double %27, double* %30, align 8, !tbaa !53
  %31 = bitcast %struct.vertex** %arrayidx27.i to <2 x i64>*
  store <2 x i64> %29, <2 x i64>* %31, align 8, !tbaa !22
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %cmp7.i = icmp slt i64 %indvars.iv.next.i, %24
  %bc = bitcast <2 x i64> %29 to <2 x double>
  %32 = extractelement <2 x double> %bc, i32 1
  br i1 %cmp7.i, label %land.rhs.i, label %_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE3kNN6updateEPS3_.exit

_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE3kNN6updateEPS3_.exit: ; preds = %land.rhs.i, %for.body.i, %for.body, %if.then.i
  %indvars.iv.next37 = add nuw nsw i64 %indvars.iv36, 1
  %cmp = icmp slt i64 %indvars.iv.next37, %11
  br i1 %cmp, label %_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE3kNN6updateEPS3_.exit.for.body_crit_edge, label %if.end14

_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE3kNN6updateEPS3_.exit.for.body_crit_edge: ; preds = %_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE3kNN6updateEPS3_.exit
  %.pre = load %struct.vertex**, %struct.vertex*** %vertices.i, align 8, !tbaa !89
  %.pre38 = load %struct.vertex*, %struct.vertex** %ps, align 8, !tbaa !151
  %x.i.i.phi.trans.insert = getelementptr inbounds %struct.vertex, %struct.vertex* %.pre38, i64 0, i32 1, i32 0
  %33 = bitcast double* %x.i.i.phi.trans.insert to <2 x double>*
  %34 = load <2 x double>, <2 x double>* %33, align 8, !tbaa !18
  %.pre41 = load double, double* %arrayidx, align 8, !tbaa !18
  br label %for.body

if.else:                                          ; preds = %if.then
  %quads = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %this, i64 0, i32 3
  %35 = load i32, i32* %quads, align 8, !tbaa !154
  %cmp631 = icmp sgt i32 %35, 0
  br i1 %cmp631, label %for.body8.preheader, label %if.end14

for.body8.preheader:                              ; preds = %if.else
  br label %for.body8

for.body8:                                        ; preds = %for.body8.preheader, %for.body8
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body8 ], [ 0, %for.body8.preheader ]
  %arrayidx10 = getelementptr inbounds %class.gTreeNode, %class.gTreeNode* %T, i64 0, i32 4, i64 %indvars.iv
  %36 = load %class.gTreeNode*, %class.gTreeNode** %arrayidx10, align 8, !tbaa !53
  tail call void @_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE3kNN14nearestNghTrimEP9gTreeNodeIS2_7_vect2dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* nonnull %this, %class.gTreeNode* %36)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %37 = load i32, i32* %quads, align 8, !tbaa !154
  %38 = sext i32 %37 to i64
  %cmp6 = icmp slt i64 %indvars.iv.next, %38
  br i1 %cmp6, label %for.body8, label %if.end14

if.end14:                                         ; preds = %_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE3kNN6updateEPS3_.exit, %for.body8, %if.then3, %if.else, %entry, %lor.lhs.false6.i
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.sqrt.f64(double) #16

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval* nocapture, %struct.timezone* nocapture) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"*, double) local_unnamed_addr #0

; Function Attrs: nounwind uwtable
define linkonce_odr i32 @_ZN7benchIO16writeArrayToFileIiEEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPT_lPc(%"class.std::__cxx11::basic_string"* %header, i32* %A, i64 %n, i8* %fileName) local_unnamed_addr #7 comdat {
entry:
  %file = alloca %"class.std::basic_ofstream", align 8
  %0 = bitcast %"class.std::basic_ofstream"* %file to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %0) #2
  call void @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode(%"class.std::basic_ofstream"* nonnull %file, i8* %fileName, i32 20)
  %_M_file.i.i = getelementptr inbounds %"class.std::basic_ofstream", %"class.std::basic_ofstream"* %file, i64 0, i32 1, i32 2
  %call.i.i = call zeroext i1 @_ZNKSt12__basic_fileIcE7is_openEv(%"class.std::__basic_file"* nonnull %_M_file.i.i) #20
  br i1 %call.i.i, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call1.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i64 21) #2
  %tobool.i = icmp eq i8* %fileName, null
  br i1 %tobool.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.then
  %vtable.i = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !32
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %1 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %1, align 8
  %add.ptr.i = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i
  %2 = bitcast i8* %add.ptr.i to %"class.std::basic_ios"*
  %_M_streambuf_state.i.i.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 32
  %3 = bitcast i8* %_M_streambuf_state.i.i.i to i32*
  %4 = load i32, i32* %3, align 8, !tbaa !34
  %or.i.i.i = or i32 %4, 1
  call void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(%"class.std::basic_ios"* %2, i32 %or.i.i.i) #2
  br label %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit

if.else.i:                                        ; preds = %if.then
  %call.i.i11 = call i64 @strlen(i8* nonnull %fileName) #2
  %call1.i12 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull %fileName, i64 %call.i.i11) #2
  br label %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit

_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit: ; preds = %if.then.i, %if.else.i
  %vtable.i13 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !32
  %vbase.offset.ptr.i14 = getelementptr i8, i8* %vtable.i13, i64 -24
  %5 = bitcast i8* %vbase.offset.ptr.i14 to i64*
  %vbase.offset.i15 = load i64, i64* %5, align 8
  %add.ptr.i16 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i15
  %_M_ctype.i.i = getelementptr inbounds i8, i8* %add.ptr.i16, i64 240
  %6 = bitcast i8* %_M_ctype.i.i to %"class.std::ctype"**
  %7 = load %"class.std::ctype"*, %"class.std::ctype"** %6, align 8, !tbaa !41
  %tobool.i.i.i = icmp eq %"class.std::ctype"* %7, null
  br i1 %tobool.i.i.i, label %if.then.i.i.i, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i

if.then.i.i.i:                                    ; preds = %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
  call void @_ZSt16__throw_bad_castv() #21
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i: ; preds = %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
  %_M_widen_ok.i.i.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %7, i64 0, i32 8
  %8 = load i8, i8* %_M_widen_ok.i.i.i, align 8, !tbaa !43
  %tobool.i3.i.i = icmp eq i8 %8, 0
  br i1 %tobool.i3.i.i, label %if.end.i.i.i, label %if.then.i4.i.i

if.then.i4.i.i:                                   ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  %arrayidx.i.i.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %7, i64 0, i32 9, i64 10
  %9 = load i8, i8* %arrayidx.i.i.i, align 1, !tbaa !22
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit

if.end.i.i.i:                                     ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull %7) #2
  %10 = bitcast %"class.std::ctype"* %7 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %10, align 8, !tbaa !32
  %vfn.i.i.i = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i, i64 6
  %11 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i, align 8
  %call.i.i.i17 = call signext i8 %11(%"class.std::ctype"* nonnull %7, i8 signext 10) #2
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit

_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit: ; preds = %if.then.i4.i.i, %if.end.i.i.i
  %retval.0.i.i.i = phi i8 [ %9, %if.then.i4.i.i ], [ %call.i.i.i17, %if.end.i.i.i ]
  %call1.i18 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i8 signext %retval.0.i.i.i) #2
  %call.i.i19 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull %call1.i18) #2
  %.pre = getelementptr inbounds %"class.std::basic_ofstream", %"class.std::basic_ofstream"* %file, i64 0, i32 1
  br label %cleanup

if.end:                                           ; preds = %entry
  %12 = bitcast %"class.std::basic_ofstream"* %file to %"class.std::basic_ostream"*
  %_M_p.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %header, i64 0, i32 0, i32 0
  %13 = load i8*, i8** %_M_p.i.i.i, align 8, !tbaa !50
  %_M_string_length.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %header, i64 0, i32 1
  %14 = load i64, i64* %_M_string_length.i.i, align 8, !tbaa !52
  %call2.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) %12, i8* %13, i64 %14) #2
  %15 = bitcast %"class.std::basic_ostream"* %call2.i to i8**
  %vtable.i20 = load i8*, i8** %15, align 8, !tbaa !32
  %vbase.offset.ptr.i21 = getelementptr i8, i8* %vtable.i20, i64 -24
  %16 = bitcast i8* %vbase.offset.ptr.i21 to i64*
  %vbase.offset.i22 = load i64, i64* %16, align 8
  %17 = bitcast %"class.std::basic_ostream"* %call2.i to i8*
  %add.ptr.i23 = getelementptr inbounds i8, i8* %17, i64 %vbase.offset.i22
  %_M_ctype.i.i24 = getelementptr inbounds i8, i8* %add.ptr.i23, i64 240
  %18 = bitcast i8* %_M_ctype.i.i24 to %"class.std::ctype"**
  %19 = load %"class.std::ctype"*, %"class.std::ctype"** %18, align 8, !tbaa !41
  %tobool.i.i.i25 = icmp eq %"class.std::ctype"* %19, null
  br i1 %tobool.i.i.i25, label %if.then.i.i.i26, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i29

if.then.i.i.i26:                                  ; preds = %if.end
  call void @_ZSt16__throw_bad_castv() #21
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i29: ; preds = %if.end
  %_M_widen_ok.i.i.i27 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %19, i64 0, i32 8
  %20 = load i8, i8* %_M_widen_ok.i.i.i27, align 8, !tbaa !43
  %tobool.i3.i.i28 = icmp eq i8 %20, 0
  br i1 %tobool.i3.i.i28, label %if.end.i.i.i35, label %if.then.i4.i.i31

if.then.i4.i.i31:                                 ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i29
  %arrayidx.i.i.i30 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %19, i64 0, i32 9, i64 10
  %21 = load i8, i8* %arrayidx.i.i.i30, align 1, !tbaa !22
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit39

if.end.i.i.i35:                                   ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i29
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull %19) #2
  %22 = bitcast %"class.std::ctype"* %19 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i32 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %22, align 8, !tbaa !32
  %vfn.i.i.i33 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i32, i64 6
  %23 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i33, align 8
  %call.i.i.i34 = call signext i8 %23(%"class.std::ctype"* nonnull %19, i8 signext 10) #2
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit39

_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit39: ; preds = %if.then.i4.i.i31, %if.end.i.i.i35
  %retval.0.i.i.i36 = phi i8 [ %21, %if.then.i4.i.i31 ], [ %call.i.i.i34, %if.end.i.i.i35 ]
  %call1.i37 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull %call2.i, i8 signext %retval.0.i.i.i36) #2
  %call.i.i38 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull %call1.i37) #2
  %cmp19.i = icmp sgt i64 %n, 0
  br i1 %cmp19.i, label %while.body.i.preheader, label %_ZN7benchIO18writeArrayToStreamIiEEvRSt14basic_ofstreamIcSt11char_traitsIcEEPT_l.exit

while.body.i.preheader:                           ; preds = %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit39
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i.preheader, %while.body.i
  %offset.020.i = phi i64 [ %add.i, %while.body.i ], [ 0, %while.body.i.preheader ]
  %add.ptr.i40 = getelementptr inbounds i32, i32* %A, i64 %offset.020.i
  %sub.i = sub nsw i64 %n, %offset.020.i
  %cmp.i.i = icmp slt i64 %sub.i, 1000000
  %.sroa.speculated.i = select i1 %cmp.i.i, i64 %sub.i, i64 1000000
  %call1.i41 = call { i8*, i64 } @_ZN7benchIO13arrayToStringIiEE4_seqIcEPT_l(i32* %add.ptr.i40, i64 %.sroa.speculated.i) #2
  %24 = extractvalue { i8*, i64 } %call1.i41, 0
  %25 = extractvalue { i8*, i64 } %call1.i41, 1
  %call4.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"* nonnull %12, i8* %24, i64 %25) #2
  call void @free(i8* %24) #2
  %add.i = add nuw nsw i64 %offset.020.i, 1000000
  %cmp.i = icmp slt i64 %add.i, %n
  br i1 %cmp.i, label %while.body.i, label %_ZN7benchIO18writeArrayToStreamIiEEvRSt14basic_ofstreamIcSt11char_traitsIcEEPT_l.exit

_ZN7benchIO18writeArrayToStreamIiEEvRSt14basic_ofstreamIcSt11char_traitsIcEEPT_l.exit: ; preds = %while.body.i, %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit39
  %_M_filebuf.i = getelementptr inbounds %"class.std::basic_ofstream", %"class.std::basic_ofstream"* %file, i64 0, i32 1
  %call.i = call %"class.std::basic_filebuf"* @_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv(%"class.std::basic_filebuf"* nonnull %_M_filebuf.i) #2
  %tobool.i42 = icmp eq %"class.std::basic_filebuf"* %call.i, null
  br i1 %tobool.i42, label %if.then.i49, label %cleanup

if.then.i49:                                      ; preds = %_ZN7benchIO18writeArrayToStreamIiEEvRSt14basic_ofstreamIcSt11char_traitsIcEEPT_l.exit
  %26 = bitcast %"class.std::basic_ofstream"* %file to i8**
  %vtable.i43 = load i8*, i8** %26, align 8, !tbaa !32
  %vbase.offset.ptr.i44 = getelementptr i8, i8* %vtable.i43, i64 -24
  %27 = bitcast i8* %vbase.offset.ptr.i44 to i64*
  %vbase.offset.i45 = load i64, i64* %27, align 8
  %add.ptr.i46 = getelementptr inbounds i8, i8* %0, i64 %vbase.offset.i45
  %28 = bitcast i8* %add.ptr.i46 to %"class.std::basic_ios"*
  %_M_streambuf_state.i.i.i47 = getelementptr inbounds i8, i8* %add.ptr.i46, i64 32
  %29 = bitcast i8* %_M_streambuf_state.i.i.i47 to i32*
  %30 = load i32, i32* %29, align 8, !tbaa !34
  %or.i.i.i48 = or i32 %30, 4
  call void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(%"class.std::basic_ios"* %28, i32 %or.i.i.i48) #2
  br label %cleanup

cleanup:                                          ; preds = %if.then.i49, %_ZN7benchIO18writeArrayToStreamIiEEvRSt14basic_ofstreamIcSt11char_traitsIcEEPT_l.exit, %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
  %_M_filebuf.i.i.pre-phi = phi %"class.std::basic_filebuf"* [ %_M_filebuf.i, %if.then.i49 ], [ %_M_filebuf.i, %_ZN7benchIO18writeArrayToStreamIiEEvRSt14basic_ofstreamIcSt11char_traitsIcEEPT_l.exit ], [ %.pre, %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit ]
  %retval.0 = phi i32 [ 0, %if.then.i49 ], [ 0, %_ZN7benchIO18writeArrayToStreamIiEEvRSt14basic_ofstreamIcSt11char_traitsIcEEPT_l.exit ], [ 1, %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit ]
  %31 = load i64, i64* bitcast ([4 x i8*]* @_ZTTSt14basic_ofstreamIcSt11char_traitsIcEE to i64*), align 8
  %32 = bitcast %"class.std::basic_ofstream"* %file to i64*
  store i64 %31, i64* %32, align 8, !tbaa !32
  %33 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTSt14basic_ofstreamIcSt11char_traitsIcEE, i64 0, i64 3) to i64*), align 8
  %vtable.cast.i.i = inttoptr i64 %31 to i8*
  %vbase.offset.ptr.i.i = getelementptr i8, i8* %vtable.cast.i.i, i64 -24
  %34 = bitcast i8* %vbase.offset.ptr.i.i to i64*
  %vbase.offset.i.i = load i64, i64* %34, align 8
  %add.ptr.i.i = getelementptr inbounds i8, i8* %0, i64 %vbase.offset.i.i
  %35 = bitcast i8* %add.ptr.i.i to i64*
  store i64 %33, i64* %35, align 8, !tbaa !32
  %36 = getelementptr inbounds %"class.std::basic_ofstream", %"class.std::basic_ofstream"* %file, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVSt13basic_filebufIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8, !tbaa !32
  %call.i.i.i = call %"class.std::basic_filebuf"* @_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv(%"class.std::basic_filebuf"* nonnull %_M_filebuf.i.i.pre-phi) #2
  call void @_ZNSt12__basic_fileIcED1Ev(%"class.std::__basic_file"* nonnull %_M_file.i.i) #2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVSt15basic_streambufIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8, !tbaa !32
  %_M_buf_locale.i.i.i.i = getelementptr inbounds %"class.std::basic_ofstream", %"class.std::basic_ofstream"* %file, i64 0, i32 1, i32 0, i32 7
  call void @_ZNSt6localeD1Ev(%"class.std::locale"* nonnull %_M_buf_locale.i.i.i.i) #2
  %37 = getelementptr inbounds %"class.std::basic_ofstream", %"class.std::basic_ofstream"* %file, i64 0, i32 2, i32 0
  call void @_ZNSt8ios_baseD2Ev(%"class.std::ios_base"* nonnull %37) #2
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %0) #2
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define linkonce_odr { i8*, i64 } @_ZN7benchIO13arrayToStringIiEE4_seqIcEPT_l(i32* %A, i64 %n) local_unnamed_addr #7 comdat {
entry:
  %0 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8139 = shl i32 %0, 3
  %mul = shl i64 %n, 3
  %call = tail call noalias i8* @malloc(i64 %mul) #2
  %1 = bitcast i8* %call to i64*
  %sub1 = add nsw i64 %n, -1
  %cmp132 = icmp sgt i64 %n, 0
  br i1 %cmp132, label %pfor.detach.preheader, label %sync.continue

pfor.detach.preheader:                            ; preds = %entry
  %2 = zext i32 %__cilkrts_wc8139 to i64
  %3 = add i64 %n, -2
  %4 = add i64 %3, %2
  %5 = udiv i64 %4, %2
  %6 = icmp ult i64 %5, 2048
  %7 = select i1 %6, i64 %5, i64 2048
  tail call fastcc void @_ZN7benchIO13arrayToStringIiEE4_seqIcEPT_l_pfor.detach.ls(i64 0, i64 %sub1, i64 %7, i64* %1)
  br label %sync.continue

sync.continue:                                    ; preds = %entry, %pfor.detach.preheader
  %call.i = tail call i64 @_ZN8sequence4scanIllN5utils4addFIlEENS_4getAIllEEEET_PS6_T0_S8_T1_T2_S6_bb(i64* %1, i64 0, i64 %n, i64* %1, i64 0, i1 zeroext false, i1 zeroext false) #2
  %call9 = tail call noalias i8* @malloc(i64 %call.i) #2
  %sub15 = add i64 %call.i, -1
  %cmp19130 = icmp sgt i64 %call.i, 0
  br i1 %cmp19130, label %pfor.detach21.preheader, label %sync.continue30

pfor.detach21.preheader:                          ; preds = %sync.continue
  %8 = zext i32 %__cilkrts_wc8139 to i64
  %9 = add i64 %call.i, -2
  %10 = add i64 %9, %8
  %11 = udiv i64 %10, %8
  %12 = icmp ult i64 %11, 2048
  %13 = select i1 %12, i64 %11, i64 2048
  tail call fastcc void @_ZN7benchIO13arrayToStringIiEE4_seqIcEPT_l_pfor.detach21.ls(i64 0, i64 %sub15, i64 %13, i8* %call9)
  br label %sync.continue30

sync.continue30:                                  ; preds = %sync.continue, %pfor.detach21.preheader
  %cmp42128 = icmp sgt i64 %n, 1
  br i1 %cmp42128, label %pfor.detach44.preheader, label %sync.continue59

pfor.detach44.preheader:                          ; preds = %sync.continue30
  %14 = add i64 %n, -2
  %15 = zext i32 %__cilkrts_wc8139 to i64
  %16 = add i64 %n, -3
  %17 = add i64 %16, %15
  %18 = udiv i64 %17, %15
  %19 = icmp ult i64 %18, 2048
  %20 = select i1 %19, i64 %18, i64 2048
  tail call fastcc void @_ZN7benchIO13arrayToStringIiEE4_seqIcEPT_l_pfor.detach44.ls(i64 0, i64 %14, i64 %20, i64* %1, i8* %call9, i32* %A)
  br label %sync.continue59

sync.continue59:                                  ; preds = %sync.continue30, %pfor.detach44.preheader
  %arrayidx62 = getelementptr inbounds i64, i64* %1, i64 %sub1
  %21 = load i64, i64* %arrayidx62, align 8, !tbaa !49
  %add.ptr63 = getelementptr inbounds i8, i8* %call9, i64 %21
  %arrayidx65 = getelementptr inbounds i32, i32* %A, i64 %sub1
  %22 = load i32, i32* %arrayidx65, align 4, !tbaa !59
  %call.i127 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr63, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0), i32 %22) #2
  %arrayidx67 = getelementptr inbounds i8, i8* %call9, i64 %sub15
  store i8 10, i8* %arrayidx67, align 1, !tbaa !22
  tail call void @free(i8* %call) #2
  %add68 = add nsw i64 %call.i, 1
  %call70 = tail call noalias i8* @malloc(i64 %add68) #2
  %cmp.i = icmp slt i64 %call.i, 2048
  br i1 %cmp.i, label %if.then.i, label %pfor.detach.lr.ph.i

if.then.i:                                        ; preds = %sync.continue59
  br i1 %cmp19130, label %for.body.i.i.preheader, label %_ZN8sequence6filterIclN7benchIO7notZeroEEET0_PT_S5_S3_T1_.exit

for.body.i.i.preheader:                           ; preds = %if.then.i
  %xtraiter = and i64 %call.i, 3
  %23 = icmp ult i64 %sub15, 3
  br i1 %23, label %_ZN8sequence6filterIclN7benchIO7notZeroEEET0_PT_S5_S3_T1_.exit.loopexit.unr-lcssa, label %for.body.i.i.preheader.new

for.body.i.i.preheader.new:                       ; preds = %for.body.i.i.preheader
  %unroll_iter = sub i64 %call.i, %xtraiter
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.3, %for.body.i.i.preheader.new
  %i.013.i.i = phi i64 [ 0, %for.body.i.i.preheader.new ], [ %inc3.i.i.3, %for.inc.i.i.3 ]
  %k.012.i.i = phi i64 [ 0, %for.body.i.i.preheader.new ], [ %k.1.i.i.3, %for.inc.i.i.3 ]
  %niter = phi i64 [ %unroll_iter, %for.body.i.i.preheader.new ], [ %niter.nsub.3, %for.inc.i.i.3 ]
  %arrayidx.i.i = getelementptr inbounds i8, i8* %call9, i64 %i.013.i.i
  %24 = load i8, i8* %arrayidx.i.i, align 1, !tbaa !22
  %cmp.i.i.i = icmp sgt i8 %24, 0
  br i1 %cmp.i.i.i, label %if.then.i.i, label %for.inc.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  %inc.i.i = add nsw i64 %k.012.i.i, 1
  %arrayidx2.i.i = getelementptr inbounds i8, i8* %call70, i64 %k.012.i.i
  store i8 %24, i8* %arrayidx2.i.i, align 1, !tbaa !22
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.then.i.i, %for.body.i.i
  %k.1.i.i = phi i64 [ %inc.i.i, %if.then.i.i ], [ %k.012.i.i, %for.body.i.i ]
  %inc3.i.i = or i64 %i.013.i.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds i8, i8* %call9, i64 %inc3.i.i
  %25 = load i8, i8* %arrayidx.i.i.1, align 1, !tbaa !22
  %cmp.i.i.i.1 = icmp sgt i8 %25, 0
  br i1 %cmp.i.i.i.1, label %if.then.i.i.1, label %for.inc.i.i.1

pfor.detach.lr.ph.i:                              ; preds = %sync.continue59
  %call1.i = tail call noalias i8* @malloc(i64 %call.i) #2
  %26 = zext i32 %__cilkrts_wc8139 to i64
  %27 = add i64 %call.i, -2
  %28 = add i64 %27, %26
  %29 = udiv i64 %28, %26
  %30 = icmp ult i64 %29, 2048
  %31 = select i1 %30, i64 %29, i64 2048
  tail call fastcc void @_ZN7benchIO13arrayToStringIiEE4_seqIcEPT_l_pfor.detach.i.ls(i64 0, i64 %sub15, i64 %31, i8* nonnull %call9, i8* %call1.i)
  %call.i.i = tail call { i8*, i64 } @_ZN8sequence4packIclNS_4getAIclEEEE4_seqIT_EPS4_PbT0_S8_T1_(i8* %call70, i8* %call1.i, i64 0, i64 %call.i, i8* nonnull %call9) #2
  %32 = extractvalue { i8*, i64 } %call.i.i, 1
  tail call void @free(i8* %call1.i) #2
  br label %_ZN8sequence6filterIclN7benchIO7notZeroEEET0_PT_S5_S3_T1_.exit

_ZN8sequence6filterIclN7benchIO7notZeroEEET0_PT_S5_S3_T1_.exit.loopexit.unr-lcssa: ; preds = %for.inc.i.i.3, %for.body.i.i.preheader
  %k.1.i.i.lcssa.ph = phi i64 [ undef, %for.body.i.i.preheader ], [ %k.1.i.i.3, %for.inc.i.i.3 ]
  %i.013.i.i.unr = phi i64 [ 0, %for.body.i.i.preheader ], [ %inc3.i.i.3, %for.inc.i.i.3 ]
  %k.012.i.i.unr = phi i64 [ 0, %for.body.i.i.preheader ], [ %k.1.i.i.3, %for.inc.i.i.3 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %_ZN8sequence6filterIclN7benchIO7notZeroEEET0_PT_S5_S3_T1_.exit, label %for.body.i.i.epil.preheader

for.body.i.i.epil.preheader:                      ; preds = %_ZN8sequence6filterIclN7benchIO7notZeroEEET0_PT_S5_S3_T1_.exit.loopexit.unr-lcssa
  br label %for.body.i.i.epil

for.body.i.i.epil:                                ; preds = %for.body.i.i.epil.preheader, %for.inc.i.i.epil
  %i.013.i.i.epil = phi i64 [ %inc3.i.i.epil, %for.inc.i.i.epil ], [ %i.013.i.i.unr, %for.body.i.i.epil.preheader ]
  %k.012.i.i.epil = phi i64 [ %k.1.i.i.epil, %for.inc.i.i.epil ], [ %k.012.i.i.unr, %for.body.i.i.epil.preheader ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.inc.i.i.epil ], [ %xtraiter, %for.body.i.i.epil.preheader ]
  %arrayidx.i.i.epil = getelementptr inbounds i8, i8* %call9, i64 %i.013.i.i.epil
  %33 = load i8, i8* %arrayidx.i.i.epil, align 1, !tbaa !22
  %cmp.i.i.i.epil = icmp sgt i8 %33, 0
  br i1 %cmp.i.i.i.epil, label %if.then.i.i.epil, label %for.inc.i.i.epil

if.then.i.i.epil:                                 ; preds = %for.body.i.i.epil
  %inc.i.i.epil = add nsw i64 %k.012.i.i.epil, 1
  %arrayidx2.i.i.epil = getelementptr inbounds i8, i8* %call70, i64 %k.012.i.i.epil
  store i8 %33, i8* %arrayidx2.i.i.epil, align 1, !tbaa !22
  br label %for.inc.i.i.epil

for.inc.i.i.epil:                                 ; preds = %if.then.i.i.epil, %for.body.i.i.epil
  %k.1.i.i.epil = phi i64 [ %inc.i.i.epil, %if.then.i.i.epil ], [ %k.012.i.i.epil, %for.body.i.i.epil ]
  %inc3.i.i.epil = add nuw nsw i64 %i.013.i.i.epil, 1
  %epil.iter.sub = add nsw i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %_ZN8sequence6filterIclN7benchIO7notZeroEEET0_PT_S5_S3_T1_.exit, label %for.body.i.i.epil, !llvm.loop !155

_ZN8sequence6filterIclN7benchIO7notZeroEEET0_PT_S5_S3_T1_.exit: ; preds = %for.inc.i.i.epil, %_ZN8sequence6filterIclN7benchIO7notZeroEEET0_PT_S5_S3_T1_.exit.loopexit.unr-lcssa, %if.then.i, %pfor.detach.lr.ph.i
  %retval.0.i = phi i64 [ %32, %pfor.detach.lr.ph.i ], [ 0, %if.then.i ], [ %k.1.i.i.lcssa.ph, %_ZN8sequence6filterIclN7benchIO7notZeroEEET0_PT_S5_S3_T1_.exit.loopexit.unr-lcssa ], [ %k.1.i.i.epil, %for.inc.i.i.epil ]
  %arrayidx73 = getelementptr inbounds i8, i8* %call70, i64 %retval.0.i
  store i8 0, i8* %arrayidx73, align 1, !tbaa !22
  tail call void @free(i8* nonnull %call9) #2
  %.fca.0.insert = insertvalue { i8*, i64 } undef, i8* %call70, 0
  %.fca.1.insert = insertvalue { i8*, i64 } %.fca.0.insert, i64 %retval.0.i, 1
  ret { i8*, i64 } %.fca.1.insert

if.then.i.i.1:                                    ; preds = %for.inc.i.i
  %inc.i.i.1 = add nsw i64 %k.1.i.i, 1
  %arrayidx2.i.i.1 = getelementptr inbounds i8, i8* %call70, i64 %k.1.i.i
  store i8 %25, i8* %arrayidx2.i.i.1, align 1, !tbaa !22
  br label %for.inc.i.i.1

for.inc.i.i.1:                                    ; preds = %if.then.i.i.1, %for.inc.i.i
  %k.1.i.i.1 = phi i64 [ %inc.i.i.1, %if.then.i.i.1 ], [ %k.1.i.i, %for.inc.i.i ]
  %inc3.i.i.1 = or i64 %i.013.i.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds i8, i8* %call9, i64 %inc3.i.i.1
  %34 = load i8, i8* %arrayidx.i.i.2, align 1, !tbaa !22
  %cmp.i.i.i.2 = icmp sgt i8 %34, 0
  br i1 %cmp.i.i.i.2, label %if.then.i.i.2, label %for.inc.i.i.2

if.then.i.i.2:                                    ; preds = %for.inc.i.i.1
  %inc.i.i.2 = add nsw i64 %k.1.i.i.1, 1
  %arrayidx2.i.i.2 = getelementptr inbounds i8, i8* %call70, i64 %k.1.i.i.1
  store i8 %34, i8* %arrayidx2.i.i.2, align 1, !tbaa !22
  br label %for.inc.i.i.2

for.inc.i.i.2:                                    ; preds = %if.then.i.i.2, %for.inc.i.i.1
  %k.1.i.i.2 = phi i64 [ %inc.i.i.2, %if.then.i.i.2 ], [ %k.1.i.i.1, %for.inc.i.i.1 ]
  %inc3.i.i.2 = or i64 %i.013.i.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds i8, i8* %call9, i64 %inc3.i.i.2
  %35 = load i8, i8* %arrayidx.i.i.3, align 1, !tbaa !22
  %cmp.i.i.i.3 = icmp sgt i8 %35, 0
  br i1 %cmp.i.i.i.3, label %if.then.i.i.3, label %for.inc.i.i.3

if.then.i.i.3:                                    ; preds = %for.inc.i.i.2
  %inc.i.i.3 = add nsw i64 %k.1.i.i.2, 1
  %arrayidx2.i.i.3 = getelementptr inbounds i8, i8* %call70, i64 %k.1.i.i.2
  store i8 %35, i8* %arrayidx2.i.i.3, align 1, !tbaa !22
  br label %for.inc.i.i.3

for.inc.i.i.3:                                    ; preds = %if.then.i.i.3, %for.inc.i.i.2
  %k.1.i.i.3 = phi i64 [ %inc.i.i.3, %if.then.i.i.3 ], [ %k.1.i.i.2, %for.inc.i.i.2 ]
  %inc3.i.i.3 = add nuw nsw i64 %i.013.i.i, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %_ZN8sequence6filterIclN7benchIO7notZeroEEET0_PT_S5_S3_T1_.exit.loopexit.unr-lcssa, label %for.body.i.i
}

; Function Attrs: nounwind
declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define linkonce_odr { i8*, i64 } @_ZN8sequence4packIclNS_4getAIclEEEE4_seqIT_EPS4_PbT0_S8_T1_(i8* %Out, i8* %Fl, i64 %s, i64 %e, i8* %f.coerce) local_unnamed_addr #7 comdat {
entry:
  %sub = sub i64 %e, %s
  %sub1 = add nsw i64 %sub, -1
  %div = sdiv i64 %sub1, 2048
  %add = add nsw i64 %div, 1
  %cmp = icmp slt i64 %sub, 2049
  br i1 %cmp, label %if.then, label %pfor.detach.lr.ph

if.then:                                          ; preds = %entry
  %cmp.i = icmp eq i8* %Out, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.then
  %add.ptr.i = getelementptr inbounds i8, i8* %Fl, i64 %s
  %cmp.i.i = icmp sgt i64 %sub, 127
  %and.i.i = and i64 %sub, 511
  %cmp1.i.i = icmp eq i64 %and.i.i, 0
  %or.cond.i.i = and i1 %cmp.i.i, %cmp1.i.i
  br i1 %or.cond.i.i, label %land.lhs.true2.i.i, label %if.else.i.i

land.lhs.true2.i.i:                               ; preds = %if.then.i
  %0 = ptrtoint i8* %add.ptr.i to i64
  %and3.i.i = and i64 %0, 3
  %cmp4.i.i = icmp eq i64 %and3.i.i, 0
  br i1 %cmp4.i.i, label %if.then.i.i, label %vector.ph349

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  %shr75.i.i = lshr i64 %sub, 9
  %cmp562.i.i = icmp sgt i64 %sub, 511
  br i1 %cmp562.i.i, label %for.body.lr.ph.i.i, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i

for.body.lr.ph.i.i:                               ; preds = %if.then.i.i
  %1 = bitcast i8* %add.ptr.i to i32*
  br label %vector.ph381

vector.ph381:                                     ; preds = %for.body.lr.ph.i.i, %vector.ph381
  %indvars.iv71.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next72.i.i, %vector.ph381 ]
  %IFl.064.i.i = phi i32* [ %1, %for.body.lr.ph.i.i ], [ %add.ptr.i.i, %vector.ph381 ]
  %r.063.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %add21.i.i, %vector.ph381 ]
  %2 = bitcast i32* %IFl.064.i.i to <8 x i32>*
  %wide.load396 = load <8 x i32>, <8 x i32>* %2, align 4, !tbaa !59
  %3 = getelementptr i32, i32* %IFl.064.i.i, i64 8
  %4 = bitcast i32* %3 to <8 x i32>*
  %wide.load397 = load <8 x i32>, <8 x i32>* %4, align 4, !tbaa !59
  %5 = getelementptr i32, i32* %IFl.064.i.i, i64 16
  %6 = bitcast i32* %5 to <8 x i32>*
  %wide.load398 = load <8 x i32>, <8 x i32>* %6, align 4, !tbaa !59
  %7 = getelementptr i32, i32* %IFl.064.i.i, i64 24
  %8 = bitcast i32* %7 to <8 x i32>*
  %wide.load399 = load <8 x i32>, <8 x i32>* %8, align 4, !tbaa !59
  %9 = getelementptr inbounds i32, i32* %IFl.064.i.i, i64 32
  %10 = bitcast i32* %9 to <8 x i32>*
  %wide.load396.1 = load <8 x i32>, <8 x i32>* %10, align 4, !tbaa !59
  %11 = getelementptr i32, i32* %IFl.064.i.i, i64 40
  %12 = bitcast i32* %11 to <8 x i32>*
  %wide.load397.1 = load <8 x i32>, <8 x i32>* %12, align 4, !tbaa !59
  %13 = getelementptr i32, i32* %IFl.064.i.i, i64 48
  %14 = bitcast i32* %13 to <8 x i32>*
  %wide.load398.1 = load <8 x i32>, <8 x i32>* %14, align 4, !tbaa !59
  %15 = getelementptr i32, i32* %IFl.064.i.i, i64 56
  %16 = bitcast i32* %15 to <8 x i32>*
  %wide.load399.1 = load <8 x i32>, <8 x i32>* %16, align 4, !tbaa !59
  %17 = getelementptr inbounds i32, i32* %IFl.064.i.i, i64 64
  %18 = bitcast i32* %17 to <8 x i32>*
  %wide.load396.2 = load <8 x i32>, <8 x i32>* %18, align 4, !tbaa !59
  %19 = getelementptr i32, i32* %IFl.064.i.i, i64 72
  %20 = bitcast i32* %19 to <8 x i32>*
  %wide.load397.2 = load <8 x i32>, <8 x i32>* %20, align 4, !tbaa !59
  %21 = getelementptr i32, i32* %IFl.064.i.i, i64 80
  %22 = bitcast i32* %21 to <8 x i32>*
  %wide.load398.2 = load <8 x i32>, <8 x i32>* %22, align 4, !tbaa !59
  %23 = getelementptr i32, i32* %IFl.064.i.i, i64 88
  %24 = bitcast i32* %23 to <8 x i32>*
  %wide.load399.2 = load <8 x i32>, <8 x i32>* %24, align 4, !tbaa !59
  %25 = getelementptr inbounds i32, i32* %IFl.064.i.i, i64 96
  %26 = bitcast i32* %25 to <8 x i32>*
  %wide.load396.3 = load <8 x i32>, <8 x i32>* %26, align 4, !tbaa !59
  %27 = getelementptr i32, i32* %IFl.064.i.i, i64 104
  %28 = bitcast i32* %27 to <8 x i32>*
  %wide.load397.3 = load <8 x i32>, <8 x i32>* %28, align 4, !tbaa !59
  %29 = getelementptr i32, i32* %IFl.064.i.i, i64 112
  %30 = bitcast i32* %29 to <8 x i32>*
  %wide.load398.3 = load <8 x i32>, <8 x i32>* %30, align 4, !tbaa !59
  %31 = getelementptr i32, i32* %IFl.064.i.i, i64 120
  %32 = bitcast i32* %31 to <8 x i32>*
  %wide.load399.3 = load <8 x i32>, <8 x i32>* %32, align 4, !tbaa !59
  %33 = add <8 x i32> %wide.load397, %wide.load396
  %34 = add <8 x i32> %33, %wide.load398
  %35 = add <8 x i32> %34, %wide.load399
  %36 = add <8 x i32> %35, %wide.load396.1
  %37 = add <8 x i32> %36, %wide.load397.1
  %38 = add <8 x i32> %37, %wide.load398.1
  %bin.rdx400 = add <8 x i32> %38, %wide.load399.1
  %39 = add <8 x i32> %bin.rdx400, %wide.load396.2
  %40 = add <8 x i32> %39, %wide.load397.2
  %41 = add <8 x i32> %40, %wide.load398.2
  %bin.rdx401 = add <8 x i32> %41, %wide.load399.2
  %42 = add <8 x i32> %bin.rdx401, %wide.load396.3
  %43 = add <8 x i32> %42, %wide.load397.3
  %44 = add <8 x i32> %43, %wide.load398.3
  %bin.rdx402 = add <8 x i32> %44, %wide.load399.3
  %rdx.shuf403 = shufflevector <8 x i32> %bin.rdx402, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx404 = add <8 x i32> %rdx.shuf403, %bin.rdx402
  %rdx.shuf405 = shufflevector <8 x i32> %bin.rdx404, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx406 = add <8 x i32> %rdx.shuf405, %bin.rdx404
  %rdx.shuf407 = shufflevector <8 x i32> %bin.rdx406, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx408 = add <8 x i32> %rdx.shuf407, %bin.rdx406
  %45 = extractelement <8 x i32> %bin.rdx408, i32 0
  %and10.i.i = and i32 %45, 255
  %46 = lshr i32 %45, 8
  %and12.i.i = and i32 %46, 255
  %47 = lshr i32 %45, 16
  %and15.i.i = and i32 %47, 255
  %48 = lshr i32 %45, 24
  %add13.i.i = add nuw nsw i32 %48, %and10.i.i
  %add16.i.i = add nuw nsw i32 %add13.i.i, %and12.i.i
  %add19.i.i = add nuw nsw i32 %add16.i.i, %and15.i.i
  %49 = zext i32 %add19.i.i to i64
  %add21.i.i = add nuw nsw i64 %r.063.i.i, %49
  %add.ptr.i.i = getelementptr inbounds i32, i32* %IFl.064.i.i, i64 128
  %indvars.iv.next72.i.i = add nuw nsw i64 %indvars.iv71.i.i, 1
  %cmp5.i.i = icmp ugt i64 %shr75.i.i, %indvars.iv.next72.i.i
  br i1 %cmp5.i.i, label %vector.ph381, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i

if.else.i.i:                                      ; preds = %if.then.i
  %cmp2766.i.i = icmp sgt i64 %sub, 0
  br i1 %cmp2766.i.i, label %for.body29.lr.ph.i.i, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i

for.body29.lr.ph.i.i:                             ; preds = %if.else.i.i
  %min.iters.check348 = icmp ult i64 %sub, 16
  br i1 %min.iters.check348, label %for.body29.i.i.preheader, label %vector.ph349

vector.ph349:                                     ; preds = %land.lhs.true2.i.i, %for.body29.lr.ph.i.i
  %n.vec351 = and i64 %sub, -16
  %50 = add i64 %n.vec351, -16
  %51 = lshr exact i64 %50, 4
  %52 = add nuw nsw i64 %51, 1
  %xtraiter437 = and i64 %52, 3
  %53 = icmp ult i64 %50, 48
  br i1 %53, label %middle.block346.unr-lcssa, label %vector.ph349.new

vector.ph349.new:                                 ; preds = %vector.ph349
  %unroll_iter444 = sub nsw i64 %52, %xtraiter437
  br label %vector.body345

vector.body345:                                   ; preds = %vector.body345, %vector.ph349.new
  %index352 = phi i64 [ 0, %vector.ph349.new ], [ %index.next353.3, %vector.body345 ]
  %vec.phi362 = phi <4 x i64> [ zeroinitializer, %vector.ph349.new ], [ %114, %vector.body345 ]
  %vec.phi363 = phi <4 x i64> [ zeroinitializer, %vector.ph349.new ], [ %115, %vector.body345 ]
  %vec.phi364 = phi <4 x i64> [ zeroinitializer, %vector.ph349.new ], [ %116, %vector.body345 ]
  %vec.phi365 = phi <4 x i64> [ zeroinitializer, %vector.ph349.new ], [ %117, %vector.body345 ]
  %niter445 = phi i64 [ %unroll_iter444, %vector.ph349.new ], [ %niter445.nsub.3, %vector.body345 ]
  %54 = getelementptr inbounds i8, i8* %add.ptr.i, i64 %index352
  %55 = bitcast i8* %54 to <4 x i8>*
  %wide.load366 = load <4 x i8>, <4 x i8>* %55, align 1, !tbaa !23
  %56 = getelementptr i8, i8* %54, i64 4
  %57 = bitcast i8* %56 to <4 x i8>*
  %wide.load367 = load <4 x i8>, <4 x i8>* %57, align 1, !tbaa !23
  %58 = getelementptr i8, i8* %54, i64 8
  %59 = bitcast i8* %58 to <4 x i8>*
  %wide.load368 = load <4 x i8>, <4 x i8>* %59, align 1, !tbaa !23
  %60 = getelementptr i8, i8* %54, i64 12
  %61 = bitcast i8* %60 to <4 x i8>*
  %wide.load369 = load <4 x i8>, <4 x i8>* %61, align 1, !tbaa !23
  %62 = zext <4 x i8> %wide.load366 to <4 x i64>
  %63 = zext <4 x i8> %wide.load367 to <4 x i64>
  %64 = zext <4 x i8> %wide.load368 to <4 x i64>
  %65 = zext <4 x i8> %wide.load369 to <4 x i64>
  %66 = add nuw nsw <4 x i64> %vec.phi362, %62
  %67 = add nuw nsw <4 x i64> %vec.phi363, %63
  %68 = add nuw nsw <4 x i64> %vec.phi364, %64
  %69 = add nuw nsw <4 x i64> %vec.phi365, %65
  %index.next353 = or i64 %index352, 16
  %70 = getelementptr inbounds i8, i8* %add.ptr.i, i64 %index.next353
  %71 = bitcast i8* %70 to <4 x i8>*
  %wide.load366.1 = load <4 x i8>, <4 x i8>* %71, align 1, !tbaa !23
  %72 = getelementptr i8, i8* %70, i64 4
  %73 = bitcast i8* %72 to <4 x i8>*
  %wide.load367.1 = load <4 x i8>, <4 x i8>* %73, align 1, !tbaa !23
  %74 = getelementptr i8, i8* %70, i64 8
  %75 = bitcast i8* %74 to <4 x i8>*
  %wide.load368.1 = load <4 x i8>, <4 x i8>* %75, align 1, !tbaa !23
  %76 = getelementptr i8, i8* %70, i64 12
  %77 = bitcast i8* %76 to <4 x i8>*
  %wide.load369.1 = load <4 x i8>, <4 x i8>* %77, align 1, !tbaa !23
  %78 = zext <4 x i8> %wide.load366.1 to <4 x i64>
  %79 = zext <4 x i8> %wide.load367.1 to <4 x i64>
  %80 = zext <4 x i8> %wide.load368.1 to <4 x i64>
  %81 = zext <4 x i8> %wide.load369.1 to <4 x i64>
  %82 = add nuw nsw <4 x i64> %66, %78
  %83 = add nuw nsw <4 x i64> %67, %79
  %84 = add nuw nsw <4 x i64> %68, %80
  %85 = add nuw nsw <4 x i64> %69, %81
  %index.next353.1 = or i64 %index352, 32
  %86 = getelementptr inbounds i8, i8* %add.ptr.i, i64 %index.next353.1
  %87 = bitcast i8* %86 to <4 x i8>*
  %wide.load366.2 = load <4 x i8>, <4 x i8>* %87, align 1, !tbaa !23
  %88 = getelementptr i8, i8* %86, i64 4
  %89 = bitcast i8* %88 to <4 x i8>*
  %wide.load367.2 = load <4 x i8>, <4 x i8>* %89, align 1, !tbaa !23
  %90 = getelementptr i8, i8* %86, i64 8
  %91 = bitcast i8* %90 to <4 x i8>*
  %wide.load368.2 = load <4 x i8>, <4 x i8>* %91, align 1, !tbaa !23
  %92 = getelementptr i8, i8* %86, i64 12
  %93 = bitcast i8* %92 to <4 x i8>*
  %wide.load369.2 = load <4 x i8>, <4 x i8>* %93, align 1, !tbaa !23
  %94 = zext <4 x i8> %wide.load366.2 to <4 x i64>
  %95 = zext <4 x i8> %wide.load367.2 to <4 x i64>
  %96 = zext <4 x i8> %wide.load368.2 to <4 x i64>
  %97 = zext <4 x i8> %wide.load369.2 to <4 x i64>
  %98 = add nuw nsw <4 x i64> %82, %94
  %99 = add nuw nsw <4 x i64> %83, %95
  %100 = add nuw nsw <4 x i64> %84, %96
  %101 = add nuw nsw <4 x i64> %85, %97
  %index.next353.2 = or i64 %index352, 48
  %102 = getelementptr inbounds i8, i8* %add.ptr.i, i64 %index.next353.2
  %103 = bitcast i8* %102 to <4 x i8>*
  %wide.load366.3 = load <4 x i8>, <4 x i8>* %103, align 1, !tbaa !23
  %104 = getelementptr i8, i8* %102, i64 4
  %105 = bitcast i8* %104 to <4 x i8>*
  %wide.load367.3 = load <4 x i8>, <4 x i8>* %105, align 1, !tbaa !23
  %106 = getelementptr i8, i8* %102, i64 8
  %107 = bitcast i8* %106 to <4 x i8>*
  %wide.load368.3 = load <4 x i8>, <4 x i8>* %107, align 1, !tbaa !23
  %108 = getelementptr i8, i8* %102, i64 12
  %109 = bitcast i8* %108 to <4 x i8>*
  %wide.load369.3 = load <4 x i8>, <4 x i8>* %109, align 1, !tbaa !23
  %110 = zext <4 x i8> %wide.load366.3 to <4 x i64>
  %111 = zext <4 x i8> %wide.load367.3 to <4 x i64>
  %112 = zext <4 x i8> %wide.load368.3 to <4 x i64>
  %113 = zext <4 x i8> %wide.load369.3 to <4 x i64>
  %114 = add nuw nsw <4 x i64> %98, %110
  %115 = add nuw nsw <4 x i64> %99, %111
  %116 = add nuw nsw <4 x i64> %100, %112
  %117 = add nuw nsw <4 x i64> %101, %113
  %index.next353.3 = add i64 %index352, 64
  %niter445.nsub.3 = add i64 %niter445, -4
  %niter445.ncmp.3 = icmp eq i64 %niter445.nsub.3, 0
  br i1 %niter445.ncmp.3, label %middle.block346.unr-lcssa, label %vector.body345, !llvm.loop !156

middle.block346.unr-lcssa:                        ; preds = %vector.body345, %vector.ph349
  %.lcssa419.ph = phi <4 x i64> [ undef, %vector.ph349 ], [ %114, %vector.body345 ]
  %.lcssa418.ph = phi <4 x i64> [ undef, %vector.ph349 ], [ %115, %vector.body345 ]
  %.lcssa417.ph = phi <4 x i64> [ undef, %vector.ph349 ], [ %116, %vector.body345 ]
  %.lcssa416.ph = phi <4 x i64> [ undef, %vector.ph349 ], [ %117, %vector.body345 ]
  %index352.unr = phi i64 [ 0, %vector.ph349 ], [ %index.next353.3, %vector.body345 ]
  %vec.phi362.unr = phi <4 x i64> [ zeroinitializer, %vector.ph349 ], [ %114, %vector.body345 ]
  %vec.phi363.unr = phi <4 x i64> [ zeroinitializer, %vector.ph349 ], [ %115, %vector.body345 ]
  %vec.phi364.unr = phi <4 x i64> [ zeroinitializer, %vector.ph349 ], [ %116, %vector.body345 ]
  %vec.phi365.unr = phi <4 x i64> [ zeroinitializer, %vector.ph349 ], [ %117, %vector.body345 ]
  %lcmp.mod439 = icmp eq i64 %xtraiter437, 0
  br i1 %lcmp.mod439, label %middle.block346, label %vector.body345.epil.preheader

vector.body345.epil.preheader:                    ; preds = %middle.block346.unr-lcssa
  br label %vector.body345.epil

vector.body345.epil:                              ; preds = %vector.body345.epil.preheader, %vector.body345.epil
  %index352.epil = phi i64 [ %index.next353.epil, %vector.body345.epil ], [ %index352.unr, %vector.body345.epil.preheader ]
  %vec.phi362.epil = phi <4 x i64> [ %130, %vector.body345.epil ], [ %vec.phi362.unr, %vector.body345.epil.preheader ]
  %vec.phi363.epil = phi <4 x i64> [ %131, %vector.body345.epil ], [ %vec.phi363.unr, %vector.body345.epil.preheader ]
  %vec.phi364.epil = phi <4 x i64> [ %132, %vector.body345.epil ], [ %vec.phi364.unr, %vector.body345.epil.preheader ]
  %vec.phi365.epil = phi <4 x i64> [ %133, %vector.body345.epil ], [ %vec.phi365.unr, %vector.body345.epil.preheader ]
  %epil.iter438 = phi i64 [ %epil.iter438.sub, %vector.body345.epil ], [ %xtraiter437, %vector.body345.epil.preheader ]
  %118 = getelementptr inbounds i8, i8* %add.ptr.i, i64 %index352.epil
  %119 = bitcast i8* %118 to <4 x i8>*
  %wide.load366.epil = load <4 x i8>, <4 x i8>* %119, align 1, !tbaa !23
  %120 = getelementptr i8, i8* %118, i64 4
  %121 = bitcast i8* %120 to <4 x i8>*
  %wide.load367.epil = load <4 x i8>, <4 x i8>* %121, align 1, !tbaa !23
  %122 = getelementptr i8, i8* %118, i64 8
  %123 = bitcast i8* %122 to <4 x i8>*
  %wide.load368.epil = load <4 x i8>, <4 x i8>* %123, align 1, !tbaa !23
  %124 = getelementptr i8, i8* %118, i64 12
  %125 = bitcast i8* %124 to <4 x i8>*
  %wide.load369.epil = load <4 x i8>, <4 x i8>* %125, align 1, !tbaa !23
  %126 = zext <4 x i8> %wide.load366.epil to <4 x i64>
  %127 = zext <4 x i8> %wide.load367.epil to <4 x i64>
  %128 = zext <4 x i8> %wide.load368.epil to <4 x i64>
  %129 = zext <4 x i8> %wide.load369.epil to <4 x i64>
  %130 = add nuw nsw <4 x i64> %vec.phi362.epil, %126
  %131 = add nuw nsw <4 x i64> %vec.phi363.epil, %127
  %132 = add nuw nsw <4 x i64> %vec.phi364.epil, %128
  %133 = add nuw nsw <4 x i64> %vec.phi365.epil, %129
  %index.next353.epil = add i64 %index352.epil, 16
  %epil.iter438.sub = add nsw i64 %epil.iter438, -1
  %epil.iter438.cmp = icmp eq i64 %epil.iter438.sub, 0
  br i1 %epil.iter438.cmp, label %middle.block346, label %vector.body345.epil, !llvm.loop !157

middle.block346:                                  ; preds = %vector.body345.epil, %middle.block346.unr-lcssa
  %.lcssa419 = phi <4 x i64> [ %.lcssa419.ph, %middle.block346.unr-lcssa ], [ %130, %vector.body345.epil ]
  %.lcssa418 = phi <4 x i64> [ %.lcssa418.ph, %middle.block346.unr-lcssa ], [ %131, %vector.body345.epil ]
  %.lcssa417 = phi <4 x i64> [ %.lcssa417.ph, %middle.block346.unr-lcssa ], [ %132, %vector.body345.epil ]
  %.lcssa416 = phi <4 x i64> [ %.lcssa416.ph, %middle.block346.unr-lcssa ], [ %133, %vector.body345.epil ]
  %bin.rdx370 = add nuw <4 x i64> %.lcssa418, %.lcssa419
  %bin.rdx371 = add <4 x i64> %bin.rdx370, %.lcssa417
  %bin.rdx372 = add <4 x i64> %bin.rdx371, %.lcssa416
  %rdx.shuf373 = shufflevector <4 x i64> %bin.rdx372, <4 x i64> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %bin.rdx374 = add <4 x i64> %rdx.shuf373, %bin.rdx372
  %rdx.shuf375 = shufflevector <4 x i64> %bin.rdx374, <4 x i64> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %bin.rdx376 = add <4 x i64> %rdx.shuf375, %bin.rdx374
  %134 = extractelement <4 x i64> %bin.rdx376, i32 0
  %cmp.n355 = icmp eq i64 %sub, %n.vec351
  br i1 %cmp.n355, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i, label %for.body29.i.i.preheader

for.body29.i.i.preheader:                         ; preds = %middle.block346, %for.body29.lr.ph.i.i
  %j25.068.i.i.ph = phi i64 [ %n.vec351, %middle.block346 ], [ 0, %for.body29.lr.ph.i.i ]
  %r.167.i.i.ph = phi i64 [ %134, %middle.block346 ], [ 0, %for.body29.lr.ph.i.i ]
  br label %for.body29.i.i

for.body29.i.i:                                   ; preds = %for.body29.i.i.preheader, %for.body29.i.i
  %j25.068.i.i = phi i64 [ %inc34.i.i, %for.body29.i.i ], [ %j25.068.i.i.ph, %for.body29.i.i.preheader ]
  %r.167.i.i = phi i64 [ %add32.i.i, %for.body29.i.i ], [ %r.167.i.i.ph, %for.body29.i.i.preheader ]
  %arrayidx30.i.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 %j25.068.i.i
  %135 = load i8, i8* %arrayidx30.i.i, align 1, !tbaa !23, !range !70
  %136 = zext i8 %135 to i64
  %add32.i.i = add nuw nsw i64 %r.167.i.i, %136
  %inc34.i.i = add nuw nsw i64 %j25.068.i.i, 1
  %exitcond73.i.i = icmp eq i64 %inc34.i.i, %sub
  br i1 %exitcond73.i.i, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i, label %for.body29.i.i, !llvm.loop !158

_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i:   ; preds = %for.body29.i.i, %vector.ph381, %middle.block346, %if.else.i.i, %if.then.i.i
  %r.2.i.i = phi i64 [ 0, %if.then.i.i ], [ 0, %if.else.i.i ], [ %134, %middle.block346 ], [ %add21.i.i, %vector.ph381 ], [ %add32.i.i, %for.body29.i.i ]
  %call1.i = tail call noalias i8* @malloc(i64 %r.2.i.i) #2
  br label %if.end.i

if.end.i:                                         ; preds = %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i, %if.then
  %Out.addr.0.i = phi i8* [ %call1.i, %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i ], [ %Out, %if.then ]
  %cmp224.i = icmp sgt i64 %e, %s
  br i1 %cmp224.i, label %for.body.i.preheader, label %cleanup

for.body.i.preheader:                             ; preds = %if.end.i
  %137 = xor i64 %s, -1
  %138 = add i64 %137, %e
  %xtraiter = and i64 %sub, 3
  %139 = icmp ult i64 %138, 3
  br i1 %139, label %cleanup.loopexit.unr-lcssa, label %for.body.i.preheader.new

for.body.i.preheader.new:                         ; preds = %for.body.i.preheader
  %unroll_iter = sub i64 %sub, %xtraiter
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.3, %for.body.i.preheader.new
  %i.026.i = phi i64 [ %s, %for.body.i.preheader.new ], [ %inc7.i.3, %for.inc.i.3 ]
  %k.025.i = phi i64 [ 0, %for.body.i.preheader.new ], [ %k.1.i.3, %for.inc.i.3 ]
  %niter = phi i64 [ %unroll_iter, %for.body.i.preheader.new ], [ %niter.nsub.3, %for.inc.i.3 ]
  %arrayidx.i = getelementptr inbounds i8, i8* %Fl, i64 %i.026.i
  %140 = load i8, i8* %arrayidx.i, align 1, !tbaa !23, !range !70
  %tobool.i = icmp eq i8 %140, 0
  br i1 %tobool.i, label %for.inc.i, label %if.then3.i

if.then3.i:                                       ; preds = %for.body.i
  %arrayidx.i21.i = getelementptr inbounds i8, i8* %f.coerce, i64 %i.026.i
  %141 = load i8, i8* %arrayidx.i21.i, align 1, !tbaa !22
  %inc.i = add nsw i64 %k.025.i, 1
  %arrayidx5.i = getelementptr inbounds i8, i8* %Out.addr.0.i, i64 %k.025.i
  store i8 %141, i8* %arrayidx5.i, align 1, !tbaa !22
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then3.i, %for.body.i
  %k.1.i = phi i64 [ %inc.i, %if.then3.i ], [ %k.025.i, %for.body.i ]
  %inc7.i = add nsw i64 %i.026.i, 1
  %arrayidx.i.1 = getelementptr inbounds i8, i8* %Fl, i64 %inc7.i
  %142 = load i8, i8* %arrayidx.i.1, align 1, !tbaa !23, !range !70
  %tobool.i.1 = icmp eq i8 %142, 0
  br i1 %tobool.i.1, label %for.inc.i.1, label %if.then3.i.1

pfor.detach.lr.ph:                                ; preds = %entry
  %143 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8523 = shl i32 %143, 3
  %mul = shl nsw i64 %add, 3
  %call3 = tail call noalias i8* @malloc(i64 %mul) #2
  %144 = bitcast i8* %call3 to i64*
  %145 = xor i64 %s, -1
  %146 = sub i64 -2049, %s
  %147 = xor i64 %e, -1
  %148 = icmp sgt i64 %div, 0
  %smax521 = select i1 %148, i64 %div, i64 0
  %149 = zext i32 %__cilkrts_wc8523 to i64
  %150 = add nsw i64 %smax521, -1
  %151 = add nsw i64 %150, %149
  %152 = udiv i64 %151, %149
  %153 = icmp ult i64 %152, 2048
  %154 = select i1 %153, i64 %152, i64 2048
  tail call fastcc void @_ZN8sequence4packIclNS_4getAIclEEEE4_seqIT_EPS4_PbT0_S8_T1__pfor.detach.ls(i64 0, i64 %smax521, i64 %154, i64 %145, i64 %146, i64 %147, i64 %s, i64 %e, i8* %Fl, i64* %144)
  %call.i = tail call i64 @_ZN8sequence4scanIllN5utils4addFIlEENS_4getAIllEEEET_PS6_T0_S8_T1_T2_S6_bb(i64* %144, i64 0, i64 %add, i64* %144, i64 0, i1 zeroext false, i1 zeroext false) #2
  %cmp24 = icmp eq i8* %Out, null
  br i1 %cmp24, label %if.then25, label %sync.continue69

if.then25:                                        ; preds = %pfor.detach.lr.ph
  %call27 = tail call noalias i8* @malloc(i64 %call.i) #2
  br label %sync.continue69

sync.continue69:                                  ; preds = %if.then25, %pfor.detach.lr.ph
  %Out.addr.0 = phi i8* [ %call27, %if.then25 ], [ %Out, %pfor.detach.lr.ph ]
  %155 = sub i64 -2, %s
  tail call fastcc void @_ZN8sequence4packIclNS_4getAIclEEEE4_seqIT_EPS4_PbT0_S8_T1__pfor.detach48.ls(i64 0, i64 %smax521, i64 %154, i8* %f.coerce, i8* %Fl, i64 %145, i64 %146, i64 %147, i64 %155, i64 %s, i64 %e, i64* %144, i8* %Out.addr.0)
  tail call void @free(i8* %call3) #2
  br label %cleanup

cleanup.loopexit.unr-lcssa:                       ; preds = %for.inc.i.3, %for.body.i.preheader
  %k.1.i.lcssa.ph = phi i64 [ undef, %for.body.i.preheader ], [ %k.1.i.3, %for.inc.i.3 ]
  %i.026.i.unr = phi i64 [ %s, %for.body.i.preheader ], [ %inc7.i.3, %for.inc.i.3 ]
  %k.025.i.unr = phi i64 [ 0, %for.body.i.preheader ], [ %k.1.i.3, %for.inc.i.3 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %cleanup, label %for.body.i.epil.preheader

for.body.i.epil.preheader:                        ; preds = %cleanup.loopexit.unr-lcssa
  br label %for.body.i.epil

for.body.i.epil:                                  ; preds = %for.body.i.epil.preheader, %for.inc.i.epil
  %i.026.i.epil = phi i64 [ %inc7.i.epil, %for.inc.i.epil ], [ %i.026.i.unr, %for.body.i.epil.preheader ]
  %k.025.i.epil = phi i64 [ %k.1.i.epil, %for.inc.i.epil ], [ %k.025.i.unr, %for.body.i.epil.preheader ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.inc.i.epil ], [ %xtraiter, %for.body.i.epil.preheader ]
  %arrayidx.i.epil = getelementptr inbounds i8, i8* %Fl, i64 %i.026.i.epil
  %156 = load i8, i8* %arrayidx.i.epil, align 1, !tbaa !23, !range !70
  %tobool.i.epil = icmp eq i8 %156, 0
  br i1 %tobool.i.epil, label %for.inc.i.epil, label %if.then3.i.epil

if.then3.i.epil:                                  ; preds = %for.body.i.epil
  %arrayidx.i21.i.epil = getelementptr inbounds i8, i8* %f.coerce, i64 %i.026.i.epil
  %157 = load i8, i8* %arrayidx.i21.i.epil, align 1, !tbaa !22
  %inc.i.epil = add nsw i64 %k.025.i.epil, 1
  %arrayidx5.i.epil = getelementptr inbounds i8, i8* %Out.addr.0.i, i64 %k.025.i.epil
  store i8 %157, i8* %arrayidx5.i.epil, align 1, !tbaa !22
  br label %for.inc.i.epil

for.inc.i.epil:                                   ; preds = %if.then3.i.epil, %for.body.i.epil
  %k.1.i.epil = phi i64 [ %inc.i.epil, %if.then3.i.epil ], [ %k.025.i.epil, %for.body.i.epil ]
  %inc7.i.epil = add nsw i64 %i.026.i.epil, 1
  %epil.iter.sub = add nsw i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %cleanup, label %for.body.i.epil, !llvm.loop !159

cleanup:                                          ; preds = %for.inc.i.epil, %cleanup.loopexit.unr-lcssa, %if.end.i, %sync.continue69
  %retval.sroa.0.0 = phi i8* [ %Out.addr.0, %sync.continue69 ], [ %Out.addr.0.i, %if.end.i ], [ %Out.addr.0.i, %cleanup.loopexit.unr-lcssa ], [ %Out.addr.0.i, %for.inc.i.epil ]
  %retval.sroa.3.0 = phi i64 [ %call.i, %sync.continue69 ], [ 0, %if.end.i ], [ %k.1.i.lcssa.ph, %cleanup.loopexit.unr-lcssa ], [ %k.1.i.epil, %for.inc.i.epil ]
  %.fca.0.insert = insertvalue { i8*, i64 } undef, i8* %retval.sroa.0.0, 0
  %.fca.1.insert = insertvalue { i8*, i64 } %.fca.0.insert, i64 %retval.sroa.3.0, 1
  ret { i8*, i64 } %.fca.1.insert

if.then3.i.1:                                     ; preds = %for.inc.i
  %arrayidx.i21.i.1 = getelementptr inbounds i8, i8* %f.coerce, i64 %inc7.i
  %158 = load i8, i8* %arrayidx.i21.i.1, align 1, !tbaa !22
  %inc.i.1 = add nsw i64 %k.1.i, 1
  %arrayidx5.i.1 = getelementptr inbounds i8, i8* %Out.addr.0.i, i64 %k.1.i
  store i8 %158, i8* %arrayidx5.i.1, align 1, !tbaa !22
  br label %for.inc.i.1

for.inc.i.1:                                      ; preds = %if.then3.i.1, %for.inc.i
  %k.1.i.1 = phi i64 [ %inc.i.1, %if.then3.i.1 ], [ %k.1.i, %for.inc.i ]
  %inc7.i.1 = add nsw i64 %i.026.i, 2
  %arrayidx.i.2 = getelementptr inbounds i8, i8* %Fl, i64 %inc7.i.1
  %159 = load i8, i8* %arrayidx.i.2, align 1, !tbaa !23, !range !70
  %tobool.i.2 = icmp eq i8 %159, 0
  br i1 %tobool.i.2, label %for.inc.i.2, label %if.then3.i.2

if.then3.i.2:                                     ; preds = %for.inc.i.1
  %arrayidx.i21.i.2 = getelementptr inbounds i8, i8* %f.coerce, i64 %inc7.i.1
  %160 = load i8, i8* %arrayidx.i21.i.2, align 1, !tbaa !22
  %inc.i.2 = add nsw i64 %k.1.i.1, 1
  %arrayidx5.i.2 = getelementptr inbounds i8, i8* %Out.addr.0.i, i64 %k.1.i.1
  store i8 %160, i8* %arrayidx5.i.2, align 1, !tbaa !22
  br label %for.inc.i.2

for.inc.i.2:                                      ; preds = %if.then3.i.2, %for.inc.i.1
  %k.1.i.2 = phi i64 [ %inc.i.2, %if.then3.i.2 ], [ %k.1.i.1, %for.inc.i.1 ]
  %inc7.i.2 = add nsw i64 %i.026.i, 3
  %arrayidx.i.3 = getelementptr inbounds i8, i8* %Fl, i64 %inc7.i.2
  %161 = load i8, i8* %arrayidx.i.3, align 1, !tbaa !23, !range !70
  %tobool.i.3 = icmp eq i8 %161, 0
  br i1 %tobool.i.3, label %for.inc.i.3, label %if.then3.i.3

if.then3.i.3:                                     ; preds = %for.inc.i.2
  %arrayidx.i21.i.3 = getelementptr inbounds i8, i8* %f.coerce, i64 %inc7.i.2
  %162 = load i8, i8* %arrayidx.i21.i.3, align 1, !tbaa !22
  %inc.i.3 = add nsw i64 %k.1.i.2, 1
  %arrayidx5.i.3 = getelementptr inbounds i8, i8* %Out.addr.0.i, i64 %k.1.i.2
  store i8 %162, i8* %arrayidx5.i.3, align 1, !tbaa !22
  br label %for.inc.i.3

for.inc.i.3:                                      ; preds = %if.then3.i.3, %for.inc.i.2
  %k.1.i.3 = phi i64 [ %inc.i.3, %if.then3.i.3 ], [ %k.1.i.2, %for.inc.i.2 ]
  %inc7.i.3 = add nsw i64 %i.026.i, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %cleanup.loopexit.unr-lcssa, label %for.body.i
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_Z3ANNILi10E6vertexI8_point2dIdELi10EEEvPPT0_ii(%struct.vertex.16** %v, i32 %n, i32 %k) local_unnamed_addr #7 comdat {
entry:
  %T = alloca %struct.kNearestNeighbor.17, align 8
  %0 = bitcast %struct.kNearestNeighbor.17* %T to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #2
  %call.i = tail call %class.gTreeNode.18* @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE5gTreeEPPS5_i(%struct.vertex.16** %v, i32 %n) #2
  %tree.i = getelementptr inbounds %struct.kNearestNeighbor.17, %struct.kNearestNeighbor.17* %T, i64 0, i32 0
  store %class.gTreeNode.18* %call.i, %class.gTreeNode.18** %tree.i, align 8, !tbaa !160
  %count.i.i = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %call.i, i64 0, i32 3
  %1 = load i32, i32* %count.i.i, align 4, !tbaa !162
  %2 = sext i32 %1 to i64
  %3 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %2, i64 8) #2
  %4 = extractvalue { i64, i1 } %3, 1
  %5 = extractvalue { i64, i1 } %3, 0
  %6 = select i1 %4, i64 -1, i64 %5
  %call.i.i = tail call i8* @_Znam(i64 %6) #22
  %7 = bitcast i8* %call.i.i to %struct.vertex.16**
  tail call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT_(%class.gTreeNode.18* %call.i, i32 0, %struct.vertex.16** nonnull %7) #2
  %cmp18 = icmp sgt i32 %n, 0
  br i1 %cmp18, label %pfor.detach.lr.ph, label %sync.continue

pfor.detach.lr.ph:                                ; preds = %entry
  %wide.trip.count = zext i32 %n to i64
  %8 = add nsw i64 %wide.trip.count, -1
  call fastcc void @_Z3ANNILi10E6vertexI8_point2dIdELi10EEEvPPT0_ii_pfor.detach.ls(i64 0, i64 %8, %struct.vertex.16** nonnull %7, %struct.kNearestNeighbor.17* nonnull %T, i32 %k)
  br label %sync.continue

sync.continue:                                    ; preds = %entry, %pfor.detach.lr.ph
  call void @free(i8* nonnull %call.i.i) #2
  %9 = load %class.gTreeNode.18*, %class.gTreeNode.18** %tree.i, align 8, !tbaa !160
  call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE3delEv(%class.gTreeNode.18* %9) #2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #2
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE8kNearestEPS3_PS5_i(%struct.kNearestNeighbor.17* %this, %struct.vertex.16* %p, %struct.vertex.16** %result, i32 %k) local_unnamed_addr #7 comdat align 2 {
entry:
  %result33 = bitcast %struct.vertex.16** %result to i8*
  %nn = alloca %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", align 8
  %0 = bitcast %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %nn to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %0) #2
  %cmp.i = icmp sgt i32 %k, 10
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.26, i64 0, i64 0)) #2
  %call.i.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call.i) #2
  tail call void @abort() #21
  unreachable

if.end.i:                                         ; preds = %entry
  %k.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 4
  store i32 %k, i32* %k.i, align 4, !tbaa !165
  %quads.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 3
  store i32 4, i32* %quads.i, align 8, !tbaa !167
  %ps.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 0
  store %struct.vertex.16* %p, %struct.vertex.16** %ps.i, align 8, !tbaa !168
  %cmp515.i = icmp sgt i32 %k, 0
  br i1 %cmp515.i, label %for.body.i.preheader, label %_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNNC2EPS3_i.exit.thread

_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNNC2EPS3_i.exit.thread: ; preds = %if.end.i
  %tree35 = getelementptr inbounds %struct.kNearestNeighbor.17, %struct.kNearestNeighbor.17* %this, i64 0, i32 0
  %1 = load %class.gTreeNode.18*, %class.gTreeNode.18** %tree35, align 8, !tbaa !160
  call void @_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNN10nearestNghEP9gTreeNodeIS2_7_vect2dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* nonnull %nn, %class.gTreeNode.18* %1)
  br label %for.cond.cleanup5

for.body.i.preheader:                             ; preds = %if.end.i
  %wide.trip.count.i = zext i32 %k to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ 0, %for.body.i.preheader ]
  %arrayidx.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 1, i64 %indvars.iv.i
  store %struct.vertex.16* null, %struct.vertex.16** %arrayidx.i, align 8, !tbaa !53
  %arrayidx8.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 2, i64 %indvars.iv.i
  store double 0x7FEFFFFFFFFFFFFF, double* %arrayidx8.i, align 8, !tbaa !18
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.i, label %for.body6.preheader, label %for.body.i, !llvm.loop !169

for.body6.preheader:                              ; preds = %for.body.i
  %tree = getelementptr inbounds %struct.kNearestNeighbor.17, %struct.kNearestNeighbor.17* %this, i64 0, i32 0
  %2 = load %class.gTreeNode.18*, %class.gTreeNode.18** %tree, align 8, !tbaa !160
  call void @_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNN10nearestNghEP9gTreeNodeIS2_7_vect2dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* nonnull %nn, %class.gTreeNode.18* %2)
  %3 = shl nuw nsw i64 %wide.trip.count.i, 3
  call void @llvm.memset.p0i8.i64(i8* %result33, i8 0, i64 %3, i32 8, i1 false)
  %4 = load i32, i32* %k.i, align 4, !tbaa !165
  %5 = add nsw i64 %wide.trip.count.i, -1
  %xtraiter = and i64 %wide.trip.count.i, 7
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body6.prol.loopexit, label %for.body6.prol.preheader

for.body6.prol.preheader:                         ; preds = %for.body6.preheader
  br label %for.body6.prol

for.body6.prol:                                   ; preds = %for.body6.prol.preheader, %for.body6.prol
  %indvars.iv.prol = phi i64 [ %indvars.iv.next.prol, %for.body6.prol ], [ 0, %for.body6.prol.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body6.prol ], [ %xtraiter, %for.body6.prol.preheader ]
  %6 = trunc i64 %indvars.iv.prol to i32
  %7 = xor i32 %6, -1
  %sub2.i.prol = add i32 %4, %7
  %idxprom.i.prol = sext i32 %sub2.i.prol to i64
  %arrayidx.i23.prol = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 1, i64 %idxprom.i.prol
  %8 = bitcast %struct.vertex.16** %arrayidx.i23.prol to i64*
  %9 = load i64, i64* %8, align 8, !tbaa !53
  %arrayidx8.prol = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %result, i64 %indvars.iv.prol
  %10 = bitcast %struct.vertex.16** %arrayidx8.prol to i64*
  store i64 %9, i64* %10, align 8, !tbaa !53
  %indvars.iv.next.prol = add nuw nsw i64 %indvars.iv.prol, 1
  %prol.iter.sub = add nsw i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body6.prol.loopexit, label %for.body6.prol, !llvm.loop !170

for.body6.prol.loopexit:                          ; preds = %for.body6.prol, %for.body6.preheader
  %indvars.iv.unr = phi i64 [ 0, %for.body6.preheader ], [ %xtraiter, %for.body6.prol ]
  %11 = icmp ult i64 %5, 7
  br i1 %11, label %for.cond.cleanup5, label %for.body6.preheader76

for.body6.preheader76:                            ; preds = %for.body6.prol.loopexit
  br label %for.body6

for.cond.cleanup5:                                ; preds = %for.body6, %for.body6.prol.loopexit, %_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNNC2EPS3_i.exit.thread
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %0) #2
  ret void

for.body6:                                        ; preds = %for.body6.preheader76, %for.body6
  %indvars.iv = phi i64 [ %indvars.iv.next.7, %for.body6 ], [ %indvars.iv.unr, %for.body6.preheader76 ]
  %12 = trunc i64 %indvars.iv to i32
  %13 = xor i32 %12, -1
  %sub2.i = add i32 %4, %13
  %idxprom.i = sext i32 %sub2.i to i64
  %arrayidx.i23 = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 1, i64 %idxprom.i
  %14 = bitcast %struct.vertex.16** %arrayidx.i23 to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !53
  %arrayidx8 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %result, i64 %indvars.iv
  %16 = bitcast %struct.vertex.16** %arrayidx8 to i64*
  store i64 %15, i64* %16, align 8, !tbaa !53
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %17 = trunc i64 %indvars.iv.next to i32
  %18 = xor i32 %17, -1
  %sub2.i.1 = add i32 %4, %18
  %idxprom.i.1 = sext i32 %sub2.i.1 to i64
  %arrayidx.i23.1 = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 1, i64 %idxprom.i.1
  %19 = bitcast %struct.vertex.16** %arrayidx.i23.1 to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !53
  %arrayidx8.1 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %result, i64 %indvars.iv.next
  %21 = bitcast %struct.vertex.16** %arrayidx8.1 to i64*
  store i64 %20, i64* %21, align 8, !tbaa !53
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %22 = trunc i64 %indvars.iv.next.1 to i32
  %23 = xor i32 %22, -1
  %sub2.i.2 = add i32 %4, %23
  %idxprom.i.2 = sext i32 %sub2.i.2 to i64
  %arrayidx.i23.2 = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 1, i64 %idxprom.i.2
  %24 = bitcast %struct.vertex.16** %arrayidx.i23.2 to i64*
  %25 = load i64, i64* %24, align 8, !tbaa !53
  %arrayidx8.2 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %result, i64 %indvars.iv.next.1
  %26 = bitcast %struct.vertex.16** %arrayidx8.2 to i64*
  store i64 %25, i64* %26, align 8, !tbaa !53
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv, 3
  %27 = trunc i64 %indvars.iv.next.2 to i32
  %28 = xor i32 %27, -1
  %sub2.i.3 = add i32 %4, %28
  %idxprom.i.3 = sext i32 %sub2.i.3 to i64
  %arrayidx.i23.3 = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 1, i64 %idxprom.i.3
  %29 = bitcast %struct.vertex.16** %arrayidx.i23.3 to i64*
  %30 = load i64, i64* %29, align 8, !tbaa !53
  %arrayidx8.3 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %result, i64 %indvars.iv.next.2
  %31 = bitcast %struct.vertex.16** %arrayidx8.3 to i64*
  store i64 %30, i64* %31, align 8, !tbaa !53
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %32 = trunc i64 %indvars.iv.next.3 to i32
  %33 = xor i32 %32, -1
  %sub2.i.4 = add i32 %4, %33
  %idxprom.i.4 = sext i32 %sub2.i.4 to i64
  %arrayidx.i23.4 = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 1, i64 %idxprom.i.4
  %34 = bitcast %struct.vertex.16** %arrayidx.i23.4 to i64*
  %35 = load i64, i64* %34, align 8, !tbaa !53
  %arrayidx8.4 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %result, i64 %indvars.iv.next.3
  %36 = bitcast %struct.vertex.16** %arrayidx8.4 to i64*
  store i64 %35, i64* %36, align 8, !tbaa !53
  %indvars.iv.next.4 = add nuw nsw i64 %indvars.iv, 5
  %37 = trunc i64 %indvars.iv.next.4 to i32
  %38 = xor i32 %37, -1
  %sub2.i.5 = add i32 %4, %38
  %idxprom.i.5 = sext i32 %sub2.i.5 to i64
  %arrayidx.i23.5 = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 1, i64 %idxprom.i.5
  %39 = bitcast %struct.vertex.16** %arrayidx.i23.5 to i64*
  %40 = load i64, i64* %39, align 8, !tbaa !53
  %arrayidx8.5 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %result, i64 %indvars.iv.next.4
  %41 = bitcast %struct.vertex.16** %arrayidx8.5 to i64*
  store i64 %40, i64* %41, align 8, !tbaa !53
  %indvars.iv.next.5 = add nuw nsw i64 %indvars.iv, 6
  %42 = trunc i64 %indvars.iv.next.5 to i32
  %43 = xor i32 %42, -1
  %sub2.i.6 = add i32 %4, %43
  %idxprom.i.6 = sext i32 %sub2.i.6 to i64
  %arrayidx.i23.6 = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 1, i64 %idxprom.i.6
  %44 = bitcast %struct.vertex.16** %arrayidx.i23.6 to i64*
  %45 = load i64, i64* %44, align 8, !tbaa !53
  %arrayidx8.6 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %result, i64 %indvars.iv.next.5
  %46 = bitcast %struct.vertex.16** %arrayidx8.6 to i64*
  store i64 %45, i64* %46, align 8, !tbaa !53
  %indvars.iv.next.6 = add nuw nsw i64 %indvars.iv, 7
  %47 = trunc i64 %indvars.iv.next.6 to i32
  %48 = xor i32 %47, -1
  %sub2.i.7 = add i32 %4, %48
  %idxprom.i.7 = sext i32 %sub2.i.7 to i64
  %arrayidx.i23.7 = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 1, i64 %idxprom.i.7
  %49 = bitcast %struct.vertex.16** %arrayidx.i23.7 to i64*
  %50 = load i64, i64* %49, align 8, !tbaa !53
  %arrayidx8.7 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %result, i64 %indvars.iv.next.6
  %51 = bitcast %struct.vertex.16** %arrayidx8.7 to i64*
  store i64 %50, i64* %51, align 8, !tbaa !53
  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8
  %exitcond.7 = icmp eq i64 %indvars.iv.next.7, %wide.trip.count.i
  br i1 %exitcond.7, label %for.cond.cleanup5, label %for.body6, !llvm.loop !171
}

; Function Attrs: nounwind uwtable
define linkonce_odr %class.gTreeNode.18* @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE5gTreeEPPS5_i(%struct.vertex.16** %vv, i32 %n) local_unnamed_addr #7 comdat align 2 {
entry:
  %minMaxPair = alloca %"struct.std::pair", align 16
  %0 = bitcast %"struct.std::pair"* %minMaxPair to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #2
  call void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_(%"struct.std::pair"* nonnull sret %minMaxPair, i32 0, i32 %n, %struct.vertex.16** %vv) #2
  %1 = bitcast %"struct.std::pair"* %minMaxPair to <2 x double>*
  %2 = load <2 x double>, <2 x double>* %1, align 16
  %maxPt.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %minMaxPair, i64 0, i32 1, i32 0
  %3 = bitcast double* %maxPt.sroa.0.0..sroa_idx to <2 x double>*
  %4 = load <2 x double>, <2 x double>* %3, align 16
  %5 = fsub fast <2 x double> %4, %2
  %6 = extractelement <2 x double> %5, i32 0
  %div.i = fmul fast double %6, 5.000000e-01
  %7 = extractelement <2 x double> %5, i32 1
  %div2.i = fmul fast double %7, 5.000000e-01
  %8 = extractelement <2 x double> %2, i32 0
  %add.i = fadd fast double %div.i, %8
  %9 = extractelement <2 x double> %2, i32 1
  %add4.i = fadd fast double %div2.i, %9
  %conv = sext i32 %n to i64
  %mul = shl nsw i64 %conv, 3
  %call6 = call noalias i8* @malloc(i64 %mul) #2
  %10 = bitcast i8* %call6 to %struct.vertex.16**
  %cmp55 = icmp sgt i32 %n, 0
  br i1 %cmp55, label %pfor.detach.lr.ph, label %sync.continue

pfor.detach.lr.ph:                                ; preds = %entry
  %11 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8 = shl i32 %11, 3
  %wide.trip.count = zext i32 %n to i64
  %12 = add nsw i64 %wide.trip.count, -1
  %13 = zext i32 %__cilkrts_wc8 to i64
  %14 = add nsw i64 %wide.trip.count, -2
  %15 = add nsw i64 %14, %13
  %16 = udiv i64 %15, %13
  %17 = icmp ult i64 %16, 2048
  %18 = select i1 %17, i64 %16, i64 2048
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE5gTreeEPPS5_i_pfor.detach.ls(i64 0, i64 %12, i64 %18, %struct.vertex.16** %vv, %struct.vertex.16** %10)
  br label %sync.continue

sync.continue:                                    ; preds = %entry, %pfor.detach.lr.ph
  %call12 = call i8* @_Znwm(i64 112) #22
  %19 = bitcast i8* %call12 to %class.gTreeNode.18*
  %cmp.i.i = fcmp fast olt double %6, %7
  %20 = select i1 %cmp.i.i, double %7, double %6
  call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i(%class.gTreeNode.18* nonnull %19, %struct.vertex.16** %10, i64 %conv, double %add.i, double %add4.i, double %20, %class.gTreeNode.18* null, i32 0)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #2
  ret %class.gTreeNode.18* %19
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i(%class.gTreeNode.18* %this, %struct.vertex.16** %S.coerce0, i64 %S.coerce1, double %cnt.coerce0, double %cnt.coerce1, double %sz, %class.gTreeNode.18* %newNodes, i32 %numNewNodes) unnamed_addr #7 comdat align 2 {
entry:
  %offsets67 = alloca [8 x i32], align 16
  %cnt.i227 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %this, i64 0, i32 2, i32 0
  store i32 0, i32* %cnt.i227, align 4, !tbaa !172
  %conv = trunc i64 %S.coerce1 to i32
  %count = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %this, i64 0, i32 3
  store i32 %conv, i32* %count, align 4, !tbaa !162
  %size = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %this, i64 0, i32 1
  store double %sz, double* %size, align 8, !tbaa !173
  %cnt.sroa.0.0..sroa_idx = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %this, i64 0, i32 0, i32 0
  store double %cnt.coerce0, double* %cnt.sroa.0.0..sroa_idx, align 8
  %cnt.sroa.2.0..sroa_idx216 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %this, i64 0, i32 0, i32 1
  store double %cnt.coerce1, double* %cnt.sroa.2.0..sroa_idx216, align 8
  %vertices = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %this, i64 0, i32 5
  %nodeMemory = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %this, i64 0, i32 6
  %conv.i = sitofp i32 %conv to double
  %0 = tail call fast double @llvm.log2.f64(double %conv.i) #2
  %div = fmul fast double %0, 4.600000e-01
  %conv7 = fptosi double %div to i32
  %cmp = icmp sgt i32 %conv7, 1
  %cmp9 = icmp sgt i32 %conv, 65536
  %or.cond = and i1 %cmp9, %cmp
  %1 = bitcast %struct.vertex.16*** %vertices to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull %1, i8 0, i64 16, i32 8, i1 false)
  br i1 %or.cond, label %for.body.lr.ph, label %if.else

for.body.lr.ph:                                   ; preds = %entry
  %mul12 = shl nsw i32 %conv7, 1
  %shl13 = shl i32 1, %mul12
  %conv14 = sext i32 %shl13 to i64
  %mul15 = shl nsw i64 %conv14, 2
  %call16 = tail call noalias i8* @malloc(i64 %mul15) #2
  %2 = bitcast i8* %call16 to i32*
  tail call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi(%struct.vertex.16** %S.coerce0, i32 %conv, i32 %shl13, i32 %conv7, double %sz, double %cnt.coerce0, double %cnt.coerce1, i32* %2)
  %3 = add i32 %conv7, -1
  %xtraiter = and i32 %conv7, 7
  %4 = icmp ult i32 %3, 7
  br i1 %4, label %for.cond.cleanup.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = sub i32 %conv7, %xtraiter
  br label %for.body

for.cond.cleanup.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %add.lcssa.ph = phi i32 [ undef, %for.body.lr.ph ], [ %add.7, %for.body ]
  %numNewNodes.addr.0242.unr = phi i32 [ 4, %for.body.lr.ph ], [ %add.7, %for.body ]
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod, label %for.cond.cleanup, label %for.body.epil.preheader

for.body.epil.preheader:                          ; preds = %for.cond.cleanup.unr-lcssa
  br label %for.body.epil

for.body.epil:                                    ; preds = %for.body.epil.preheader, %for.body.epil
  %numNewNodes.addr.0242.epil = phi i32 [ %add.epil, %for.body.epil ], [ %numNewNodes.addr.0242.unr, %for.body.epil.preheader ]
  %epil.iter = phi i32 [ %epil.iter.sub, %for.body.epil ], [ %xtraiter, %for.body.epil.preheader ]
  %shl26.epil = shl i32 %numNewNodes.addr.0242.epil, 2
  %add.epil = add nsw i32 %shl26.epil, 4
  %epil.iter.sub = add nsw i32 %epil.iter, -1
  %epil.iter.cmp = icmp eq i32 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond.cleanup, label %for.body.epil, !llvm.loop !174

for.cond.cleanup:                                 ; preds = %for.body.epil, %for.cond.cleanup.unr-lcssa
  %add.lcssa = phi i32 [ %add.lcssa.ph, %for.cond.cleanup.unr-lcssa ], [ %add.epil, %for.body.epil ]
  %phitmp = sext i32 %add.lcssa to i64
  %phitmp252 = mul nsw i64 %phitmp, 112
  %call32 = tail call noalias i8* @malloc(i64 %phitmp252) #2
  %5 = bitcast i8* %call32 to %class.gTreeNode.18*
  %6 = bitcast %class.gTreeNode.18** %nodeMemory to i8**
  store i8* %call32, i8** %6, align 8, !tbaa !175
  tail call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii(%class.gTreeNode.18* %this, %struct.vertex.16** %S.coerce0, i64 %S.coerce1, i32* %2, i32 %shl13, %class.gTreeNode.18* %5, %class.gTreeNode.18* %this, i32 0, i32 %conv7, i32 1)
  tail call void @free(i8* %call16) #2
  br label %if.end164

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %numNewNodes.addr.0242 = phi i32 [ 4, %for.body.lr.ph.new ], [ %add.7, %for.body ]
  %niter = phi i32 [ %unroll_iter, %for.body.lr.ph.new ], [ %niter.nsub.7, %for.body ]
  %add.6 = shl i32 %numNewNodes.addr.0242, 16
  %add.7 = add i32 %add.6, 87380
  %niter.nsub.7 = add i32 %niter, -8
  %niter.ncmp.7 = icmp eq i32 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %for.cond.cleanup.unr-lcssa, label %for.body

if.else:                                          ; preds = %entry
  %cmp37 = icmp sgt i32 %conv, 16
  br i1 %cmp37, label %if.then38, label %if.else143

if.then38:                                        ; preds = %if.else
  %cmp42 = icmp slt i32 %numNewNodes, 4
  br i1 %cmp42, label %if.then43, label %cond.end.3

if.then43:                                        ; preds = %if.then38
  %call60 = tail call noalias i8* @malloc(i64 448) #2
  %7 = bitcast i8* %call60 to %class.gTreeNode.18*
  %8 = bitcast %class.gTreeNode.18** %nodeMemory to i8**
  store i8* %call60, i8** %8, align 8, !tbaa !175
  br label %cond.end.3

if.else143:                                       ; preds = %if.else
  store %struct.vertex.16** %S.coerce0, %struct.vertex.16*** %vertices, align 8, !tbaa !176
  %cmp149246 = icmp sgt i32 %conv, 0
  br i1 %cmp149246, label %for.body151.lr.ph, label %if.end164

for.body151.lr.ph:                                ; preds = %if.else143
  store i32 %conv, i32* %cnt.i227, align 4
  br label %if.end164

if.end164:                                        ; preds = %if.else143, %for.body151.lr.ph, %cond.end.3, %for.cond.cleanup
  ret void

cond.end.3:                                       ; preds = %if.then38, %if.then43
  %numNewNodes.addr.1 = phi i32 [ 4, %if.then43 ], [ %numNewNodes, %if.then38 ]
  %newNodes.addr.0 = phi %class.gTreeNode.18* [ %7, %if.then43 ], [ %newNodes, %if.then38 ]
  %9 = bitcast [8 x i32]* %offsets67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #2
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %offsets67, i64 0, i64 0
  call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE15sortBlocksSmallEPPS5_iS1_Pi(%struct.vertex.16** %S.coerce0, i32 %conv, double %cnt.coerce0, double %cnt.coerce1, i32* nonnull %arraydecay)
  %sub105 = add nsw i32 %numNewNodes.addr.1, -4
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %offsets67, i64 0, i64 1
  %10 = load i32, i32* %arrayidx, align 4, !tbaa !59
  %11 = load i32, i32* %arraydecay, align 16, !tbaa !59
  %conv86 = sub i32 %10, %11
  %idx.ext = sext i32 %11 to i64
  %add.ptr = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %S.coerce0, i64 %idx.ext
  %conv91 = sext i32 %conv86 to i64
  %12 = load double, double* %size, align 8, !tbaa !173
  %div94 = fmul fast double %12, 2.500000e-01
  %13 = load double, double* %cnt.sroa.0.0..sroa_idx, align 8, !tbaa !90
  %add.i230 = fsub fast double %13, %div94
  %14 = load double, double* %cnt.sroa.2.0..sroa_idx216, align 8, !tbaa !91
  %add9.i = fsub fast double %14, %div94
  %div99 = fmul fast double %12, 5.000000e-01
  %mul106 = mul nsw i32 %conv86, %sub105
  %15 = load i32, i32* %count, align 4, !tbaa !162
  %div108 = sdiv i32 %mul106, %15
  %add109 = add nsw i32 %div108, 1
  %call110 = call %class.gTreeNode.18* @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i(%struct.vertex.16** %add.ptr, i64 %conv91, double %add.i230, double %add9.i, double %div99, %class.gTreeNode.18* %newNodes.addr.0, i32 %add109)
  %arrayidx112 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %this, i64 0, i32 4, i64 0
  store %class.gTreeNode.18* %call110, %class.gTreeNode.18** %arrayidx112, align 8, !tbaa !53
  %16 = load i32, i32* %count, align 4, !tbaa !162
  %div119 = sdiv i32 %mul106, %16
  %add121 = add i32 %div119, 1
  %arrayidx.1 = getelementptr inbounds [8 x i32], [8 x i32]* %offsets67, i64 0, i64 2
  %17 = load i32, i32* %arrayidx.1, align 8, !tbaa !59
  %18 = load i32, i32* %arrayidx, align 4, !tbaa !59
  %conv86.1 = sub i32 %17, %18
  %idx.ext.1 = sext i32 %18 to i64
  %add.ptr.1 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %S.coerce0, i64 %idx.ext.1
  %conv91.1 = sext i32 %conv86.1 to i64
  %19 = load double, double* %size, align 8, !tbaa !173
  %div94.1 = fmul fast double %19, 2.500000e-01
  %20 = load double, double* %cnt.sroa.0.0..sroa_idx, align 8, !tbaa !90
  %add.i230.1 = fadd fast double %div94.1, %20
  %21 = load double, double* %cnt.sroa.2.0..sroa_idx216, align 8, !tbaa !91
  %add9.i.1 = fsub fast double %21, %div94.1
  %div99.1 = fmul fast double %19, 5.000000e-01
  %idx.ext100.1 = sext i32 %add121 to i64
  %add.ptr101.1 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %newNodes.addr.0, i64 %idx.ext100.1
  %mul106.1 = mul nsw i32 %conv86.1, %sub105
  %div108.1 = sdiv i32 %mul106.1, %16
  %add109.1 = add nsw i32 %div108.1, 1
  %call110.1 = call %class.gTreeNode.18* @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i(%struct.vertex.16** %add.ptr.1, i64 %conv91.1, double %add.i230.1, double %add9.i.1, double %div99.1, %class.gTreeNode.18* %add.ptr101.1, i32 %add109.1)
  %arrayidx112.1 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %this, i64 0, i32 4, i64 1
  store %class.gTreeNode.18* %call110.1, %class.gTreeNode.18** %arrayidx112.1, align 8, !tbaa !53
  %22 = load i32, i32* %count, align 4, !tbaa !162
  %div119.1 = sdiv i32 %mul106.1, %22
  %add120.1 = add i32 %div119, 2
  %add121.1 = add i32 %add120.1, %div119.1
  %arrayidx.2 = getelementptr inbounds [8 x i32], [8 x i32]* %offsets67, i64 0, i64 3
  %23 = load i32, i32* %arrayidx.2, align 4, !tbaa !59
  %24 = load i32, i32* %arrayidx.1, align 8, !tbaa !59
  %conv86.2 = sub i32 %23, %24
  %idx.ext.2 = sext i32 %24 to i64
  %add.ptr.2 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %S.coerce0, i64 %idx.ext.2
  %conv91.2 = sext i32 %conv86.2 to i64
  %25 = load double, double* %size, align 8, !tbaa !173
  %div94.2 = fmul fast double %25, 2.500000e-01
  %26 = load double, double* %cnt.sroa.0.0..sroa_idx, align 8, !tbaa !90
  %add.i230.2 = fsub fast double %26, %div94.2
  %27 = load double, double* %cnt.sroa.2.0..sroa_idx216, align 8, !tbaa !91
  %add9.i.2 = fadd fast double %27, %div94.2
  %div99.2 = fmul fast double %25, 5.000000e-01
  %idx.ext100.2 = sext i32 %add121.1 to i64
  %add.ptr101.2 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %newNodes.addr.0, i64 %idx.ext100.2
  %mul106.2 = mul nsw i32 %conv86.2, %sub105
  %div108.2 = sdiv i32 %mul106.2, %22
  %add109.2 = add nsw i32 %div108.2, 1
  %call110.2 = call %class.gTreeNode.18* @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i(%struct.vertex.16** %add.ptr.2, i64 %conv91.2, double %add.i230.2, double %add9.i.2, double %div99.2, %class.gTreeNode.18* %add.ptr101.2, i32 %add109.2)
  %arrayidx112.2 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %this, i64 0, i32 4, i64 2
  store %class.gTreeNode.18* %call110.2, %class.gTreeNode.18** %arrayidx112.2, align 8, !tbaa !53
  %28 = load i32, i32* %count, align 4, !tbaa !162
  %div119.2 = sdiv i32 %mul106.2, %28
  %add120.2 = add i32 %add121.1, 1
  %add121.2 = add i32 %add120.2, %div119.2
  %29 = load i32, i32* %arrayidx.2, align 4, !tbaa !59
  %conv86.3 = sub i32 %conv, %29
  %idx.ext.3 = sext i32 %29 to i64
  %add.ptr.3 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %S.coerce0, i64 %idx.ext.3
  %conv91.3 = sext i32 %conv86.3 to i64
  %30 = load double, double* %size, align 8, !tbaa !173
  %div94.3 = fmul fast double %30, 2.500000e-01
  %31 = load double, double* %cnt.sroa.0.0..sroa_idx, align 8, !tbaa !90
  %add.i230.3 = fadd fast double %div94.3, %31
  %32 = load double, double* %cnt.sroa.2.0..sroa_idx216, align 8, !tbaa !91
  %add9.i.3 = fadd fast double %32, %div94.3
  %div99.3 = fmul fast double %30, 5.000000e-01
  %idx.ext100.3 = sext i32 %add121.2 to i64
  %add.ptr101.3 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %newNodes.addr.0, i64 %idx.ext100.3
  %mul106.3 = mul nsw i32 %conv86.3, %sub105
  %div108.3 = sdiv i32 %mul106.3, %28
  %add109.3 = add nsw i32 %div108.3, 1
  %call110.3 = call %class.gTreeNode.18* @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i(%struct.vertex.16** %add.ptr.3, i64 %conv91.3, double %add.i230.3, double %add9.i.3, double %div99.3, %class.gTreeNode.18* %add.ptr101.3, i32 %add109.3)
  %arrayidx112.3 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %this, i64 0, i32 4, i64 3
  store %class.gTreeNode.18* %call110.3, %class.gTreeNode.18** %arrayidx112.3, align 8, !tbaa !53
  %33 = load %class.gTreeNode.18*, %class.gTreeNode.18** %arrayidx112, align 8, !tbaa !53
  %agg.tmp132.sroa.0.0..sroa_idx = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %33, i64 0, i32 2, i32 0
  %agg.tmp132.sroa.0.0.copyload = load i32, i32* %agg.tmp132.sroa.0.0..sroa_idx, align 4
  %34 = load i32, i32* %cnt.i227, align 4, !tbaa !172
  %add.i226 = add nsw i32 %34, %agg.tmp132.sroa.0.0.copyload
  store i32 %add.i226, i32* %cnt.i227, align 4
  %35 = load %class.gTreeNode.18*, %class.gTreeNode.18** %arrayidx112.1, align 8, !tbaa !53
  %agg.tmp132.sroa.0.0..sroa_idx.1 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %35, i64 0, i32 2, i32 0
  %agg.tmp132.sroa.0.0.copyload.1 = load i32, i32* %agg.tmp132.sroa.0.0..sroa_idx.1, align 4
  %add.i226.1 = add nsw i32 %agg.tmp132.sroa.0.0.copyload.1, %add.i226
  store i32 %add.i226.1, i32* %cnt.i227, align 4
  %36 = load %class.gTreeNode.18*, %class.gTreeNode.18** %arrayidx112.2, align 8, !tbaa !53
  %agg.tmp132.sroa.0.0..sroa_idx.2 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %36, i64 0, i32 2, i32 0
  %agg.tmp132.sroa.0.0.copyload.2 = load i32, i32* %agg.tmp132.sroa.0.0..sroa_idx.2, align 4
  %add.i226.2 = add nsw i32 %agg.tmp132.sroa.0.0.copyload.2, %add.i226.1
  store i32 %add.i226.2, i32* %cnt.i227, align 4
  %agg.tmp132.sroa.0.0..sroa_idx.3 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %call110.3, i64 0, i32 2, i32 0
  %agg.tmp132.sroa.0.0.copyload.3 = load i32, i32* %agg.tmp132.sroa.0.0..sroa_idx.3, align 4
  %add.i226.3 = add nsw i32 %agg.tmp132.sroa.0.0.copyload.3, %add.i226.2
  store i32 %add.i226.3, i32* %cnt.i227, align 4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #2
  br label %if.end164
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_(%"struct.std::pair"* noalias sret %agg.result, i32 %s, i32 %e, %struct.vertex.16** %g.coerce) local_unnamed_addr #7 comdat {
entry:
  %r = alloca %"struct.std::pair", align 8
  %sub = sub nsw i32 %e, %s
  %sub1 = add nsw i32 %sub, -1
  %div = sdiv i32 %sub1, 1024
  %add = add nsw i32 %div, 1
  %cmp = icmp slt i32 %sub, 1025
  br i1 %cmp, label %if.then, label %pfor.detach.lr.ph

if.then:                                          ; preds = %entry
  %idxprom.i.i = sext i32 %s to i64
  %arrayidx.i.i = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %g.coerce, i64 %idxprom.i.i
  %0 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx.i.i, align 8, !tbaa !53, !noalias !177
  %pt.i.i.i = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %0, i64 0, i32 1
  %1 = bitcast %"struct.std::pair"* %agg.result to i8*
  %2 = bitcast %class._point2d* %pt.i.i.i to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* nonnull %2, i64 16, i32 8, i1 false) #2, !tbaa.struct !97
  %second.i.i.i.i = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %agg.result, i64 0, i32 1
  %3 = bitcast %class._point2d* %second.i.i.i.i to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %3, i8* nonnull %2, i64 16, i32 8, i1 false) #2, !tbaa.struct !97
  %j.039.i = add nsw i32 %s, 1
  %cmp40.i = icmp slt i32 %j.039.i, %e
  br i1 %cmp40.i, label %for.body.lr.ph.i, label %cleanup

for.body.lr.ph.i:                                 ; preds = %if.then
  %agg.tmp.sroa.3.0..sroa_idx28.i = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %agg.result, i64 0, i32 1, i32 0
  %4 = bitcast %"struct.std::pair"* %agg.result to <2 x double>*
  %5 = load <2 x double>, <2 x double>* %4, align 8, !alias.scope !182
  %6 = bitcast double* %agg.tmp.sroa.3.0..sroa_idx28.i to <2 x double>*
  %7 = load <2 x double>, <2 x double>* %6, align 8, !alias.scope !182
  %8 = sext i32 %j.039.i to i64
  %9 = sub i32 3, %s
  %10 = add i32 %9, %e
  %11 = sub i32 -2, %s
  %12 = add i32 %11, %e
  %xtraiter = and i32 %10, 3
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body.i.prol.loopexit, label %for.body.i.prol.preheader

for.body.i.prol.preheader:                        ; preds = %for.body.lr.ph.i
  %13 = add nsw i32 %xtraiter, -1
  br label %for.body.i.prol

for.body.i.prol:                                  ; preds = %for.body.i.prol, %for.body.i.prol.preheader
  %indvars.iv.i.prol = phi i64 [ %8, %for.body.i.prol.preheader ], [ %indvars.iv.next.i.prol, %for.body.i.prol ]
  %14 = phi <2 x double> [ %5, %for.body.i.prol.preheader ], [ %20, %for.body.i.prol ]
  %15 = phi <2 x double> [ %7, %for.body.i.prol.preheader ], [ %22, %for.body.i.prol ]
  %prol.iter = phi i32 [ %xtraiter, %for.body.i.prol.preheader ], [ %prol.iter.sub, %for.body.i.prol ]
  %arrayidx.i10.i.prol = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %g.coerce, i64 %indvars.iv.i.prol
  %16 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx.i10.i.prol, align 8, !tbaa !53, !noalias !183
  %agg.tmp1.sroa.0.0..sroa_idx.i.prol = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %16, i64 0, i32 1, i32 0
  %17 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i.prol to <2 x double>*
  %18 = load <2 x double>, <2 x double>* %17, align 8, !noalias !182
  %19 = fcmp fast ogt <2 x double> %14, %18
  %20 = select <2 x i1> %19, <2 x double> %18, <2 x double> %14
  %21 = fcmp fast olt <2 x double> %15, %18
  %22 = select <2 x i1> %21, <2 x double> %18, <2 x double> %15
  %indvars.iv.next.i.prol = add nsw i64 %indvars.iv.i.prol, 1
  %prol.iter.sub = add nsw i32 %prol.iter, -1
  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body.i.prol.loopexit.loopexit, label %for.body.i.prol, !llvm.loop !186

for.body.i.prol.loopexit.loopexit:                ; preds = %for.body.i.prol
  %23 = zext i32 %13 to i64
  %24 = add nsw i64 %8, 1
  %25 = add nsw i64 %24, %23
  br label %for.body.i.prol.loopexit

for.body.i.prol.loopexit:                         ; preds = %for.body.i.prol.loopexit.loopexit, %for.body.lr.ph.i
  %.lcssa122.unr = phi <2 x double> [ undef, %for.body.lr.ph.i ], [ %20, %for.body.i.prol.loopexit.loopexit ]
  %.lcssa.unr = phi <2 x double> [ undef, %for.body.lr.ph.i ], [ %22, %for.body.i.prol.loopexit.loopexit ]
  %indvars.iv.i.unr = phi i64 [ %8, %for.body.lr.ph.i ], [ %25, %for.body.i.prol.loopexit.loopexit ]
  %.unr = phi <2 x double> [ %5, %for.body.lr.ph.i ], [ %20, %for.body.i.prol.loopexit.loopexit ]
  %.unr125 = phi <2 x double> [ %7, %for.body.lr.ph.i ], [ %22, %for.body.i.prol.loopexit.loopexit ]
  %26 = icmp ult i32 %12, 3
  br i1 %26, label %for.cond.for.cond.cleanup_crit_edge.i, label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %for.body.i.prol.loopexit
  br label %for.body.i

for.cond.for.cond.cleanup_crit_edge.i:            ; preds = %for.body.i, %for.body.i.prol.loopexit
  %.lcssa122 = phi <2 x double> [ %.lcssa122.unr, %for.body.i.prol.loopexit ], [ %54, %for.body.i ]
  %.lcssa = phi <2 x double> [ %.lcssa.unr, %for.body.i.prol.loopexit ], [ %56, %for.body.i ]
  store <2 x double> %.lcssa122, <2 x double>* %4, align 8, !alias.scope !182
  store <2 x double> %.lcssa, <2 x double>* %6, align 8, !alias.scope !182
  br label %cleanup

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body.i ], [ %indvars.iv.i.unr, %for.body.i.preheader ]
  %27 = phi <2 x double> [ %54, %for.body.i ], [ %.unr, %for.body.i.preheader ]
  %28 = phi <2 x double> [ %56, %for.body.i ], [ %.unr125, %for.body.i.preheader ]
  %arrayidx.i10.i = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %g.coerce, i64 %indvars.iv.i
  %29 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx.i10.i, align 8, !tbaa !53, !noalias !183
  %agg.tmp1.sroa.0.0..sroa_idx.i = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %29, i64 0, i32 1, i32 0
  %30 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i to <2 x double>*
  %31 = load <2 x double>, <2 x double>* %30, align 8, !noalias !182
  %32 = fcmp fast ogt <2 x double> %27, %31
  %33 = select <2 x i1> %32, <2 x double> %31, <2 x double> %27
  %34 = fcmp fast olt <2 x double> %28, %31
  %35 = select <2 x i1> %34, <2 x double> %31, <2 x double> %28
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, 1
  %arrayidx.i10.i.1 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %g.coerce, i64 %indvars.iv.next.i
  %36 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx.i10.i.1, align 8, !tbaa !53, !noalias !183
  %agg.tmp1.sroa.0.0..sroa_idx.i.1 = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %36, i64 0, i32 1, i32 0
  %37 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i.1 to <2 x double>*
  %38 = load <2 x double>, <2 x double>* %37, align 8, !noalias !182
  %39 = fcmp fast ogt <2 x double> %33, %38
  %40 = select <2 x i1> %39, <2 x double> %38, <2 x double> %33
  %41 = fcmp fast olt <2 x double> %35, %38
  %42 = select <2 x i1> %41, <2 x double> %38, <2 x double> %35
  %indvars.iv.next.i.1 = add nsw i64 %indvars.iv.i, 2
  %arrayidx.i10.i.2 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %g.coerce, i64 %indvars.iv.next.i.1
  %43 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx.i10.i.2, align 8, !tbaa !53, !noalias !183
  %agg.tmp1.sroa.0.0..sroa_idx.i.2 = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %43, i64 0, i32 1, i32 0
  %44 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i.2 to <2 x double>*
  %45 = load <2 x double>, <2 x double>* %44, align 8, !noalias !182
  %46 = fcmp fast ogt <2 x double> %40, %45
  %47 = select <2 x i1> %46, <2 x double> %45, <2 x double> %40
  %48 = fcmp fast olt <2 x double> %42, %45
  %49 = select <2 x i1> %48, <2 x double> %45, <2 x double> %42
  %indvars.iv.next.i.2 = add nsw i64 %indvars.iv.i, 3
  %arrayidx.i10.i.3 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %g.coerce, i64 %indvars.iv.next.i.2
  %50 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx.i10.i.3, align 8, !tbaa !53, !noalias !183
  %agg.tmp1.sroa.0.0..sroa_idx.i.3 = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %50, i64 0, i32 1, i32 0
  %51 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i.3 to <2 x double>*
  %52 = load <2 x double>, <2 x double>* %51, align 8, !noalias !182
  %53 = fcmp fast ogt <2 x double> %47, %52
  %54 = select <2 x i1> %53, <2 x double> %52, <2 x double> %47
  %55 = fcmp fast olt <2 x double> %49, %52
  %56 = select <2 x i1> %55, <2 x double> %52, <2 x double> %49
  %indvars.iv.next.i.3 = add nsw i64 %indvars.iv.i, 4
  %lftr.wideiv.i.3 = trunc i64 %indvars.iv.next.i.3 to i32
  %exitcond.i.3 = icmp eq i32 %lftr.wideiv.i.3, %e
  br i1 %exitcond.i.3, label %for.cond.for.cond.cleanup_crit_edge.i, label %for.body.i

pfor.detach.lr.ph:                                ; preds = %entry
  %57 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8 = shl i32 %57, 3
  %conv = sext i32 %add to i64
  %mul = shl nsw i64 %conv, 5
  %call = tail call noalias i8* @malloc(i64 %mul) #2
  %58 = bitcast i8* %call to %"struct.std::pair"*
  %59 = sext i32 %s to i64
  %60 = sext i32 %e to i64
  %61 = sext i32 %div to i64
  %62 = xor i32 %s, 3
  %63 = sub i32 -2, %s
  %64 = add nsw i64 %59, 2
  %65 = icmp sgt i64 %61, 0
  %smax = select i1 %65, i64 %61, i64 0
  %66 = zext i32 %__cilkrts_wc8 to i64
  %67 = add nsw i64 %smax, -1
  %68 = add nsw i64 %67, %66
  %69 = udiv i64 %68, %66
  %70 = icmp ult i64 %69, 2048
  %71 = select i1 %70, i64 %69, i64 2048
  tail call fastcc void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2__pfor.detach.ls(i64 0, i64 %smax, i64 %71, i64 %64, i32 %63, i64 %59, i64 %60, i32 %e, %struct.vertex.16** %g.coerce, i32 %62, %"struct.std::pair"* %58)
  %72 = bitcast %"struct.std::pair"* %r to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %72) #2
  call void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_(%"struct.std::pair"* nonnull sret %r, i32 0, i32 %add, %"struct.std::pair"* %58)
  call void @free(i8* %call) #2
  %73 = bitcast %"struct.std::pair"* %agg.result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* nonnull %72, i64 32, i32 8, i1 false), !tbaa.struct !103
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %72) #2
  br label %cleanup

cleanup:                                          ; preds = %for.cond.for.cond.cleanup_crit_edge.i, %if.then, %pfor.detach.lr.ph
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_(%"struct.std::pair"* noalias sret %agg.result, i32 %s, i32 %e, %"struct.std::pair"* %g.coerce) local_unnamed_addr #7 comdat {
entry:
  %r = alloca %"struct.std::pair", align 8
  %sub = sub nsw i32 %e, %s
  %sub1 = add nsw i32 %sub, -1
  %div = sdiv i32 %sub1, 1024
  %add = add nsw i32 %div, 1
  %cmp = icmp slt i32 %sub, 1025
  br i1 %cmp, label %if.then, label %pfor.detach.lr.ph

if.then:                                          ; preds = %entry
  %idxprom.i.i = sext i32 %s to i64
  %arrayidx.i.i = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %g.coerce, i64 %idxprom.i.i
  %0 = bitcast %"struct.std::pair"* %agg.result to i8*
  %1 = bitcast %"struct.std::pair"* %arrayidx.i.i to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 32, i32 8, i1 false) #2, !tbaa.struct !103
  %j.038.i = add nsw i32 %s, 1
  %cmp39.i = icmp slt i32 %j.038.i, %e
  br i1 %cmp39.i, label %for.body.lr.ph.i, label %cleanup

for.body.lr.ph.i:                                 ; preds = %if.then
  %agg.tmp.sroa.3.0..sroa_idx26.i = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %agg.result, i64 0, i32 1, i32 0
  %2 = bitcast %"struct.std::pair"* %agg.result to <2 x double>*
  %3 = load <2 x double>, <2 x double>* %2, align 8, !alias.scope !187
  %4 = bitcast double* %agg.tmp.sroa.3.0..sroa_idx26.i to <2 x double>*
  %5 = load <2 x double>, <2 x double>* %4, align 8, !alias.scope !187
  %6 = sext i32 %j.038.i to i64
  %7 = sub i32 -2, %s
  %8 = add i32 %7, %e
  %9 = zext i32 %8 to i64
  %10 = add nuw nsw i64 %9, 1
  %min.iters.check157 = icmp ult i64 %10, 4
  br i1 %min.iters.check157, label %for.body.i.preheader, label %vector.ph158

for.body.i.preheader:                             ; preds = %middle.block155, %for.body.lr.ph.i
  %indvars.iv.i.ph = phi i64 [ %ind.end164, %middle.block155 ], [ %6, %for.body.lr.ph.i ]
  %.ph = phi <2 x double> [ %25, %middle.block155 ], [ %3, %for.body.lr.ph.i ]
  %.ph271 = phi <2 x double> [ %26, %middle.block155 ], [ %5, %for.body.lr.ph.i ]
  br label %for.body.i

vector.ph158:                                     ; preds = %for.body.lr.ph.i
  %11 = add i32 %8, 1
  %12 = and i32 %11, 3
  %n.mod.vf159 = zext i32 %12 to i64
  %n.vec160 = sub nsw i64 %10, %n.mod.vf159
  %minmax.ident.splat180 = shufflevector <2 x double> %5, <2 x double> undef, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %minmax.ident.splat189 = shufflevector <2 x double> %5, <2 x double> undef, <4 x i32> zeroinitializer
  %minmax.ident.splat198 = shufflevector <2 x double> %3, <2 x double> undef, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %minmax.ident.splat207 = shufflevector <2 x double> %3, <2 x double> undef, <4 x i32> zeroinitializer
  br label %vector.body154

vector.body154:                                   ; preds = %vector.body154, %vector.ph158
  %index161 = phi i64 [ 0, %vector.ph158 ], [ %index.next162, %vector.body154 ]
  %vec.phi170 = phi <4 x double> [ %minmax.ident.splat180, %vector.ph158 ], [ %23, %vector.body154 ]
  %vec.phi171 = phi <4 x double> [ %minmax.ident.splat189, %vector.ph158 ], [ %21, %vector.body154 ]
  %vec.phi172 = phi <4 x double> [ %minmax.ident.splat198, %vector.ph158 ], [ %19, %vector.body154 ]
  %vec.phi173 = phi <4 x double> [ %minmax.ident.splat207, %vector.ph158 ], [ %17, %vector.body154 ]
  %13 = add i64 %index161, %6
  %14 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %g.coerce, i64 %13, i32 0, i32 0
  %15 = bitcast double* %14 to <16 x double>*
  %wide.vec174 = load <16 x double>, <16 x double>* %15, align 8, !noalias !187
  %strided.vec175 = shufflevector <16 x double> %wide.vec174, <16 x double> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec176 = shufflevector <16 x double> %wide.vec174, <16 x double> undef, <4 x i32> <i32 1, i32 5, i32 9, i32 13>
  %strided.vec177 = shufflevector <16 x double> %wide.vec174, <16 x double> undef, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %strided.vec178 = shufflevector <16 x double> %wide.vec174, <16 x double> undef, <4 x i32> <i32 3, i32 7, i32 11, i32 15>
  %16 = fcmp fast ogt <4 x double> %vec.phi173, %strided.vec175
  %17 = select <4 x i1> %16, <4 x double> %strided.vec175, <4 x double> %vec.phi173
  %18 = fcmp fast ogt <4 x double> %vec.phi172, %strided.vec176
  %19 = select <4 x i1> %18, <4 x double> %strided.vec176, <4 x double> %vec.phi172
  %20 = fcmp fast olt <4 x double> %vec.phi171, %strided.vec177
  %21 = select <4 x i1> %20, <4 x double> %strided.vec177, <4 x double> %vec.phi171
  %22 = fcmp fast olt <4 x double> %vec.phi170, %strided.vec178
  %23 = select <4 x i1> %22, <4 x double> %strided.vec178, <4 x double> %vec.phi170
  %index.next162 = add i64 %index161, 4
  %24 = icmp eq i64 %index.next162, %n.vec160
  br i1 %24, label %middle.block155, label %vector.body154, !llvm.loop !190

middle.block155:                                  ; preds = %vector.body154
  %ind.end164 = add nsw i64 %n.vec160, %6
  %rdx.shuf208 = shufflevector <4 x double> %17, <4 x double> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %rdx.minmax.cmp209 = fcmp fast olt <4 x double> %17, %rdx.shuf208
  %rdx.minmax.select210 = select <4 x i1> %rdx.minmax.cmp209, <4 x double> %17, <4 x double> %rdx.shuf208
  %rdx.shuf211 = shufflevector <4 x double> %rdx.minmax.select210, <4 x double> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp212 = fcmp fast olt <4 x double> %rdx.minmax.select210, %rdx.shuf211
  %rdx.minmax.select213 = select <4 x i1> %rdx.minmax.cmp212, <4 x double> %rdx.minmax.select210, <4 x double> %rdx.shuf211
  %rdx.shuf199 = shufflevector <4 x double> %19, <4 x double> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %rdx.minmax.cmp200 = fcmp fast olt <4 x double> %19, %rdx.shuf199
  %rdx.minmax.select201 = select <4 x i1> %rdx.minmax.cmp200, <4 x double> %19, <4 x double> %rdx.shuf199
  %rdx.shuf202 = shufflevector <4 x double> %rdx.minmax.select201, <4 x double> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp203 = fcmp fast olt <4 x double> %rdx.minmax.select201, %rdx.shuf202
  %rdx.minmax.select204 = select <4 x i1> %rdx.minmax.cmp203, <4 x double> %rdx.minmax.select201, <4 x double> %rdx.shuf202
  %rdx.shuf190 = shufflevector <4 x double> %21, <4 x double> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %rdx.minmax.cmp191 = fcmp fast ogt <4 x double> %21, %rdx.shuf190
  %rdx.minmax.select192 = select <4 x i1> %rdx.minmax.cmp191, <4 x double> %21, <4 x double> %rdx.shuf190
  %rdx.shuf193 = shufflevector <4 x double> %rdx.minmax.select192, <4 x double> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp194 = fcmp fast ogt <4 x double> %rdx.minmax.select192, %rdx.shuf193
  %rdx.minmax.select195 = select <4 x i1> %rdx.minmax.cmp194, <4 x double> %rdx.minmax.select192, <4 x double> %rdx.shuf193
  %rdx.shuf181 = shufflevector <4 x double> %23, <4 x double> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %rdx.minmax.cmp182 = fcmp fast ogt <4 x double> %23, %rdx.shuf181
  %rdx.minmax.select183 = select <4 x i1> %rdx.minmax.cmp182, <4 x double> %23, <4 x double> %rdx.shuf181
  %rdx.shuf184 = shufflevector <4 x double> %rdx.minmax.select183, <4 x double> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp185 = fcmp fast ogt <4 x double> %rdx.minmax.select183, %rdx.shuf184
  %rdx.minmax.select186 = select <4 x i1> %rdx.minmax.cmp185, <4 x double> %rdx.minmax.select183, <4 x double> %rdx.shuf184
  %cmp.n165 = icmp eq i32 %12, 0
  %25 = shufflevector <4 x double> %rdx.minmax.select213, <4 x double> %rdx.minmax.select204, <2 x i32> <i32 0, i32 4>
  %26 = shufflevector <4 x double> %rdx.minmax.select195, <4 x double> %rdx.minmax.select186, <2 x i32> <i32 0, i32 4>
  br i1 %cmp.n165, label %for.cond.for.cond.cleanup_crit_edge.i, label %for.body.i.preheader

for.cond.for.cond.cleanup_crit_edge.i:            ; preds = %for.body.i, %middle.block155
  %27 = phi <2 x double> [ %25, %middle.block155 ], [ %36, %for.body.i ]
  %28 = phi <2 x double> [ %26, %middle.block155 ], [ %38, %for.body.i ]
  store <2 x double> %27, <2 x double>* %2, align 8, !alias.scope !187
  store <2 x double> %28, <2 x double>* %4, align 8, !alias.scope !187
  br label %cleanup

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ %indvars.iv.i.ph, %for.body.i.preheader ]
  %29 = phi <2 x double> [ %36, %for.body.i ], [ %.ph, %for.body.i.preheader ]
  %30 = phi <2 x double> [ %38, %for.body.i ], [ %.ph271, %for.body.i.preheader ]
  %agg.tmp1.sroa.0.0..sroa_idx.i = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %g.coerce, i64 %indvars.iv.i, i32 0, i32 0
  %31 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i to <2 x double>*
  %32 = load <2 x double>, <2 x double>* %31, align 8, !noalias !187
  %agg.tmp1.sroa.3.0..sroa_idx36.i = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %g.coerce, i64 %indvars.iv.i, i32 1, i32 0
  %33 = bitcast double* %agg.tmp1.sroa.3.0..sroa_idx36.i to <2 x double>*
  %34 = load <2 x double>, <2 x double>* %33, align 8, !noalias !187
  %35 = fcmp fast ogt <2 x double> %29, %32
  %36 = select <2 x i1> %35, <2 x double> %32, <2 x double> %29
  %37 = fcmp fast olt <2 x double> %30, %34
  %38 = select <2 x i1> %37, <2 x double> %34, <2 x double> %30
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, 1
  %lftr.wideiv.i = trunc i64 %indvars.iv.next.i to i32
  %exitcond.i = icmp eq i32 %lftr.wideiv.i, %e
  br i1 %exitcond.i, label %for.cond.for.cond.cleanup_crit_edge.i, label %for.body.i, !llvm.loop !191

pfor.detach.lr.ph:                                ; preds = %entry
  %39 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8 = shl i32 %39, 3
  %conv = sext i32 %add to i64
  %mul = shl nsw i64 %conv, 5
  %call = tail call noalias i8* @malloc(i64 %mul) #2
  %40 = bitcast i8* %call to %"struct.std::pair"*
  %41 = sext i32 %s to i64
  %42 = sext i32 %e to i64
  %43 = sext i32 %div to i64
  %44 = sub i32 -2, %s
  %45 = icmp sgt i64 %43, 0
  %smax = select i1 %45, i64 %43, i64 0
  %46 = zext i32 %__cilkrts_wc8 to i64
  %47 = add nsw i64 %smax, -1
  %48 = add nsw i64 %47, %46
  %49 = udiv i64 %48, %46
  %50 = icmp ult i64 %49, 2048
  %51 = select i1 %50, i64 %49, i64 2048
  tail call fastcc void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2__pfor.detach.ls(i64 0, i64 %smax, i64 %51, i32 %44, i64 %41, i64 %42, i32 %e, %"struct.std::pair"* %g.coerce, %"struct.std::pair"* %40)
  %52 = bitcast %"struct.std::pair"* %r to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %52) #2
  call void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_(%"struct.std::pair"* nonnull sret %r, i32 0, i32 %add, %"struct.std::pair"* %40)
  call void @free(i8* %call) #2
  %53 = bitcast %"struct.std::pair"* %agg.result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* nonnull %52, i64 32, i32 8, i1 false), !tbaa.struct !103
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52) #2
  br label %cleanup

cleanup:                                          ; preds = %for.cond.for.cond.cleanup_crit_edge.i, %if.then, %pfor.detach.lr.ph
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi(%struct.vertex.16** %S, i32 %count, i32 %quadrants, i32 %logdivs, double %size, double %center.coerce0, double %center.coerce1, i32* %offsets) local_unnamed_addr #7 comdat align 2 {
entry:
  %0 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8142 = shl i32 %0, 3
  %conv = sext i32 %count to i64
  %mul = shl nsw i64 %conv, 4
  %call = tail call noalias i8* @malloc(i64 %mul) #2
  %1 = bitcast i8* %call to %"struct.std::pair.23"*
  %shl = shl i32 1, %logdivs
  %div2.neg.neg = fmul fast double %size, 5.000000e-01
  %cmp87 = icmp sgt i32 %count, 0
  br i1 %cmp87, label %pfor.detach.lr.ph, label %sync.continue

pfor.detach.lr.ph:                                ; preds = %entry
  %cmp47.i = icmp sgt i32 %logdivs, 0
  %wide.trip.count92 = zext i32 %count to i64
  br i1 %cmp47.i, label %pfor.detach.us.preheader, label %pfor.detach.preheader

pfor.detach.preheader:                            ; preds = %pfor.detach.lr.ph
  %2 = add nsw i64 %wide.trip.count92, -1
  %3 = zext i32 %__cilkrts_wc8142 to i64
  %4 = add nsw i64 %wide.trip.count92, -2
  %5 = add nsw i64 %4, %3
  %6 = udiv i64 %5, %3
  %7 = icmp ult i64 %6, 2048
  %8 = select i1 %7, i64 %6, i64 2048
  tail call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.ls(i64 0, i64 %2, i64 %8, %struct.vertex.16** %S, %"struct.std::pair.23"* %1)
  br label %sync.continue

pfor.detach.us.preheader:                         ; preds = %pfor.detach.lr.ph
  %add9.i.neg = fsub fast double %div2.neg.neg, %center.coerce1
  %sub3.i = add nsw i32 %shl, -1
  %conv1 = sitofp i32 %shl to double
  %div = fdiv fast double %size, %conv1
  %9 = fdiv fast double 1.000000e+00, %div
  %add.i.neg = fsub fast double %div2.neg.neg, %center.coerce0
  %min.iters.check = icmp ult i32 %logdivs, 32
  %n.vec = and i32 %logdivs, -32
  %cmp.n = icmp eq i32 %n.vec, %logdivs
  %10 = add nsw i64 %wide.trip.count92, -1
  %11 = zext i32 %__cilkrts_wc8142 to i64
  %12 = add nsw i64 %wide.trip.count92, -2
  %13 = add nsw i64 %12, %11
  %14 = udiv i64 %13, %11
  %15 = icmp ult i64 %14, 2048
  %16 = select i1 %15, i64 %14, i64 2048
  tail call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.us.ls(i64 0, i64 %10, i64 %16, %struct.vertex.16** %S, double %add.i.neg, double %9, i32 %sub3.i, double %add9.i.neg, i1 %min.iters.check, i32 %n.vec, i1 %cmp.n, i32 %logdivs, %"struct.std::pair.23"* %1)
  br label %sync.continue

sync.continue:                                    ; preds = %entry, %pfor.detach.us.preheader, %pfor.detach.preheader
  %conv17 = sext i32 %quadrants to i64
  %cmp.i.i.i = icmp eq i32 %count, 2147483647
  %cond.i.i.i = select i1 %cmp.i.i.i, i64 8, i64 4
  %div.i.i.i = sdiv i64 %conv, 2048
  %add.i.i.i = add nsw i64 %div.i.i.i, 1
  %mul112.i.i.i = or i64 %cond.i.i.i, 16
  %add2.i.i.i = mul nsw i64 %mul112.i.i.i, %conv
  %mul3.i.i.i = shl nuw nsw i64 %cond.i.i.i, 8
  %mul4.i.i.i = mul nsw i64 %mul3.i.i.i, %add.i.i.i
  %add5.i.i.i = add nsw i64 %add2.i.i.i, %mul4.i.i.i
  %call1.i.i = tail call noalias i8* @malloc(i64 %add5.i.i.i) #2
  tail call void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1_(%"struct.std::pair.23"* %1, i32* %offsets, i64 %conv, i64 %conv17, i1 zeroext false, i8* %call1.i.i) #2
  tail call void @free(i8* %call1.i.i) #2
  br i1 %cmp87, label %pfor.detach30.lr.ph, label %sync.continue43

pfor.detach30.lr.ph:                              ; preds = %sync.continue
  %wide.trip.count = zext i32 %count to i64
  %17 = add nsw i64 %wide.trip.count, -1
  %18 = zext i32 %__cilkrts_wc8142 to i64
  %19 = add nsw i64 %wide.trip.count, -2
  %20 = add nsw i64 %19, %18
  %21 = udiv i64 %20, %18
  %22 = icmp ult i64 %21, 2048
  %23 = select i1 %22, i64 %21, i64 2048
  tail call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach30.ls(i64 0, i64 %17, i64 %23, %"struct.std::pair.23"* %1, %struct.vertex.16** %S)
  br label %sync.continue43

sync.continue43:                                  ; preds = %sync.continue, %pfor.detach30.lr.ph
  tail call void @free(i8* %call) #2
  ret void
}

; Function Attrs: nounwind stealable uwtable
define linkonce_odr void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii(%class.gTreeNode.18* %this, %struct.vertex.16** %S.coerce0, i64 %S.coerce1, i32* %offsets, i32 %quadrants, %class.gTreeNode.18* %newNodes, %class.gTreeNode.18* %parent, i32 %nodesToLeft, i32 %height, i32 %depth) local_unnamed_addr #15 comdat align 2 {
entry:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %entry
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %entry, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %entry ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %entry ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %__dnew.i.i.i.i.i = alloca i64, align 8
  %agg.tmp.i = alloca %"class.std::__cxx11::basic_string", align 8
  %count = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %parent, i64 0, i32 3
  store i32 0, i32* %count, align 4, !tbaa !162
  %cmp = icmp eq i32 %height, 1
  %size = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %parent, i64 0, i32 1
  %x.i = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %parent, i64 0, i32 0, i32 0
  %y.i = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %parent, i64 0, i32 0, i32 1
  %shl7 = shl i32 %nodesToLeft, 2
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %__cilkrts_enter_frame_1.exit
  %sub = add nsw i32 %quadrants, -1
  %9 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp.i to i8*
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp.i, i64 0, i32 2
  %11 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp.i to %union.anon.1**
  %12 = bitcast %union.anon.1* %10 to i8*
  %13 = bitcast i64* %__dnew.i.i.i.i.i to i8*
  %_M_p.i13.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp.i, i64 0, i32 0, i32 0
  %_M_allocated_capacity.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp.i, i64 0, i32 2, i32 0
  %_M_string_length.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp.i, i64 0, i32 1
  %14 = sext i32 %shl7 to i64
  %15 = load double, double* %size, align 8, !tbaa !173
  %div = fmul fast double %15, 2.500000e-01
  %16 = load double, double* %x.i, align 8, !tbaa !90
  %add.i = fsub fast double %16, %div
  %17 = load double, double* %y.i, align 8, !tbaa !91
  %add9.i = fsub fast double %17, %div
  %cmp8 = icmp eq i32 %shl7, %sub
  br i1 %cmp8, label %cond.end, label %cond.false

cond.false:                                       ; preds = %if.then
  %18 = or i64 %14, 1
  %arrayidx = getelementptr inbounds i32, i32* %offsets, i64 %18
  %19 = load i32, i32* %arrayidx, align 4, !tbaa !59
  %conv = sext i32 %19 to i64
  br label %cond.end

cond.end:                                         ; preds = %if.then, %cond.false
  %cond = phi i64 [ %conv, %cond.false ], [ %S.coerce1, %if.then ]
  %arrayidx11 = getelementptr inbounds i32, i32* %offsets, i64 %14
  %20 = load i32, i32* %arrayidx11, align 4, !tbaa !59
  %21 = trunc i64 %cond to i32
  %conv14 = sub i32 %21, %20
  %idx.ext = sext i32 %20 to i64
  %add.ptr = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %S.coerce0, i64 %idx.ext
  %conv18 = sext i32 %conv14 to i64
  %add.ptr20 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %newNodes, i64 %14
  %arrayidx22 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %parent, i64 0, i32 4, i64 0
  store %class.gTreeNode.18* %add.ptr20, %class.gTreeNode.18** %arrayidx22, align 8, !tbaa !53
  %div25 = fmul fast double %15, 5.000000e-01
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9)
  store %union.anon.1* %10, %union.anon.1** %11, align 8, !tbaa !47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #2
  store i64 17, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !49
  %call5.i.i.i.i.i = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp.i, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i.i, i64 0) #2
  store i8* %call5.i.i.i.i.i, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %22 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !49
  store i64 %22, i64* %_M_allocated_capacity.i.i.i.i.i.i, align 8, !tbaa !22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call5.i.i.i.i.i, i8* nonnull getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i64 17, i32 1, i1 false) #2
  store i64 %22, i64* %_M_string_length.i.i.i.i.i.i.i, align 8, !tbaa !52
  %23 = load i8*, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds i8, i8* %23, i64 %22
  store i8 0, i8* %arrayidx.i.i.i.i.i.i, align 1, !tbaa !22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #2
  %24 = load i8*, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %cmp.i.i.i.i = icmp eq i8* %24, %12
  br i1 %cmp.i.i.i.i, label %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %cond.end
  call void @_ZdlPv(i8* %24) #2
  br label %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit

_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit: ; preds = %cond.end, %if.then.i.i.i
  %add.ptr.i = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %add.ptr20, i64 1
  call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i(%class.gTreeNode.18* %add.ptr20, %struct.vertex.16** %add.ptr, i64 %conv18, double %add.i, double %add9.i, double %div25, %class.gTreeNode.18* nonnull %add.ptr.i, i32 0) #2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9)
  %25 = load double, double* %size, align 8, !tbaa !173
  %div.1 = fmul fast double %25, 2.500000e-01
  %26 = load double, double* %x.i, align 8, !tbaa !90
  %add.i.1 = fadd fast double %div.1, %26
  %27 = load double, double* %y.i, align 8, !tbaa !91
  %add9.i.1 = fsub fast double %27, %div.1
  %28 = or i64 %14, 1
  %29 = trunc i64 %28 to i32
  %cmp8.1 = icmp eq i32 %sub, %29
  br i1 %cmp8.1, label %cond.end.1, label %cond.false.1

if.else:                                          ; preds = %__cilkrts_enter_frame_1.exit
  %idx.ext47 = sext i32 %shl7 to i64
  %add70 = add nsw i32 %depth, 1
  %sub69 = add nsw i32 %height, -1
  %mul58 = shl nsw i32 %depth, 1
  %shl59 = shl i32 1, %mul58
  %idx.ext60 = sext i32 %shl59 to i64
  %add.ptr61 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %newNodes, i64 %idx.ext60
  %30 = load double, double* %size, align 8, !tbaa !173
  %div40 = fmul fast double %30, 2.500000e-01
  %31 = bitcast %class.gTreeNode.18* %parent to <2 x double>*
  %32 = load <2 x double>, <2 x double>* %31, align 8, !tbaa !18
  %33 = insertelement <2 x double> undef, double %div40, i32 0
  %34 = shufflevector <2 x double> %33, <2 x double> undef, <2 x i32> zeroinitializer
  %35 = fsub fast <2 x double> %32, %34
  %add.ptr48 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %newNodes, i64 %idx.ext47
  %div51 = fmul fast double %30, 5.000000e-01
  %cnt.i.i = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %newNodes, i64 %idx.ext47, i32 2, i32 0
  store i32 0, i32* %cnt.i.i, align 4, !tbaa !172
  %count.i = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %newNodes, i64 %idx.ext47, i32 3
  store i32 0, i32* %count.i, align 4, !tbaa !162
  %size.i = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %newNodes, i64 %idx.ext47, i32 1
  store double %div51, double* %size.i, align 8, !tbaa !173
  %36 = bitcast %class.gTreeNode.18* %add.ptr48 to <2 x double>*
  store <2 x double> %35, <2 x double>* %36, align 8
  %vertices.i = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %newNodes, i64 %idx.ext47, i32 5
  %37 = bitcast %struct.vertex.16*** %vertices.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull %37, i8 0, i64 16, i32 8, i1 false) #2
  %arrayidx54 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %parent, i64 0, i32 4, i64 0
  store %class.gTreeNode.18* %add.ptr48, %class.gTreeNode.18** %arrayidx54, align 8, !tbaa !53
  %38 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %39 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %38, i16* nonnull %39) #2
  %40 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %41 = call i8* @llvm.frameaddress(i32 0)
  %42 = getelementptr inbounds [5 x i8*], [5 x i8*]* %40, i64 0, i64 0
  store volatile i8* %41, i8** %42, align 8
  %43 = call i8* @llvm.stacksave()
  %44 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %43, i8** %44, align 8
  %45 = bitcast [5 x i8*]* %40 to i8*
  %46 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %45) #23
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %if.else.split, label %det.cont72

if.else.split:                                    ; preds = %if.else
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii_det.achd71.cilk(%class.gTreeNode.18* %this, %struct.vertex.16** %S.coerce0, i64 %S.coerce1, i32* %offsets, i32 %quadrants, %class.gTreeNode.18* nonnull %add.ptr61, %class.gTreeNode.18* %add.ptr48, i32 %shl7, i32 %sub69, i32 %add70)
  br label %det.cont72

det.cont72:                                       ; preds = %if.else.split, %if.else
  %48 = load double, double* %size, align 8, !tbaa !173
  %div40.1 = fmul fast double %48, 2.500000e-01
  %49 = load double, double* %x.i, align 8, !tbaa !90
  %add.i175.1 = fadd fast double %div40.1, %49
  %50 = load double, double* %y.i, align 8, !tbaa !91
  %add9.i180.1 = fsub fast double %50, %div40.1
  %add.ptr43.1 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %newNodes, i64 1
  %add.ptr48.1 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %add.ptr43.1, i64 %idx.ext47
  %div51.1 = fmul fast double %48, 5.000000e-01
  %cnt.i.i.1 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %add.ptr48.1, i64 0, i32 2, i32 0
  store i32 0, i32* %cnt.i.i.1, align 4, !tbaa !172
  %count.i.1 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %add.ptr48.1, i64 0, i32 3
  store i32 0, i32* %count.i.1, align 4, !tbaa !162
  %size.i.1 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %add.ptr48.1, i64 0, i32 1
  store double %div51.1, double* %size.i.1, align 8, !tbaa !173
  %cnt.sroa.0.0..sroa_idx.i.1 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %add.ptr48.1, i64 0, i32 0, i32 0
  store double %add.i175.1, double* %cnt.sroa.0.0..sroa_idx.i.1, align 8
  %cnt.sroa.2.0..sroa_idx3.i.1 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %add.ptr48.1, i64 0, i32 0, i32 1
  store double %add9.i180.1, double* %cnt.sroa.2.0..sroa_idx3.i.1, align 8
  %vertices.i.1 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %add.ptr48.1, i64 0, i32 5
  %51 = bitcast %struct.vertex.16*** %vertices.i.1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull %51, i8 0, i64 16, i32 8, i1 false) #2
  %arrayidx54.1 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %parent, i64 0, i32 4, i64 1
  store %class.gTreeNode.18* %add.ptr48.1, %class.gTreeNode.18** %arrayidx54.1, align 8, !tbaa !53
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %38, i16* nonnull %39) #2
  store volatile i8* %41, i8** %42, align 8
  %52 = call i8* @llvm.stacksave()
  store volatile i8* %52, i8** %44, align 8
  %53 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %45) #23
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %det.cont72.split, label %det.cont72.1

det.cont72.split:                                 ; preds = %det.cont72
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii_det.achd71.1.cilk(i32 %shl7, %class.gTreeNode.18* %this, %struct.vertex.16** %S.coerce0, i64 %S.coerce1, i32* %offsets, i32 %quadrants, %class.gTreeNode.18* nonnull %add.ptr61, %class.gTreeNode.18* nonnull %add.ptr48.1, i32 %sub69, i32 %add70)
  br label %det.cont72.1

if.end:                                           ; preds = %det.cont72.2, %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.3
  %55 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %56 = load atomic i32, i32* %55 acquire, align 8
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %if.end
  %59 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %60 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %61 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %60, i16* nonnull %61) #2
  %62 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %63 = call i8* @llvm.frameaddress(i32 0) #2
  %64 = getelementptr inbounds [5 x i8*], [5 x i8*]* %62, i64 0, i64 0
  store volatile i8* %63, i8** %64, align 8
  %65 = call i8* @llvm.stacksave() #2
  %66 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %65, i8** %66, align 8
  %67 = bitcast [5 x i8*]* %62 to i8*
  %68 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %67) #24
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %if.end, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %70 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %71 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %70, i64 0, i32 12, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* %71, align 8
  %cnt.i = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %parent, i64 0, i32 2, i32 0
  %arrayidx88 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %parent, i64 0, i32 4, i64 0
  %74 = load %class.gTreeNode.18*, %class.gTreeNode.18** %arrayidx88, align 8, !tbaa !53
  %agg.tmp85.sroa.0.0..sroa_idx = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %74, i64 0, i32 2, i32 0
  %agg.tmp85.sroa.0.0.copyload = load i32, i32* %agg.tmp85.sroa.0.0..sroa_idx, align 4
  %75 = load i32, i32* %cnt.i, align 4, !tbaa !172
  %add.i183 = add nsw i32 %75, %agg.tmp85.sroa.0.0.copyload
  store i32 %add.i183, i32* %cnt.i, align 4
  %count96 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %74, i64 0, i32 3
  %76 = load i32, i32* %count96, align 4, !tbaa !162
  %77 = load i32, i32* %count, align 4, !tbaa !162
  %add98 = add nsw i32 %77, %76
  store i32 %add98, i32* %count, align 4, !tbaa !162
  %arrayidx88.1 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %parent, i64 0, i32 4, i64 1
  %78 = load %class.gTreeNode.18*, %class.gTreeNode.18** %arrayidx88.1, align 8, !tbaa !53
  %agg.tmp85.sroa.0.0..sroa_idx.1 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %78, i64 0, i32 2, i32 0
  %agg.tmp85.sroa.0.0.copyload.1 = load i32, i32* %agg.tmp85.sroa.0.0..sroa_idx.1, align 4
  %add.i183.1 = add nsw i32 %agg.tmp85.sroa.0.0.copyload.1, %add.i183
  store i32 %add.i183.1, i32* %cnt.i, align 4
  %count96.1 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %78, i64 0, i32 3
  %79 = load i32, i32* %count96.1, align 4, !tbaa !162
  %add98.1 = add nsw i32 %79, %add98
  store i32 %add98.1, i32* %count, align 4, !tbaa !162
  %arrayidx88.2 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %parent, i64 0, i32 4, i64 2
  %80 = load %class.gTreeNode.18*, %class.gTreeNode.18** %arrayidx88.2, align 8, !tbaa !53
  %agg.tmp85.sroa.0.0..sroa_idx.2 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %80, i64 0, i32 2, i32 0
  %agg.tmp85.sroa.0.0.copyload.2 = load i32, i32* %agg.tmp85.sroa.0.0..sroa_idx.2, align 4
  %add.i183.2 = add nsw i32 %agg.tmp85.sroa.0.0.copyload.2, %add.i183.1
  store i32 %add.i183.2, i32* %cnt.i, align 4
  %count96.2 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %80, i64 0, i32 3
  %81 = load i32, i32* %count96.2, align 4, !tbaa !162
  %add98.2 = add nsw i32 %81, %add98.1
  store i32 %add98.2, i32* %count, align 4, !tbaa !162
  %arrayidx88.3 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %parent, i64 0, i32 4, i64 3
  %82 = load %class.gTreeNode.18*, %class.gTreeNode.18** %arrayidx88.3, align 8, !tbaa !53
  %agg.tmp85.sroa.0.0..sroa_idx.3 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %82, i64 0, i32 2, i32 0
  %agg.tmp85.sroa.0.0.copyload.3 = load i32, i32* %agg.tmp85.sroa.0.0..sroa_idx.3, align 4
  %add.i183.3 = add nsw i32 %agg.tmp85.sroa.0.0.copyload.3, %add.i183.2
  store i32 %add.i183.3, i32* %cnt.i, align 4
  %count96.3 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %82, i64 0, i32 3
  %83 = load i32, i32* %count96.3, align 4, !tbaa !162
  %add98.3 = add nsw i32 %83, %add98.2
  store i32 %add98.3, i32* %count, align 4, !tbaa !162
  %cmp103 = icmp eq i32 %add98.3, 0
  br i1 %cmp103, label %if.then104, label %if.end106

if.then104:                                       ; preds = %__cilk_sync_nothrow.exit
  %vertices = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %parent, i64 0, i32 5
  store %struct.vertex.16** %S.coerce0, %struct.vertex.16*** %vertices, align 8, !tbaa !176
  br label %if.end106

if.end106:                                        ; preds = %if.then104, %__cilk_sync_nothrow.exit
  %84 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %85 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %84, i64 0, i32 9
  %88 = bitcast %struct.__cilkrts_stack_frame** %87 to i64*
  store atomic i64 %86, i64* %88 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %89 = load atomic i32, i32* %55 acquire, align 8
  %90 = icmp eq i32 %89, 16777216
  br i1 %90, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.end106
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.end106, %body.i
  ret void

cond.false.1:                                     ; preds = %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit
  %91 = add nsw i64 %28, 1
  %arrayidx.1 = getelementptr inbounds i32, i32* %offsets, i64 %91
  %92 = load i32, i32* %arrayidx.1, align 4, !tbaa !59
  %conv.1 = sext i32 %92 to i64
  br label %cond.end.1

cond.end.1:                                       ; preds = %cond.false.1, %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit
  %cond.1 = phi i64 [ %conv.1, %cond.false.1 ], [ %S.coerce1, %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit ]
  %arrayidx11.1 = getelementptr inbounds i32, i32* %offsets, i64 %28
  %93 = load i32, i32* %arrayidx11.1, align 4, !tbaa !59
  %94 = trunc i64 %cond.1 to i32
  %conv14.1 = sub i32 %94, %93
  %idx.ext.1 = sext i32 %93 to i64
  %add.ptr.1 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %S.coerce0, i64 %idx.ext.1
  %conv18.1 = sext i32 %conv14.1 to i64
  %add.ptr20.1 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %newNodes, i64 %28
  %arrayidx22.1 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %parent, i64 0, i32 4, i64 1
  store %class.gTreeNode.18* %add.ptr20.1, %class.gTreeNode.18** %arrayidx22.1, align 8, !tbaa !53
  %div25.1 = fmul fast double %25, 5.000000e-01
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9)
  store %union.anon.1* %10, %union.anon.1** %11, align 8, !tbaa !47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #2
  store i64 17, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !49
  %call5.i.i.i.i.i.1 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp.i, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i.i, i64 0) #2
  store i8* %call5.i.i.i.i.i.1, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %95 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !49
  store i64 %95, i64* %_M_allocated_capacity.i.i.i.i.i.i, align 8, !tbaa !22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call5.i.i.i.i.i.1, i8* nonnull getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i64 17, i32 1, i1 false) #2
  store i64 %95, i64* %_M_string_length.i.i.i.i.i.i.i, align 8, !tbaa !52
  %96 = load i8*, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %arrayidx.i.i.i.i.i.i.1 = getelementptr inbounds i8, i8* %96, i64 %95
  store i8 0, i8* %arrayidx.i.i.i.i.i.i.1, align 1, !tbaa !22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #2
  %97 = load i8*, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %cmp.i.i.i.i.1 = icmp eq i8* %97, %12
  br i1 %cmp.i.i.i.i.1, label %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.1, label %if.then.i.i.i.1

if.then.i.i.i.1:                                  ; preds = %cond.end.1
  call void @_ZdlPv(i8* %97) #2
  br label %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.1

_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.1: ; preds = %if.then.i.i.i.1, %cond.end.1
  %add.ptr.i.1 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %add.ptr20.1, i64 1
  call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i(%class.gTreeNode.18* nonnull %add.ptr20.1, %struct.vertex.16** %add.ptr.1, i64 %conv18.1, double %add.i.1, double %add9.i.1, double %div25.1, %class.gTreeNode.18* nonnull %add.ptr.i.1, i32 0) #2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9)
  %98 = load double, double* %size, align 8, !tbaa !173
  %div.2 = fmul fast double %98, 2.500000e-01
  %99 = load double, double* %x.i, align 8, !tbaa !90
  %add.i.2 = fsub fast double %99, %div.2
  %100 = load double, double* %y.i, align 8, !tbaa !91
  %add9.i.2 = fadd fast double %100, %div.2
  %101 = or i64 %14, 2
  %102 = trunc i64 %101 to i32
  %cmp8.2 = icmp eq i32 %sub, %102
  br i1 %cmp8.2, label %cond.end.2, label %cond.false.2

cond.false.2:                                     ; preds = %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.1
  %103 = or i64 %14, 3
  %arrayidx.2 = getelementptr inbounds i32, i32* %offsets, i64 %103
  %104 = load i32, i32* %arrayidx.2, align 4, !tbaa !59
  %conv.2 = sext i32 %104 to i64
  br label %cond.end.2

cond.end.2:                                       ; preds = %cond.false.2, %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.1
  %cond.2 = phi i64 [ %conv.2, %cond.false.2 ], [ %S.coerce1, %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.1 ]
  %arrayidx11.2 = getelementptr inbounds i32, i32* %offsets, i64 %101
  %105 = load i32, i32* %arrayidx11.2, align 4, !tbaa !59
  %106 = trunc i64 %cond.2 to i32
  %conv14.2 = sub i32 %106, %105
  %idx.ext.2 = sext i32 %105 to i64
  %add.ptr.2 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %S.coerce0, i64 %idx.ext.2
  %conv18.2 = sext i32 %conv14.2 to i64
  %add.ptr20.2 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %newNodes, i64 %101
  %arrayidx22.2 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %parent, i64 0, i32 4, i64 2
  store %class.gTreeNode.18* %add.ptr20.2, %class.gTreeNode.18** %arrayidx22.2, align 8, !tbaa !53
  %div25.2 = fmul fast double %98, 5.000000e-01
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9)
  store %union.anon.1* %10, %union.anon.1** %11, align 8, !tbaa !47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #2
  store i64 17, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !49
  %call5.i.i.i.i.i.2 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp.i, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i.i, i64 0) #2
  store i8* %call5.i.i.i.i.i.2, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %107 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !49
  store i64 %107, i64* %_M_allocated_capacity.i.i.i.i.i.i, align 8, !tbaa !22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call5.i.i.i.i.i.2, i8* nonnull getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i64 17, i32 1, i1 false) #2
  store i64 %107, i64* %_M_string_length.i.i.i.i.i.i.i, align 8, !tbaa !52
  %108 = load i8*, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %arrayidx.i.i.i.i.i.i.2 = getelementptr inbounds i8, i8* %108, i64 %107
  store i8 0, i8* %arrayidx.i.i.i.i.i.i.2, align 1, !tbaa !22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #2
  %109 = load i8*, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %cmp.i.i.i.i.2 = icmp eq i8* %109, %12
  br i1 %cmp.i.i.i.i.2, label %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.2, label %if.then.i.i.i.2

if.then.i.i.i.2:                                  ; preds = %cond.end.2
  call void @_ZdlPv(i8* %109) #2
  br label %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.2

_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.2: ; preds = %if.then.i.i.i.2, %cond.end.2
  %add.ptr.i.2 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %add.ptr20.2, i64 1
  call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i(%class.gTreeNode.18* nonnull %add.ptr20.2, %struct.vertex.16** %add.ptr.2, i64 %conv18.2, double %add.i.2, double %add9.i.2, double %div25.2, %class.gTreeNode.18* nonnull %add.ptr.i.2, i32 0) #2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9)
  %110 = load double, double* %size, align 8, !tbaa !173
  %div.3 = fmul fast double %110, 2.500000e-01
  %111 = load double, double* %x.i, align 8, !tbaa !90
  %add.i.3 = fadd fast double %div.3, %111
  %112 = load double, double* %y.i, align 8, !tbaa !91
  %add9.i.3 = fadd fast double %112, %div.3
  %113 = or i64 %14, 3
  %114 = trunc i64 %113 to i32
  %cmp8.3 = icmp eq i32 %sub, %114
  br i1 %cmp8.3, label %cond.end.3, label %cond.false.3

cond.false.3:                                     ; preds = %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.2
  %115 = add nsw i64 %113, 1
  %arrayidx.3 = getelementptr inbounds i32, i32* %offsets, i64 %115
  %116 = load i32, i32* %arrayidx.3, align 4, !tbaa !59
  %conv.3 = sext i32 %116 to i64
  br label %cond.end.3

cond.end.3:                                       ; preds = %cond.false.3, %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.2
  %cond.3 = phi i64 [ %conv.3, %cond.false.3 ], [ %S.coerce1, %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.2 ]
  %arrayidx11.3 = getelementptr inbounds i32, i32* %offsets, i64 %113
  %117 = load i32, i32* %arrayidx11.3, align 4, !tbaa !59
  %118 = trunc i64 %cond.3 to i32
  %conv14.3 = sub i32 %118, %117
  %idx.ext.3 = sext i32 %117 to i64
  %add.ptr.3 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %S.coerce0, i64 %idx.ext.3
  %conv18.3 = sext i32 %conv14.3 to i64
  %add.ptr20.3 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %newNodes, i64 %113
  %arrayidx22.3 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %parent, i64 0, i32 4, i64 3
  store %class.gTreeNode.18* %add.ptr20.3, %class.gTreeNode.18** %arrayidx22.3, align 8, !tbaa !53
  %div25.3 = fmul fast double %110, 5.000000e-01
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9)
  store %union.anon.1* %10, %union.anon.1** %11, align 8, !tbaa !47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #2
  store i64 17, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !49
  %call5.i.i.i.i.i.3 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp.i, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i.i, i64 0) #2
  store i8* %call5.i.i.i.i.i.3, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %119 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !49
  store i64 %119, i64* %_M_allocated_capacity.i.i.i.i.i.i, align 8, !tbaa !22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call5.i.i.i.i.i.3, i8* nonnull getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i64 17, i32 1, i1 false) #2
  store i64 %119, i64* %_M_string_length.i.i.i.i.i.i.i, align 8, !tbaa !52
  %120 = load i8*, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %arrayidx.i.i.i.i.i.i.3 = getelementptr inbounds i8, i8* %120, i64 %119
  store i8 0, i8* %arrayidx.i.i.i.i.i.i.3, align 1, !tbaa !22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #2
  %121 = load i8*, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %cmp.i.i.i.i.3 = icmp eq i8* %121, %12
  br i1 %cmp.i.i.i.i.3, label %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.3, label %if.then.i.i.i.3

if.then.i.i.i.3:                                  ; preds = %cond.end.3
  call void @_ZdlPv(i8* %121) #2
  br label %_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.3

_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit.3: ; preds = %if.then.i.i.i.3, %cond.end.3
  %add.ptr.i.3 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %add.ptr20.3, i64 1
  call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i(%class.gTreeNode.18* nonnull %add.ptr20.3, %struct.vertex.16** %add.ptr.3, i64 %conv18.3, double %add.i.3, double %add9.i.3, double %div25.3, %class.gTreeNode.18* nonnull %add.ptr.i.3, i32 0) #2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9)
  br label %if.end

det.cont72.1:                                     ; preds = %det.cont72.split, %det.cont72
  %122 = load double, double* %size, align 8, !tbaa !173
  %div40.2 = fmul fast double %122, 2.500000e-01
  %123 = load double, double* %x.i, align 8, !tbaa !90
  %add.i175.2 = fsub fast double %123, %div40.2
  %124 = load double, double* %y.i, align 8, !tbaa !91
  %add9.i180.2 = fadd fast double %124, %div40.2
  %add.ptr43.2 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %newNodes, i64 2
  %add.ptr48.2 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %add.ptr43.2, i64 %idx.ext47
  %div51.2 = fmul fast double %122, 5.000000e-01
  %cnt.i.i.2 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %add.ptr48.2, i64 0, i32 2, i32 0
  store i32 0, i32* %cnt.i.i.2, align 4, !tbaa !172
  %count.i.2 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %add.ptr48.2, i64 0, i32 3
  store i32 0, i32* %count.i.2, align 4, !tbaa !162
  %size.i.2 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %add.ptr48.2, i64 0, i32 1
  store double %div51.2, double* %size.i.2, align 8, !tbaa !173
  %cnt.sroa.0.0..sroa_idx.i.2 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %add.ptr48.2, i64 0, i32 0, i32 0
  store double %add.i175.2, double* %cnt.sroa.0.0..sroa_idx.i.2, align 8
  %cnt.sroa.2.0..sroa_idx3.i.2 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %add.ptr48.2, i64 0, i32 0, i32 1
  store double %add9.i180.2, double* %cnt.sroa.2.0..sroa_idx3.i.2, align 8
  %vertices.i.2 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %add.ptr48.2, i64 0, i32 5
  %125 = bitcast %struct.vertex.16*** %vertices.i.2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull %125, i8 0, i64 16, i32 8, i1 false) #2
  %arrayidx54.2 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %parent, i64 0, i32 4, i64 2
  store %class.gTreeNode.18* %add.ptr48.2, %class.gTreeNode.18** %arrayidx54.2, align 8, !tbaa !53
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %38, i16* nonnull %39) #2
  store volatile i8* %41, i8** %42, align 8
  %126 = call i8* @llvm.stacksave()
  store volatile i8* %126, i8** %44, align 8
  %127 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %45) #23
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %det.cont72.1.split, label %det.cont72.2

det.cont72.1.split:                               ; preds = %det.cont72.1
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii_det.achd71.2.cilk(i32 %shl7, %class.gTreeNode.18* %this, %struct.vertex.16** %S.coerce0, i64 %S.coerce1, i32* %offsets, i32 %quadrants, %class.gTreeNode.18* nonnull %add.ptr61, %class.gTreeNode.18* nonnull %add.ptr48.2, i32 %sub69, i32 %add70)
  br label %det.cont72.2

det.cont72.2:                                     ; preds = %det.cont72.1.split, %det.cont72.1
  %129 = load double, double* %size, align 8, !tbaa !173
  %div40.3 = fmul fast double %129, 2.500000e-01
  %130 = load <2 x double>, <2 x double>* %31, align 8, !tbaa !18
  %131 = insertelement <2 x double> undef, double %div40.3, i32 0
  %132 = shufflevector <2 x double> %131, <2 x double> undef, <2 x i32> zeroinitializer
  %133 = fadd fast <2 x double> %132, %130
  %add.ptr43.3 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %newNodes, i64 3
  %add.ptr48.3 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %add.ptr43.3, i64 %idx.ext47
  %div51.3 = fmul fast double %129, 5.000000e-01
  %cnt.i.i.3 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %add.ptr48.3, i64 0, i32 2, i32 0
  store i32 0, i32* %cnt.i.i.3, align 4, !tbaa !172
  %count.i.3 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %add.ptr48.3, i64 0, i32 3
  store i32 0, i32* %count.i.3, align 4, !tbaa !162
  %size.i.3 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %add.ptr48.3, i64 0, i32 1
  store double %div51.3, double* %size.i.3, align 8, !tbaa !173
  %134 = bitcast %class.gTreeNode.18* %add.ptr48.3 to <2 x double>*
  store <2 x double> %133, <2 x double>* %134, align 8
  %vertices.i.3 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %add.ptr48.3, i64 0, i32 5
  %135 = bitcast %struct.vertex.16*** %vertices.i.3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull %135, i8 0, i64 16, i32 8, i1 false) #2
  %arrayidx54.3 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %parent, i64 0, i32 4, i64 3
  store %class.gTreeNode.18* %add.ptr48.3, %class.gTreeNode.18** %arrayidx54.3, align 8, !tbaa !53
  %136 = or i32 %shl7, 3
  tail call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii(%class.gTreeNode.18* %this, %struct.vertex.16** %S.coerce0, i64 %S.coerce1, i32* %offsets, i32 %quadrants, %class.gTreeNode.18* nonnull %add.ptr61, %class.gTreeNode.18* nonnull %add.ptr48.3, i32 %136, i32 %sub69, i32 %add70)
  br label %if.end
}

; Function Attrs: nounwind stealable uwtable
define linkonce_odr void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE15sortBlocksSmallEPPS5_iS1_Pi(%struct.vertex.16** %S, i32 %count, double %center.coerce0, double %center.coerce1, i32* %offsets) local_unnamed_addr #15 comdat align 2 {
entry:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %entry
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %entry, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %entry ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %entry ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %conv = sext i32 %count to i64
  %mul = shl nsw i64 %conv, 4
  %call1 = tail call noalias i8* @malloc(i64 %mul) #2
  %9 = bitcast i8* %call1 to %"struct.std::pair.23"*
  %cmp94 = icmp sgt i32 %count, 0
  br i1 %cmp94, label %for.body.lr.ph, label %while.body32.lr.ph

for.body.lr.ph:                                   ; preds = %__cilkrts_enter_frame_1.exit
  %wide.trip.count105 = zext i32 %count to i64
  %xtraiter163 = and i64 %wide.trip.count105, 1
  %10 = icmp eq i32 %count, 1
  br i1 %10, label %for.cond.cleanup.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter165 = sub nsw i64 %wide.trip.count105, %xtraiter163
  br label %for.body

for.cond.cleanup.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv103.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next104.1, %for.body ]
  %lcmp.mod164 = icmp eq i64 %xtraiter163, 0
  br i1 %lcmp.mod164, label %for.cond.cleanup, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond.cleanup.unr-lcssa
  %arrayidx3.epil = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %S, i64 %indvars.iv103.unr
  %11 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx3.epil, align 8, !tbaa !53
  %x.i.epil = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %11, i64 0, i32 1, i32 0
  %12 = load double, double* %x.i.epil, align 8, !tbaa !90
  %cmp.i.epil = fcmp fast ogt double %12, %center.coerce0
  %index.0.i.epil = zext i1 %cmp.i.epil to i32
  %y.i.epil = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %11, i64 0, i32 1, i32 1
  %13 = load double, double* %y.i.epil, align 8, !tbaa !91
  %cmp4.i.epil = fcmp fast ogt double %13, %center.coerce1
  %add6.i.epil = or i32 %index.0.i.epil, 2
  %index.1.i.epil = select i1 %cmp4.i.epil, i32 %add6.i.epil, i32 %index.0.i.epil
  %14 = ptrtoint %struct.vertex.16* %11 to i64
  %first2.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %9, i64 %indvars.iv103.unr, i32 0
  store i32 %index.1.i.epil, i32* %first2.i.epil, align 8, !tbaa !192
  %second4.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %9, i64 %indvars.iv103.unr, i32 1
  %15 = bitcast %struct.vertex.16** %second4.i.epil to i64*
  store i64 %14, i64* %15, align 8, !tbaa !194
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.unr-lcssa, %for.body.epil
  %cmp.i68 = icmp slt i32 %count, 256
  br i1 %cmp.i68, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %for.cond.cleanup
  %cmp20.i = icmp sgt i32 %count, 20
  br i1 %cmp20.i, label %while.body.lr.ph.i, label %while.end.i

while.body.lr.ph.i:                               ; preds = %if.then.i
  %sub.ptr.rhs.cast4.i = ptrtoint i8* %call1 to i64
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i, %while.body.lr.ph.i
  %n.addr.021.i = phi i32 [ %count, %while.body.lr.ph.i ], [ %conv.i, %while.body.i ]
  %call.i69 = tail call { %"struct.std::pair.23"*, %"struct.std::pair.23"* } @_Z5splitISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEiES0_IPT_SF_ESF_T1_T0_(%"struct.std::pair.23"* %9, i32 %n.addr.021.i) #2
  %16 = extractvalue { %"struct.std::pair.23"*, %"struct.std::pair.23"* } %call.i69, 0
  %17 = extractvalue { %"struct.std::pair.23"*, %"struct.std::pair.23"* } %call.i69, 1
  %idx.ext.i70 = sext i32 %n.addr.021.i to i64
  %add.ptr.i71 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %9, i64 %idx.ext.i70
  %sub.ptr.lhs.cast.i72 = ptrtoint %"struct.std::pair.23"* %add.ptr.i71 to i64
  %sub.ptr.rhs.cast.i73 = ptrtoint %"struct.std::pair.23"* %17 to i64
  %sub.ptr.sub.i74 = sub i64 %sub.ptr.lhs.cast.i72, %sub.ptr.rhs.cast.i73
  %sub.ptr.div.i75 = ashr exact i64 %sub.ptr.sub.i74, 4
  tail call void @_Z15quickSortSerialISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.23"* %17, i64 %sub.ptr.div.i75) #2
  %sub.ptr.lhs.cast3.i = ptrtoint %"struct.std::pair.23"* %16 to i64
  %sub.ptr.sub5.i = sub i64 %sub.ptr.lhs.cast3.i, %sub.ptr.rhs.cast4.i
  %18 = lshr exact i64 %sub.ptr.sub5.i, 4
  %conv.i = trunc i64 %18 to i32
  %cmp.i76 = icmp sgt i32 %conv.i, 20
  br i1 %cmp.i76, label %while.body.i, label %while.end.i.loopexit

while.end.i.loopexit:                             ; preds = %while.body.i
  %conv.i.le = trunc i64 %18 to i32
  br label %while.end.i

while.end.i:                                      ; preds = %while.end.i.loopexit, %if.then.i
  %n.addr.0.lcssa.i = phi i32 [ %count, %if.then.i ], [ %conv.i.le, %while.end.i.loopexit ]
  %cmp37.i.i = icmp sgt i32 %n.addr.0.lcssa.i, 0
  br i1 %cmp37.i.i, label %for.body.lr.ph.i.i, label %for.body15.preheader

for.body.lr.ph.i.i:                               ; preds = %while.end.i
  %wide.trip.count.i.i = zext i32 %n.addr.0.lcssa.i to i64
  %xtraiter159 = and i64 %wide.trip.count.i.i, 1
  %19 = icmp eq i32 %n.addr.0.lcssa.i, 1
  br i1 %19, label %_Z9quickSortISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEiEvPT_T1_T0_.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.new

for.body.lr.ph.i.i.new:                           ; preds = %for.body.lr.ph.i.i
  %unroll_iter161 = sub nsw i64 %wide.trip.count.i.i, %xtraiter159
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %while.end.i.i.1, %for.body.lr.ph.i.i.new
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.new ], [ %indvars.iv.next.i.i.1, %while.end.i.i.1 ]
  %niter162 = phi i64 [ %unroll_iter161, %for.body.lr.ph.i.i.new ], [ %niter162.nsub.1, %while.end.i.i.1 ]
  %arrayidx.i.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %9, i64 %indvars.iv.i.i
  %v.sroa.0.0..sroa_idx.i.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %arrayidx.i.i, i64 0, i32 0
  %v.sroa.0.0.copyload.i.i = load i32, i32* %v.sroa.0.0..sroa_idx.i.i, align 8
  %v.sroa.528.0..sroa_idx29.i.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %9, i64 %indvars.iv.i.i, i32 1
  %v.sroa.528.0..sroa_cast30.i.i = bitcast %struct.vertex.16** %v.sroa.528.0..sroa_idx29.i.i to i64*
  %v.sroa.528.0.copyload.i.i = load i64, i64* %v.sroa.528.0..sroa_cast30.i.i, align 8
  %incdec.ptr32.i.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %arrayidx.i.i, i64 -1
  %cmp133.i.i = icmp ult %"struct.std::pair.23"* %incdec.ptr32.i.i, %9
  br i1 %cmp133.i.i, label %while.end.i.i, label %land.rhs.i.i.preheader

land.rhs.i.i.preheader:                           ; preds = %for.body.i.i
  br label %land.rhs.i.i

land.rhs.i.i:                                     ; preds = %land.rhs.i.i.preheader, %while.body.i.i
  %incdec.ptr35.i.i = phi %"struct.std::pair.23"* [ %incdec.ptr.i.i, %while.body.i.i ], [ %incdec.ptr32.i.i, %land.rhs.i.i.preheader ]
  %B.034.i.i = phi %"struct.std::pair.23"* [ %incdec.ptr35.i.i, %while.body.i.i ], [ %arrayidx.i.i, %land.rhs.i.i.preheader ]
  %agg.tmp2.sroa.0.0..sroa_idx.i.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %incdec.ptr35.i.i, i64 0, i32 0
  %agg.tmp2.sroa.0.0.copyload.i.i = load i32, i32* %agg.tmp2.sroa.0.0..sroa_idx.i.i, align 8
  %cmp.i.i.i = icmp slt i32 %v.sroa.0.0.copyload.i.i, %agg.tmp2.sroa.0.0.copyload.i.i
  %first2.i22.i.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.034.i.i, i64 0, i32 0
  br i1 %cmp.i.i.i, label %while.body.i.i, label %while.end.i.i

while.body.i.i:                                   ; preds = %land.rhs.i.i
  store i32 %agg.tmp2.sroa.0.0.copyload.i.i, i32* %first2.i22.i.i, align 8, !tbaa !192
  %second.i23.i.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.034.i.i, i64 -1, i32 1
  %20 = bitcast %struct.vertex.16** %second.i23.i.i to i64*
  %21 = load i64, i64* %20, align 8, !tbaa !194
  %second3.i24.i.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.034.i.i, i64 0, i32 1
  %22 = bitcast %struct.vertex.16** %second3.i24.i.i to i64*
  store i64 %21, i64* %22, align 8, !tbaa !194
  %incdec.ptr.i.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %incdec.ptr35.i.i, i64 -1
  %cmp1.i.i = icmp ult %"struct.std::pair.23"* %incdec.ptr.i.i, %9
  br i1 %cmp1.i.i, label %while.end.i.i.loopexit.split.loop.exit, label %land.rhs.i.i

while.end.i.i.loopexit.split.loop.exit:           ; preds = %while.body.i.i
  %agg.tmp2.sroa.0.0..sroa_idx.i.i.le = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %incdec.ptr35.i.i, i64 0, i32 0
  br label %while.end.i.i

while.end.i.i:                                    ; preds = %land.rhs.i.i, %while.end.i.i.loopexit.split.loop.exit, %for.body.i.i
  %first2.i.pre-phi.i.i = phi i32* [ %v.sroa.0.0..sroa_idx.i.i, %for.body.i.i ], [ %agg.tmp2.sroa.0.0..sroa_idx.i.i.le, %while.end.i.i.loopexit.split.loop.exit ], [ %first2.i22.i.i, %land.rhs.i.i ]
  %B.0.lcssa.i.i = phi %"struct.std::pair.23"* [ %arrayidx.i.i, %for.body.i.i ], [ %incdec.ptr35.i.i, %while.end.i.i.loopexit.split.loop.exit ], [ %B.034.i.i, %land.rhs.i.i ]
  store i32 %v.sroa.0.0.copyload.i.i, i32* %first2.i.pre-phi.i.i, align 8, !tbaa !192
  %second3.i.i.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.0.lcssa.i.i, i64 0, i32 1
  %23 = bitcast %struct.vertex.16** %second3.i.i.i to i64*
  store i64 %v.sroa.528.0.copyload.i.i, i64* %23, align 8, !tbaa !194
  %indvars.iv.next.i.i = or i64 %indvars.iv.i.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %9, i64 %indvars.iv.next.i.i
  %v.sroa.0.0..sroa_idx.i.i.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %arrayidx.i.i.1, i64 0, i32 0
  %v.sroa.0.0.copyload.i.i.1 = load i32, i32* %v.sroa.0.0..sroa_idx.i.i.1, align 8
  %v.sroa.528.0..sroa_idx29.i.i.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %9, i64 %indvars.iv.next.i.i, i32 1
  %v.sroa.528.0..sroa_cast30.i.i.1 = bitcast %struct.vertex.16** %v.sroa.528.0..sroa_idx29.i.i.1 to i64*
  %v.sroa.528.0.copyload.i.i.1 = load i64, i64* %v.sroa.528.0..sroa_cast30.i.i.1, align 8
  %cmp133.i.i.1 = icmp ult %"struct.std::pair.23"* %arrayidx.i.i, %9
  br i1 %cmp133.i.i.1, label %while.end.i.i.1, label %land.rhs.i.i.1.preheader

land.rhs.i.i.1.preheader:                         ; preds = %while.end.i.i
  br label %land.rhs.i.i.1

if.else.i:                                        ; preds = %for.cond.cleanup
  %call.i = tail call { %"struct.std::pair.23"*, %"struct.std::pair.23"* } @_Z5splitISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEiES0_IPT_SF_ESF_T1_T0_(%"struct.std::pair.23"* nonnull %9, i32 %count) #2
  %24 = extractvalue { %"struct.std::pair.23"*, %"struct.std::pair.23"* } %call.i, 1
  %25 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %26 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %25, i16* nonnull %26) #2
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %28 = call i8* @llvm.frameaddress(i32 0)
  %29 = getelementptr inbounds [5 x i8*], [5 x i8*]* %27, i64 0, i64 0
  store volatile i8* %28, i8** %29, align 8
  %30 = call i8* @llvm.stacksave()
  %31 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %30, i8** %31, align 8
  %32 = bitcast [5 x i8*]* %27 to i8*
  %33 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %32) #23
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %if.else.i.split, label %det.cont.i

if.else.i.split:                                  ; preds = %if.else.i
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE15sortBlocksSmallEPPS5_iS1_Pi_det.achd.i.cilk({ %"struct.std::pair.23"*, %"struct.std::pair.23"* } %call.i, i8* %call1, %"struct.std::pair.23"* %9)
  br label %det.cont.i

det.cont.i:                                       ; preds = %if.else.i.split, %if.else.i
  %add.ptr.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %9, i64 %conv
  %sub.ptr.lhs.cast4.i = ptrtoint %"struct.std::pair.23"* %add.ptr.i to i64
  %sub.ptr.rhs.cast5.i = ptrtoint %"struct.std::pair.23"* %24 to i64
  %sub.ptr.sub6.i = sub i64 %sub.ptr.lhs.cast4.i, %sub.ptr.rhs.cast5.i
  %sub.ptr.div7.i = ashr exact i64 %sub.ptr.sub6.i, 4
  tail call void @_Z9quickSortISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.23"* %24, i64 %sub.ptr.div7.i) #2
  %35 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %36 = load atomic i32, i32* %35 acquire, align 8
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %det.cont.i
  %39 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %25, i16* nonnull %26) #2
  store volatile i8* %28, i8** %29, align 8
  %40 = call i8* @llvm.stacksave() #2
  store volatile i8* %40, i8** %31, align 8
  %41 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %32) #24
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %det.cont.i, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %43 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %43, i64 0, i32 12, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %44, align 8
  br label %for.body15.preheader

for.body15.preheader:                             ; preds = %while.end.i, %_Z9quickSortISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEiEvPT_T1_T0_.exit.loopexit.unr-lcssa, %while.end.i.i.epil, %__cilk_sync_nothrow.exit
  br label %for.body15

_Z9quickSortISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEiEvPT_T1_T0_.exit.loopexit.unr-lcssa: ; preds = %while.end.i.i.1, %for.body.lr.ph.i.i
  %indvars.iv.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i.1, %while.end.i.i.1 ]
  %lcmp.mod160 = icmp eq i64 %xtraiter159, 0
  br i1 %lcmp.mod160, label %for.body15.preheader, label %for.body.i.i.epil

for.body.i.i.epil:                                ; preds = %_Z9quickSortISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEiEvPT_T1_T0_.exit.loopexit.unr-lcssa
  %arrayidx.i.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %9, i64 %indvars.iv.i.i.unr
  %v.sroa.0.0..sroa_idx.i.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %arrayidx.i.i.epil, i64 0, i32 0
  %v.sroa.0.0.copyload.i.i.epil = load i32, i32* %v.sroa.0.0..sroa_idx.i.i.epil, align 8
  %v.sroa.528.0..sroa_idx29.i.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %9, i64 %indvars.iv.i.i.unr, i32 1
  %v.sroa.528.0..sroa_cast30.i.i.epil = bitcast %struct.vertex.16** %v.sroa.528.0..sroa_idx29.i.i.epil to i64*
  %v.sroa.528.0.copyload.i.i.epil = load i64, i64* %v.sroa.528.0..sroa_cast30.i.i.epil, align 8
  %incdec.ptr32.i.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %arrayidx.i.i.epil, i64 -1
  %cmp133.i.i.epil = icmp ult %"struct.std::pair.23"* %incdec.ptr32.i.i.epil, %9
  br i1 %cmp133.i.i.epil, label %while.end.i.i.epil, label %land.rhs.i.i.epil.preheader

land.rhs.i.i.epil.preheader:                      ; preds = %for.body.i.i.epil
  br label %land.rhs.i.i.epil

land.rhs.i.i.epil:                                ; preds = %land.rhs.i.i.epil.preheader, %while.body.i.i.epil
  %incdec.ptr35.i.i.epil = phi %"struct.std::pair.23"* [ %incdec.ptr.i.i.epil, %while.body.i.i.epil ], [ %incdec.ptr32.i.i.epil, %land.rhs.i.i.epil.preheader ]
  %B.034.i.i.epil = phi %"struct.std::pair.23"* [ %incdec.ptr35.i.i.epil, %while.body.i.i.epil ], [ %arrayidx.i.i.epil, %land.rhs.i.i.epil.preheader ]
  %agg.tmp2.sroa.0.0..sroa_idx.i.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %incdec.ptr35.i.i.epil, i64 0, i32 0
  %agg.tmp2.sroa.0.0.copyload.i.i.epil = load i32, i32* %agg.tmp2.sroa.0.0..sroa_idx.i.i.epil, align 8
  %cmp.i.i.i.epil = icmp slt i32 %v.sroa.0.0.copyload.i.i.epil, %agg.tmp2.sroa.0.0.copyload.i.i.epil
  %first2.i22.i.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.034.i.i.epil, i64 0, i32 0
  br i1 %cmp.i.i.i.epil, label %while.body.i.i.epil, label %while.end.i.i.epil

while.body.i.i.epil:                              ; preds = %land.rhs.i.i.epil
  store i32 %agg.tmp2.sroa.0.0.copyload.i.i.epil, i32* %first2.i22.i.i.epil, align 8, !tbaa !192
  %second.i23.i.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.034.i.i.epil, i64 -1, i32 1
  %47 = bitcast %struct.vertex.16** %second.i23.i.i.epil to i64*
  %48 = load i64, i64* %47, align 8, !tbaa !194
  %second3.i24.i.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.034.i.i.epil, i64 0, i32 1
  %49 = bitcast %struct.vertex.16** %second3.i24.i.i.epil to i64*
  store i64 %48, i64* %49, align 8, !tbaa !194
  %incdec.ptr.i.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %incdec.ptr35.i.i.epil, i64 -1
  %cmp1.i.i.epil = icmp ult %"struct.std::pair.23"* %incdec.ptr.i.i.epil, %9
  br i1 %cmp1.i.i.epil, label %while.end.i.i.epil.loopexit.split.loop.exit, label %land.rhs.i.i.epil

while.end.i.i.epil.loopexit.split.loop.exit:      ; preds = %while.body.i.i.epil
  %agg.tmp2.sroa.0.0..sroa_idx.i.i.epil.le = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %incdec.ptr35.i.i.epil, i64 0, i32 0
  br label %while.end.i.i.epil

while.end.i.i.epil:                               ; preds = %land.rhs.i.i.epil, %while.end.i.i.epil.loopexit.split.loop.exit, %for.body.i.i.epil
  %first2.i.pre-phi.i.i.epil = phi i32* [ %v.sroa.0.0..sroa_idx.i.i.epil, %for.body.i.i.epil ], [ %agg.tmp2.sroa.0.0..sroa_idx.i.i.epil.le, %while.end.i.i.epil.loopexit.split.loop.exit ], [ %first2.i22.i.i.epil, %land.rhs.i.i.epil ]
  %B.0.lcssa.i.i.epil = phi %"struct.std::pair.23"* [ %arrayidx.i.i.epil, %for.body.i.i.epil ], [ %incdec.ptr35.i.i.epil, %while.end.i.i.epil.loopexit.split.loop.exit ], [ %B.034.i.i.epil, %land.rhs.i.i.epil ]
  store i32 %v.sroa.0.0.copyload.i.i.epil, i32* %first2.i.pre-phi.i.i.epil, align 8, !tbaa !192
  %second3.i.i.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.0.lcssa.i.i.epil, i64 0, i32 1
  %50 = bitcast %struct.vertex.16** %second3.i.i.i.epil to i64*
  store i64 %v.sroa.528.0.copyload.i.i.epil, i64* %50, align 8, !tbaa !194
  br label %for.body15.preheader

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv103 = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next104.1, %for.body ]
  %niter166 = phi i64 [ %unroll_iter165, %for.body.lr.ph.new ], [ %niter166.nsub.1, %for.body ]
  %arrayidx3 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %S, i64 %indvars.iv103
  %51 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx3, align 8, !tbaa !53
  %x.i = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %51, i64 0, i32 1, i32 0
  %52 = load double, double* %x.i, align 8, !tbaa !90
  %cmp.i = fcmp fast ogt double %52, %center.coerce0
  %index.0.i = zext i1 %cmp.i to i32
  %y.i = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %51, i64 0, i32 1, i32 1
  %53 = load double, double* %y.i, align 8, !tbaa !91
  %cmp4.i = fcmp fast ogt double %53, %center.coerce1
  %add6.i = or i32 %index.0.i, 2
  %index.1.i = select i1 %cmp4.i, i32 %add6.i, i32 %index.0.i
  %54 = ptrtoint %struct.vertex.16* %51 to i64
  %first2.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %9, i64 %indvars.iv103, i32 0
  store i32 %index.1.i, i32* %first2.i, align 8, !tbaa !192
  %second4.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %9, i64 %indvars.iv103, i32 1
  %55 = bitcast %struct.vertex.16** %second4.i to i64*
  store i64 %54, i64* %55, align 8, !tbaa !194
  %indvars.iv.next104 = or i64 %indvars.iv103, 1
  %arrayidx3.1 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %S, i64 %indvars.iv.next104
  %56 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx3.1, align 8, !tbaa !53
  %x.i.1 = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %56, i64 0, i32 1, i32 0
  %57 = load double, double* %x.i.1, align 8, !tbaa !90
  %cmp.i.1 = fcmp fast ogt double %57, %center.coerce0
  %index.0.i.1 = zext i1 %cmp.i.1 to i32
  %y.i.1 = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %56, i64 0, i32 1, i32 1
  %58 = load double, double* %y.i.1, align 8, !tbaa !91
  %cmp4.i.1 = fcmp fast ogt double %58, %center.coerce1
  %add6.i.1 = or i32 %index.0.i.1, 2
  %index.1.i.1 = select i1 %cmp4.i.1, i32 %add6.i.1, i32 %index.0.i.1
  %59 = ptrtoint %struct.vertex.16* %56 to i64
  %first2.i.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %9, i64 %indvars.iv.next104, i32 0
  store i32 %index.1.i.1, i32* %first2.i.1, align 8, !tbaa !192
  %second4.i.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %9, i64 %indvars.iv.next104, i32 1
  %60 = bitcast %struct.vertex.16** %second4.i.1 to i64*
  store i64 %59, i64* %60, align 8, !tbaa !194
  %indvars.iv.next104.1 = add nuw nsw i64 %indvars.iv103, 2
  %niter166.nsub.1 = add i64 %niter166, -2
  %niter166.ncmp.1 = icmp eq i64 %niter166.nsub.1, 0
  br i1 %niter166.ncmp.1, label %for.cond.cleanup.unr-lcssa, label %for.body

for.cond.cleanup14:                               ; preds = %for.inc26
  %cmp3183 = icmp slt i32 %j.1.lcssa, 3
  br i1 %cmp3183, label %while.body32.lr.ph, label %while.end35

while.body32.lr.ph:                               ; preds = %__cilkrts_enter_frame_1.exit, %for.cond.cleanup14
  %j.0.lcssa111 = phi i32 [ %j.1.lcssa, %for.cond.cleanup14 ], [ -1, %__cilkrts_enter_frame_1.exit ]
  %61 = sext i32 %j.0.lcssa111 to i64
  %62 = icmp sgt i64 %61, 2
  %smax = select i1 %62, i64 %61, i64 2
  %63 = sub nsw i64 1, %61
  %64 = add nsw i64 %63, %smax
  %min.iters.check132 = icmp ult i64 %64, 32
  br i1 %min.iters.check132, label %while.body32.preheader, label %vector.ph133

while.body32.preheader:                           ; preds = %middle.block130, %while.body32.lr.ph
  %indvars.iv.ph = phi i64 [ %ind.end139, %middle.block130 ], [ %61, %while.body32.lr.ph ]
  br label %while.body32

vector.ph133:                                     ; preds = %while.body32.lr.ph
  %n.vec135 = and i64 %64, -32
  %ind.end139 = add nsw i64 %n.vec135, %61
  %broadcast.splatinsert148 = insertelement <8 x i32> undef, i32 %count, i32 0
  %broadcast.splat149 = shufflevector <8 x i32> %broadcast.splatinsert148, <8 x i32> undef, <8 x i32> zeroinitializer
  %65 = add nsw i64 %n.vec135, -32
  %66 = lshr exact i64 %65, 5
  %67 = add nuw nsw i64 %66, 1
  %xtraiter = and i64 %67, 3
  %68 = icmp ult i64 %65, 96
  br i1 %68, label %middle.block130.unr-lcssa, label %vector.ph133.new

vector.ph133.new:                                 ; preds = %vector.ph133
  %unroll_iter = sub nsw i64 %67, %xtraiter
  %69 = add nsw i64 %61, 1
  br label %vector.body129

vector.body129:                                   ; preds = %vector.body129, %vector.ph133.new
  %index136 = phi i64 [ 0, %vector.ph133.new ], [ %index.next137.3, %vector.body129 ]
  %niter = phi i64 [ %unroll_iter, %vector.ph133.new ], [ %niter.nsub.3, %vector.body129 ]
  %70 = add i64 %69, %index136
  %71 = getelementptr inbounds i32, i32* %offsets, i64 %70
  %72 = bitcast i32* %71 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %72, align 4, !tbaa !59
  %73 = getelementptr i32, i32* %71, i64 8
  %74 = bitcast i32* %73 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %74, align 4, !tbaa !59
  %75 = getelementptr i32, i32* %71, i64 16
  %76 = bitcast i32* %75 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %76, align 4, !tbaa !59
  %77 = getelementptr i32, i32* %71, i64 24
  %78 = bitcast i32* %77 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %78, align 4, !tbaa !59
  %index.next137 = or i64 %index136, 32
  %79 = add i64 %69, %index.next137
  %80 = getelementptr inbounds i32, i32* %offsets, i64 %79
  %81 = bitcast i32* %80 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %81, align 4, !tbaa !59
  %82 = getelementptr i32, i32* %80, i64 8
  %83 = bitcast i32* %82 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %83, align 4, !tbaa !59
  %84 = getelementptr i32, i32* %80, i64 16
  %85 = bitcast i32* %84 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %85, align 4, !tbaa !59
  %86 = getelementptr i32, i32* %80, i64 24
  %87 = bitcast i32* %86 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %87, align 4, !tbaa !59
  %index.next137.1 = or i64 %index136, 64
  %88 = add i64 %69, %index.next137.1
  %89 = getelementptr inbounds i32, i32* %offsets, i64 %88
  %90 = bitcast i32* %89 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %90, align 4, !tbaa !59
  %91 = getelementptr i32, i32* %89, i64 8
  %92 = bitcast i32* %91 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %92, align 4, !tbaa !59
  %93 = getelementptr i32, i32* %89, i64 16
  %94 = bitcast i32* %93 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %94, align 4, !tbaa !59
  %95 = getelementptr i32, i32* %89, i64 24
  %96 = bitcast i32* %95 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %96, align 4, !tbaa !59
  %index.next137.2 = or i64 %index136, 96
  %97 = add i64 %69, %index.next137.2
  %98 = getelementptr inbounds i32, i32* %offsets, i64 %97
  %99 = bitcast i32* %98 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %99, align 4, !tbaa !59
  %100 = getelementptr i32, i32* %98, i64 8
  %101 = bitcast i32* %100 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %101, align 4, !tbaa !59
  %102 = getelementptr i32, i32* %98, i64 16
  %103 = bitcast i32* %102 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %103, align 4, !tbaa !59
  %104 = getelementptr i32, i32* %98, i64 24
  %105 = bitcast i32* %104 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %105, align 4, !tbaa !59
  %index.next137.3 = add i64 %index136, 128
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %middle.block130.unr-lcssa, label %vector.body129, !llvm.loop !195

middle.block130.unr-lcssa:                        ; preds = %vector.body129, %vector.ph133
  %index136.unr = phi i64 [ 0, %vector.ph133 ], [ %index.next137.3, %vector.body129 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block130, label %vector.body129.epil.preheader

vector.body129.epil.preheader:                    ; preds = %middle.block130.unr-lcssa
  %106 = add nsw i64 %61, 1
  br label %vector.body129.epil

vector.body129.epil:                              ; preds = %vector.body129.epil, %vector.body129.epil.preheader
  %index136.epil = phi i64 [ %index136.unr, %vector.body129.epil.preheader ], [ %index.next137.epil, %vector.body129.epil ]
  %epil.iter = phi i64 [ %xtraiter, %vector.body129.epil.preheader ], [ %epil.iter.sub, %vector.body129.epil ]
  %107 = add i64 %106, %index136.epil
  %108 = getelementptr inbounds i32, i32* %offsets, i64 %107
  %109 = bitcast i32* %108 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %109, align 4, !tbaa !59
  %110 = getelementptr i32, i32* %108, i64 8
  %111 = bitcast i32* %110 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %111, align 4, !tbaa !59
  %112 = getelementptr i32, i32* %108, i64 16
  %113 = bitcast i32* %112 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %113, align 4, !tbaa !59
  %114 = getelementptr i32, i32* %108, i64 24
  %115 = bitcast i32* %114 to <8 x i32>*
  store <8 x i32> %broadcast.splat149, <8 x i32>* %115, align 4, !tbaa !59
  %index.next137.epil = add i64 %index136.epil, 32
  %epil.iter.sub = add nsw i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block130, label %vector.body129.epil, !llvm.loop !196

middle.block130:                                  ; preds = %vector.body129.epil, %middle.block130.unr-lcssa
  %cmp.n140 = icmp eq i64 %64, %n.vec135
  br i1 %cmp.n140, label %while.end35, label %while.body32.preheader

for.body15:                                       ; preds = %for.body15.preheader, %for.inc26
  %indvars.iv101 = phi i64 [ %indvars.iv.next102, %for.inc26 ], [ 0, %for.body15.preheader ]
  %j.088 = phi i32 [ %j.1.lcssa, %for.inc26 ], [ -1, %for.body15.preheader ]
  %second = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %9, i64 %indvars.iv101, i32 1
  %116 = bitcast %struct.vertex.16** %second to i64*
  %117 = load i64, i64* %116, align 8, !tbaa !194
  %arrayidx19 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %S, i64 %indvars.iv101
  %118 = bitcast %struct.vertex.16** %arrayidx19 to i64*
  store i64 %117, i64* %118, align 8, !tbaa !53
  %first = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %9, i64 %indvars.iv101, i32 0
  %119 = load i32, i32* %first, align 8, !tbaa !192
  %cmp2285 = icmp eq i32 %119, %j.088
  br i1 %cmp2285, label %for.inc26, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %for.body15
  %120 = sext i32 %j.088 to i64
  %121 = trunc i64 %indvars.iv101 to i32
  %122 = xor i32 %j.088, -1
  %123 = add i32 %119, %122
  %124 = zext i32 %123 to i64
  %125 = add nuw nsw i64 %124, 1
  %min.iters.check = icmp ult i64 %125, 32
  br i1 %min.iters.check, label %while.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %while.body.lr.ph
  %126 = add i32 %123, 1
  %127 = and i32 %126, 31
  %n.mod.vf = zext i32 %127 to i64
  %n.vec = sub nsw i64 %125, %n.mod.vf
  %broadcast.splatinsert121 = insertelement <8 x i32> undef, i32 %121, i32 0
  %broadcast.splat122 = shufflevector <8 x i32> %broadcast.splatinsert121, <8 x i32> undef, <8 x i32> zeroinitializer
  %128 = add nsw i64 %120, 1
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %129 = add i64 %128, %index
  %130 = getelementptr inbounds i32, i32* %offsets, i64 %129
  %131 = bitcast i32* %130 to <8 x i32>*
  store <8 x i32> %broadcast.splat122, <8 x i32>* %131, align 4, !tbaa !59
  %132 = getelementptr i32, i32* %130, i64 8
  %133 = bitcast i32* %132 to <8 x i32>*
  store <8 x i32> %broadcast.splat122, <8 x i32>* %133, align 4, !tbaa !59
  %134 = getelementptr i32, i32* %130, i64 16
  %135 = bitcast i32* %134 to <8 x i32>*
  store <8 x i32> %broadcast.splat122, <8 x i32>* %135, align 4, !tbaa !59
  %136 = getelementptr i32, i32* %130, i64 24
  %137 = bitcast i32* %136 to <8 x i32>*
  store <8 x i32> %broadcast.splat122, <8 x i32>* %137, align 4, !tbaa !59
  %index.next = add i64 %index, 32
  %138 = icmp eq i64 %index.next, %n.vec
  br i1 %138, label %middle.block, label %vector.body, !llvm.loop !197

middle.block:                                     ; preds = %vector.body
  %ind.end = add nsw i64 %n.vec, %120
  %cmp.n = icmp eq i32 %127, 0
  br i1 %cmp.n, label %for.inc26, label %while.body.preheader

while.body.preheader:                             ; preds = %middle.block, %while.body.lr.ph
  %indvars.iv99.ph = phi i64 [ %ind.end, %middle.block ], [ %120, %while.body.lr.ph ]
  br label %while.body

while.body:                                       ; preds = %while.body.preheader, %while.body
  %indvars.iv99 = phi i64 [ %indvars.iv.next100, %while.body ], [ %indvars.iv99.ph, %while.body.preheader ]
  %indvars.iv.next100 = add nsw i64 %indvars.iv99, 1
  %arrayidx25 = getelementptr inbounds i32, i32* %offsets, i64 %indvars.iv.next100
  store i32 %121, i32* %arrayidx25, align 4, !tbaa !59
  %139 = trunc i64 %indvars.iv.next100 to i32
  %cmp22 = icmp eq i32 %119, %139
  br i1 %cmp22, label %for.inc26, label %while.body, !llvm.loop !198

for.inc26:                                        ; preds = %while.body, %middle.block, %for.body15
  %j.1.lcssa = phi i32 [ %j.088, %for.body15 ], [ %119, %middle.block ], [ %119, %while.body ]
  %indvars.iv.next102 = add nuw nsw i64 %indvars.iv101, 1
  %exitcond = icmp eq i64 %indvars.iv.next102, %wide.trip.count105
  br i1 %exitcond, label %for.cond.cleanup14, label %for.body15

while.body32:                                     ; preds = %while.body32.preheader, %while.body32
  %indvars.iv = phi i64 [ %indvars.iv.next, %while.body32 ], [ %indvars.iv.ph, %while.body32.preheader ]
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %arrayidx34 = getelementptr inbounds i32, i32* %offsets, i64 %indvars.iv.next
  store i32 %count, i32* %arrayidx34, align 4, !tbaa !59
  %cmp31 = icmp slt i64 %indvars.iv, 2
  br i1 %cmp31, label %while.body32, label %while.end35, !llvm.loop !199

while.end35:                                      ; preds = %while.body32, %middle.block130, %for.cond.cleanup14
  tail call void @free(i8* %call1) #2
  %140 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %141 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %140, i64 0, i32 9
  %144 = bitcast %struct.__cilkrts_stack_frame** %143 to i64*
  store atomic i64 %142, i64* %144 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %145 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %146 = load atomic i32, i32* %145 acquire, align 8
  %147 = icmp eq i32 %146, 16777216
  br i1 %147, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %while.end35
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %while.end35, %body.i
  ret void

land.rhs.i.i.1:                                   ; preds = %land.rhs.i.i.1.preheader, %while.body.i.i.1
  %incdec.ptr35.i.i.1 = phi %"struct.std::pair.23"* [ %incdec.ptr.i.i.1, %while.body.i.i.1 ], [ %arrayidx.i.i, %land.rhs.i.i.1.preheader ]
  %B.034.i.i.1 = phi %"struct.std::pair.23"* [ %incdec.ptr35.i.i.1, %while.body.i.i.1 ], [ %arrayidx.i.i.1, %land.rhs.i.i.1.preheader ]
  %agg.tmp2.sroa.0.0..sroa_idx.i.i.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %incdec.ptr35.i.i.1, i64 0, i32 0
  %agg.tmp2.sroa.0.0.copyload.i.i.1 = load i32, i32* %agg.tmp2.sroa.0.0..sroa_idx.i.i.1, align 8
  %cmp.i.i.i.1 = icmp slt i32 %v.sroa.0.0.copyload.i.i.1, %agg.tmp2.sroa.0.0.copyload.i.i.1
  %first2.i22.i.i.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.034.i.i.1, i64 0, i32 0
  br i1 %cmp.i.i.i.1, label %while.body.i.i.1, label %while.end.i.i.1

while.body.i.i.1:                                 ; preds = %land.rhs.i.i.1
  store i32 %agg.tmp2.sroa.0.0.copyload.i.i.1, i32* %first2.i22.i.i.1, align 8, !tbaa !192
  %second.i23.i.i.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.034.i.i.1, i64 -1, i32 1
  %148 = bitcast %struct.vertex.16** %second.i23.i.i.1 to i64*
  %149 = load i64, i64* %148, align 8, !tbaa !194
  %second3.i24.i.i.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.034.i.i.1, i64 0, i32 1
  %150 = bitcast %struct.vertex.16** %second3.i24.i.i.1 to i64*
  store i64 %149, i64* %150, align 8, !tbaa !194
  %incdec.ptr.i.i.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %incdec.ptr35.i.i.1, i64 -1
  %cmp1.i.i.1 = icmp ult %"struct.std::pair.23"* %incdec.ptr.i.i.1, %9
  br i1 %cmp1.i.i.1, label %while.end.i.i.1.loopexit.split.loop.exit, label %land.rhs.i.i.1

while.end.i.i.1.loopexit.split.loop.exit:         ; preds = %while.body.i.i.1
  %agg.tmp2.sroa.0.0..sroa_idx.i.i.1.le = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %incdec.ptr35.i.i.1, i64 0, i32 0
  br label %while.end.i.i.1

while.end.i.i.1:                                  ; preds = %land.rhs.i.i.1, %while.end.i.i.1.loopexit.split.loop.exit, %while.end.i.i
  %first2.i.pre-phi.i.i.1 = phi i32* [ %v.sroa.0.0..sroa_idx.i.i.1, %while.end.i.i ], [ %agg.tmp2.sroa.0.0..sroa_idx.i.i.1.le, %while.end.i.i.1.loopexit.split.loop.exit ], [ %first2.i22.i.i.1, %land.rhs.i.i.1 ]
  %B.0.lcssa.i.i.1 = phi %"struct.std::pair.23"* [ %arrayidx.i.i.1, %while.end.i.i ], [ %incdec.ptr35.i.i.1, %while.end.i.i.1.loopexit.split.loop.exit ], [ %B.034.i.i.1, %land.rhs.i.i.1 ]
  store i32 %v.sroa.0.0.copyload.i.i.1, i32* %first2.i.pre-phi.i.i.1, align 8, !tbaa !192
  %second3.i.i.i.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.0.lcssa.i.i.1, i64 0, i32 1
  %151 = bitcast %struct.vertex.16** %second3.i.i.i.1 to i64*
  store i64 %v.sroa.528.0.copyload.i.i.1, i64* %151, align 8, !tbaa !194
  %indvars.iv.next.i.i.1 = add nuw nsw i64 %indvars.iv.i.i, 2
  %niter162.nsub.1 = add i64 %niter162, -2
  %niter162.ncmp.1 = icmp eq i64 %niter162.nsub.1, 0
  br i1 %niter162.ncmp.1, label %_Z9quickSortISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEiEvPT_T1_T0_.exit.loopexit.unr-lcssa, label %for.body.i.i
}

; Function Attrs: nounwind uwtable
define linkonce_odr %class.gTreeNode.18* @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i(%struct.vertex.16** %S.coerce0, i64 %S.coerce1, double %cnt.coerce0, double %cnt.coerce1, double %sz, %class.gTreeNode.18* %newNodes, i32 %numNewNodes) local_unnamed_addr #7 comdat align 2 {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %cmp = icmp slt i32 %numNewNodes, 1
  %0 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %1 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp to %union.anon.1**
  store %union.anon.1* %0, %union.anon.1** %1, align 8, !tbaa !47
  %2 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #2
  store i64 17, i64* %__dnew.i.i.i.i, align 8, !tbaa !49
  %call5.i.i.i.i = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i, i64 0) #2
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i.i, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !50
  %3 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !49
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2, i32 0
  store i64 %3, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call5.i.i.i.i, i8* nonnull getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i64 17, i32 1, i1 false) #2
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 1
  store i64 %3, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !52
  %4 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !50
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %4, i64 %3
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #2
  br i1 %cmp, label %if.then.i, label %_ZN5utilsL8myAssertEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit

if.then.i:                                        ; preds = %entry
  %call.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.tmp) #2
  %call.i.i7 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call.i) #2
  call void @abort() #21
  unreachable

_ZN5utilsL8myAssertEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit: ; preds = %entry
  %5 = bitcast %union.anon.1* %0 to i8*
  %6 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !50
  %cmp.i.i.i = icmp eq i8* %6, %5
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %_ZN5utilsL8myAssertEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit
  call void @_ZdlPv(i8* %6) #2
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %_ZN5utilsL8myAssertEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit, %if.then.i.i
  %add.ptr = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %newNodes, i64 1
  %sub = add nsw i32 %numNewNodes, -1
  call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i(%class.gTreeNode.18* %newNodes, %struct.vertex.16** %S.coerce0, i64 %S.coerce1, double %cnt.coerce0, double %cnt.coerce1, double %sz, %class.gTreeNode.18* nonnull %add.ptr, i32 %sub)
  ret %class.gTreeNode.18* %newNodes
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1_(%"struct.std::pair.23"* %A, i32* %bucketOffsets, i64 %n, i64 %m, i1 zeroext %bottomUp, i8* %tmpSpace) local_unnamed_addr #7 comdat {
entry:
  %0 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8185 = shl i32 %0, 3
  %agg.tmp.i = alloca %"struct.intSort::eBits.25", align 8
  %agg.tmp = alloca %"struct.intSort::eBits.25", align 8
  %cmp6.i = icmp sgt i64 %m, 1
  br i1 %cmp6.i, label %while.body.lr.ph.i, label %_ZN5utilsL6log2UpIlEEiT_.exit

while.body.lr.ph.i:                               ; preds = %entry
  %sub.i = add nsw i64 %m, -1
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i, %while.body.lr.ph.i
  %b.08.i = phi i64 [ %sub.i, %while.body.lr.ph.i ], [ %shr5.i, %while.body.i ]
  %a.07.i = phi i32 [ 0, %while.body.lr.ph.i ], [ %inc.i, %while.body.i ]
  %shr5.i = lshr i64 %b.08.i, 1
  %inc.i = add nuw nsw i32 %a.07.i, 1
  %cmp.i = icmp eq i64 %shr5.i, 0
  br i1 %cmp.i, label %_ZN5utilsL6log2UpIlEEiT_.exit, label %while.body.i

_ZN5utilsL6log2UpIlEEiT_.exit:                    ; preds = %while.body.i, %entry
  %a.0.lcssa.i = phi i32 [ 0, %entry ], [ %inc.i, %while.body.i ]
  %conv = sext i32 %a.0.lcssa.i to i64
  %div = sdiv i64 %n, 2048
  %add = add nsw i64 %div, 1
  %1 = bitcast i8* %tmpSpace to %"struct.std::pair.23"*
  %mul = shl i64 %n, 4
  %add.ptr = getelementptr inbounds i8, i8* %tmpSpace, i64 %mul
  %add.ptr3 = getelementptr inbounds i8, i8* %add.ptr, i64 %n
  %2 = bitcast i8* %add.ptr3 to [256 x i32]*
  %cmp = icmp slt i32 %a.0.lcssa.i, 9
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %_ZN5utilsL6log2UpIlEEiT_.exit
  %shl = shl i64 1, %conv
  %_mask.i = getelementptr inbounds %"struct.intSort::eBits.25", %"struct.intSort::eBits.25"* %agg.tmp, i64 0, i32 1
  %shl.i = shl i32 1, %a.0.lcssa.i
  %sub.i169 = add nsw i32 %shl.i, -1
  %conv.i = sext i32 %sub.i169 to i64
  store i64 %conv.i, i64* %_mask.i, align 8, !tbaa !200
  %_offset.i = getelementptr inbounds %"struct.intSort::eBits.25", %"struct.intSort::eBits.25"* %agg.tmp, i64 0, i32 2
  store i64 0, i64* %_offset.i, align 8, !tbaa !203
  call void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_(%"struct.std::pair.23"* %A, %"struct.std::pair.23"* %1, i8* %add.ptr, [256 x i32]* %2, i64 %add, i64 %n, i64 %shl, i1 zeroext true, %"struct.intSort::eBits.25"* byval nonnull align 8 %agg.tmp)
  %cmp5 = icmp ne i32* %bucketOffsets, null
  %cmp10176 = icmp sgt i64 %m, 0
  %or.cond = and i1 %cmp5, %cmp10176
  br i1 %or.cond, label %pfor.detach.preheader, label %cleanup

pfor.detach.preheader:                            ; preds = %if.then
  %3 = add i64 %m, -1
  %4 = zext i32 %__cilkrts_wc8185 to i64
  %5 = add i64 %m, -2
  %6 = add i64 %5, %4
  %7 = udiv i64 %6, %4
  %8 = icmp ult i64 %7, 2048
  %9 = select i1 %8, i64 %7, i64 2048
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach.ls(i64 0, i64 %3, i64 %9, [256 x i32]* %2, i32* nonnull %bucketOffsets)
  br label %cleanup

if.else:                                          ; preds = %_ZN5utilsL6log2UpIlEEiT_.exit
  br i1 %bottomUp, label %while.body.lr.ph.i171, label %if.else17

while.body.lr.ph.i171:                            ; preds = %if.else
  %10 = getelementptr inbounds %"struct.intSort::eBits.25", %"struct.intSort::eBits.25"* %agg.tmp.i, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10)
  %sub.i170 = add nsw i64 %conv, -1
  %div.i = sdiv i64 %sub.i170, 8
  %add.i = add nsw i64 %div.i, 1
  %div2.i = sdiv i64 %sub.i170, %add.i
  %add3.i = add nsw i64 %div2.i, 1
  %_mask.i.i = getelementptr inbounds %"struct.intSort::eBits.25", %"struct.intSort::eBits.25"* %agg.tmp.i, i64 0, i32 1
  %_offset.i.i = getelementptr inbounds %"struct.intSort::eBits.25", %"struct.intSort::eBits.25"* %agg.tmp.i, i64 0, i32 2
  br label %while.body.i175

while.body.i175:                                  ; preds = %while.body.i175, %while.body.lr.ph.i171
  %bitOffset.025.i = phi i64 [ 0, %while.body.lr.ph.i171 ], [ %add8.i, %while.body.i175 ]
  %rbits.024.i = phi i64 [ %add3.i, %while.body.lr.ph.i171 ], [ %spec.select.i, %while.body.i175 ]
  %add4.i = add nsw i64 %rbits.024.i, %bitOffset.025.i
  %cmp5.i = icmp sgt i64 %add4.i, %conv
  %sub6.i = sub nsw i64 %conv, %bitOffset.025.i
  %spec.select.i = select i1 %cmp5.i, i64 %sub6.i, i64 %rbits.024.i
  %sh_prom.i = trunc i64 %spec.select.i to i32
  %shl.i172 = shl i32 1, %sh_prom.i
  %conv.i173 = sext i32 %shl.i172 to i64
  %sub.i.i = add nsw i32 %shl.i172, -1
  %conv.i.i = sext i32 %sub.i.i to i64
  store i64 %conv.i.i, i64* %_mask.i.i, align 8, !tbaa !200
  store i64 %bitOffset.025.i, i64* %_offset.i.i, align 8, !tbaa !203
  call void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_(%"struct.std::pair.23"* %A, %"struct.std::pair.23"* %1, i8* %add.ptr, [256 x i32]* %2, i64 %add, i64 %n, i64 %conv.i173, i1 zeroext true, %"struct.intSort::eBits.25"* byval nonnull align 8 %agg.tmp.i) #2
  %add8.i = add nsw i64 %spec.select.i, %bitOffset.025.i
  %cmp.i174 = icmp slt i64 %add8.i, %conv
  br i1 %cmp.i174, label %while.body.i175, label %_ZN7intSort17radixLoopBottomUpISt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllbT0_.exit

_ZN7intSort17radixLoopBottomUpISt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllbT0_.exit: ; preds = %while.body.i175
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10)
  br label %if.end20

if.else17:                                        ; preds = %if.else
  tail call void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0_(%"struct.std::pair.23"* %A, %"struct.std::pair.23"* %1, i8* %add.ptr, [256 x i32]* %2, i64 %add, i64 %n, i64 %conv)
  br label %if.end20

if.end20:                                         ; preds = %_ZN7intSort17radixLoopBottomUpISt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllbT0_.exit, %if.else17
  %cmp21 = icmp eq i32* %bucketOffsets, null
  br i1 %cmp21, label %cleanup, label %if.then22

if.then22:                                        ; preds = %if.end20
  %cmp32180 = icmp sgt i64 %m, 0
  br i1 %cmp32180, label %pfor.detach34.lr.ph, label %sync.continue45

pfor.detach34.lr.ph:                              ; preds = %if.then22
  %conv40 = trunc i64 %n to i32
  %11 = add i64 %m, -1
  %12 = zext i32 %__cilkrts_wc8185 to i64
  %13 = add i64 %m, -2
  %14 = add i64 %13, %12
  %15 = udiv i64 %14, %12
  %16 = icmp ult i64 %15, 2048
  %17 = select i1 %16, i64 %15, i64 2048
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach34.ls(i64 0, i64 %11, i64 %17, i32* nonnull %bucketOffsets, i32 %conv40)
  br label %sync.continue45

sync.continue45:                                  ; preds = %if.then22, %pfor.detach34.lr.ph
  %cmp57178 = icmp sgt i64 %n, 1
  br i1 %cmp57178, label %pfor.detach59.preheader, label %sync.continue83

pfor.detach59.preheader:                          ; preds = %sync.continue45
  %18 = add i64 %n, -2
  %19 = zext i32 %__cilkrts_wc8185 to i64
  %20 = add i64 %n, -3
  %21 = add i64 %20, %19
  %22 = udiv i64 %21, %19
  %23 = icmp ult i64 %22, 2048
  %24 = select i1 %23, i64 %22, i64 2048
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach59.ls(i64 0, i64 %18, i64 %24, %"struct.std::pair.23"* %A, i32* nonnull %bucketOffsets)
  br label %sync.continue83

sync.continue83:                                  ; preds = %sync.continue45, %pfor.detach59.preheader
  %agg.tmp85.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 0, i32 0
  %agg.tmp85.sroa.0.0.copyload = load i32, i32* %agg.tmp85.sroa.0.0..sroa_idx, align 8
  %idxprom = sext i32 %agg.tmp85.sroa.0.0.copyload to i64
  %arrayidx88 = getelementptr inbounds i32, i32* %bucketOffsets, i64 %idxprom
  store i32 0, i32* %arrayidx88, align 4, !tbaa !59
  %conv90 = trunc i64 %n to i32
  %call.i = call i32 @_ZN8sequence4scanIilN5utils4minFIiEENS_4getAIilEEEET_PS6_T0_S8_T1_T2_S6_bb(i32* nonnull %bucketOffsets, i64 0, i64 %m, i32* nonnull %bucketOffsets, i32 %conv90, i1 zeroext true, i1 zeroext true) #2
  br label %cleanup

cleanup:                                          ; preds = %if.then, %pfor.detach.preheader, %sync.continue83, %if.end20
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_(%"struct.std::pair.23"* %A, %"struct.std::pair.23"* %B, i8* %Tmp, [256 x i32]* %BK, i64 %numBK, i64 %n, i64 %m, i1 zeroext %top, %"struct.intSort::eBits.25"* byval align 8 %extract) local_unnamed_addr #7 comdat {
entry:
  %ref.tmp29 = alloca %struct.transpose, align 8
  %ref.tmp42 = alloca %struct.blockTrans.26, align 8
  %div = sdiv i64 %numBK, 3
  %div2 = sdiv i64 %n, 8192
  %add = add nsw i64 %div2, 1
  %cmp.i = icmp slt i64 %add, %div
  %.sroa.speculated135 = select i1 %cmp.i, i64 %add, i64 %div
  %cmp = icmp slt i64 %.sroa.speculated135, 2
  br i1 %cmp, label %if.then, label %pfor.detach.lr.ph

if.then:                                          ; preds = %entry
  %agg.tmp.sroa.2.0..sroa_idx = getelementptr inbounds %"struct.intSort::eBits.25", %"struct.intSort::eBits.25"* %extract, i64 0, i32 1
  %agg.tmp.sroa.2.0.copyload = load i64, i64* %agg.tmp.sroa.2.0..sroa_idx, align 8
  %agg.tmp.sroa.3.0..sroa_idx = getelementptr inbounds %"struct.intSort::eBits.25", %"struct.intSort::eBits.25"* %extract, i64 0, i32 2
  %agg.tmp.sroa.3.0.copyload = load i64, i64* %agg.tmp.sroa.3.0..sroa_idx, align 8
  %cmp74.i.i = icmp sgt i64 %m, 0
  br i1 %cmp74.i.i, label %for.body.lr.ph.i.i, label %for.cond.cleanup.i.i

for.body.lr.ph.i.i:                               ; preds = %if.then
  %counts78.i.i = bitcast [256 x i32]* %BK to i8*
  %0 = shl i64 %m, 2
  tail call void @llvm.memset.p0i8.i64(i8* %counts78.i.i, i8 0, i64 %0, i32 4, i1 false) #2
  br label %for.cond.cleanup.i.i

for.cond.cleanup.i.i:                             ; preds = %for.body.lr.ph.i.i, %if.then
  %cmp272.i.i = icmp sgt i64 %n, 0
  br i1 %cmp272.i.i, label %for.body4.lr.ph.i.i, label %for.cond.cleanup3.i.i

for.body4.lr.ph.i.i:                              ; preds = %for.cond.cleanup.i.i
  %sh_prom.i.i.i = trunc i64 %agg.tmp.sroa.3.0.copyload to i32
  %xtraiter170 = and i64 %n, 1
  %1 = icmp eq i64 %n, 1
  br i1 %1, label %for.body4.i.i.epil, label %for.body4.lr.ph.i.i.new

for.body4.lr.ph.i.i.new:                          ; preds = %for.body4.lr.ph.i.i
  %unroll_iter172 = sub i64 %n, %xtraiter170
  br label %for.body4.i.i

for.cond.cleanup3.i.i.loopexit.unr-lcssa:         ; preds = %for.body4.i.i
  %lcmp.mod171 = icmp eq i64 %xtraiter170, 0
  br i1 %lcmp.mod171, label %for.cond.cleanup3.i.i, label %for.body4.i.i.epil

for.body4.i.i.epil:                               ; preds = %for.body4.lr.ph.i.i, %for.cond.cleanup3.i.i.loopexit.unr-lcssa
  %j.073.i.i.unr205 = phi i64 [ %inc11.i.i.1, %for.cond.cleanup3.i.i.loopexit.unr-lcssa ], [ 0, %for.body4.lr.ph.i.i ]
  %agg.tmp.sroa.0.0..sroa_idx.i.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %j.073.i.i.unr205, i32 0
  %agg.tmp.sroa.0.0.copyload.i.i.epil = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.i.epil, align 8
  %shr.i.i.i.epil = ashr i32 %agg.tmp.sroa.0.0.copyload.i.i.epil, %sh_prom.i.i.i
  %conv.i.i.i.epil = sext i32 %shr.i.i.i.epil to i64
  %and.i.i.i.epil = and i64 %agg.tmp.sroa.2.0.copyload, %conv.i.i.i.epil
  %conv.i.i.epil = trunc i64 %and.i.i.i.epil to i8
  %arrayidx6.i.i.epil = getelementptr inbounds i8, i8* %Tmp, i64 %j.073.i.i.unr205
  store i8 %conv.i.i.epil, i8* %arrayidx6.i.i.epil, align 1, !tbaa !22
  %conv7.i.i.epil = and i64 %and.i.i.i.epil, 255
  %arrayidx8.i.i.epil = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %conv7.i.i.epil
  %2 = load i32, i32* %arrayidx8.i.i.epil, align 4, !tbaa !59
  %inc9.i.i.epil = add i32 %2, 1
  store i32 %inc9.i.i.epil, i32* %arrayidx8.i.i.epil, align 4, !tbaa !59
  br label %for.cond.cleanup3.i.i

for.cond.cleanup3.i.i:                            ; preds = %for.body4.i.i.epil, %for.cond.cleanup3.i.i.loopexit.unr-lcssa, %for.cond.cleanup.i.i
  br i1 %cmp74.i.i, label %for.body17.i.i.preheader, label %for.cond.cleanup16.i.i

for.body17.i.i.preheader:                         ; preds = %for.cond.cleanup3.i.i
  %3 = add i64 %m, -1
  %xtraiter165 = and i64 %m, 7
  %4 = icmp ult i64 %3, 7
  br i1 %4, label %for.cond.cleanup16.i.i.loopexit.unr-lcssa, label %for.body17.i.i.preheader.new

for.body17.i.i.preheader.new:                     ; preds = %for.body17.i.i.preheader
  %unroll_iter168 = sub i64 %m, %xtraiter165
  br label %for.body17.i.i

for.body4.i.i:                                    ; preds = %for.body4.i.i, %for.body4.lr.ph.i.i.new
  %j.073.i.i = phi i64 [ 0, %for.body4.lr.ph.i.i.new ], [ %inc11.i.i.1, %for.body4.i.i ]
  %niter173 = phi i64 [ %unroll_iter172, %for.body4.lr.ph.i.i.new ], [ %niter173.nsub.1, %for.body4.i.i ]
  %agg.tmp.sroa.0.0..sroa_idx.i.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %j.073.i.i, i32 0
  %agg.tmp.sroa.0.0.copyload.i.i = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.i, align 8
  %shr.i.i.i = ashr i32 %agg.tmp.sroa.0.0.copyload.i.i, %sh_prom.i.i.i
  %conv.i.i.i = sext i32 %shr.i.i.i to i64
  %and.i.i.i = and i64 %agg.tmp.sroa.2.0.copyload, %conv.i.i.i
  %conv.i.i = trunc i64 %and.i.i.i to i8
  %arrayidx6.i.i = getelementptr inbounds i8, i8* %Tmp, i64 %j.073.i.i
  store i8 %conv.i.i, i8* %arrayidx6.i.i, align 1, !tbaa !22
  %conv7.i.i = and i64 %and.i.i.i, 255
  %arrayidx8.i.i = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %conv7.i.i
  %5 = load i32, i32* %arrayidx8.i.i, align 4, !tbaa !59
  %inc9.i.i = add i32 %5, 1
  store i32 %inc9.i.i, i32* %arrayidx8.i.i, align 4, !tbaa !59
  %inc11.i.i = or i64 %j.073.i.i, 1
  %agg.tmp.sroa.0.0..sroa_idx.i.i.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %inc11.i.i, i32 0
  %agg.tmp.sroa.0.0.copyload.i.i.1 = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.i.1, align 8
  %shr.i.i.i.1 = ashr i32 %agg.tmp.sroa.0.0.copyload.i.i.1, %sh_prom.i.i.i
  %conv.i.i.i.1 = sext i32 %shr.i.i.i.1 to i64
  %and.i.i.i.1 = and i64 %agg.tmp.sroa.2.0.copyload, %conv.i.i.i.1
  %conv.i.i.1 = trunc i64 %and.i.i.i.1 to i8
  %arrayidx6.i.i.1 = getelementptr inbounds i8, i8* %Tmp, i64 %inc11.i.i
  store i8 %conv.i.i.1, i8* %arrayidx6.i.i.1, align 1, !tbaa !22
  %conv7.i.i.1 = and i64 %and.i.i.i.1, 255
  %arrayidx8.i.i.1 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %conv7.i.i.1
  %6 = load i32, i32* %arrayidx8.i.i.1, align 4, !tbaa !59
  %inc9.i.i.1 = add i32 %6, 1
  store i32 %inc9.i.i.1, i32* %arrayidx8.i.i.1, align 4, !tbaa !59
  %inc11.i.i.1 = add nuw nsw i64 %j.073.i.i, 2
  %niter173.nsub.1 = add i64 %niter173, -2
  %niter173.ncmp.1 = icmp eq i64 %niter173.nsub.1, 0
  br i1 %niter173.ncmp.1, label %for.cond.cleanup3.i.i.loopexit.unr-lcssa, label %for.body4.i.i

for.cond.cleanup16.i.i.loopexit.unr-lcssa:        ; preds = %for.body17.i.i, %for.body17.i.i.preheader
  %i13.071.i.i.unr = phi i64 [ 0, %for.body17.i.i.preheader ], [ %inc21.i.i.7, %for.body17.i.i ]
  %s.070.i.i.unr = phi i32 [ 0, %for.body17.i.i.preheader ], [ %add.i.i.7, %for.body17.i.i ]
  %lcmp.mod167 = icmp eq i64 %xtraiter165, 0
  br i1 %lcmp.mod167, label %for.cond.cleanup16.i.i, label %for.body17.i.i.epil.preheader

for.body17.i.i.epil.preheader:                    ; preds = %for.cond.cleanup16.i.i.loopexit.unr-lcssa
  br label %for.body17.i.i.epil

for.body17.i.i.epil:                              ; preds = %for.body17.i.i.epil.preheader, %for.body17.i.i.epil
  %i13.071.i.i.epil = phi i64 [ %inc21.i.i.epil, %for.body17.i.i.epil ], [ %i13.071.i.i.unr, %for.body17.i.i.epil.preheader ]
  %s.070.i.i.epil = phi i32 [ %add.i.i.epil, %for.body17.i.i.epil ], [ %s.070.i.i.unr, %for.body17.i.i.epil.preheader ]
  %epil.iter166 = phi i64 [ %epil.iter166.sub, %for.body17.i.i.epil ], [ %xtraiter165, %for.body17.i.i.epil.preheader ]
  %arrayidx18.i.i.epil = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %i13.071.i.i.epil
  %7 = load i32, i32* %arrayidx18.i.i.epil, align 4, !tbaa !59
  %add.i.i.epil = add i32 %7, %s.070.i.i.epil
  store i32 %add.i.i.epil, i32* %arrayidx18.i.i.epil, align 4, !tbaa !59
  %inc21.i.i.epil = add nuw nsw i64 %i13.071.i.i.epil, 1
  %epil.iter166.sub = add nsw i64 %epil.iter166, -1
  %epil.iter166.cmp = icmp eq i64 %epil.iter166.sub, 0
  br i1 %epil.iter166.cmp, label %for.cond.cleanup16.i.i, label %for.body17.i.i.epil, !llvm.loop !204

for.cond.cleanup16.i.i:                           ; preds = %for.body17.i.i.epil, %for.cond.cleanup16.i.i.loopexit.unr-lcssa, %for.cond.cleanup3.i.i
  br i1 %cmp272.i.i, label %for.body27.i.i.preheader, label %cleanup

for.body27.i.i.preheader:                         ; preds = %for.cond.cleanup16.i.i
  br label %for.body27.i.i

for.body17.i.i:                                   ; preds = %for.body17.i.i, %for.body17.i.i.preheader.new
  %i13.071.i.i = phi i64 [ 0, %for.body17.i.i.preheader.new ], [ %inc21.i.i.7, %for.body17.i.i ]
  %s.070.i.i = phi i32 [ 0, %for.body17.i.i.preheader.new ], [ %add.i.i.7, %for.body17.i.i ]
  %niter169 = phi i64 [ %unroll_iter168, %for.body17.i.i.preheader.new ], [ %niter169.nsub.7, %for.body17.i.i ]
  %arrayidx18.i.i = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %i13.071.i.i
  %8 = load i32, i32* %arrayidx18.i.i, align 4, !tbaa !59
  %add.i.i = add i32 %8, %s.070.i.i
  store i32 %add.i.i, i32* %arrayidx18.i.i, align 4, !tbaa !59
  %inc21.i.i = or i64 %i13.071.i.i, 1
  %arrayidx18.i.i.1 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i
  %9 = load i32, i32* %arrayidx18.i.i.1, align 4, !tbaa !59
  %add.i.i.1 = add i32 %9, %add.i.i
  store i32 %add.i.i.1, i32* %arrayidx18.i.i.1, align 4, !tbaa !59
  %inc21.i.i.1 = or i64 %i13.071.i.i, 2
  %arrayidx18.i.i.2 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i.1
  %10 = load i32, i32* %arrayidx18.i.i.2, align 4, !tbaa !59
  %add.i.i.2 = add i32 %10, %add.i.i.1
  store i32 %add.i.i.2, i32* %arrayidx18.i.i.2, align 4, !tbaa !59
  %inc21.i.i.2 = or i64 %i13.071.i.i, 3
  %arrayidx18.i.i.3 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i.2
  %11 = load i32, i32* %arrayidx18.i.i.3, align 4, !tbaa !59
  %add.i.i.3 = add i32 %11, %add.i.i.2
  store i32 %add.i.i.3, i32* %arrayidx18.i.i.3, align 4, !tbaa !59
  %inc21.i.i.3 = or i64 %i13.071.i.i, 4
  %arrayidx18.i.i.4 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i.3
  %12 = load i32, i32* %arrayidx18.i.i.4, align 4, !tbaa !59
  %add.i.i.4 = add i32 %12, %add.i.i.3
  store i32 %add.i.i.4, i32* %arrayidx18.i.i.4, align 4, !tbaa !59
  %inc21.i.i.4 = or i64 %i13.071.i.i, 5
  %arrayidx18.i.i.5 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i.4
  %13 = load i32, i32* %arrayidx18.i.i.5, align 4, !tbaa !59
  %add.i.i.5 = add i32 %13, %add.i.i.4
  store i32 %add.i.i.5, i32* %arrayidx18.i.i.5, align 4, !tbaa !59
  %inc21.i.i.5 = or i64 %i13.071.i.i, 6
  %arrayidx18.i.i.6 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i.5
  %14 = load i32, i32* %arrayidx18.i.i.6, align 4, !tbaa !59
  %add.i.i.6 = add i32 %14, %add.i.i.5
  store i32 %add.i.i.6, i32* %arrayidx18.i.i.6, align 4, !tbaa !59
  %inc21.i.i.6 = or i64 %i13.071.i.i, 7
  %arrayidx18.i.i.7 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i.6
  %15 = load i32, i32* %arrayidx18.i.i.7, align 4, !tbaa !59
  %add.i.i.7 = add i32 %15, %add.i.i.6
  store i32 %add.i.i.7, i32* %arrayidx18.i.i.7, align 4, !tbaa !59
  %inc21.i.i.7 = add nuw nsw i64 %i13.071.i.i, 8
  %niter169.nsub.7 = add i64 %niter169, -8
  %niter169.ncmp.7 = icmp eq i64 %niter169.nsub.7, 0
  br i1 %niter169.ncmp.7, label %for.cond.cleanup16.i.i.loopexit.unr-lcssa, label %for.body17.i.i

for.body27.i.i:                                   ; preds = %for.body27.i.i.preheader, %for.body27.i.i
  %j23.068.in.i.i = phi i64 [ %j23.068.i.i, %for.body27.i.i ], [ %n, %for.body27.i.i.preheader ]
  %j23.068.i.i = add nsw i64 %j23.068.in.i.i, -1
  %arrayidx28.i.i = getelementptr inbounds i8, i8* %Tmp, i64 %j23.068.i.i
  %16 = load i8, i8* %arrayidx28.i.i, align 1, !tbaa !22
  %idxprom29.i.i = zext i8 %16 to i64
  %arrayidx30.i.i = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %idxprom29.i.i
  %17 = load i32, i32* %arrayidx30.i.i, align 4, !tbaa !59
  %dec.i.i = add i32 %17, -1
  store i32 %dec.i.i, i32* %arrayidx30.i.i, align 4, !tbaa !59
  %idxprom32.i.i = zext i32 %dec.i.i to i64
  %first.i.i.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %j23.068.i.i, i32 0
  %18 = load i32, i32* %first.i.i.i, align 8, !tbaa !192
  %first2.i.i.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B, i64 %idxprom32.i.i, i32 0
  store i32 %18, i32* %first2.i.i.i, align 8, !tbaa !192
  %second.i.i.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %j23.068.i.i, i32 1
  %19 = bitcast %struct.vertex.16** %second.i.i.i to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !194
  %second3.i.i.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B, i64 %idxprom32.i.i, i32 1
  %21 = bitcast %struct.vertex.16** %second3.i.i.i to i64*
  store i64 %20, i64* %21, align 8, !tbaa !194
  %cmp25.i.i = icmp sgt i64 %j23.068.in.i.i, 1
  br i1 %cmp25.i.i, label %for.body27.i.i, label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %for.body27.i.i
  %22 = add i64 %n, -1
  %xtraiter = and i64 %n, 3
  %23 = icmp ult i64 %22, 3
  br i1 %23, label %cleanup.loopexit.unr-lcssa, label %for.body.i.preheader.new

for.body.i.preheader.new:                         ; preds = %for.body.i.preheader
  %unroll_iter = sub i64 %n, %xtraiter
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.i.preheader.new
  %i.018.i = phi i64 [ 0, %for.body.i.preheader.new ], [ %inc.i.3, %for.body.i ]
  %niter = phi i64 [ %unroll_iter, %for.body.i.preheader.new ], [ %niter.nsub.3, %for.body.i ]
  %first.i.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B, i64 %i.018.i, i32 0
  %24 = load i32, i32* %first.i.i, align 8, !tbaa !192
  %first2.i.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %i.018.i, i32 0
  store i32 %24, i32* %first2.i.i, align 8, !tbaa !192
  %second.i.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B, i64 %i.018.i, i32 1
  %25 = bitcast %struct.vertex.16** %second.i.i to i64*
  %26 = load i64, i64* %25, align 8, !tbaa !194
  %second3.i.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %i.018.i, i32 1
  %27 = bitcast %struct.vertex.16** %second3.i.i to i64*
  store i64 %26, i64* %27, align 8, !tbaa !194
  %inc.i = or i64 %i.018.i, 1
  %first.i.i.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B, i64 %inc.i, i32 0
  %28 = load i32, i32* %first.i.i.1, align 8, !tbaa !192
  %first2.i.i.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %inc.i, i32 0
  store i32 %28, i32* %first2.i.i.1, align 8, !tbaa !192
  %second.i.i.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B, i64 %inc.i, i32 1
  %29 = bitcast %struct.vertex.16** %second.i.i.1 to i64*
  %30 = load i64, i64* %29, align 8, !tbaa !194
  %second3.i.i.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %inc.i, i32 1
  %31 = bitcast %struct.vertex.16** %second3.i.i.1 to i64*
  store i64 %30, i64* %31, align 8, !tbaa !194
  %inc.i.1 = or i64 %i.018.i, 2
  %first.i.i.2 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B, i64 %inc.i.1, i32 0
  %32 = load i32, i32* %first.i.i.2, align 8, !tbaa !192
  %first2.i.i.2 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %inc.i.1, i32 0
  store i32 %32, i32* %first2.i.i.2, align 8, !tbaa !192
  %second.i.i.2 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B, i64 %inc.i.1, i32 1
  %33 = bitcast %struct.vertex.16** %second.i.i.2 to i64*
  %34 = load i64, i64* %33, align 8, !tbaa !194
  %second3.i.i.2 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %inc.i.1, i32 1
  %35 = bitcast %struct.vertex.16** %second3.i.i.2 to i64*
  store i64 %34, i64* %35, align 8, !tbaa !194
  %inc.i.2 = or i64 %i.018.i, 3
  %first.i.i.3 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B, i64 %inc.i.2, i32 0
  %36 = load i32, i32* %first.i.i.3, align 8, !tbaa !192
  %first2.i.i.3 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %inc.i.2, i32 0
  store i32 %36, i32* %first2.i.i.3, align 8, !tbaa !192
  %second.i.i.3 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B, i64 %inc.i.2, i32 1
  %37 = bitcast %struct.vertex.16** %second.i.i.3 to i64*
  %38 = load i64, i64* %37, align 8, !tbaa !194
  %second3.i.i.3 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %inc.i.2, i32 1
  %39 = bitcast %struct.vertex.16** %second3.i.i.3 to i64*
  store i64 %38, i64* %39, align 8, !tbaa !194
  %inc.i.3 = add nuw nsw i64 %i.018.i, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %cleanup.loopexit.unr-lcssa, label %for.body.i

pfor.detach.lr.ph:                                ; preds = %entry
  %add3 = add i64 %n, -1
  %sub = add i64 %add3, %.sroa.speculated135
  %div4 = sdiv i64 %sub, %.sroa.speculated135
  %40 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 0
  %41 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 0
  %mul5 = shl nsw i64 %.sroa.speculated135, 1
  %42 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %mul5, i64 0
  %agg.tmp28.sroa.2.0..sroa_idx = getelementptr inbounds %"struct.intSort::eBits.25", %"struct.intSort::eBits.25"* %extract, i64 0, i32 1
  %agg.tmp28.sroa.2.0.copyload = load i64, i64* %agg.tmp28.sroa.2.0..sroa_idx, align 8
  %agg.tmp28.sroa.3.0..sroa_idx = getelementptr inbounds %"struct.intSort::eBits.25", %"struct.intSort::eBits.25"* %extract, i64 0, i32 2
  %agg.tmp28.sroa.3.0.copyload = load i64, i64* %agg.tmp28.sroa.3.0..sroa_idx, align 8
  %cmp74.i = icmp sgt i64 %m, 0
  %sh_prom.i.i = trunc i64 %agg.tmp28.sroa.3.0.copyload to i32
  br i1 %cmp74.i, label %pfor.detach.us.preheader, label %pfor.detach.preheader

pfor.detach.preheader:                            ; preds = %pfor.detach.lr.ph
  %43 = xor i64 %div, -1
  %44 = sub nsw i64 -2, %div2
  %45 = icmp slt i64 %44, %43
  %smax202 = select i1 %45, i64 %43, i64 %44
  %46 = sub nsw i64 -2, %smax202
  tail call fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.ls(i64 0, i64 %46, i64 %div4, i64 %n, %"struct.std::pair.23"* %A, i8* %Tmp, i64 %m, [256 x i32]* %BK, i64 %mul5, i32 %sh_prom.i.i, i64 %agg.tmp28.sroa.2.0.copyload, %"struct.std::pair.23"* %B)
  br label %sync.continue

pfor.detach.us.preheader:                         ; preds = %pfor.detach.lr.ph
  %47 = shl i64 %m, 2
  %48 = add i64 %m, -1
  %xtraiter189 = and i64 %m, 7
  %49 = icmp ult i64 %48, 7
  %unroll_iter192 = sub i64 %m, %xtraiter189
  %lcmp.mod191 = icmp eq i64 %xtraiter189, 0
  %50 = xor i64 %div, -1
  %51 = sub nsw i64 -2, %div2
  %52 = icmp slt i64 %51, %50
  %smax203 = select i1 %52, i64 %50, i64 %51
  %53 = sub nsw i64 -2, %smax203
  tail call fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.us.ls(i64 0, i64 %53, i64 %div4, i64 %n, %"struct.std::pair.23"* %A, i8* %Tmp, i64 %m, [256 x i32]* %BK, i64 %mul5, i64 %47, i32 %sh_prom.i.i, i64 %agg.tmp28.sroa.2.0.copyload, i1 %49, i64 %unroll_iter192, i1 %lcmp.mod191, i64 %xtraiter189, %"struct.std::pair.23"* %B)
  br label %sync.continue

sync.continue:                                    ; preds = %pfor.detach.us.preheader, %pfor.detach.preheader
  %54 = bitcast %struct.transpose* %ref.tmp29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #2
  %A.i116 = getelementptr inbounds %struct.transpose, %struct.transpose* %ref.tmp29, i64 0, i32 0
  store i32* %40, i32** %A.i116, align 8, !tbaa !122
  %B.i117 = getelementptr inbounds %struct.transpose, %struct.transpose* %ref.tmp29, i64 0, i32 1
  store i32* %41, i32** %B.i117, align 8, !tbaa !124
  %conv30 = trunc i64 %.sroa.speculated135 to i32
  %conv31 = trunc i64 %m to i32
  call void @_ZN9transposeIjjE6transREjjjjjj(%struct.transpose* nonnull %ref.tmp29, i32 0, i32 %conv30, i32 %conv31, i32 0, i32 %conv31, i32 %conv30) #2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #2
  %mul33 = mul nsw i64 %.sroa.speculated135, %m
  br i1 %top, label %if.then32, label %if.else

if.then32:                                        ; preds = %sync.continue
  %call.i = call i32 @_ZN8sequence4scanIjlN5utils4addFIjEENS_4getAIjlEEEET_PS6_T0_S8_T1_T2_S6_bb(i32* %41, i64 0, i64 %mul33, i32* %41, i32 0, i1 zeroext false, i1 zeroext false) #2
  br label %if.end41

if.else:                                          ; preds = %sync.continue
  %cmp34110.i.i = icmp sgt i64 %mul33, 0
  br i1 %cmp34110.i.i, label %for.body36.i.i.preheader, label %if.end41

for.body36.i.i.preheader:                         ; preds = %if.else
  %55 = add i64 %mul33, -1
  %xtraiter179 = and i64 %mul33, 7
  %56 = icmp ult i64 %55, 7
  br i1 %56, label %if.end41.loopexit.unr-lcssa, label %for.body36.i.i.preheader.new

for.body36.i.i.preheader.new:                     ; preds = %for.body36.i.i.preheader
  %unroll_iter182 = sub i64 %mul33, %xtraiter179
  br label %for.body36.i.i

for.body36.i.i:                                   ; preds = %for.body36.i.i, %for.body36.i.i.preheader.new
  %i32.0112.i.i = phi i64 [ 0, %for.body36.i.i.preheader.new ], [ %inc42.i.i.7, %for.body36.i.i ]
  %r.3111.i.i = phi i32 [ 0, %for.body36.i.i.preheader.new ], [ %add.i.i.i.7, %for.body36.i.i ]
  %niter183 = phi i64 [ %unroll_iter182, %for.body36.i.i.preheader.new ], [ %niter183.nsub.7, %for.body36.i.i ]
  %arrayidx.i72.i.i = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %i32.0112.i.i
  %57 = load i32, i32* %arrayidx.i72.i.i, align 4, !tbaa !59
  store i32 %r.3111.i.i, i32* %arrayidx.i72.i.i, align 4, !tbaa !59
  %add.i.i.i = add i32 %57, %r.3111.i.i
  %inc42.i.i = or i64 %i32.0112.i.i, 1
  %arrayidx.i72.i.i.1 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i
  %58 = load i32, i32* %arrayidx.i72.i.i.1, align 4, !tbaa !59
  store i32 %add.i.i.i, i32* %arrayidx.i72.i.i.1, align 4, !tbaa !59
  %add.i.i.i.1 = add i32 %58, %add.i.i.i
  %inc42.i.i.1 = or i64 %i32.0112.i.i, 2
  %arrayidx.i72.i.i.2 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i.1
  %59 = load i32, i32* %arrayidx.i72.i.i.2, align 4, !tbaa !59
  store i32 %add.i.i.i.1, i32* %arrayidx.i72.i.i.2, align 4, !tbaa !59
  %add.i.i.i.2 = add i32 %59, %add.i.i.i.1
  %inc42.i.i.2 = or i64 %i32.0112.i.i, 3
  %arrayidx.i72.i.i.3 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i.2
  %60 = load i32, i32* %arrayidx.i72.i.i.3, align 4, !tbaa !59
  store i32 %add.i.i.i.2, i32* %arrayidx.i72.i.i.3, align 4, !tbaa !59
  %add.i.i.i.3 = add i32 %60, %add.i.i.i.2
  %inc42.i.i.3 = or i64 %i32.0112.i.i, 4
  %arrayidx.i72.i.i.4 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i.3
  %61 = load i32, i32* %arrayidx.i72.i.i.4, align 4, !tbaa !59
  store i32 %add.i.i.i.3, i32* %arrayidx.i72.i.i.4, align 4, !tbaa !59
  %add.i.i.i.4 = add i32 %61, %add.i.i.i.3
  %inc42.i.i.4 = or i64 %i32.0112.i.i, 5
  %arrayidx.i72.i.i.5 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i.4
  %62 = load i32, i32* %arrayidx.i72.i.i.5, align 4, !tbaa !59
  store i32 %add.i.i.i.4, i32* %arrayidx.i72.i.i.5, align 4, !tbaa !59
  %add.i.i.i.5 = add i32 %62, %add.i.i.i.4
  %inc42.i.i.5 = or i64 %i32.0112.i.i, 6
  %arrayidx.i72.i.i.6 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i.5
  %63 = load i32, i32* %arrayidx.i72.i.i.6, align 4, !tbaa !59
  store i32 %add.i.i.i.5, i32* %arrayidx.i72.i.i.6, align 4, !tbaa !59
  %add.i.i.i.6 = add i32 %63, %add.i.i.i.5
  %inc42.i.i.6 = or i64 %i32.0112.i.i, 7
  %arrayidx.i72.i.i.7 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i.6
  %64 = load i32, i32* %arrayidx.i72.i.i.7, align 4, !tbaa !59
  store i32 %add.i.i.i.6, i32* %arrayidx.i72.i.i.7, align 4, !tbaa !59
  %add.i.i.i.7 = add i32 %64, %add.i.i.i.6
  %inc42.i.i.7 = add nuw nsw i64 %i32.0112.i.i, 8
  %niter183.nsub.7 = add i64 %niter183, -8
  %niter183.ncmp.7 = icmp eq i64 %niter183.nsub.7, 0
  br i1 %niter183.ncmp.7, label %if.end41.loopexit.unr-lcssa, label %for.body36.i.i

if.end41.loopexit.unr-lcssa:                      ; preds = %for.body36.i.i, %for.body36.i.i.preheader
  %i32.0112.i.i.unr = phi i64 [ 0, %for.body36.i.i.preheader ], [ %inc42.i.i.7, %for.body36.i.i ]
  %r.3111.i.i.unr = phi i32 [ 0, %for.body36.i.i.preheader ], [ %add.i.i.i.7, %for.body36.i.i ]
  %lcmp.mod181 = icmp eq i64 %xtraiter179, 0
  br i1 %lcmp.mod181, label %if.end41, label %for.body36.i.i.epil.preheader

for.body36.i.i.epil.preheader:                    ; preds = %if.end41.loopexit.unr-lcssa
  br label %for.body36.i.i.epil

for.body36.i.i.epil:                              ; preds = %for.body36.i.i.epil.preheader, %for.body36.i.i.epil
  %i32.0112.i.i.epil = phi i64 [ %inc42.i.i.epil, %for.body36.i.i.epil ], [ %i32.0112.i.i.unr, %for.body36.i.i.epil.preheader ]
  %r.3111.i.i.epil = phi i32 [ %add.i.i.i.epil, %for.body36.i.i.epil ], [ %r.3111.i.i.unr, %for.body36.i.i.epil.preheader ]
  %epil.iter180 = phi i64 [ %epil.iter180.sub, %for.body36.i.i.epil ], [ %xtraiter179, %for.body36.i.i.epil.preheader ]
  %arrayidx.i72.i.i.epil = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %i32.0112.i.i.epil
  %65 = load i32, i32* %arrayidx.i72.i.i.epil, align 4, !tbaa !59
  store i32 %r.3111.i.i.epil, i32* %arrayidx.i72.i.i.epil, align 4, !tbaa !59
  %add.i.i.i.epil = add i32 %65, %r.3111.i.i.epil
  %inc42.i.i.epil = add nuw nsw i64 %i32.0112.i.i.epil, 1
  %epil.iter180.sub = add nsw i64 %epil.iter180, -1
  %epil.iter180.cmp = icmp eq i64 %epil.iter180.sub, 0
  br i1 %epil.iter180.cmp, label %if.end41, label %for.body36.i.i.epil, !llvm.loop !205

if.end41:                                         ; preds = %for.body36.i.i.epil, %if.end41.loopexit.unr-lcssa, %if.else, %if.then32
  %66 = bitcast %struct.blockTrans.26* %ref.tmp42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %66) #2
  %A.i = getelementptr inbounds %struct.blockTrans.26, %struct.blockTrans.26* %ref.tmp42, i64 0, i32 0
  store %"struct.std::pair.23"* %B, %"struct.std::pair.23"** %A.i, align 8, !tbaa !206
  %B.i = getelementptr inbounds %struct.blockTrans.26, %struct.blockTrans.26* %ref.tmp42, i64 0, i32 1
  store %"struct.std::pair.23"* %A, %"struct.std::pair.23"** %B.i, align 8, !tbaa !208
  %OA.i = getelementptr inbounds %struct.blockTrans.26, %struct.blockTrans.26* %ref.tmp42, i64 0, i32 2
  store i32* %42, i32** %OA.i, align 8, !tbaa !209
  %OB.i = getelementptr inbounds %struct.blockTrans.26, %struct.blockTrans.26* %ref.tmp42, i64 0, i32 3
  store i32* %41, i32** %OB.i, align 8, !tbaa !210
  %L.i = getelementptr inbounds %struct.blockTrans.26, %struct.blockTrans.26* %ref.tmp42, i64 0, i32 4
  store i32* %40, i32** %L.i, align 8, !tbaa !211
  call void @_ZN10blockTransISt4pairIiP6vertexI8_point2dIdELi10EEEjE6transREjjjjjj(%struct.blockTrans.26* nonnull %ref.tmp42, i32 0, i32 %conv30, i32 %conv31, i32 0, i32 %conv31, i32 %conv30) #2
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %66) #2
  br i1 %cmp74.i, label %for.body.preheader, label %cleanup

for.body.preheader:                               ; preds = %if.end41
  %67 = add i64 %m, -1
  %xtraiter174 = and i64 %m, 7
  %68 = icmp ult i64 %67, 7
  br i1 %68, label %cleanup.loopexit163.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter177 = sub i64 %m, %xtraiter174
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.preheader.new
  %j.0154 = phi i64 [ 0, %for.body.preheader.new ], [ %inc50.7, %for.body ]
  %niter178 = phi i64 [ %unroll_iter177, %for.body.preheader.new ], [ %niter178.nsub.7, %for.body ]
  %mul46 = mul nsw i64 %j.0154, %.sroa.speculated135
  %arrayidx47 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46
  %69 = load i32, i32* %arrayidx47, align 4, !tbaa !59
  %arrayidx49 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %j.0154
  store i32 %69, i32* %arrayidx49, align 4, !tbaa !59
  %inc50 = or i64 %j.0154, 1
  %mul46.1 = mul nsw i64 %inc50, %.sroa.speculated135
  %arrayidx47.1 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.1
  %70 = load i32, i32* %arrayidx47.1, align 4, !tbaa !59
  %arrayidx49.1 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50
  store i32 %70, i32* %arrayidx49.1, align 4, !tbaa !59
  %inc50.1 = or i64 %j.0154, 2
  %mul46.2 = mul nsw i64 %inc50.1, %.sroa.speculated135
  %arrayidx47.2 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.2
  %71 = load i32, i32* %arrayidx47.2, align 4, !tbaa !59
  %arrayidx49.2 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50.1
  store i32 %71, i32* %arrayidx49.2, align 4, !tbaa !59
  %inc50.2 = or i64 %j.0154, 3
  %mul46.3 = mul nsw i64 %inc50.2, %.sroa.speculated135
  %arrayidx47.3 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.3
  %72 = load i32, i32* %arrayidx47.3, align 4, !tbaa !59
  %arrayidx49.3 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50.2
  store i32 %72, i32* %arrayidx49.3, align 4, !tbaa !59
  %inc50.3 = or i64 %j.0154, 4
  %mul46.4 = mul nsw i64 %inc50.3, %.sroa.speculated135
  %arrayidx47.4 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.4
  %73 = load i32, i32* %arrayidx47.4, align 4, !tbaa !59
  %arrayidx49.4 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50.3
  store i32 %73, i32* %arrayidx49.4, align 4, !tbaa !59
  %inc50.4 = or i64 %j.0154, 5
  %mul46.5 = mul nsw i64 %inc50.4, %.sroa.speculated135
  %arrayidx47.5 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.5
  %74 = load i32, i32* %arrayidx47.5, align 4, !tbaa !59
  %arrayidx49.5 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50.4
  store i32 %74, i32* %arrayidx49.5, align 4, !tbaa !59
  %inc50.5 = or i64 %j.0154, 6
  %mul46.6 = mul nsw i64 %inc50.5, %.sroa.speculated135
  %arrayidx47.6 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.6
  %75 = load i32, i32* %arrayidx47.6, align 4, !tbaa !59
  %arrayidx49.6 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50.5
  store i32 %75, i32* %arrayidx49.6, align 4, !tbaa !59
  %inc50.6 = or i64 %j.0154, 7
  %mul46.7 = mul nsw i64 %inc50.6, %.sroa.speculated135
  %arrayidx47.7 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.7
  %76 = load i32, i32* %arrayidx47.7, align 4, !tbaa !59
  %arrayidx49.7 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50.6
  store i32 %76, i32* %arrayidx49.7, align 4, !tbaa !59
  %inc50.7 = add nuw nsw i64 %j.0154, 8
  %niter178.nsub.7 = add i64 %niter178, -8
  %niter178.ncmp.7 = icmp eq i64 %niter178.nsub.7, 0
  br i1 %niter178.ncmp.7, label %cleanup.loopexit163.unr-lcssa, label %for.body

cleanup.loopexit.unr-lcssa:                       ; preds = %for.body.i, %for.body.i.preheader
  %i.018.i.unr = phi i64 [ 0, %for.body.i.preheader ], [ %inc.i.3, %for.body.i ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %cleanup, label %for.body.i.epil.preheader

for.body.i.epil.preheader:                        ; preds = %cleanup.loopexit.unr-lcssa
  br label %for.body.i.epil

for.body.i.epil:                                  ; preds = %for.body.i.epil.preheader, %for.body.i.epil
  %i.018.i.epil = phi i64 [ %inc.i.epil, %for.body.i.epil ], [ %i.018.i.unr, %for.body.i.epil.preheader ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body.i.epil ], [ %xtraiter, %for.body.i.epil.preheader ]
  %first.i.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B, i64 %i.018.i.epil, i32 0
  %77 = load i32, i32* %first.i.i.epil, align 8, !tbaa !192
  %first2.i.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %i.018.i.epil, i32 0
  store i32 %77, i32* %first2.i.i.epil, align 8, !tbaa !192
  %second.i.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B, i64 %i.018.i.epil, i32 1
  %78 = bitcast %struct.vertex.16** %second.i.i.epil to i64*
  %79 = load i64, i64* %78, align 8, !tbaa !194
  %second3.i.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %i.018.i.epil, i32 1
  %80 = bitcast %struct.vertex.16** %second3.i.i.epil to i64*
  store i64 %79, i64* %80, align 8, !tbaa !194
  %inc.i.epil = add nuw nsw i64 %i.018.i.epil, 1
  %epil.iter.sub = add nsw i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %cleanup, label %for.body.i.epil, !llvm.loop !212

cleanup.loopexit163.unr-lcssa:                    ; preds = %for.body, %for.body.preheader
  %j.0154.unr = phi i64 [ 0, %for.body.preheader ], [ %inc50.7, %for.body ]
  %lcmp.mod176 = icmp eq i64 %xtraiter174, 0
  br i1 %lcmp.mod176, label %cleanup, label %for.body.epil.preheader

for.body.epil.preheader:                          ; preds = %cleanup.loopexit163.unr-lcssa
  br label %for.body.epil

for.body.epil:                                    ; preds = %for.body.epil.preheader, %for.body.epil
  %j.0154.epil = phi i64 [ %inc50.epil, %for.body.epil ], [ %j.0154.unr, %for.body.epil.preheader ]
  %epil.iter175 = phi i64 [ %epil.iter175.sub, %for.body.epil ], [ %xtraiter174, %for.body.epil.preheader ]
  %mul46.epil = mul nsw i64 %j.0154.epil, %.sroa.speculated135
  %arrayidx47.epil = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.epil
  %81 = load i32, i32* %arrayidx47.epil, align 4, !tbaa !59
  %arrayidx49.epil = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %j.0154.epil
  store i32 %81, i32* %arrayidx49.epil, align 4, !tbaa !59
  %inc50.epil = add nuw nsw i64 %j.0154.epil, 1
  %epil.iter175.sub = add nsw i64 %epil.iter175, -1
  %epil.iter175.cmp = icmp eq i64 %epil.iter175.sub, 0
  br i1 %epil.iter175.cmp, label %cleanup, label %for.body.epil, !llvm.loop !213

cleanup:                                          ; preds = %for.body.epil, %for.body.i.epil, %cleanup.loopexit163.unr-lcssa, %cleanup.loopexit.unr-lcssa, %if.end41, %for.cond.cleanup16.i.i
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0_(%"struct.std::pair.23"* %A, %"struct.std::pair.23"* %B, i8* %Tmp, [256 x i32]* %BK, i64 %numBK, i64 %n, i64 %bits) local_unnamed_addr #7 comdat {
entry:
  %0 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8 = shl i32 %0, 3
  %agg.tmp.i = alloca %"struct.intSort::eBits.25", align 8
  %agg.tmp = alloca %"struct.intSort::eBits.25", align 8
  %agg.tmp6 = alloca %"struct.intSort::eBits.25", align 8
  %cmp = icmp eq i64 %n, 0
  br i1 %cmp, label %cleanup.cont, label %if.end

if.end:                                           ; preds = %entry
  %cmp1 = icmp slt i64 %bits, 9
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  %shl = shl i64 1, %bits
  %_mask.i = getelementptr inbounds %"struct.intSort::eBits.25", %"struct.intSort::eBits.25"* %agg.tmp, i64 0, i32 1
  %sh_prom.i = trunc i64 %bits to i32
  %shl.i = shl i32 1, %sh_prom.i
  %sub.i = add nsw i32 %shl.i, -1
  %conv.i = sext i32 %sub.i to i64
  store i64 %conv.i, i64* %_mask.i, align 8, !tbaa !200
  %_offset.i = getelementptr inbounds %"struct.intSort::eBits.25", %"struct.intSort::eBits.25"* %agg.tmp, i64 0, i32 2
  store i64 0, i64* %_offset.i, align 8, !tbaa !203
  call void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_(%"struct.std::pair.23"* %A, %"struct.std::pair.23"* %B, i8* %Tmp, [256 x i32]* %BK, i64 %numBK, i64 %n, i64 %shl, i1 zeroext true, %"struct.intSort::eBits.25"* byval nonnull align 8 %agg.tmp)
  br label %cleanup.cont

if.else:                                          ; preds = %if.end
  %cmp4 = icmp sgt i64 %numBK, 256
  br i1 %cmp4, label %if.then5, label %while.body.lr.ph.i

if.then5:                                         ; preds = %if.else
  %sub = add nsw i64 %bits, -8
  %_mask.i90 = getelementptr inbounds %"struct.intSort::eBits.25", %"struct.intSort::eBits.25"* %agg.tmp6, i64 0, i32 1
  store i64 255, i64* %_mask.i90, align 8, !tbaa !200
  %_offset.i91 = getelementptr inbounds %"struct.intSort::eBits.25", %"struct.intSort::eBits.25"* %agg.tmp6, i64 0, i32 2
  store i64 %sub, i64* %_offset.i91, align 8, !tbaa !203
  call void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_(%"struct.std::pair.23"* %A, %"struct.std::pair.23"* %B, i8* %Tmp, [256 x i32]* %BK, i64 %numBK, i64 %n, i64 256, i1 zeroext true, %"struct.intSort::eBits.25"* byval nonnull align 8 %agg.tmp6)
  %sub9 = add nsw i64 %numBK, -257
  %conv = sitofp i64 %sub9 to float
  %conv10 = sitofp i64 %n to float
  %div = fdiv fast float %conv, %conv10
  %1 = zext i32 %__cilkrts_wc8 to i64
  %2 = add nuw nsw i64 %1, 254
  %3 = udiv i64 %2, %1
  %4 = icmp ult i64 %3, 2048
  %5 = select i1 %4, i64 %3, i64 2048
  call fastcc void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0__pfor.detach.ls(i64 0, i64 255, i64 %5, [256 x i32]* %BK, float %conv10, i64 %n, float %div, %"struct.std::pair.23"* %A, %"struct.std::pair.23"* %B, i8* %Tmp, i64 %sub)
  br label %cleanup.cont

while.body.lr.ph.i:                               ; preds = %if.else
  %6 = getelementptr inbounds %"struct.intSort::eBits.25", %"struct.intSort::eBits.25"* %agg.tmp.i, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6)
  %sub.i92 = add nsw i64 %bits, -1
  %div.i = sdiv i64 %sub.i92, 8
  %add.i = add nsw i64 %div.i, 1
  %div2.i = sdiv i64 %sub.i92, %add.i
  %add3.i = add nsw i64 %div2.i, 1
  %_mask.i.i = getelementptr inbounds %"struct.intSort::eBits.25", %"struct.intSort::eBits.25"* %agg.tmp.i, i64 0, i32 1
  %_offset.i.i = getelementptr inbounds %"struct.intSort::eBits.25", %"struct.intSort::eBits.25"* %agg.tmp.i, i64 0, i32 2
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i, %while.body.lr.ph.i
  %bitOffset.025.i = phi i64 [ 0, %while.body.lr.ph.i ], [ %add8.i, %while.body.i ]
  %rbits.024.i = phi i64 [ %add3.i, %while.body.lr.ph.i ], [ %spec.select.i, %while.body.i ]
  %add4.i = add nsw i64 %rbits.024.i, %bitOffset.025.i
  %cmp5.i = icmp sgt i64 %add4.i, %bits
  %sub6.i = sub nsw i64 %bits, %bitOffset.025.i
  %spec.select.i = select i1 %cmp5.i, i64 %sub6.i, i64 %rbits.024.i
  %sh_prom.i93 = trunc i64 %spec.select.i to i32
  %shl.i94 = shl i32 1, %sh_prom.i93
  %conv.i95 = sext i32 %shl.i94 to i64
  %sub.i.i = add nsw i32 %shl.i94, -1
  %conv.i.i = sext i32 %sub.i.i to i64
  store i64 %conv.i.i, i64* %_mask.i.i, align 8, !tbaa !200
  store i64 %bitOffset.025.i, i64* %_offset.i.i, align 8, !tbaa !203
  call void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_(%"struct.std::pair.23"* %A, %"struct.std::pair.23"* %B, i8* %Tmp, [256 x i32]* %BK, i64 %numBK, i64 %n, i64 %conv.i95, i1 zeroext false, %"struct.intSort::eBits.25"* byval nonnull align 8 %agg.tmp.i) #2
  %add8.i = add nsw i64 %spec.select.i, %bitOffset.025.i
  %cmp.i = icmp slt i64 %add8.i, %bits
  br i1 %cmp.i, label %while.body.i, label %_ZN7intSort17radixLoopBottomUpISt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllbT0_.exit

_ZN7intSort17radixLoopBottomUpISt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllbT0_.exit: ; preds = %while.body.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6)
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.then5, %if.then2, %_ZN7intSort17radixLoopBottomUpISt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllbT0_.exit, %entry
  ret void
}

; Function Attrs: nounwind stealable uwtable
define linkonce_odr void @_ZN10blockTransISt4pairIiP6vertexI8_point2dIdELi10EEEjE6transREjjjjjj(%struct.blockTrans.26* %this, i32 %rStart, i32 %rCount, i32 %rLength, i32 %cStart, i32 %cCount, i32 %cLength) local_unnamed_addr #15 comdat align 2 {
entry:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %entry
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %entry, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %entry ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %entry ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %9 = or i32 %cCount, %rCount
  %10 = icmp ult i32 %9, 64
  br i1 %10, label %if.then, label %if.else.preheader

if.else.preheader:                                ; preds = %__cilkrts_enter_frame_1.exit
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %13 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %14 = getelementptr inbounds [5 x i8*], [5 x i8*]* %13, i64 0, i64 0
  %15 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %16 = bitcast [5 x i8*]* %13 to i8*
  br label %if.else

if.then:                                          ; preds = %det.cont, %__cilkrts_enter_frame_1.exit
  %cStart.tr.lcssa = phi i32 [ %cStart, %__cilkrts_enter_frame_1.exit ], [ %add34, %det.cont ]
  %cCount.tr.lcssa = phi i32 [ %cCount, %__cilkrts_enter_frame_1.exit ], [ %sub, %det.cont ]
  %add = add i32 %rCount, %rStart
  %cmp3110 = icmp ugt i32 %add, %rStart
  br i1 %cmp3110, label %for.body.lr.ph, label %if.end46

for.body.lr.ph:                                   ; preds = %if.then
  %add5 = add i32 %cCount.tr.lcssa, %cStart.tr.lcssa
  %cmp6108 = icmp ult i32 %cStart.tr.lcssa, %add5
  br i1 %cmp6108, label %for.body.lr.ph.split.us, label %if.end46

for.body.lr.ph.split.us:                          ; preds = %for.body.lr.ph
  %L = getelementptr inbounds %struct.blockTrans.26, %struct.blockTrans.26* %this, i64 0, i32 4
  %OB = getelementptr inbounds %struct.blockTrans.26, %struct.blockTrans.26* %this, i64 0, i32 3
  %B = getelementptr inbounds %struct.blockTrans.26, %struct.blockTrans.26* %this, i64 0, i32 1
  %OA = getelementptr inbounds %struct.blockTrans.26, %struct.blockTrans.26* %this, i64 0, i32 2
  %A = getelementptr inbounds %struct.blockTrans.26, %struct.blockTrans.26* %this, i64 0, i32 0
  %17 = zext i32 %cStart.tr.lcssa to i64
  %18 = load %"struct.std::pair.23"*, %"struct.std::pair.23"** %A, align 8, !tbaa !206
  %19 = load i32*, i32** %OA, align 8, !tbaa !209
  %20 = load %"struct.std::pair.23"*, %"struct.std::pair.23"** %B, align 8, !tbaa !208
  %21 = load i32*, i32** %OB, align 8, !tbaa !210
  %22 = load i32*, i32** %L, align 8, !tbaa !211
  %wide.trip.count = zext i32 %add5 to i64
  br label %for.body.us

for.body.us:                                      ; preds = %for.cond4.for.cond.cleanup7_crit_edge.us, %for.body.lr.ph.split.us
  %i.0111.us = phi i32 [ %rStart, %for.body.lr.ph.split.us ], [ %inc29.us, %for.cond4.for.cond.cleanup7_crit_edge.us ]
  %mul.us = mul i32 %i.0111.us, %rLength
  br label %for.body8.us

for.body8.us:                                     ; preds = %for.cond.cleanup22.us, %for.body.us
  %indvars.iv = phi i64 [ %17, %for.body.us ], [ %indvars.iv.next, %for.cond.cleanup22.us ]
  %23 = trunc i64 %indvars.iv to i32
  %add9.us = add i32 %mul.us, %23
  %idxprom.us = zext i32 %add9.us to i64
  %arrayidx19.us = getelementptr inbounds i32, i32* %22, i64 %idxprom.us
  %24 = load i32, i32* %arrayidx19.us, align 4, !tbaa !59
  %cmp21104.us = icmp eq i32 %24, 0
  br i1 %cmp21104.us, label %for.cond.cleanup22.us, label %for.body23.lr.ph.us

for.cond.cleanup22.us.loopexit.unr-lcssa:         ; preds = %for.body23.us, %for.body23.lr.ph.us
  %pa.0107.us.unr = phi %"struct.std::pair.23"* [ %add.ptr.us, %for.body23.lr.ph.us ], [ %incdec.ptr.us.7, %for.body23.us ]
  %pb.0105.us.unr = phi %"struct.std::pair.23"* [ %add.ptr15.us, %for.body23.lr.ph.us ], [ %incdec.ptr24.us.7, %for.body23.us ]
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod, label %for.cond.cleanup22.us, label %for.body23.us.epil.preheader

for.body23.us.epil.preheader:                     ; preds = %for.cond.cleanup22.us.loopexit.unr-lcssa
  br label %for.body23.us.epil

for.body23.us.epil:                               ; preds = %for.body23.us.epil.preheader, %for.body23.us.epil
  %pa.0107.us.epil = phi %"struct.std::pair.23"* [ %incdec.ptr.us.epil, %for.body23.us.epil ], [ %pa.0107.us.unr, %for.body23.us.epil.preheader ]
  %pb.0105.us.epil = phi %"struct.std::pair.23"* [ %incdec.ptr24.us.epil, %for.body23.us.epil ], [ %pb.0105.us.unr, %for.body23.us.epil.preheader ]
  %epil.iter = phi i32 [ %epil.iter.sub, %for.body23.us.epil ], [ %xtraiter, %for.body23.us.epil.preheader ]
  %incdec.ptr.us.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pa.0107.us.epil, i64 1
  %incdec.ptr24.us.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pb.0105.us.epil, i64 1
  %first.i.us.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pa.0107.us.epil, i64 0, i32 0
  %25 = load i32, i32* %first.i.us.epil, align 8, !tbaa !192
  %first2.i.us.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pb.0105.us.epil, i64 0, i32 0
  store i32 %25, i32* %first2.i.us.epil, align 8, !tbaa !192
  %second.i.us.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pa.0107.us.epil, i64 0, i32 1
  %26 = bitcast %struct.vertex.16** %second.i.us.epil to i64*
  %27 = load i64, i64* %26, align 8, !tbaa !194
  %second3.i.us.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pb.0105.us.epil, i64 0, i32 1
  %28 = bitcast %struct.vertex.16** %second3.i.us.epil to i64*
  store i64 %27, i64* %28, align 8, !tbaa !194
  %epil.iter.sub = add nsw i32 %epil.iter, -1
  %epil.iter.cmp = icmp eq i32 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond.cleanup22.us, label %for.body23.us.epil, !llvm.loop !214

for.cond.cleanup22.us:                            ; preds = %for.body23.us.epil, %for.cond.cleanup22.us.loopexit.unr-lcssa, %for.body8.us
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond119 = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond119, label %for.cond4.for.cond.cleanup7_crit_edge.us, label %for.body8.us

for.body23.us:                                    ; preds = %for.body23.us, %for.body23.lr.ph.us.new
  %pa.0107.us = phi %"struct.std::pair.23"* [ %add.ptr.us, %for.body23.lr.ph.us.new ], [ %incdec.ptr.us.7, %for.body23.us ]
  %pb.0105.us = phi %"struct.std::pair.23"* [ %add.ptr15.us, %for.body23.lr.ph.us.new ], [ %incdec.ptr24.us.7, %for.body23.us ]
  %niter = phi i32 [ %unroll_iter, %for.body23.lr.ph.us.new ], [ %niter.nsub.7, %for.body23.us ]
  %first.i.us = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pa.0107.us, i64 0, i32 0
  %29 = load i32, i32* %first.i.us, align 8, !tbaa !192
  %first2.i.us = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pb.0105.us, i64 0, i32 0
  store i32 %29, i32* %first2.i.us, align 8, !tbaa !192
  %second.i.us = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pa.0107.us, i64 0, i32 1
  %30 = bitcast %struct.vertex.16** %second.i.us to i64*
  %31 = load i64, i64* %30, align 8, !tbaa !194
  %second3.i.us = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pb.0105.us, i64 0, i32 1
  %32 = bitcast %struct.vertex.16** %second3.i.us to i64*
  store i64 %31, i64* %32, align 8, !tbaa !194
  %first.i.us.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pa.0107.us, i64 1, i32 0
  %33 = load i32, i32* %first.i.us.1, align 8, !tbaa !192
  %first2.i.us.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pb.0105.us, i64 1, i32 0
  store i32 %33, i32* %first2.i.us.1, align 8, !tbaa !192
  %second.i.us.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pa.0107.us, i64 1, i32 1
  %34 = bitcast %struct.vertex.16** %second.i.us.1 to i64*
  %35 = load i64, i64* %34, align 8, !tbaa !194
  %second3.i.us.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pb.0105.us, i64 1, i32 1
  %36 = bitcast %struct.vertex.16** %second3.i.us.1 to i64*
  store i64 %35, i64* %36, align 8, !tbaa !194
  %first.i.us.2 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pa.0107.us, i64 2, i32 0
  %37 = load i32, i32* %first.i.us.2, align 8, !tbaa !192
  %first2.i.us.2 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pb.0105.us, i64 2, i32 0
  store i32 %37, i32* %first2.i.us.2, align 8, !tbaa !192
  %second.i.us.2 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pa.0107.us, i64 2, i32 1
  %38 = bitcast %struct.vertex.16** %second.i.us.2 to i64*
  %39 = load i64, i64* %38, align 8, !tbaa !194
  %second3.i.us.2 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pb.0105.us, i64 2, i32 1
  %40 = bitcast %struct.vertex.16** %second3.i.us.2 to i64*
  store i64 %39, i64* %40, align 8, !tbaa !194
  %first.i.us.3 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pa.0107.us, i64 3, i32 0
  %41 = load i32, i32* %first.i.us.3, align 8, !tbaa !192
  %first2.i.us.3 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pb.0105.us, i64 3, i32 0
  store i32 %41, i32* %first2.i.us.3, align 8, !tbaa !192
  %second.i.us.3 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pa.0107.us, i64 3, i32 1
  %42 = bitcast %struct.vertex.16** %second.i.us.3 to i64*
  %43 = load i64, i64* %42, align 8, !tbaa !194
  %second3.i.us.3 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pb.0105.us, i64 3, i32 1
  %44 = bitcast %struct.vertex.16** %second3.i.us.3 to i64*
  store i64 %43, i64* %44, align 8, !tbaa !194
  %first.i.us.4 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pa.0107.us, i64 4, i32 0
  %45 = load i32, i32* %first.i.us.4, align 8, !tbaa !192
  %first2.i.us.4 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pb.0105.us, i64 4, i32 0
  store i32 %45, i32* %first2.i.us.4, align 8, !tbaa !192
  %second.i.us.4 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pa.0107.us, i64 4, i32 1
  %46 = bitcast %struct.vertex.16** %second.i.us.4 to i64*
  %47 = load i64, i64* %46, align 8, !tbaa !194
  %second3.i.us.4 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pb.0105.us, i64 4, i32 1
  %48 = bitcast %struct.vertex.16** %second3.i.us.4 to i64*
  store i64 %47, i64* %48, align 8, !tbaa !194
  %first.i.us.5 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pa.0107.us, i64 5, i32 0
  %49 = load i32, i32* %first.i.us.5, align 8, !tbaa !192
  %first2.i.us.5 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pb.0105.us, i64 5, i32 0
  store i32 %49, i32* %first2.i.us.5, align 8, !tbaa !192
  %second.i.us.5 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pa.0107.us, i64 5, i32 1
  %50 = bitcast %struct.vertex.16** %second.i.us.5 to i64*
  %51 = load i64, i64* %50, align 8, !tbaa !194
  %second3.i.us.5 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pb.0105.us, i64 5, i32 1
  %52 = bitcast %struct.vertex.16** %second3.i.us.5 to i64*
  store i64 %51, i64* %52, align 8, !tbaa !194
  %first.i.us.6 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pa.0107.us, i64 6, i32 0
  %53 = load i32, i32* %first.i.us.6, align 8, !tbaa !192
  %first2.i.us.6 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pb.0105.us, i64 6, i32 0
  store i32 %53, i32* %first2.i.us.6, align 8, !tbaa !192
  %second.i.us.6 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pa.0107.us, i64 6, i32 1
  %54 = bitcast %struct.vertex.16** %second.i.us.6 to i64*
  %55 = load i64, i64* %54, align 8, !tbaa !194
  %second3.i.us.6 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pb.0105.us, i64 6, i32 1
  %56 = bitcast %struct.vertex.16** %second3.i.us.6 to i64*
  store i64 %55, i64* %56, align 8, !tbaa !194
  %incdec.ptr.us.7 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pa.0107.us, i64 8
  %incdec.ptr24.us.7 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pb.0105.us, i64 8
  %first.i.us.7 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pa.0107.us, i64 7, i32 0
  %57 = load i32, i32* %first.i.us.7, align 8, !tbaa !192
  %first2.i.us.7 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pb.0105.us, i64 7, i32 0
  store i32 %57, i32* %first2.i.us.7, align 8, !tbaa !192
  %second.i.us.7 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pa.0107.us, i64 7, i32 1
  %58 = bitcast %struct.vertex.16** %second.i.us.7 to i64*
  %59 = load i64, i64* %58, align 8, !tbaa !194
  %second3.i.us.7 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %pb.0105.us, i64 7, i32 1
  %60 = bitcast %struct.vertex.16** %second3.i.us.7 to i64*
  store i64 %59, i64* %60, align 8, !tbaa !194
  %niter.nsub.7 = add i32 %niter, -8
  %niter.ncmp.7 = icmp eq i32 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %for.cond.cleanup22.us.loopexit.unr-lcssa, label %for.body23.us

for.body23.lr.ph.us:                              ; preds = %for.body8.us
  %mul10.us = mul i32 %23, %cLength
  %add11.us = add i32 %mul10.us, %i.0111.us
  %idxprom12.us = zext i32 %add11.us to i64
  %arrayidx13.us = getelementptr inbounds i32, i32* %21, i64 %idxprom12.us
  %61 = load i32, i32* %arrayidx13.us, align 4, !tbaa !59
  %idx.ext14.us = zext i32 %61 to i64
  %add.ptr15.us = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %20, i64 %idx.ext14.us
  %arrayidx.us = getelementptr inbounds i32, i32* %19, i64 %idxprom.us
  %62 = load i32, i32* %arrayidx.us, align 4, !tbaa !59
  %idx.ext.us = zext i32 %62 to i64
  %add.ptr.us = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %18, i64 %idx.ext.us
  %63 = add i32 %24, -1
  %xtraiter = and i32 %24, 7
  %64 = icmp ult i32 %63, 7
  br i1 %64, label %for.cond.cleanup22.us.loopexit.unr-lcssa, label %for.body23.lr.ph.us.new

for.body23.lr.ph.us.new:                          ; preds = %for.body23.lr.ph.us
  %unroll_iter = sub i32 %24, %xtraiter
  br label %for.body23.us

for.cond4.for.cond.cleanup7_crit_edge.us:         ; preds = %for.cond.cleanup22.us
  %inc29.us = add nuw i32 %i.0111.us, 1
  %exitcond120 = icmp eq i32 %inc29.us, %add
  br i1 %exitcond120, label %if.end46, label %for.body.us

if.else:                                          ; preds = %if.else.preheader, %det.cont
  %cCount.tr114 = phi i32 [ %sub, %det.cont ], [ %cCount, %if.else.preheader ]
  %cStart.tr113 = phi i32 [ %add34, %det.cont ], [ %cStart, %if.else.preheader ]
  %cmp31 = icmp ugt i32 %cCount.tr114, %rCount
  br i1 %cmp31, label %if.then32, label %if.else36

if.then32:                                        ; preds = %if.else
  %div = lshr i32 %cCount.tr114, 1
  %sub = sub i32 %cCount.tr114, %div
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %11, i16* nonnull %12) #2
  %65 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %65, i8** %14, align 8
  %66 = call i8* @llvm.stacksave()
  store volatile i8* %66, i8** %15, align 8
  %67 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %16) #23
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %if.then32.split, label %det.cont

if.then32.split:                                  ; preds = %if.then32
  call fastcc void @_ZN10blockTransISt4pairIiP6vertexI8_point2dIdELi10EEEjE6transREjjjjjj_det.achd.cilk(%struct.blockTrans.26* %this, i32 %rStart, i32 %rCount, i32 %rLength, i32 %cStart.tr113, i32 %div, i32 %cLength)
  br label %det.cont

det.cont:                                         ; preds = %if.then32.split, %if.then32
  %add34 = add i32 %div, %cStart.tr113
  %69 = or i32 %sub, %rCount
  %70 = icmp ult i32 %69, 64
  br i1 %70, label %if.then, label %if.else

if.else36:                                        ; preds = %if.else
  %div38 = lshr i32 %rCount, 1
  %sub41 = sub i32 %rCount, %div38
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %11, i16* nonnull %12) #2
  %71 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %71, i8** %14, align 8
  %72 = call i8* @llvm.stacksave()
  store volatile i8* %72, i8** %15, align 8
  %73 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %16) #23
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %if.else36.split, label %det.cont43

if.else36.split:                                  ; preds = %if.else36
  call fastcc void @_ZN10blockTransISt4pairIiP6vertexI8_point2dIdELi10EEEjE6transREjjjjjj_det.achd42.cilk(%struct.blockTrans.26* %this, i32 %rStart, i32 %div38, i32 %rLength, i32 %cStart.tr113, i32 %cCount.tr114, i32 %cLength)
  br label %det.cont43

det.cont43:                                       ; preds = %if.else36.split, %if.else36
  %add44 = add i32 %div38, %rStart
  tail call void @_ZN10blockTransISt4pairIiP6vertexI8_point2dIdELi10EEEjE6transREjjjjjj(%struct.blockTrans.26* %this, i32 %add44, i32 %sub41, i32 %rLength, i32 %cStart.tr113, i32 %cCount.tr114, i32 %cLength)
  %75 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %76 = load atomic i32, i32* %75 acquire, align 8
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %det.cont43
  %79 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %11, i16* nonnull %12) #2
  store volatile i8* %71, i8** %14, align 8
  %80 = call i8* @llvm.stacksave() #2
  store volatile i8* %80, i8** %15, align 8
  %81 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %16) #24
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %det.cont43, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %83 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %84 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %83, i64 0, i32 12, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, 1
  store i64 %86, i64* %84, align 8
  br label %if.end46

if.end46:                                         ; preds = %for.cond4.for.cond.cleanup7_crit_edge.us, %__cilk_sync_nothrow.exit, %for.body.lr.ph, %if.then
  %87 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %88 = load atomic i32, i32* %87 acquire, align 8
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %__cilk_sync_nothrow.exit134, label %cilk.sync.savestate.i132

cilk.sync.savestate.i132:                         ; preds = %if.end46
  %91 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %92 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %93 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %92, i16* nonnull %93) #2
  %94 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %95 = call i8* @llvm.frameaddress(i32 0) #2
  %96 = getelementptr inbounds [5 x i8*], [5 x i8*]* %94, i64 0, i64 0
  store volatile i8* %95, i8** %96, align 8
  %97 = call i8* @llvm.stacksave() #2
  %98 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %97, i8** %98, align 8
  %99 = bitcast [5 x i8*]* %94 to i8*
  %100 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %99) #24
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %cilk.sync.runtimecall.i133, label %__cilk_sync_nothrow.exit134

cilk.sync.runtimecall.i133:                       ; preds = %cilk.sync.savestate.i132
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit134

__cilk_sync_nothrow.exit134:                      ; preds = %if.end46, %cilk.sync.savestate.i132, %cilk.sync.runtimecall.i133
  %102 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %103 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %102, i64 0, i32 12, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = add i64 %104, 1
  store i64 %105, i64* %103, align 8
  %106 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %107 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %106, i64 0, i32 9
  %110 = bitcast %struct.__cilkrts_stack_frame** %109 to i64*
  store atomic i64 %108, i64* %110 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %111 = load atomic i32, i32* %87 acquire, align 8
  %112 = icmp eq i32 %111, 16777216
  br i1 %112, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit134
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit134, %body.i
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr { %"struct.std::pair.23"*, %"struct.std::pair.23"* } @_Z5splitISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEiES0_IPT_SF_ESF_T1_T0_(%"struct.std::pair.23"* %A, i32 %n) local_unnamed_addr #7 comdat {
entry:
  %a.i.sroa.0 = alloca i32, align 8
  %a.i.sroa.0.0.a.i.sroa_cast169 = bitcast i32* %a.i.sroa.0 to %"struct.std::pair.23"*
  %b.i.sroa.0 = alloca i32, align 8
  %b.i.sroa.0.0.b.i.sroa_cast160 = bitcast i32* %b.i.sroa.0 to %"struct.std::pair.23"*
  %c.i.sroa.0 = alloca i32, align 8
  %div = sdiv i32 %n, 4
  %idxprom = sext i32 %div to i64
  %agg.tmp.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %idxprom, i32 0
  %agg.tmp.sroa.0.0.copyload = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx, align 8
  %div2 = sdiv i32 %n, 2
  %idxprom3 = sext i32 %div2 to i64
  %agg.tmp1.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %idxprom3, i32 0
  %agg.tmp1.sroa.0.0.copyload = load i32, i32* %agg.tmp1.sroa.0.0..sroa_idx, align 8
  %mul = mul nsw i32 %n, 3
  %div6 = sdiv i32 %mul, 4
  %idxprom7 = sext i32 %div6 to i64
  %agg.tmp5.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %idxprom7, i32 0
  %agg.tmp5.sroa.0.0.copyload = load i32, i32* %agg.tmp5.sroa.0.0..sroa_idx, align 8
  %a.i.sroa.0.0..sroa_cast170 = bitcast i32* %a.i.sroa.0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %a.i.sroa.0.0..sroa_cast170)
  %b.i.sroa.0.0..sroa_cast161 = bitcast i32* %b.i.sroa.0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %b.i.sroa.0.0..sroa_cast161)
  %c.i.sroa.0.0..sroa_cast152 = bitcast i32* %c.i.sroa.0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %c.i.sroa.0.0..sroa_cast152)
  store i32 %agg.tmp.sroa.0.0.copyload, i32* %a.i.sroa.0, align 8
  store i32 %agg.tmp1.sroa.0.0.copyload, i32* %b.i.sroa.0, align 8
  store i32 %agg.tmp5.sroa.0.0.copyload, i32* %c.i.sroa.0, align 8
  %cmp.i.i = icmp slt i32 %agg.tmp.sroa.0.0.copyload, %agg.tmp1.sroa.0.0.copyload
  br i1 %cmp.i.i, label %cond.true.i, label %cond.false13.i

cond.true.i:                                      ; preds = %entry
  %cmp.i55.i = icmp slt i32 %agg.tmp1.sroa.0.0.copyload, %agg.tmp5.sroa.0.0.copyload
  br i1 %cmp.i55.i, label %_Z13medianOfThreeISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEET_SE_SE_SE_T0_.exit, label %cond.false.i

cond.false.i:                                     ; preds = %cond.true.i
  %cmp.i54.i = icmp slt i32 %agg.tmp.sroa.0.0.copyload, %agg.tmp5.sroa.0.0.copyload
  %c.i.sroa.0.0.c.i.sroa_cast151 = bitcast i32* %c.i.sroa.0 to %"struct.std::pair.23"*
  %c.a.i = select i1 %cmp.i54.i, %"struct.std::pair.23"* %c.i.sroa.0.0.c.i.sroa_cast151, %"struct.std::pair.23"* %a.i.sroa.0.0.a.i.sroa_cast169
  br label %_Z13medianOfThreeISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEET_SE_SE_SE_T0_.exit

cond.false13.i:                                   ; preds = %entry
  %cmp.i53.i = icmp slt i32 %agg.tmp.sroa.0.0.copyload, %agg.tmp5.sroa.0.0.copyload
  br i1 %cmp.i53.i, label %_Z13medianOfThreeISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEET_SE_SE_SE_T0_.exit, label %cond.false18.i

cond.false18.i:                                   ; preds = %cond.false13.i
  %cmp.i52.i = icmp slt i32 %agg.tmp1.sroa.0.0.copyload, %agg.tmp5.sroa.0.0.copyload
  %c.i.sroa.0.0.c.i.sroa_cast150 = bitcast i32* %c.i.sroa.0 to %"struct.std::pair.23"*
  %c.b.i = select i1 %cmp.i52.i, %"struct.std::pair.23"* %c.i.sroa.0.0.c.i.sroa_cast150, %"struct.std::pair.23"* %b.i.sroa.0.0.b.i.sroa_cast160
  br label %_Z13medianOfThreeISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEET_SE_SE_SE_T0_.exit

_Z13medianOfThreeISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEET_SE_SE_SE_T0_.exit: ; preds = %cond.true.i, %cond.false.i, %cond.false13.i, %cond.false18.i
  %cond-lvalue29.i = phi %"struct.std::pair.23"* [ %c.a.i, %cond.false.i ], [ %b.i.sroa.0.0.b.i.sroa_cast160, %cond.true.i ], [ %c.b.i, %cond.false18.i ], [ %a.i.sroa.0.0.a.i.sroa_cast169, %cond.false13.i ]
  %retval.sroa.0.0..sroa_idx.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %cond-lvalue29.i, i64 0, i32 0
  %retval.sroa.0.0.copyload.i = load i32, i32* %retval.sroa.0.0..sroa_idx.i, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %a.i.sroa.0.0..sroa_cast170)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %b.i.sroa.0.0..sroa_cast161)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %c.i.sroa.0.0..sroa_cast152)
  %0 = ptrtoint %"struct.std::pair.23"* %A to i64
  %idx.ext = sext i32 %n to i64
  %add.ptr = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %idx.ext
  br label %while.cond

while.cond:                                       ; preds = %if.end38, %_Z13medianOfThreeISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEET_SE_SE_SE_T0_.exit
  %L.sroa.0.0 = phi i64 [ %0, %_Z13medianOfThreeISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEET_SE_SE_SE_T0_.exit ], [ %L.sroa.0.4, %if.end38 ]
  %M.sroa.0.0.ptr121 = phi %"struct.std::pair.23"* [ %A, %_Z13medianOfThreeISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEET_SE_SE_SE_T0_.exit ], [ %incdec.ptr39, %if.end38 ]
  %add.ptr.pn = phi %"struct.std::pair.23"* [ %add.ptr, %_Z13medianOfThreeISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEET_SE_SE_SE_T0_.exit ], [ %R.1, %if.end38 ]
  %R.0 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %add.ptr.pn, i64 -1
  %agg.tmp13.sroa.0.0..sroa_idx103 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %M.sroa.0.0.ptr121, i64 0, i32 0
  %agg.tmp13.sroa.0.0.copyload104 = load i32, i32* %agg.tmp13.sroa.0.0..sroa_idx103, align 8
  %agg.tmp13.sroa.253.0..sroa_idx54105 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %M.sroa.0.0.ptr121, i64 0, i32 1
  %cmp.i89106 = icmp slt i32 %retval.sroa.0.0.copyload.i, %agg.tmp13.sroa.0.0.copyload104
  br i1 %cmp.i89106, label %while.end, label %while.body15.preheader

while.body15.preheader:                           ; preds = %while.cond
  br label %while.body15

while.body15:                                     ; preds = %while.body15.preheader, %if.end20
  %agg.tmp13.sroa.253.0..sroa_idx54111 = phi %struct.vertex.16** [ %8, %if.end20 ], [ %agg.tmp13.sroa.253.0..sroa_idx54105, %while.body15.preheader ]
  %agg.tmp13.sroa.0.0.copyload110 = phi i32 [ %agg.tmp13.sroa.0.0.copyload, %if.end20 ], [ %agg.tmp13.sroa.0.0.copyload104, %while.body15.preheader ]
  %agg.tmp13.sroa.0.0..sroa_idx109 = phi i32* [ %incdec.ptr21, %if.end20 ], [ %agg.tmp13.sroa.0.0..sroa_idx103, %while.body15.preheader ]
  %L.sroa.0.1107 = phi i64 [ %L.sroa.0.2, %if.end20 ], [ %L.sroa.0.0, %while.body15.preheader ]
  %indvars = bitcast i32* %agg.tmp13.sroa.0.0..sroa_idx109 to %"struct.std::pair.23"*
  %cmp.i88 = icmp slt i32 %agg.tmp13.sroa.0.0.copyload110, %retval.sroa.0.0.copyload.i
  br i1 %cmp.i88, label %if.then, label %if.end

if.then:                                          ; preds = %while.body15
  %1 = inttoptr i64 %L.sroa.0.1107 to %"struct.std::pair.23"*
  %incdec.ptr = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %1, i64 1
  %2 = ptrtoint %"struct.std::pair.23"* %incdec.ptr to i64
  %first2.i.i85 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %1, i64 0, i32 0
  %3 = load i32, i32* %first2.i.i85, align 4, !tbaa !59
  store i32 %3, i32* %agg.tmp13.sroa.0.0..sroa_idx109, align 4, !tbaa !59
  store i32 %agg.tmp13.sroa.0.0.copyload110, i32* %first2.i.i85, align 4, !tbaa !59
  %second3.i.i87 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %1, i64 0, i32 1
  %4 = bitcast %struct.vertex.16** %agg.tmp13.sroa.253.0..sroa_idx54111 to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !53
  %6 = bitcast %struct.vertex.16** %second3.i.i87 to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !53
  store i64 %7, i64* %4, align 8, !tbaa !53
  store i64 %5, i64* %6, align 8, !tbaa !53
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body15
  %L.sroa.0.2 = phi i64 [ %2, %if.then ], [ %L.sroa.0.1107, %while.body15 ]
  %cmp = icmp ugt %"struct.std::pair.23"* %R.0, %indvars
  br i1 %cmp, label %if.end20, label %while.end.loopexit

if.end20:                                         ; preds = %if.end
  %incdec.ptr21 = getelementptr inbounds i32, i32* %agg.tmp13.sroa.0.0..sroa_idx109, i64 4
  %agg.tmp13.sroa.0.0.copyload = load i32, i32* %incdec.ptr21, align 8
  %agg.tmp13.sroa.253.0..sroa_idx54 = getelementptr inbounds i32, i32* %agg.tmp13.sroa.0.0..sroa_idx109, i64 6
  %8 = bitcast i32* %agg.tmp13.sroa.253.0..sroa_idx54 to %struct.vertex.16**
  %cmp.i89 = icmp slt i32 %retval.sroa.0.0.copyload.i, %agg.tmp13.sroa.0.0.copyload
  br i1 %cmp.i89, label %while.end.loopexit.split.loop.exit122, label %while.body15

while.end.loopexit.split.loop.exit122:            ; preds = %if.end20
  %9 = bitcast i32* %agg.tmp13.sroa.253.0..sroa_idx54 to %struct.vertex.16**
  %10 = bitcast i32* %incdec.ptr21 to %"struct.std::pair.23"*
  br label %while.end

while.end.loopexit:                               ; preds = %if.end
  %indvars.le = bitcast i32* %agg.tmp13.sroa.0.0..sroa_idx109 to %"struct.std::pair.23"*
  br label %while.end

while.end:                                        ; preds = %while.end.loopexit, %while.end.loopexit.split.loop.exit122, %while.cond
  %M.sroa.0.1.ptr.lcssa = phi %"struct.std::pair.23"* [ %M.sroa.0.0.ptr121, %while.cond ], [ %10, %while.end.loopexit.split.loop.exit122 ], [ %indvars.le, %while.end.loopexit ]
  %agg.tmp13.sroa.0.0..sroa_idx.lcssa = phi i32* [ %agg.tmp13.sroa.0.0..sroa_idx103, %while.cond ], [ %incdec.ptr21, %while.end.loopexit.split.loop.exit122 ], [ %agg.tmp13.sroa.0.0..sroa_idx109, %while.end.loopexit ]
  %agg.tmp13.sroa.253.0..sroa_idx54.lcssa = phi %struct.vertex.16** [ %agg.tmp13.sroa.253.0..sroa_idx54105, %while.cond ], [ %9, %while.end.loopexit.split.loop.exit122 ], [ %agg.tmp13.sroa.253.0..sroa_idx54111, %while.end.loopexit ]
  %L.sroa.0.3 = phi i64 [ %L.sroa.0.0, %while.cond ], [ %L.sroa.0.2, %while.end.loopexit.split.loop.exit122 ], [ %L.sroa.0.2, %while.end.loopexit ]
  br label %while.cond22

while.cond22:                                     ; preds = %while.cond22, %while.end
  %R.1 = phi %"struct.std::pair.23"* [ %R.0, %while.end ], [ %incdec.ptr27, %while.cond22 ]
  %agg.tmp24.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %R.1, i64 0, i32 0
  %agg.tmp24.sroa.0.0.copyload = load i32, i32* %agg.tmp24.sroa.0.0..sroa_idx, align 8
  %cmp.i83 = icmp slt i32 %retval.sroa.0.0.copyload.i, %agg.tmp24.sroa.0.0.copyload
  %incdec.ptr27 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %R.1, i64 -1
  br i1 %cmp.i83, label %while.cond22, label %while.end28

while.end28:                                      ; preds = %while.cond22
  %cmp29 = icmp ult %"struct.std::pair.23"* %M.sroa.0.1.ptr.lcssa, %R.1
  br i1 %cmp29, label %if.end31, label %while.end40

if.end31:                                         ; preds = %while.end28
  %agg.tmp24.sroa.0.0..sroa_idx.le = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %R.1, i64 0, i32 0
  %agg.tmp24.sroa.245.0..sroa_idx46.le = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %R.1, i64 0, i32 1
  %11 = load i32, i32* %agg.tmp13.sroa.0.0..sroa_idx.lcssa, align 4, !tbaa !59
  store i32 %agg.tmp24.sroa.0.0.copyload, i32* %agg.tmp13.sroa.0.0..sroa_idx.lcssa, align 4, !tbaa !59
  store i32 %11, i32* %agg.tmp24.sroa.0.0..sroa_idx.le, align 4, !tbaa !59
  %12 = bitcast %struct.vertex.16** %agg.tmp13.sroa.253.0..sroa_idx54.lcssa to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !53
  %14 = bitcast %struct.vertex.16** %agg.tmp24.sroa.245.0..sroa_idx46.le to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !53
  store i64 %15, i64* %12, align 8, !tbaa !53
  store i64 %13, i64* %14, align 8, !tbaa !53
  %agg.tmp33.sroa.0.0.copyload = load i32, i32* %agg.tmp13.sroa.0.0..sroa_idx.lcssa, align 8
  %cmp.i = icmp slt i32 %agg.tmp33.sroa.0.0.copyload, %retval.sroa.0.0.copyload.i
  br i1 %cmp.i, label %if.then36, label %if.end38

if.then36:                                        ; preds = %if.end31
  %16 = inttoptr i64 %L.sroa.0.3 to %"struct.std::pair.23"*
  %incdec.ptr37 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %16, i64 1
  %17 = ptrtoint %"struct.std::pair.23"* %incdec.ptr37 to i64
  %first2.i.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %16, i64 0, i32 0
  %18 = load i32, i32* %first2.i.i, align 4, !tbaa !59
  store i32 %18, i32* %agg.tmp13.sroa.0.0..sroa_idx.lcssa, align 4, !tbaa !59
  store i32 %agg.tmp33.sroa.0.0.copyload, i32* %first2.i.i, align 4, !tbaa !59
  %second3.i.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %16, i64 0, i32 1
  %19 = load i64, i64* %12, align 8, !tbaa !53
  %20 = bitcast %struct.vertex.16** %second3.i.i to i64*
  %21 = load i64, i64* %20, align 8, !tbaa !53
  store i64 %21, i64* %12, align 8, !tbaa !53
  store i64 %19, i64* %20, align 8, !tbaa !53
  br label %if.end38

if.end38:                                         ; preds = %if.then36, %if.end31
  %L.sroa.0.4 = phi i64 [ %17, %if.then36 ], [ %L.sroa.0.3, %if.end31 ]
  %incdec.ptr39 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %M.sroa.0.1.ptr.lcssa, i64 1
  br label %while.cond

while.end40:                                      ; preds = %while.end28
  %22 = inttoptr i64 %L.sroa.0.3 to %"struct.std::pair.23"*
  %.fca.0.insert = insertvalue { %"struct.std::pair.23"*, %"struct.std::pair.23"* } undef, %"struct.std::pair.23"* %22, 0
  %.fca.1.insert = insertvalue { %"struct.std::pair.23"*, %"struct.std::pair.23"* } %.fca.0.insert, %"struct.std::pair.23"* %M.sroa.0.1.ptr.lcssa, 1
  ret { %"struct.std::pair.23"*, %"struct.std::pair.23"* } %.fca.1.insert
}

; Function Attrs: nounwind stealable uwtable
define linkonce_odr void @_Z9quickSortISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.23"* %A, i64 %n) local_unnamed_addr #15 comdat {
entry:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %entry
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %entry, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %entry ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %entry ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %cmp21 = icmp slt i64 %n, 256
  br i1 %cmp21, label %if.then, label %if.else.preheader

if.else.preheader:                                ; preds = %__cilkrts_enter_frame_1.exit
  %9 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %12 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 0
  %13 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %14 = bitcast [5 x i8*]* %11 to i8*
  br label %if.else

if.then:                                          ; preds = %det.cont, %__cilkrts_enter_frame_1.exit
  %A.tr.lcssa = phi %"struct.std::pair.23"* [ %A, %__cilkrts_enter_frame_1.exit ], [ %41, %det.cont ]
  %n.tr.lcssa = phi i64 [ %n, %__cilkrts_enter_frame_1.exit ], [ %sub.ptr.div7, %det.cont ]
  tail call void @_Z15quickSortSerialISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.23"* %A.tr.lcssa, i64 %n.tr.lcssa)
  %15 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %16 = load atomic i32, i32* %15 acquire, align 8
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %if.then
  %19 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %21 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %20, i16* nonnull %21) #2
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %23 = call i8* @llvm.frameaddress(i32 0) #2
  %24 = getelementptr inbounds [5 x i8*], [5 x i8*]* %22, i64 0, i64 0
  store volatile i8* %23, i8** %24, align 8
  %25 = call i8* @llvm.stacksave() #2
  %26 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %25, i8** %26, align 8
  %27 = bitcast [5 x i8*]* %22 to i8*
  %28 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %27) #24
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %if.then, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %30 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %31 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %30, i64 0, i32 12, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, 1
  store i64 %33, i64* %31, align 8
  %34 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %35 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %34, i64 0, i32 9
  %38 = bitcast %struct.__cilkrts_stack_frame** %37 to i64*
  store atomic i64 %36, i64* %38 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %39 = load atomic i32, i32* %15 acquire, align 8
  %40 = icmp eq i32 %39, 16777216
  br i1 %40, label %__cilk_parent_epilogue.exit, label %body.i

if.else:                                          ; preds = %if.else.preheader, %det.cont
  %n.tr23 = phi i64 [ %sub.ptr.div7, %det.cont ], [ %n, %if.else.preheader ]
  %A.tr22 = phi %"struct.std::pair.23"* [ %41, %det.cont ], [ %A, %if.else.preheader ]
  %call = tail call { %"struct.std::pair.23"*, %"struct.std::pair.23"* } @_Z5splitISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElES0_IPT_SF_ESF_T1_T0_(%"struct.std::pair.23"* %A.tr22, i64 %n.tr23)
  %41 = extractvalue { %"struct.std::pair.23"*, %"struct.std::pair.23"* } %call, 1
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %9, i16* nonnull %10) #2
  %42 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %42, i8** %12, align 8
  %43 = call i8* @llvm.stacksave()
  store volatile i8* %43, i8** %13, align 8
  %44 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %14) #23
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %if.else.split, label %det.cont

if.else.split:                                    ; preds = %if.else
  call fastcc void @_Z9quickSortISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0__det.achd.cilk({ %"struct.std::pair.23"*, %"struct.std::pair.23"* } %call, %"struct.std::pair.23"* %A.tr22)
  br label %det.cont

det.cont:                                         ; preds = %if.else.split, %if.else
  %add.ptr = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A.tr22, i64 %n.tr23
  %sub.ptr.lhs.cast4 = ptrtoint %"struct.std::pair.23"* %add.ptr to i64
  %sub.ptr.rhs.cast5 = ptrtoint %"struct.std::pair.23"* %41 to i64
  %sub.ptr.sub6 = sub i64 %sub.ptr.lhs.cast4, %sub.ptr.rhs.cast5
  %sub.ptr.div7 = ashr exact i64 %sub.ptr.sub6, 4
  %cmp = icmp slt i64 %sub.ptr.sub6, 4096
  br i1 %cmp, label %if.then, label %if.else

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_Z15quickSortSerialISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.23"* %A, i64 %n) local_unnamed_addr #7 comdat {
entry:
  %cmp20 = icmp sgt i64 %n, 20
  br i1 %cmp20, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %entry
  %sub.ptr.rhs.cast4 = ptrtoint %"struct.std::pair.23"* %A to i64
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.body
  %n.addr.021 = phi i64 [ %n, %while.body.lr.ph ], [ %sub.ptr.div6, %while.body ]
  %call = tail call { %"struct.std::pair.23"*, %"struct.std::pair.23"* } @_Z5splitISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElES0_IPT_SF_ESF_T1_T0_(%"struct.std::pair.23"* %A, i64 %n.addr.021)
  %0 = extractvalue { %"struct.std::pair.23"*, %"struct.std::pair.23"* } %call, 0
  %1 = extractvalue { %"struct.std::pair.23"*, %"struct.std::pair.23"* } %call, 1
  %add.ptr = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %n.addr.021
  %sub.ptr.lhs.cast = ptrtoint %"struct.std::pair.23"* %add.ptr to i64
  %sub.ptr.rhs.cast = ptrtoint %"struct.std::pair.23"* %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 4
  tail call void @_Z15quickSortSerialISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.23"* %1, i64 %sub.ptr.div)
  %sub.ptr.lhs.cast3 = ptrtoint %"struct.std::pair.23"* %0 to i64
  %sub.ptr.sub5 = sub i64 %sub.ptr.lhs.cast3, %sub.ptr.rhs.cast4
  %sub.ptr.div6 = ashr exact i64 %sub.ptr.sub5, 4
  %cmp = icmp sgt i64 %sub.ptr.sub5, 320
  br i1 %cmp, label %while.body, label %while.end

while.end:                                        ; preds = %while.body, %entry
  %n.addr.0.lcssa = phi i64 [ %n, %entry ], [ %sub.ptr.div6, %while.body ]
  %cmp37.i = icmp sgt i64 %n.addr.0.lcssa, 0
  br i1 %cmp37.i, label %for.body.i.preheader, label %_Z13insertionSortISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_.exit

for.body.i.preheader:                             ; preds = %while.end
  %xtraiter = and i64 %n.addr.0.lcssa, 1
  %2 = icmp eq i64 %n.addr.0.lcssa, 1
  br i1 %2, label %for.body.i.epil, label %for.body.i.preheader.new

for.body.i.preheader.new:                         ; preds = %for.body.i.preheader
  %unroll_iter = sub i64 %n.addr.0.lcssa, %xtraiter
  br label %for.body.i

for.body.i:                                       ; preds = %while.end.i.1, %for.body.i.preheader.new
  %i.038.i = phi i64 [ 0, %for.body.i.preheader.new ], [ %inc.i.1, %while.end.i.1 ]
  %niter = phi i64 [ %unroll_iter, %for.body.i.preheader.new ], [ %niter.nsub.1, %while.end.i.1 ]
  %arrayidx.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %i.038.i
  %v.sroa.0.0..sroa_idx.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %arrayidx.i, i64 0, i32 0
  %v.sroa.0.0.copyload.i = load i32, i32* %v.sroa.0.0..sroa_idx.i, align 8
  %v.sroa.528.0..sroa_idx29.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %i.038.i, i32 1
  %v.sroa.528.0..sroa_cast30.i = bitcast %struct.vertex.16** %v.sroa.528.0..sroa_idx29.i to i64*
  %v.sroa.528.0.copyload.i = load i64, i64* %v.sroa.528.0..sroa_cast30.i, align 8
  %incdec.ptr32.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %arrayidx.i, i64 -1
  %cmp133.i = icmp ult %"struct.std::pair.23"* %incdec.ptr32.i, %A
  br i1 %cmp133.i, label %while.end.i, label %land.rhs.i.preheader

land.rhs.i.preheader:                             ; preds = %for.body.i
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %land.rhs.i.preheader, %while.body.i
  %incdec.ptr35.i = phi %"struct.std::pair.23"* [ %incdec.ptr.i, %while.body.i ], [ %incdec.ptr32.i, %land.rhs.i.preheader ]
  %B.034.i = phi %"struct.std::pair.23"* [ %incdec.ptr35.i, %while.body.i ], [ %arrayidx.i, %land.rhs.i.preheader ]
  %agg.tmp2.sroa.0.0..sroa_idx.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %incdec.ptr35.i, i64 0, i32 0
  %agg.tmp2.sroa.0.0.copyload.i = load i32, i32* %agg.tmp2.sroa.0.0..sroa_idx.i, align 8
  %cmp.i.i = icmp slt i32 %v.sroa.0.0.copyload.i, %agg.tmp2.sroa.0.0.copyload.i
  %first2.i22.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.034.i, i64 0, i32 0
  br i1 %cmp.i.i, label %while.body.i, label %while.end.i

while.body.i:                                     ; preds = %land.rhs.i
  store i32 %agg.tmp2.sroa.0.0.copyload.i, i32* %first2.i22.i, align 8, !tbaa !192
  %second.i23.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.034.i, i64 -1, i32 1
  %3 = bitcast %struct.vertex.16** %second.i23.i to i64*
  %4 = load i64, i64* %3, align 8, !tbaa !194
  %second3.i24.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.034.i, i64 0, i32 1
  %5 = bitcast %struct.vertex.16** %second3.i24.i to i64*
  store i64 %4, i64* %5, align 8, !tbaa !194
  %incdec.ptr.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %incdec.ptr35.i, i64 -1
  %cmp1.i = icmp ult %"struct.std::pair.23"* %incdec.ptr.i, %A
  br i1 %cmp1.i, label %while.end.i.loopexit.split.loop.exit, label %land.rhs.i

while.end.i.loopexit.split.loop.exit:             ; preds = %while.body.i
  %agg.tmp2.sroa.0.0..sroa_idx.i.le = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %incdec.ptr35.i, i64 0, i32 0
  br label %while.end.i

while.end.i:                                      ; preds = %land.rhs.i, %while.end.i.loopexit.split.loop.exit, %for.body.i
  %first2.i.pre-phi.i = phi i32* [ %v.sroa.0.0..sroa_idx.i, %for.body.i ], [ %agg.tmp2.sroa.0.0..sroa_idx.i.le, %while.end.i.loopexit.split.loop.exit ], [ %first2.i22.i, %land.rhs.i ]
  %B.0.lcssa.i = phi %"struct.std::pair.23"* [ %arrayidx.i, %for.body.i ], [ %incdec.ptr35.i, %while.end.i.loopexit.split.loop.exit ], [ %B.034.i, %land.rhs.i ]
  store i32 %v.sroa.0.0.copyload.i, i32* %first2.i.pre-phi.i, align 8, !tbaa !192
  %second3.i.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.0.lcssa.i, i64 0, i32 1
  %6 = bitcast %struct.vertex.16** %second3.i.i to i64*
  store i64 %v.sroa.528.0.copyload.i, i64* %6, align 8, !tbaa !194
  %inc.i = or i64 %i.038.i, 1
  %arrayidx.i.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %inc.i
  %v.sroa.0.0..sroa_idx.i.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %arrayidx.i.1, i64 0, i32 0
  %v.sroa.0.0.copyload.i.1 = load i32, i32* %v.sroa.0.0..sroa_idx.i.1, align 8
  %v.sroa.528.0..sroa_idx29.i.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %inc.i, i32 1
  %v.sroa.528.0..sroa_cast30.i.1 = bitcast %struct.vertex.16** %v.sroa.528.0..sroa_idx29.i.1 to i64*
  %v.sroa.528.0.copyload.i.1 = load i64, i64* %v.sroa.528.0..sroa_cast30.i.1, align 8
  br label %land.rhs.i.1

_Z13insertionSortISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_.exit.loopexit.unr-lcssa: ; preds = %while.end.i.1
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %_Z13insertionSortISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_.exit, label %for.body.i.epil

for.body.i.epil:                                  ; preds = %for.body.i.preheader, %_Z13insertionSortISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_.exit.loopexit.unr-lcssa
  %i.038.i.unr53 = phi i64 [ %inc.i.1, %_Z13insertionSortISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_.exit.loopexit.unr-lcssa ], [ 0, %for.body.i.preheader ]
  %arrayidx.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %i.038.i.unr53
  %v.sroa.0.0..sroa_idx.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %arrayidx.i.epil, i64 0, i32 0
  %v.sroa.0.0.copyload.i.epil = load i32, i32* %v.sroa.0.0..sroa_idx.i.epil, align 8
  %v.sroa.528.0..sroa_idx29.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %i.038.i.unr53, i32 1
  %v.sroa.528.0..sroa_cast30.i.epil = bitcast %struct.vertex.16** %v.sroa.528.0..sroa_idx29.i.epil to i64*
  %v.sroa.528.0.copyload.i.epil = load i64, i64* %v.sroa.528.0..sroa_cast30.i.epil, align 8
  %incdec.ptr32.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %arrayidx.i.epil, i64 -1
  %cmp133.i.epil = icmp ult %"struct.std::pair.23"* %incdec.ptr32.i.epil, %A
  br i1 %cmp133.i.epil, label %while.end.i.epil, label %land.rhs.i.epil.preheader

land.rhs.i.epil.preheader:                        ; preds = %for.body.i.epil
  br label %land.rhs.i.epil

land.rhs.i.epil:                                  ; preds = %land.rhs.i.epil.preheader, %while.body.i.epil
  %incdec.ptr35.i.epil = phi %"struct.std::pair.23"* [ %incdec.ptr.i.epil, %while.body.i.epil ], [ %incdec.ptr32.i.epil, %land.rhs.i.epil.preheader ]
  %B.034.i.epil = phi %"struct.std::pair.23"* [ %incdec.ptr35.i.epil, %while.body.i.epil ], [ %arrayidx.i.epil, %land.rhs.i.epil.preheader ]
  %agg.tmp2.sroa.0.0..sroa_idx.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %incdec.ptr35.i.epil, i64 0, i32 0
  %agg.tmp2.sroa.0.0.copyload.i.epil = load i32, i32* %agg.tmp2.sroa.0.0..sroa_idx.i.epil, align 8
  %cmp.i.i.epil = icmp slt i32 %v.sroa.0.0.copyload.i.epil, %agg.tmp2.sroa.0.0.copyload.i.epil
  %first2.i22.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.034.i.epil, i64 0, i32 0
  br i1 %cmp.i.i.epil, label %while.body.i.epil, label %while.end.i.epil

while.body.i.epil:                                ; preds = %land.rhs.i.epil
  store i32 %agg.tmp2.sroa.0.0.copyload.i.epil, i32* %first2.i22.i.epil, align 8, !tbaa !192
  %second.i23.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.034.i.epil, i64 -1, i32 1
  %7 = bitcast %struct.vertex.16** %second.i23.i.epil to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !194
  %second3.i24.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.034.i.epil, i64 0, i32 1
  %9 = bitcast %struct.vertex.16** %second3.i24.i.epil to i64*
  store i64 %8, i64* %9, align 8, !tbaa !194
  %incdec.ptr.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %incdec.ptr35.i.epil, i64 -1
  %cmp1.i.epil = icmp ult %"struct.std::pair.23"* %incdec.ptr.i.epil, %A
  br i1 %cmp1.i.epil, label %while.end.i.epil.loopexit.split.loop.exit, label %land.rhs.i.epil

while.end.i.epil.loopexit.split.loop.exit:        ; preds = %while.body.i.epil
  %agg.tmp2.sroa.0.0..sroa_idx.i.epil.le = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %incdec.ptr35.i.epil, i64 0, i32 0
  br label %while.end.i.epil

while.end.i.epil:                                 ; preds = %land.rhs.i.epil, %while.end.i.epil.loopexit.split.loop.exit, %for.body.i.epil
  %first2.i.pre-phi.i.epil = phi i32* [ %v.sroa.0.0..sroa_idx.i.epil, %for.body.i.epil ], [ %agg.tmp2.sroa.0.0..sroa_idx.i.epil.le, %while.end.i.epil.loopexit.split.loop.exit ], [ %first2.i22.i.epil, %land.rhs.i.epil ]
  %B.0.lcssa.i.epil = phi %"struct.std::pair.23"* [ %arrayidx.i.epil, %for.body.i.epil ], [ %incdec.ptr35.i.epil, %while.end.i.epil.loopexit.split.loop.exit ], [ %B.034.i.epil, %land.rhs.i.epil ]
  store i32 %v.sroa.0.0.copyload.i.epil, i32* %first2.i.pre-phi.i.epil, align 8, !tbaa !192
  %second3.i.i.epil = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.0.lcssa.i.epil, i64 0, i32 1
  %10 = bitcast %struct.vertex.16** %second3.i.i.epil to i64*
  store i64 %v.sroa.528.0.copyload.i.epil, i64* %10, align 8, !tbaa !194
  br label %_Z13insertionSortISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_.exit

_Z13insertionSortISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_.exit: ; preds = %while.end.i.epil, %_Z13insertionSortISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_.exit.loopexit.unr-lcssa, %while.end
  ret void

land.rhs.i.1:                                     ; preds = %while.body.i.1, %while.end.i
  %incdec.ptr35.i.1 = phi %"struct.std::pair.23"* [ %incdec.ptr.i.1, %while.body.i.1 ], [ %arrayidx.i, %while.end.i ]
  %B.034.i.1 = phi %"struct.std::pair.23"* [ %incdec.ptr35.i.1, %while.body.i.1 ], [ %arrayidx.i.1, %while.end.i ]
  %agg.tmp2.sroa.0.0..sroa_idx.i.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %incdec.ptr35.i.1, i64 0, i32 0
  %agg.tmp2.sroa.0.0.copyload.i.1 = load i32, i32* %agg.tmp2.sroa.0.0..sroa_idx.i.1, align 8
  %cmp.i.i.1 = icmp slt i32 %v.sroa.0.0.copyload.i.1, %agg.tmp2.sroa.0.0.copyload.i.1
  %first2.i22.i.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.034.i.1, i64 0, i32 0
  br i1 %cmp.i.i.1, label %while.body.i.1, label %while.end.i.1

while.body.i.1:                                   ; preds = %land.rhs.i.1
  store i32 %agg.tmp2.sroa.0.0.copyload.i.1, i32* %first2.i22.i.1, align 8, !tbaa !192
  %second.i23.i.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.034.i.1, i64 -1, i32 1
  %11 = bitcast %struct.vertex.16** %second.i23.i.1 to i64*
  %12 = load i64, i64* %11, align 8, !tbaa !194
  %second3.i24.i.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.034.i.1, i64 0, i32 1
  %13 = bitcast %struct.vertex.16** %second3.i24.i.1 to i64*
  store i64 %12, i64* %13, align 8, !tbaa !194
  %incdec.ptr.i.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %incdec.ptr35.i.1, i64 -1
  %cmp1.i.1 = icmp ult %"struct.std::pair.23"* %incdec.ptr.i.1, %A
  br i1 %cmp1.i.1, label %while.end.i.1.split.loop.exit78, label %land.rhs.i.1

while.end.i.1.split.loop.exit78:                  ; preds = %while.body.i.1
  %agg.tmp2.sroa.0.0..sroa_idx.i.1.le = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %incdec.ptr35.i.1, i64 0, i32 0
  br label %while.end.i.1

while.end.i.1:                                    ; preds = %land.rhs.i.1, %while.end.i.1.split.loop.exit78
  %first2.i.pre-phi.i.1 = phi i32* [ %agg.tmp2.sroa.0.0..sroa_idx.i.1.le, %while.end.i.1.split.loop.exit78 ], [ %first2.i22.i.1, %land.rhs.i.1 ]
  %B.0.lcssa.i.1 = phi %"struct.std::pair.23"* [ %incdec.ptr35.i.1, %while.end.i.1.split.loop.exit78 ], [ %B.034.i.1, %land.rhs.i.1 ]
  store i32 %v.sroa.0.0.copyload.i.1, i32* %first2.i.pre-phi.i.1, align 8, !tbaa !192
  %second3.i.i.1 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.0.lcssa.i.1, i64 0, i32 1
  %14 = bitcast %struct.vertex.16** %second3.i.i.1 to i64*
  store i64 %v.sroa.528.0.copyload.i.1, i64* %14, align 8, !tbaa !194
  %inc.i.1 = add nuw nsw i64 %i.038.i, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %_Z13insertionSortISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_.exit.loopexit.unr-lcssa, label %for.body.i
}

; Function Attrs: nounwind uwtable
define linkonce_odr { %"struct.std::pair.23"*, %"struct.std::pair.23"* } @_Z5splitISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElES0_IPT_SF_ESF_T1_T0_(%"struct.std::pair.23"* %A, i64 %n) local_unnamed_addr #7 comdat {
entry:
  %a.i.sroa.0 = alloca i32, align 8
  %a.i.sroa.0.0.a.i.sroa_cast167 = bitcast i32* %a.i.sroa.0 to %"struct.std::pair.23"*
  %b.i.sroa.0 = alloca i32, align 8
  %b.i.sroa.0.0.b.i.sroa_cast158 = bitcast i32* %b.i.sroa.0 to %"struct.std::pair.23"*
  %c.i.sroa.0 = alloca i32, align 8
  %div = sdiv i64 %n, 4
  %agg.tmp.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %div, i32 0
  %agg.tmp.sroa.0.0.copyload = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx, align 8
  %div2 = sdiv i64 %n, 2
  %agg.tmp1.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %div2, i32 0
  %agg.tmp1.sroa.0.0.copyload = load i32, i32* %agg.tmp1.sroa.0.0..sroa_idx, align 8
  %mul = mul nsw i64 %n, 3
  %div5 = sdiv i64 %mul, 4
  %agg.tmp4.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %div5, i32 0
  %agg.tmp4.sroa.0.0.copyload = load i32, i32* %agg.tmp4.sroa.0.0..sroa_idx, align 8
  %a.i.sroa.0.0..sroa_cast168 = bitcast i32* %a.i.sroa.0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %a.i.sroa.0.0..sroa_cast168)
  %b.i.sroa.0.0..sroa_cast159 = bitcast i32* %b.i.sroa.0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %b.i.sroa.0.0..sroa_cast159)
  %c.i.sroa.0.0..sroa_cast150 = bitcast i32* %c.i.sroa.0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %c.i.sroa.0.0..sroa_cast150)
  store i32 %agg.tmp.sroa.0.0.copyload, i32* %a.i.sroa.0, align 8
  store i32 %agg.tmp1.sroa.0.0.copyload, i32* %b.i.sroa.0, align 8
  store i32 %agg.tmp4.sroa.0.0.copyload, i32* %c.i.sroa.0, align 8
  %cmp.i.i = icmp slt i32 %agg.tmp.sroa.0.0.copyload, %agg.tmp1.sroa.0.0.copyload
  br i1 %cmp.i.i, label %cond.true.i, label %cond.false13.i

cond.true.i:                                      ; preds = %entry
  %cmp.i55.i = icmp slt i32 %agg.tmp1.sroa.0.0.copyload, %agg.tmp4.sroa.0.0.copyload
  br i1 %cmp.i55.i, label %_Z13medianOfThreeISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEET_SE_SE_SE_T0_.exit, label %cond.false.i

cond.false.i:                                     ; preds = %cond.true.i
  %cmp.i54.i = icmp slt i32 %agg.tmp.sroa.0.0.copyload, %agg.tmp4.sroa.0.0.copyload
  %c.i.sroa.0.0.c.i.sroa_cast149 = bitcast i32* %c.i.sroa.0 to %"struct.std::pair.23"*
  %c.a.i = select i1 %cmp.i54.i, %"struct.std::pair.23"* %c.i.sroa.0.0.c.i.sroa_cast149, %"struct.std::pair.23"* %a.i.sroa.0.0.a.i.sroa_cast167
  br label %_Z13medianOfThreeISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEET_SE_SE_SE_T0_.exit

cond.false13.i:                                   ; preds = %entry
  %cmp.i53.i = icmp slt i32 %agg.tmp.sroa.0.0.copyload, %agg.tmp4.sroa.0.0.copyload
  br i1 %cmp.i53.i, label %_Z13medianOfThreeISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEET_SE_SE_SE_T0_.exit, label %cond.false18.i

cond.false18.i:                                   ; preds = %cond.false13.i
  %cmp.i52.i = icmp slt i32 %agg.tmp1.sroa.0.0.copyload, %agg.tmp4.sroa.0.0.copyload
  %c.i.sroa.0.0.c.i.sroa_cast148 = bitcast i32* %c.i.sroa.0 to %"struct.std::pair.23"*
  %c.b.i = select i1 %cmp.i52.i, %"struct.std::pair.23"* %c.i.sroa.0.0.c.i.sroa_cast148, %"struct.std::pair.23"* %b.i.sroa.0.0.b.i.sroa_cast158
  br label %_Z13medianOfThreeISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEET_SE_SE_SE_T0_.exit

_Z13medianOfThreeISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEET_SE_SE_SE_T0_.exit: ; preds = %cond.true.i, %cond.false.i, %cond.false13.i, %cond.false18.i
  %cond-lvalue29.i = phi %"struct.std::pair.23"* [ %c.a.i, %cond.false.i ], [ %b.i.sroa.0.0.b.i.sroa_cast158, %cond.true.i ], [ %c.b.i, %cond.false18.i ], [ %a.i.sroa.0.0.a.i.sroa_cast167, %cond.false13.i ]
  %retval.sroa.0.0..sroa_idx.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %cond-lvalue29.i, i64 0, i32 0
  %retval.sroa.0.0.copyload.i = load i32, i32* %retval.sroa.0.0..sroa_idx.i, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %a.i.sroa.0.0..sroa_cast168)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %b.i.sroa.0.0..sroa_cast159)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %c.i.sroa.0.0..sroa_cast150)
  %0 = ptrtoint %"struct.std::pair.23"* %A to i64
  %add.ptr = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A, i64 %n
  br label %while.cond

while.cond:                                       ; preds = %if.end36, %_Z13medianOfThreeISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEET_SE_SE_SE_T0_.exit
  %L.sroa.0.0 = phi i64 [ %0, %_Z13medianOfThreeISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEET_SE_SE_SE_T0_.exit ], [ %L.sroa.0.4, %if.end36 ]
  %M.sroa.0.0.ptr119 = phi %"struct.std::pair.23"* [ %A, %_Z13medianOfThreeISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEET_SE_SE_SE_T0_.exit ], [ %incdec.ptr37, %if.end36 ]
  %add.ptr.pn = phi %"struct.std::pair.23"* [ %add.ptr, %_Z13medianOfThreeISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEET_SE_SE_SE_T0_.exit ], [ %R.1, %if.end36 ]
  %R.0 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %add.ptr.pn, i64 -1
  %agg.tmp11.sroa.0.0..sroa_idx101 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %M.sroa.0.0.ptr119, i64 0, i32 0
  %agg.tmp11.sroa.0.0.copyload102 = load i32, i32* %agg.tmp11.sroa.0.0..sroa_idx101, align 8
  %agg.tmp11.sroa.251.0..sroa_idx52103 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %M.sroa.0.0.ptr119, i64 0, i32 1
  %cmp.i87104 = icmp slt i32 %retval.sroa.0.0.copyload.i, %agg.tmp11.sroa.0.0.copyload102
  br i1 %cmp.i87104, label %while.end, label %while.body13.preheader

while.body13.preheader:                           ; preds = %while.cond
  br label %while.body13

while.body13:                                     ; preds = %while.body13.preheader, %if.end18
  %agg.tmp11.sroa.251.0..sroa_idx52109 = phi %struct.vertex.16** [ %8, %if.end18 ], [ %agg.tmp11.sroa.251.0..sroa_idx52103, %while.body13.preheader ]
  %agg.tmp11.sroa.0.0.copyload108 = phi i32 [ %agg.tmp11.sroa.0.0.copyload, %if.end18 ], [ %agg.tmp11.sroa.0.0.copyload102, %while.body13.preheader ]
  %agg.tmp11.sroa.0.0..sroa_idx107 = phi i32* [ %incdec.ptr19, %if.end18 ], [ %agg.tmp11.sroa.0.0..sroa_idx101, %while.body13.preheader ]
  %L.sroa.0.1105 = phi i64 [ %L.sroa.0.2, %if.end18 ], [ %L.sroa.0.0, %while.body13.preheader ]
  %indvars = bitcast i32* %agg.tmp11.sroa.0.0..sroa_idx107 to %"struct.std::pair.23"*
  %cmp.i86 = icmp slt i32 %agg.tmp11.sroa.0.0.copyload108, %retval.sroa.0.0.copyload.i
  br i1 %cmp.i86, label %if.then, label %if.end

if.then:                                          ; preds = %while.body13
  %1 = inttoptr i64 %L.sroa.0.1105 to %"struct.std::pair.23"*
  %incdec.ptr = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %1, i64 1
  %2 = ptrtoint %"struct.std::pair.23"* %incdec.ptr to i64
  %first2.i.i83 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %1, i64 0, i32 0
  %3 = load i32, i32* %first2.i.i83, align 4, !tbaa !59
  store i32 %3, i32* %agg.tmp11.sroa.0.0..sroa_idx107, align 4, !tbaa !59
  store i32 %agg.tmp11.sroa.0.0.copyload108, i32* %first2.i.i83, align 4, !tbaa !59
  %second3.i.i85 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %1, i64 0, i32 1
  %4 = bitcast %struct.vertex.16** %agg.tmp11.sroa.251.0..sroa_idx52109 to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !53
  %6 = bitcast %struct.vertex.16** %second3.i.i85 to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !53
  store i64 %7, i64* %4, align 8, !tbaa !53
  store i64 %5, i64* %6, align 8, !tbaa !53
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body13
  %L.sroa.0.2 = phi i64 [ %2, %if.then ], [ %L.sroa.0.1105, %while.body13 ]
  %cmp = icmp ugt %"struct.std::pair.23"* %R.0, %indvars
  br i1 %cmp, label %if.end18, label %while.end.loopexit

if.end18:                                         ; preds = %if.end
  %incdec.ptr19 = getelementptr inbounds i32, i32* %agg.tmp11.sroa.0.0..sroa_idx107, i64 4
  %agg.tmp11.sroa.0.0.copyload = load i32, i32* %incdec.ptr19, align 8
  %agg.tmp11.sroa.251.0..sroa_idx52 = getelementptr inbounds i32, i32* %agg.tmp11.sroa.0.0..sroa_idx107, i64 6
  %8 = bitcast i32* %agg.tmp11.sroa.251.0..sroa_idx52 to %struct.vertex.16**
  %cmp.i87 = icmp slt i32 %retval.sroa.0.0.copyload.i, %agg.tmp11.sroa.0.0.copyload
  br i1 %cmp.i87, label %while.end.loopexit.split.loop.exit120, label %while.body13

while.end.loopexit.split.loop.exit120:            ; preds = %if.end18
  %9 = bitcast i32* %agg.tmp11.sroa.251.0..sroa_idx52 to %struct.vertex.16**
  %10 = bitcast i32* %incdec.ptr19 to %"struct.std::pair.23"*
  br label %while.end

while.end.loopexit:                               ; preds = %if.end
  %indvars.le = bitcast i32* %agg.tmp11.sroa.0.0..sroa_idx107 to %"struct.std::pair.23"*
  br label %while.end

while.end:                                        ; preds = %while.end.loopexit, %while.end.loopexit.split.loop.exit120, %while.cond
  %M.sroa.0.1.ptr.lcssa = phi %"struct.std::pair.23"* [ %M.sroa.0.0.ptr119, %while.cond ], [ %10, %while.end.loopexit.split.loop.exit120 ], [ %indvars.le, %while.end.loopexit ]
  %agg.tmp11.sroa.0.0..sroa_idx.lcssa = phi i32* [ %agg.tmp11.sroa.0.0..sroa_idx101, %while.cond ], [ %incdec.ptr19, %while.end.loopexit.split.loop.exit120 ], [ %agg.tmp11.sroa.0.0..sroa_idx107, %while.end.loopexit ]
  %agg.tmp11.sroa.251.0..sroa_idx52.lcssa = phi %struct.vertex.16** [ %agg.tmp11.sroa.251.0..sroa_idx52103, %while.cond ], [ %9, %while.end.loopexit.split.loop.exit120 ], [ %agg.tmp11.sroa.251.0..sroa_idx52109, %while.end.loopexit ]
  %L.sroa.0.3 = phi i64 [ %L.sroa.0.0, %while.cond ], [ %L.sroa.0.2, %while.end.loopexit.split.loop.exit120 ], [ %L.sroa.0.2, %while.end.loopexit ]
  br label %while.cond20

while.cond20:                                     ; preds = %while.cond20, %while.end
  %R.1 = phi %"struct.std::pair.23"* [ %R.0, %while.end ], [ %incdec.ptr25, %while.cond20 ]
  %agg.tmp22.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %R.1, i64 0, i32 0
  %agg.tmp22.sroa.0.0.copyload = load i32, i32* %agg.tmp22.sroa.0.0..sroa_idx, align 8
  %cmp.i81 = icmp slt i32 %retval.sroa.0.0.copyload.i, %agg.tmp22.sroa.0.0.copyload
  %incdec.ptr25 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %R.1, i64 -1
  br i1 %cmp.i81, label %while.cond20, label %while.end26

while.end26:                                      ; preds = %while.cond20
  %cmp27 = icmp ult %"struct.std::pair.23"* %M.sroa.0.1.ptr.lcssa, %R.1
  br i1 %cmp27, label %if.end29, label %while.end38

if.end29:                                         ; preds = %while.end26
  %agg.tmp22.sroa.0.0..sroa_idx.le = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %R.1, i64 0, i32 0
  %agg.tmp22.sroa.243.0..sroa_idx44.le = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %R.1, i64 0, i32 1
  %11 = load i32, i32* %agg.tmp11.sroa.0.0..sroa_idx.lcssa, align 4, !tbaa !59
  store i32 %agg.tmp22.sroa.0.0.copyload, i32* %agg.tmp11.sroa.0.0..sroa_idx.lcssa, align 4, !tbaa !59
  store i32 %11, i32* %agg.tmp22.sroa.0.0..sroa_idx.le, align 4, !tbaa !59
  %12 = bitcast %struct.vertex.16** %agg.tmp11.sroa.251.0..sroa_idx52.lcssa to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !53
  %14 = bitcast %struct.vertex.16** %agg.tmp22.sroa.243.0..sroa_idx44.le to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !53
  store i64 %15, i64* %12, align 8, !tbaa !53
  store i64 %13, i64* %14, align 8, !tbaa !53
  %agg.tmp31.sroa.0.0.copyload = load i32, i32* %agg.tmp11.sroa.0.0..sroa_idx.lcssa, align 8
  %cmp.i = icmp slt i32 %agg.tmp31.sroa.0.0.copyload, %retval.sroa.0.0.copyload.i
  br i1 %cmp.i, label %if.then34, label %if.end36

if.then34:                                        ; preds = %if.end29
  %16 = inttoptr i64 %L.sroa.0.3 to %"struct.std::pair.23"*
  %incdec.ptr35 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %16, i64 1
  %17 = ptrtoint %"struct.std::pair.23"* %incdec.ptr35 to i64
  %first2.i.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %16, i64 0, i32 0
  %18 = load i32, i32* %first2.i.i, align 4, !tbaa !59
  store i32 %18, i32* %agg.tmp11.sroa.0.0..sroa_idx.lcssa, align 4, !tbaa !59
  store i32 %agg.tmp31.sroa.0.0.copyload, i32* %first2.i.i, align 4, !tbaa !59
  %second3.i.i = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %16, i64 0, i32 1
  %19 = load i64, i64* %12, align 8, !tbaa !53
  %20 = bitcast %struct.vertex.16** %second3.i.i to i64*
  %21 = load i64, i64* %20, align 8, !tbaa !53
  store i64 %21, i64* %12, align 8, !tbaa !53
  store i64 %19, i64* %20, align 8, !tbaa !53
  br label %if.end36

if.end36:                                         ; preds = %if.then34, %if.end29
  %L.sroa.0.4 = phi i64 [ %17, %if.then34 ], [ %L.sroa.0.3, %if.end29 ]
  %incdec.ptr37 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %M.sroa.0.1.ptr.lcssa, i64 1
  br label %while.cond

while.end38:                                      ; preds = %while.end26
  %22 = inttoptr i64 %L.sroa.0.3 to %"struct.std::pair.23"*
  %.fca.0.insert = insertvalue { %"struct.std::pair.23"*, %"struct.std::pair.23"* } undef, %"struct.std::pair.23"* %22, 0
  %.fca.1.insert = insertvalue { %"struct.std::pair.23"*, %"struct.std::pair.23"* } %.fca.0.insert, %"struct.std::pair.23"* %M.sroa.0.1.ptr.lcssa, 1
  ret { %"struct.std::pair.23"*, %"struct.std::pair.23"* } %.fca.1.insert
}

; Function Attrs: nounwind stealable uwtable
define linkonce_odr void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT_(%class.gTreeNode.18* %this, i32 %s, %struct.vertex.16** %f.coerce) local_unnamed_addr #15 comdat align 2 {
entry:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %entry
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %entry, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %entry ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %entry ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %vertices.i = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %this, i64 0, i32 5
  %9 = load %struct.vertex.16**, %struct.vertex.16*** %vertices.i, align 8, !tbaa !176
  %cmp.i = icmp eq %struct.vertex.16** %9, null
  br i1 %cmp.i, label %if.else, label %if.then

if.then:                                          ; preds = %__cilkrts_enter_frame_1.exit
  %count = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %this, i64 0, i32 3
  %10 = load i32, i32* %count, align 4, !tbaa !162
  %cmp35 = icmp sgt i32 %10, 0
  br i1 %cmp35, label %for.body.lr.ph, label %if.end

for.body.lr.ph:                                   ; preds = %if.then
  %11 = sext i32 %s to i64
  %12 = sext i32 %10 to i64
  %13 = bitcast %struct.vertex.16** %9 to i64*
  %14 = load i64, i64* %13, align 8, !tbaa !53
  %arrayidx.i39 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %f.coerce, i64 %11
  %15 = bitcast %struct.vertex.16** %arrayidx.i39 to i64*
  store i64 %14, i64* %15, align 8, !tbaa !53
  %cmp40 = icmp eq i32 %10, 1
  br i1 %cmp40, label %if.end, label %for.body.for.body_crit_edge.preheader

for.body.for.body_crit_edge.preheader:            ; preds = %for.body.lr.ph
  br label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body.for.body_crit_edge.preheader, %for.body.for.body_crit_edge
  %indvars.iv.next41 = phi i64 [ %indvars.iv.next, %for.body.for.body_crit_edge ], [ 1, %for.body.for.body_crit_edge.preheader ]
  %.pre = load %struct.vertex.16**, %struct.vertex.16*** %vertices.i, align 8, !tbaa !176
  %arrayidx = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %.pre, i64 %indvars.iv.next41
  %16 = bitcast %struct.vertex.16** %arrayidx to i64*
  %17 = load i64, i64* %16, align 8, !tbaa !53
  %18 = add nsw i64 %indvars.iv.next41, %11
  %arrayidx.i = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %f.coerce, i64 %18
  %19 = bitcast %struct.vertex.16** %arrayidx.i to i64*
  store i64 %17, i64* %19, align 8, !tbaa !53
  %indvars.iv.next = add nuw nsw i64 %indvars.iv.next41, 1
  %cmp = icmp slt i64 %indvars.iv.next, %12
  br i1 %cmp, label %for.body.for.body_crit_edge, label %if.end

if.else:                                          ; preds = %__cilkrts_enter_frame_1.exit
  %arrayidx9 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %this, i64 0, i32 4, i64 0
  %20 = load %class.gTreeNode.18*, %class.gTreeNode.18** %arrayidx9, align 8, !tbaa !53
  %21 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  %23 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %24 = call i8* @llvm.frameaddress(i32 0)
  %25 = getelementptr inbounds [5 x i8*], [5 x i8*]* %23, i64 0, i64 0
  store volatile i8* %24, i8** %25, align 8
  %26 = call i8* @llvm.stacksave()
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %26, i8** %27, align 8
  %28 = bitcast [5 x i8*]* %23 to i8*
  %29 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #23
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %if.else.split, label %det.cont

if.else.split:                                    ; preds = %if.else
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.1.cilk(%class.gTreeNode.18* align 1 %20, i32 %s, %struct.vertex.16** align 1 %f.coerce)
  br label %det.cont

det.cont:                                         ; preds = %if.else.split, %if.else
  %31 = load %class.gTreeNode.18*, %class.gTreeNode.18** %arrayidx9, align 8, !tbaa !53
  %count14 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %31, i64 0, i32 3
  %32 = load i32, i32* %count14, align 4, !tbaa !162
  %add15 = add nsw i32 %32, %s
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %34 = load atomic i32, i32* %33 acquire, align 8
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %det.cont
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %38 = call i8* @llvm.stacksave() #2
  store volatile i8* %38, i8** %27, align 8
  %39 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #24
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %det.cont, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 12, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %42, align 8
  %arrayidx9.1 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %this, i64 0, i32 4, i64 1
  %45 = load %class.gTreeNode.18*, %class.gTreeNode.18** %arrayidx9.1, align 8, !tbaa !53
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %46 = call i8* @llvm.stacksave()
  store volatile i8* %46, i8** %27, align 8
  %47 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #23
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %for.inc16.split, label %det.cont.1

for.inc16.split:                                  ; preds = %__cilk_sync_nothrow.exit
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.1.cilk(%class.gTreeNode.18* %45, i32 %add15, %struct.vertex.16** %f.coerce)
  br label %det.cont.1

if.end:                                           ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph, %__cilk_sync_nothrow.exit47, %if.then
  %49 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %50 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %49, i64 0, i32 9
  %53 = bitcast %struct.__cilkrts_stack_frame** %52 to i64*
  store atomic i64 %51, i64* %53 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %54 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %55 = load atomic i32, i32* %54 acquire, align 8
  %56 = icmp eq i32 %55, 16777216
  br i1 %56, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.end
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.end, %body.i
  ret void

det.cont.1:                                       ; preds = %for.inc16.split, %__cilk_sync_nothrow.exit
  %57 = load %class.gTreeNode.18*, %class.gTreeNode.18** %arrayidx9.1, align 8, !tbaa !53
  %count14.1 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %57, i64 0, i32 3
  %58 = load i32, i32* %count14.1, align 4, !tbaa !162
  %add15.1 = add nsw i32 %58, %add15
  %59 = load atomic i32, i32* %33 acquire, align 8
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %__cilk_sync_nothrow.exit44, label %cilk.sync.savestate.i42

cilk.sync.savestate.i42:                          ; preds = %det.cont.1
  %62 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %63 = call i8* @llvm.stacksave() #2
  store volatile i8* %63, i8** %27, align 8
  %64 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #24
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %cilk.sync.runtimecall.i43, label %__cilk_sync_nothrow.exit44

cilk.sync.runtimecall.i43:                        ; preds = %cilk.sync.savestate.i42
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit44

__cilk_sync_nothrow.exit44:                       ; preds = %det.cont.1, %cilk.sync.savestate.i42, %cilk.sync.runtimecall.i43
  %66 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %67 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %66, i64 0, i32 12, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  store i64 %69, i64* %67, align 8
  %arrayidx9.2 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %this, i64 0, i32 4, i64 2
  %70 = load %class.gTreeNode.18*, %class.gTreeNode.18** %arrayidx9.2, align 8, !tbaa !53
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %71 = call i8* @llvm.stacksave()
  store volatile i8* %71, i8** %27, align 8
  %72 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #23
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %for.inc16.1.split, label %det.cont.2

for.inc16.1.split:                                ; preds = %__cilk_sync_nothrow.exit44
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.2.cilk(%class.gTreeNode.18* %70, i32 %add15.1, %struct.vertex.16** %f.coerce)
  br label %det.cont.2

det.cont.2:                                       ; preds = %for.inc16.1.split, %__cilk_sync_nothrow.exit44
  %74 = load %class.gTreeNode.18*, %class.gTreeNode.18** %arrayidx9.2, align 8, !tbaa !53
  %count14.2 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %74, i64 0, i32 3
  %75 = load i32, i32* %count14.2, align 4, !tbaa !162
  %add15.2 = add nsw i32 %75, %add15.1
  %76 = load atomic i32, i32* %33 acquire, align 8
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %__cilk_sync_nothrow.exit47, label %cilk.sync.savestate.i45

cilk.sync.savestate.i45:                          ; preds = %det.cont.2
  %79 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %80 = call i8* @llvm.stacksave() #2
  store volatile i8* %80, i8** %27, align 8
  %81 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #24
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %cilk.sync.runtimecall.i46, label %__cilk_sync_nothrow.exit47

cilk.sync.runtimecall.i46:                        ; preds = %cilk.sync.savestate.i45
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit47

__cilk_sync_nothrow.exit47:                       ; preds = %det.cont.2, %cilk.sync.savestate.i45, %cilk.sync.runtimecall.i46
  %83 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %84 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %83, i64 0, i32 12, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, 1
  store i64 %86, i64* %84, align 8
  %arrayidx9.3 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %this, i64 0, i32 4, i64 3
  %87 = load %class.gTreeNode.18*, %class.gTreeNode.18** %arrayidx9.3, align 8, !tbaa !53
  tail call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT_(%class.gTreeNode.18* %87, i32 %add15.2, %struct.vertex.16** %f.coerce)
  br label %if.end
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNN10nearestNghEP9gTreeNodeIS2_7_vect2dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %this, %class.gTreeNode.18* %T) local_unnamed_addr #7 comdat align 2 {
entry:
  %vertices.i = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %T, i64 0, i32 5
  %0 = load %struct.vertex.16**, %struct.vertex.16*** %vertices.i, align 8, !tbaa !176
  %cmp.i = icmp eq %struct.vertex.16** %0, null
  br i1 %cmp.i, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %count = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %T, i64 0, i32 3
  %1 = load i32, i32* %count, align 4, !tbaa !162
  %cmp45 = icmp sgt i32 %1, 0
  br i1 %cmp45, label %for.body.lr.ph, label %if.end22

for.body.lr.ph:                                   ; preds = %if.then
  %ps = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %this, i64 0, i32 0
  %arrayidx.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %this, i64 0, i32 2, i64 0
  %arrayidx4.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %this, i64 0, i32 1, i64 0
  %k.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %this, i64 0, i32 4
  %2 = sext i32 %1 to i64
  br label %for.body

for.body:                                         ; preds = %if.end.for.body_crit_edge, %for.body.lr.ph
  %3 = phi %struct.vertex.16** [ %0, %for.body.lr.ph ], [ %.pre, %if.end.for.body_crit_edge ]
  %indvars.iv48 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next49, %if.end.for.body_crit_edge ]
  %arrayidx = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %3, i64 %indvars.iv48
  %4 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx, align 8, !tbaa !53
  %5 = load %struct.vertex.16*, %struct.vertex.16** %ps, align 8, !tbaa !168
  %cmp2 = icmp eq %struct.vertex.16* %4, %5
  br i1 %cmp2, label %if.end, label %if.then3

if.then3:                                         ; preds = %for.body
  %opt.sroa.0.0..sroa_idx.i = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %4, i64 0, i32 1, i32 0
  %6 = bitcast double* %opt.sroa.0.0..sroa_idx.i to <2 x double>*
  %7 = load <2 x double>, <2 x double>* %6, align 8
  %x.i.i = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %5, i64 0, i32 1, i32 0
  %8 = bitcast double* %x.i.i to <2 x double>*
  %9 = load <2 x double>, <2 x double>* %8, align 8, !tbaa !18
  %10 = fsub fast <2 x double> %9, %7
  %11 = fmul fast <2 x double> %10, %10
  %12 = extractelement <2 x double> %11, i32 0
  %13 = extractelement <2 x double> %11, i32 1
  %add.i.i = fadd fast double %13, %12
  %14 = tail call fast double @llvm.sqrt.f64(double %add.i.i) #2
  %15 = load double, double* %arrayidx.i, align 8, !tbaa !18
  %cmp.i39 = fcmp fast olt double %14, %15
  br i1 %cmp.i39, label %if.then.i, label %if.end

if.then.i:                                        ; preds = %if.then3
  store %struct.vertex.16* %4, %struct.vertex.16** %arrayidx4.i, align 8, !tbaa !53
  store double %14, double* %arrayidx.i, align 8, !tbaa !18
  %16 = load i32, i32* %k.i, align 4, !tbaa !165
  %cmp747.i = icmp sgt i32 %16, 1
  br i1 %cmp747.i, label %land.rhs.lr.ph.i, label %if.end

land.rhs.lr.ph.i:                                 ; preds = %if.then.i
  %17 = sext i32 %16 to i64
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %for.body.i, %land.rhs.lr.ph.i
  %18 = phi double [ %14, %land.rhs.lr.ph.i ], [ %28, %for.body.i ]
  %indvars.iv.i = phi i64 [ 1, %land.rhs.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %19 = add nsw i64 %indvars.iv.i, -1
  %arrayidx12.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %this, i64 0, i32 2, i64 %indvars.iv.i
  %20 = load double, double* %arrayidx12.i, align 8, !tbaa !18
  %cmp13.i = fcmp fast olt double %18, %20
  br i1 %cmp13.i, label %for.body.i, label %if.end

for.body.i:                                       ; preds = %land.rhs.i
  %arrayidx9.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %this, i64 0, i32 2, i64 %19
  %21 = bitcast double* %arrayidx9.i to i64*
  %22 = load i64, i64* %21, align 8, !tbaa !18
  %23 = bitcast double* %arrayidx12.i to i64*
  store double %20, double* %arrayidx9.i, align 8, !tbaa !18
  store i64 %22, i64* %23, align 8, !tbaa !18
  %arrayidx24.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %this, i64 0, i32 1, i64 %19
  %arrayidx27.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %this, i64 0, i32 1, i64 %indvars.iv.i
  %24 = bitcast %struct.vertex.16** %arrayidx24.i to i64*
  %25 = load i64, i64* %24, align 8, !tbaa !53
  %26 = bitcast %struct.vertex.16** %arrayidx27.i to i64*
  %27 = load i64, i64* %26, align 8, !tbaa !53
  store i64 %27, i64* %24, align 8, !tbaa !53
  store i64 %25, i64* %26, align 8, !tbaa !53
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %cmp7.i = icmp slt i64 %indvars.iv.next.i, %17
  %28 = bitcast i64 %22 to double
  br i1 %cmp7.i, label %land.rhs.i, label %if.end

if.end:                                           ; preds = %for.body.i, %land.rhs.i, %if.then.i, %if.then3, %for.body
  %indvars.iv.next49 = add nuw nsw i64 %indvars.iv48, 1
  %cmp = icmp slt i64 %indvars.iv.next49, %2
  br i1 %cmp, label %if.end.for.body_crit_edge, label %if.end22

if.end.for.body_crit_edge:                        ; preds = %if.end
  %.pre = load %struct.vertex.16**, %struct.vertex.16*** %vertices.i, align 8, !tbaa !176
  br label %for.body

if.else:                                          ; preds = %entry
  %ps5 = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %this, i64 0, i32 0
  %29 = load %struct.vertex.16*, %struct.vertex.16** %ps5, align 8, !tbaa !168
  %agg.tmp.sroa.0.0..sroa_idx.i = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %T, i64 0, i32 0, i32 0
  %agg.tmp.sroa.0.0.copyload.i = load double, double* %agg.tmp.sroa.0.0..sroa_idx.i, align 8
  %agg.tmp.sroa.2.0..sroa_idx2.i = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %T, i64 0, i32 0, i32 1
  %agg.tmp.sroa.2.0.copyload.i = load double, double* %agg.tmp.sroa.2.0..sroa_idx2.i, align 8
  %x.i.i40 = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %29, i64 0, i32 1, i32 0
  %30 = load double, double* %x.i.i40, align 8, !tbaa !90
  %cmp.i.i = fcmp fast ogt double %30, %agg.tmp.sroa.0.0.copyload.i
  %index.0.i.i = zext i1 %cmp.i.i to i32
  %y.i.i41 = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %29, i64 0, i32 1, i32 1
  %31 = load double, double* %y.i.i41, align 8, !tbaa !91
  %cmp4.i.i = fcmp fast ogt double %31, %agg.tmp.sroa.2.0.copyload.i
  %add6.i.i = or i32 %index.0.i.i, 2
  %index.1.i.i = select i1 %cmp4.i.i, i32 %add6.i.i, i32 %index.0.i.i
  %32 = zext i32 %index.1.i.i to i64
  %arrayidx8 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %T, i64 0, i32 4, i64 %32
  %33 = load %class.gTreeNode.18*, %class.gTreeNode.18** %arrayidx8, align 8, !tbaa !53
  tail call void @_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNN10nearestNghEP9gTreeNodeIS2_7_vect2dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %this, %class.gTreeNode.18* %33)
  %quads = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %this, i64 0, i32 3
  %34 = load i32, i32* %quads, align 8, !tbaa !167
  %cmp1043 = icmp sgt i32 %34, 0
  br i1 %cmp1043, label %for.body12.preheader, label %if.end22

for.body12.preheader:                             ; preds = %if.else
  br label %for.body12

for.body12:                                       ; preds = %for.body12.preheader, %for.inc19
  %35 = phi i32 [ %37, %for.inc19 ], [ %34, %for.body12.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc19 ], [ 0, %for.body12.preheader ]
  %cmp13 = icmp eq i64 %indvars.iv, %32
  br i1 %cmp13, label %for.inc19, label %if.then14

if.then14:                                        ; preds = %for.body12
  %arrayidx17 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %T, i64 0, i32 4, i64 %indvars.iv
  %36 = load %class.gTreeNode.18*, %class.gTreeNode.18** %arrayidx17, align 8, !tbaa !53
  tail call void @_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNN14nearestNghTrimEP9gTreeNodeIS2_7_vect2dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* nonnull %this, %class.gTreeNode.18* %36)
  %.pre50 = load i32, i32* %quads, align 8, !tbaa !167
  br label %for.inc19

for.inc19:                                        ; preds = %for.body12, %if.then14
  %37 = phi i32 [ %35, %for.body12 ], [ %.pre50, %if.then14 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %38 = sext i32 %37 to i64
  %cmp10 = icmp slt i64 %indvars.iv.next, %38
  br i1 %cmp10, label %for.body12, label %if.end22

if.end22:                                         ; preds = %if.end, %for.inc19, %if.then, %if.else
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNN14nearestNghTrimEP9gTreeNodeIS2_7_vect2dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %this, %class.gTreeNode.18* %T) local_unnamed_addr #7 comdat align 2 {
entry:
  %ps = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %this, i64 0, i32 0
  %0 = load %struct.vertex.16*, %struct.vertex.16** %ps, align 8, !tbaa !168
  %agg.tmp.sroa.0.0..sroa_idx = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %0, i64 0, i32 1, i32 0
  %1 = bitcast double* %agg.tmp.sroa.0.0..sroa_idx to <2 x double>*
  %2 = load <2 x double>, <2 x double>* %1, align 8
  %size = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %T, i64 0, i32 1
  %3 = load double, double* %size, align 8, !tbaa !173
  %div = fmul fast double %3, 5.000000e-01
  %arrayidx = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %this, i64 0, i32 2, i64 0
  %4 = load double, double* %arrayidx, align 8, !tbaa !18
  %add = fadd fast double %div, %4
  %x.i = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %T, i64 0, i32 0, i32 0
  %5 = load double, double* %x.i, align 8, !tbaa !90
  %sub.i = fsub fast double %5, %add
  %6 = extractelement <2 x double> %2, i32 0
  %cmp.i = fcmp fast ogt double %sub.i, %6
  %add.i = fadd fast double %5, %add
  %cmp5.i = fcmp fast olt double %add.i, %6
  %or.cond.i = or i1 %cmp.i, %cmp5.i
  br i1 %or.cond.i, label %if.end14, label %lor.lhs.false6.i

lor.lhs.false6.i:                                 ; preds = %entry
  %y.i = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %T, i64 0, i32 0, i32 1
  %7 = load double, double* %y.i, align 8, !tbaa !91
  %sub7.i = fsub fast double %7, %add
  %8 = extractelement <2 x double> %2, i32 1
  %cmp9.i = fcmp fast ogt double %sub7.i, %8
  %add11.i = fadd fast double %7, %add
  %cmp13.i = fcmp fast olt double %add11.i, %8
  %or.cond = or i1 %cmp9.i, %cmp13.i
  br i1 %or.cond, label %if.end14, label %if.then

if.then:                                          ; preds = %lor.lhs.false6.i
  %vertices.i = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %T, i64 0, i32 5
  %9 = load %struct.vertex.16**, %struct.vertex.16*** %vertices.i, align 8, !tbaa !176
  %cmp.i27 = icmp eq %struct.vertex.16** %9, null
  br i1 %cmp.i27, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.then
  %count = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %T, i64 0, i32 3
  %10 = load i32, i32* %count, align 4, !tbaa !162
  %cmp33 = icmp sgt i32 %10, 0
  br i1 %cmp33, label %for.body.lr.ph, label %if.end14

for.body.lr.ph:                                   ; preds = %if.then3
  %arrayidx4.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %this, i64 0, i32 1, i64 0
  %k.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %this, i64 0, i32 4
  %11 = sext i32 %10 to i64
  br label %for.body

for.body:                                         ; preds = %_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNN6updateEPS3_.exit.for.body_crit_edge, %for.body.lr.ph
  %12 = phi double [ %4, %for.body.lr.ph ], [ %.pre41, %_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNN6updateEPS3_.exit.for.body_crit_edge ]
  %13 = phi %struct.vertex.16** [ %9, %for.body.lr.ph ], [ %.pre, %_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNN6updateEPS3_.exit.for.body_crit_edge ]
  %indvars.iv36 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next37, %_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNN6updateEPS3_.exit.for.body_crit_edge ]
  %14 = phi <2 x double> [ %2, %for.body.lr.ph ], [ %37, %_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNN6updateEPS3_.exit.for.body_crit_edge ]
  %arrayidx4 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %13, i64 %indvars.iv36
  %15 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx4, align 8, !tbaa !53
  %opt.sroa.0.0..sroa_idx.i = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %15, i64 0, i32 1, i32 0
  %16 = bitcast double* %opt.sroa.0.0..sroa_idx.i to <2 x double>*
  %17 = load <2 x double>, <2 x double>* %16, align 8
  %18 = fsub fast <2 x double> %14, %17
  %19 = fmul fast <2 x double> %18, %18
  %20 = extractelement <2 x double> %19, i32 0
  %21 = extractelement <2 x double> %19, i32 1
  %add.i.i = fadd fast double %21, %20
  %22 = tail call fast double @llvm.sqrt.f64(double %add.i.i) #2
  %cmp.i28 = fcmp fast olt double %22, %12
  br i1 %cmp.i28, label %if.then.i, label %_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNN6updateEPS3_.exit

if.then.i:                                        ; preds = %for.body
  store %struct.vertex.16* %15, %struct.vertex.16** %arrayidx4.i, align 8, !tbaa !53
  store double %22, double* %arrayidx, align 8, !tbaa !18
  %23 = load i32, i32* %k.i, align 4, !tbaa !165
  %cmp747.i = icmp sgt i32 %23, 1
  br i1 %cmp747.i, label %land.rhs.lr.ph.i, label %_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNN6updateEPS3_.exit

land.rhs.lr.ph.i:                                 ; preds = %if.then.i
  %24 = sext i32 %23 to i64
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %for.body.i, %land.rhs.lr.ph.i
  %25 = phi double [ %22, %land.rhs.lr.ph.i ], [ %35, %for.body.i ]
  %indvars.iv.i = phi i64 [ 1, %land.rhs.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %26 = add nsw i64 %indvars.iv.i, -1
  %arrayidx12.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %this, i64 0, i32 2, i64 %indvars.iv.i
  %27 = load double, double* %arrayidx12.i, align 8, !tbaa !18
  %cmp13.i29 = fcmp fast olt double %25, %27
  br i1 %cmp13.i29, label %for.body.i, label %_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNN6updateEPS3_.exit

for.body.i:                                       ; preds = %land.rhs.i
  %arrayidx9.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %this, i64 0, i32 2, i64 %26
  %28 = bitcast double* %arrayidx9.i to i64*
  %29 = load i64, i64* %28, align 8, !tbaa !18
  %30 = bitcast double* %arrayidx12.i to i64*
  store double %27, double* %arrayidx9.i, align 8, !tbaa !18
  store i64 %29, i64* %30, align 8, !tbaa !18
  %arrayidx24.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %this, i64 0, i32 1, i64 %26
  %arrayidx27.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %this, i64 0, i32 1, i64 %indvars.iv.i
  %31 = bitcast %struct.vertex.16** %arrayidx24.i to i64*
  %32 = load i64, i64* %31, align 8, !tbaa !53
  %33 = bitcast %struct.vertex.16** %arrayidx27.i to i64*
  %34 = load i64, i64* %33, align 8, !tbaa !53
  store i64 %34, i64* %31, align 8, !tbaa !53
  store i64 %32, i64* %33, align 8, !tbaa !53
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %cmp7.i = icmp slt i64 %indvars.iv.next.i, %24
  %35 = bitcast i64 %29 to double
  br i1 %cmp7.i, label %land.rhs.i, label %_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNN6updateEPS3_.exit

_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNN6updateEPS3_.exit: ; preds = %land.rhs.i, %for.body.i, %for.body, %if.then.i
  %indvars.iv.next37 = add nuw nsw i64 %indvars.iv36, 1
  %cmp = icmp slt i64 %indvars.iv.next37, %11
  br i1 %cmp, label %_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNN6updateEPS3_.exit.for.body_crit_edge, label %if.end14

_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNN6updateEPS3_.exit.for.body_crit_edge: ; preds = %_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNN6updateEPS3_.exit
  %.pre = load %struct.vertex.16**, %struct.vertex.16*** %vertices.i, align 8, !tbaa !176
  %.pre38 = load %struct.vertex.16*, %struct.vertex.16** %ps, align 8, !tbaa !168
  %x.i.i.phi.trans.insert = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %.pre38, i64 0, i32 1, i32 0
  %36 = bitcast double* %x.i.i.phi.trans.insert to <2 x double>*
  %37 = load <2 x double>, <2 x double>* %36, align 8, !tbaa !18
  %.pre41 = load double, double* %arrayidx, align 8, !tbaa !18
  br label %for.body

if.else:                                          ; preds = %if.then
  %quads = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* %this, i64 0, i32 3
  %38 = load i32, i32* %quads, align 8, !tbaa !167
  %cmp631 = icmp sgt i32 %38, 0
  br i1 %cmp631, label %for.body8.preheader, label %if.end14

for.body8.preheader:                              ; preds = %if.else
  br label %for.body8

for.body8:                                        ; preds = %for.body8.preheader, %for.body8
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body8 ], [ 0, %for.body8.preheader ]
  %arrayidx10 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %T, i64 0, i32 4, i64 %indvars.iv
  %39 = load %class.gTreeNode.18*, %class.gTreeNode.18** %arrayidx10, align 8, !tbaa !53
  tail call void @_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNN14nearestNghTrimEP9gTreeNodeIS2_7_vect2dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point2d<double>, 10>, 10>::kNN"* nonnull %this, %class.gTreeNode.18* %39)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %40 = load i32, i32* %quads, align 8, !tbaa !167
  %41 = sext i32 %40 to i64
  %cmp6 = icmp slt i64 %indvars.iv.next, %41
  br i1 %cmp6, label %for.body8, label %if.end14

if.end14:                                         ; preds = %_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNN6updateEPS3_.exit, %for.body8, %if.then3, %if.else, %entry, %lor.lhs.false6.i
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE3delEv(%class.gTreeNode.18* %this) local_unnamed_addr #7 comdat align 2 {
entry:
  %vertices.i = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %this, i64 0, i32 5
  %0 = load %struct.vertex.16**, %struct.vertex.16*** %vertices.i, align 8, !tbaa !176
  %cmp.i = icmp eq %struct.vertex.16** %0, null
  br i1 %cmp.i, label %if.else, label %if.end

if.else:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %this, i64 0, i32 4, i64 0
  %1 = load %class.gTreeNode.18*, %class.gTreeNode.18** %arrayidx, align 8, !tbaa !53
  tail call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE3delEv(%class.gTreeNode.18* %1)
  %arrayidx.1 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %this, i64 0, i32 4, i64 1
  %2 = load %class.gTreeNode.18*, %class.gTreeNode.18** %arrayidx.1, align 8, !tbaa !53
  tail call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE3delEv(%class.gTreeNode.18* %2)
  %arrayidx.2 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %this, i64 0, i32 4, i64 2
  %3 = load %class.gTreeNode.18*, %class.gTreeNode.18** %arrayidx.2, align 8, !tbaa !53
  tail call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE3delEv(%class.gTreeNode.18* %3)
  %arrayidx.3 = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %this, i64 0, i32 4, i64 3
  %4 = load %class.gTreeNode.18*, %class.gTreeNode.18** %arrayidx.3, align 8, !tbaa !53
  tail call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE3delEv(%class.gTreeNode.18* %4)
  br label %if.end

if.end:                                           ; preds = %if.else, %entry
  %nodeMemory = getelementptr inbounds %class.gTreeNode.18, %class.gTreeNode.18* %this, i64 0, i32 6
  %5 = load %class.gTreeNode.18*, %class.gTreeNode.18** %nodeMemory, align 8, !tbaa !175
  %cmp3 = icmp eq %class.gTreeNode.18* %5, null
  br i1 %cmp3, label %if.end6, label %if.then4

if.then4:                                         ; preds = %if.end
  %6 = bitcast %class.gTreeNode.18* %5 to i8*
  tail call void @free(i8* %6) #2
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then4
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_Z3ANNILi1E6vertexI8_point3dIdELi1EEEvPPT0_ii(%struct.vertex.29** %v, i32 %n, i32 %k) local_unnamed_addr #7 comdat {
entry:
  %call.i = tail call %class.gTreeNode.31* @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE5gTreeEPPS5_i(%struct.vertex.29** %v, i32 %n) #2
  %count.i.i = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %call.i, i64 0, i32 3
  %0 = load i32, i32* %count.i.i, align 4, !tbaa !215
  %1 = sext i32 %0 to i64
  %2 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %1, i64 8) #2
  %3 = extractvalue { i64, i1 } %2, 1
  %4 = extractvalue { i64, i1 } %2, 0
  %5 = select i1 %3, i64 -1, i64 %4
  %call.i.i = tail call i8* @_Znam(i64 %5) #22
  %6 = bitcast i8* %call.i.i to %struct.vertex.29**
  tail call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT_(%class.gTreeNode.31* %call.i, i32 0, %struct.vertex.29** nonnull %6) #2
  %cmp24 = icmp sgt i32 %n, 0
  br i1 %cmp24, label %pfor.detach.lr.ph, label %sync.continue

pfor.detach.lr.ph:                                ; preds = %entry
  %cmp.i.i = icmp sgt i32 %k, 1
  %7 = zext i32 %k to i64
  %8 = shl nuw nsw i64 %7, 3
  br i1 %cmp.i.i, label %pfor.detach.lr.ph.split.us, label %pfor.detach.lr.ph.split

pfor.detach.lr.ph.split.us:                       ; preds = %pfor.detach.lr.ph
  %call.i.i17 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.26, i64 0, i64 0)) #2
  %call.i.i.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call.i.i17) #2
  tail call void @abort() #21
  unreachable

pfor.detach.lr.ph.split:                          ; preds = %pfor.detach.lr.ph
  %cmp515.i.i = icmp eq i32 %k, 1
  %wide.trip.count = zext i32 %n to i64
  br i1 %cmp515.i.i, label %pfor.detach.lr.ph.split.split.us, label %pfor.detach.preheader

pfor.detach.preheader:                            ; preds = %pfor.detach.lr.ph.split
  %9 = add nsw i64 %wide.trip.count, -1
  tail call fastcc void @_Z3ANNILi1E6vertexI8_point3dIdELi1EEEvPPT0_ii_pfor.detach.ls(i64 0, i64 %9, %struct.vertex.29** nonnull %6, i32 %k, %class.gTreeNode.31* %call.i)
  br label %sync.continue

pfor.detach.lr.ph.split.split.us:                 ; preds = %pfor.detach.lr.ph.split
  %10 = add nsw i64 %7, -1
  %xtraiter84 = and i64 %7, 7
  %lcmp.mod85 = icmp eq i64 %xtraiter84, 0
  %11 = add nsw i64 %wide.trip.count, -1
  tail call fastcc void @_Z3ANNILi1E6vertexI8_point3dIdELi1EEEvPPT0_ii_pfor.detach.us26.ls(i64 0, i64 %11, %struct.vertex.29** nonnull %6, %class.gTreeNode.31* %call.i, i64 %8, i64 %10, i1 %lcmp.mod85, i64 %xtraiter84, i64 %7)
  br label %sync.continue

sync.continue:                                    ; preds = %entry, %pfor.detach.lr.ph.split.split.us, %pfor.detach.preheader
  tail call void @free(i8* nonnull %call.i.i) #2
  %12 = bitcast %class.gTreeNode.31* %call.i to %class.gTreeNode.46*
  tail call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE3delEv(%class.gTreeNode.46* %12) #2
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr %class.gTreeNode.31* @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE5gTreeEPPS5_i(%struct.vertex.29** %vv, i32 %n) local_unnamed_addr #7 comdat align 2 {
entry:
  %minMaxPair = alloca %"struct.std::pair.33", align 16
  %agg.tmp12 = alloca %class._point3d, align 16
  %0 = bitcast %"struct.std::pair.33"* %minMaxPair to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %0) #2
  call void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_(%"struct.std::pair.33"* nonnull sret %minMaxPair, i32 0, i32 %n, %struct.vertex.29** %vv) #2
  %1 = bitcast %"struct.std::pair.33"* %minMaxPair to <2 x double>*
  %2 = load <2 x double>, <2 x double>* %1, align 16
  %minPt.sroa.6.0..sroa_idx73 = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %minMaxPair, i64 0, i32 0, i32 2
  %minPt.sroa.6.0.copyload = load double, double* %minPt.sroa.6.0..sroa_idx73, align 16
  %maxPt.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %minMaxPair, i64 0, i32 1, i32 0
  %3 = bitcast double* %maxPt.sroa.0.0..sroa_idx to <2 x double>*
  %4 = load <2 x double>, <2 x double>* %3, align 8
  %maxPt.sroa.5.0..sroa_idx64 = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %minMaxPair, i64 0, i32 1, i32 2
  %maxPt.sroa.5.0.copyload = load double, double* %maxPt.sroa.5.0..sroa_idx64, align 8
  %5 = fsub fast <2 x double> %4, %2
  %sub6.i = fsub fast double %maxPt.sroa.5.0.copyload, %minPt.sroa.6.0.copyload
  %6 = fmul fast <2 x double> %5, <double 5.000000e-01, double 5.000000e-01>
  %div3.i = fmul fast double %sub6.i, 5.000000e-01
  %7 = fadd fast <2 x double> %6, %2
  %add6.i = fadd fast double %div3.i, %minPt.sroa.6.0.copyload
  %conv = sext i32 %n to i64
  %mul = shl nsw i64 %conv, 3
  %call = call noalias i8* @malloc(i64 %mul) #2
  %8 = bitcast i8* %call to %struct.vertex.29**
  %cmp85 = icmp sgt i32 %n, 0
  br i1 %cmp85, label %pfor.detach.lr.ph, label %sync.continue

pfor.detach.lr.ph:                                ; preds = %entry
  %9 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8 = shl i32 %9, 3
  %wide.trip.count = zext i32 %n to i64
  %10 = add nsw i64 %wide.trip.count, -1
  %11 = zext i32 %__cilkrts_wc8 to i64
  %12 = add nsw i64 %wide.trip.count, -2
  %13 = add nsw i64 %12, %11
  %14 = udiv i64 %13, %11
  %15 = icmp ult i64 %14, 2048
  %16 = select i1 %15, i64 %14, i64 2048
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE5gTreeEPPS5_i_pfor.detach.ls(i64 0, i64 %10, i64 %16, %struct.vertex.29** %vv, %struct.vertex.29** %8)
  br label %sync.continue

sync.continue:                                    ; preds = %entry, %pfor.detach.lr.ph
  %call9 = call i8* @_Znwm(i64 120) #22
  %17 = bitcast i8* %call9 to %class.gTreeNode.31*
  %18 = bitcast %class._point3d* %agg.tmp12 to <2 x double>*
  store <2 x double> %7, <2 x double>* %18, align 16
  %center.sroa.5.0..sroa_idx53 = getelementptr inbounds %class._point3d, %class._point3d* %agg.tmp12, i64 0, i32 2
  store double %add6.i, double* %center.sroa.5.0..sroa_idx53, align 16
  %19 = extractelement <2 x double> %5, i32 1
  %cmp.i.i = fcmp fast olt double %19, %sub6.i
  %20 = select i1 %cmp.i.i, double %sub6.i, double %19
  %21 = extractelement <2 x double> %5, i32 0
  %cmp.i3.i = fcmp fast olt double %21, %20
  %22 = select i1 %cmp.i3.i, double %20, double %21
  call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i(%class.gTreeNode.31* nonnull %17, %struct.vertex.29** %8, i64 %conv, %class._point3d* byval nonnull align 8 %agg.tmp12, double %22, %class.gTreeNode.31* null, i32 0)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %0) #2
  ret %class.gTreeNode.31* %17
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i(%class.gTreeNode.31* %this, %struct.vertex.29** %S.coerce0, i64 %S.coerce1, %class._point3d* byval align 8 %cnt, double %sz, %class.gTreeNode.31* %newNodes, i32 %numNewNodes) unnamed_addr #7 comdat align 2 {
entry:
  %offsets67 = alloca [8 x i32], align 16
  %agg.tmp96 = alloca %class._point3d, align 16
  %0 = bitcast %class.gTreeNode.31* %this to i8*
  %cnt.i220 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 2, i32 0
  store i32 0, i32* %cnt.i220, align 4, !tbaa !218
  %conv = trunc i64 %S.coerce1 to i32
  %count = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 3
  store i32 %conv, i32* %count, align 4, !tbaa !215
  %size = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 1
  store double %sz, double* %size, align 8, !tbaa !219
  %1 = bitcast %class._point3d* %cnt to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* nonnull %1, i64 24, i32 8, i1 false), !tbaa.struct !220
  %vertices = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 5
  %nodeMemory = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 6
  %conv.i = sitofp i32 %conv to double
  %2 = tail call fast double @llvm.log2.f64(double %conv.i) #2
  %div = fmul fast double %2, 0x3FD3A06D3A06D3A1
  %conv7 = fptosi double %div to i32
  %cmp = icmp sgt i32 %conv7, 1
  %cmp9 = icmp sgt i32 %conv, 65536
  %or.cond = and i1 %cmp9, %cmp
  %3 = bitcast %struct.vertex.29*** %vertices to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull %3, i8 0, i64 16, i32 8, i1 false)
  br i1 %or.cond, label %for.body.lr.ph, label %if.else

for.body.lr.ph:                                   ; preds = %entry
  %mul12 = mul nsw i32 %conv7, 3
  %shl13 = shl i32 1, %mul12
  %conv14 = sext i32 %shl13 to i64
  %mul15 = shl nsw i64 %conv14, 2
  %call16 = tail call noalias i8* @malloc(i64 %mul15) #2
  %4 = bitcast i8* %call16 to i32*
  %tmpcast = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 0
  tail call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi(%struct.vertex.29** %S.coerce0, i32 %conv, i32 %shl13, i32 %conv7, double %sz, %class._point3d* byval nonnull align 8 %tmpcast, i32* %4)
  %5 = add i32 %conv7, -1
  %xtraiter = and i32 %conv7, 7
  %6 = icmp ult i32 %5, 7
  br i1 %6, label %for.cond.cleanup.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = sub i32 %conv7, %xtraiter
  br label %for.body

for.cond.cleanup.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %add.lcssa.ph = phi i32 [ undef, %for.body.lr.ph ], [ %add.7, %for.body ]
  %numNewNodes.addr.0240.unr = phi i32 [ 8, %for.body.lr.ph ], [ %add.7, %for.body ]
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod, label %for.cond.cleanup, label %for.body.epil.preheader

for.body.epil.preheader:                          ; preds = %for.cond.cleanup.unr-lcssa
  br label %for.body.epil

for.body.epil:                                    ; preds = %for.body.epil.preheader, %for.body.epil
  %numNewNodes.addr.0240.epil = phi i32 [ %add.epil, %for.body.epil ], [ %numNewNodes.addr.0240.unr, %for.body.epil.preheader ]
  %epil.iter = phi i32 [ %epil.iter.sub, %for.body.epil ], [ %xtraiter, %for.body.epil.preheader ]
  %shl26.epil = shl i32 %numNewNodes.addr.0240.epil, 3
  %add.epil = add nsw i32 %shl26.epil, 8
  %epil.iter.sub = add nsw i32 %epil.iter, -1
  %epil.iter.cmp = icmp eq i32 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond.cleanup, label %for.body.epil, !llvm.loop !221

for.cond.cleanup:                                 ; preds = %for.body.epil, %for.cond.cleanup.unr-lcssa
  %add.lcssa = phi i32 [ %add.lcssa.ph, %for.cond.cleanup.unr-lcssa ], [ %add.epil, %for.body.epil ]
  %phitmp = sext i32 %add.lcssa to i64
  %phitmp252 = mul nsw i64 %phitmp, 120
  %call32 = tail call noalias i8* @malloc(i64 %phitmp252) #2
  %7 = bitcast i8* %call32 to %class.gTreeNode.31*
  %8 = bitcast %class.gTreeNode.31** %nodeMemory to i8**
  store i8* %call32, i8** %8, align 8, !tbaa !222
  tail call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii(%class.gTreeNode.31* %this, %struct.vertex.29** %S.coerce0, i64 %S.coerce1, i32* %4, i32 %shl13, %class.gTreeNode.31* %7, %class.gTreeNode.31* %this, i32 0, i32 %conv7, i32 1)
  tail call void @free(i8* %call16) #2
  br label %if.end163

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %numNewNodes.addr.0240 = phi i32 [ 8, %for.body.lr.ph.new ], [ %add.7, %for.body ]
  %niter = phi i32 [ %unroll_iter, %for.body.lr.ph.new ], [ %niter.nsub.7, %for.body ]
  %add.6 = shl i32 %numNewNodes.addr.0240, 24
  %add.7 = add i32 %add.6, 19173960
  %niter.nsub.7 = add i32 %niter, -8
  %niter.ncmp.7 = icmp eq i32 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %for.cond.cleanup.unr-lcssa, label %for.body

if.else:                                          ; preds = %entry
  %cmp37 = icmp sgt i32 %conv, 16
  br i1 %cmp37, label %if.then38, label %if.else142

if.then38:                                        ; preds = %if.else
  %cmp42 = icmp slt i32 %numNewNodes, 8
  br i1 %cmp42, label %if.then43, label %if.end

if.then43:                                        ; preds = %if.then38
  %call60 = tail call noalias i8* @malloc(i64 960) #2
  %9 = bitcast i8* %call60 to %class.gTreeNode.31*
  %10 = bitcast %class.gTreeNode.31** %nodeMemory to i8**
  store i8* %call60, i8** %10, align 8, !tbaa !222
  br label %if.end

if.end:                                           ; preds = %if.then43, %if.then38
  %numNewNodes.addr.1 = phi i32 [ 8, %if.then43 ], [ %numNewNodes, %if.then38 ]
  %newNodes.addr.0 = phi %class.gTreeNode.31* [ %9, %if.then43 ], [ %newNodes, %if.then38 ]
  %11 = bitcast [8 x i32]* %offsets67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #2
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %offsets67, i64 0, i64 0
  %tmpcast251 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 0
  call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE15sortBlocksSmallEPPS5_iS1_Pi(%struct.vertex.29** %S.coerce0, i32 %conv, %class._point3d* byval nonnull align 8 %tmpcast251, i32* nonnull %arraydecay)
  %z.i = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 0, i32 2
  %newcenter.sroa.5.0..sroa_idx227 = getelementptr inbounds %class._point3d, %class._point3d* %agg.tmp96, i64 0, i32 2
  %sub104 = add nsw i32 %numNewNodes.addr.1, -8
  %12 = bitcast %class.gTreeNode.31* %this to <2 x double>*
  %13 = bitcast %class._point3d* %agg.tmp96 to <2 x double>*
  br label %for.body77

for.cond.cleanup76:                               ; preds = %cond.end
  %arrayidx134 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 4, i64 0
  %14 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx134, align 8, !tbaa !53
  %agg.tmp131.sroa.0.0..sroa_idx = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %14, i64 0, i32 2, i32 0
  %agg.tmp131.sroa.0.0.copyload = load i32, i32* %agg.tmp131.sroa.0.0..sroa_idx, align 4
  %15 = load i32, i32* %cnt.i220, align 4, !tbaa !218
  %add.i219 = add nsw i32 %15, %agg.tmp131.sroa.0.0.copyload
  store i32 %add.i219, i32* %cnt.i220, align 4
  %arrayidx134.1 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 4, i64 1
  %16 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx134.1, align 8, !tbaa !53
  %agg.tmp131.sroa.0.0..sroa_idx.1 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %16, i64 0, i32 2, i32 0
  %agg.tmp131.sroa.0.0.copyload.1 = load i32, i32* %agg.tmp131.sroa.0.0..sroa_idx.1, align 4
  %add.i219.1 = add nsw i32 %agg.tmp131.sroa.0.0.copyload.1, %add.i219
  store i32 %add.i219.1, i32* %cnt.i220, align 4
  %arrayidx134.2 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 4, i64 2
  %17 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx134.2, align 8, !tbaa !53
  %agg.tmp131.sroa.0.0..sroa_idx.2 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %17, i64 0, i32 2, i32 0
  %agg.tmp131.sroa.0.0.copyload.2 = load i32, i32* %agg.tmp131.sroa.0.0..sroa_idx.2, align 4
  %add.i219.2 = add nsw i32 %agg.tmp131.sroa.0.0.copyload.2, %add.i219.1
  store i32 %add.i219.2, i32* %cnt.i220, align 4
  %arrayidx134.3 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 4, i64 3
  %18 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx134.3, align 8, !tbaa !53
  %agg.tmp131.sroa.0.0..sroa_idx.3 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %18, i64 0, i32 2, i32 0
  %agg.tmp131.sroa.0.0.copyload.3 = load i32, i32* %agg.tmp131.sroa.0.0..sroa_idx.3, align 4
  %add.i219.3 = add nsw i32 %agg.tmp131.sroa.0.0.copyload.3, %add.i219.2
  store i32 %add.i219.3, i32* %cnt.i220, align 4
  %arrayidx134.4 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 4, i64 4
  %19 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx134.4, align 8, !tbaa !53
  %agg.tmp131.sroa.0.0..sroa_idx.4 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %19, i64 0, i32 2, i32 0
  %agg.tmp131.sroa.0.0.copyload.4 = load i32, i32* %agg.tmp131.sroa.0.0..sroa_idx.4, align 4
  %add.i219.4 = add nsw i32 %agg.tmp131.sroa.0.0.copyload.4, %add.i219.3
  store i32 %add.i219.4, i32* %cnt.i220, align 4
  %arrayidx134.5 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 4, i64 5
  %20 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx134.5, align 8, !tbaa !53
  %agg.tmp131.sroa.0.0..sroa_idx.5 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %20, i64 0, i32 2, i32 0
  %agg.tmp131.sroa.0.0.copyload.5 = load i32, i32* %agg.tmp131.sroa.0.0..sroa_idx.5, align 4
  %add.i219.5 = add nsw i32 %agg.tmp131.sroa.0.0.copyload.5, %add.i219.4
  store i32 %add.i219.5, i32* %cnt.i220, align 4
  %arrayidx134.6 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 4, i64 6
  %21 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx134.6, align 8, !tbaa !53
  %agg.tmp131.sroa.0.0..sroa_idx.6 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %21, i64 0, i32 2, i32 0
  %agg.tmp131.sroa.0.0.copyload.6 = load i32, i32* %agg.tmp131.sroa.0.0..sroa_idx.6, align 4
  %add.i219.6 = add nsw i32 %agg.tmp131.sroa.0.0.copyload.6, %add.i219.5
  store i32 %add.i219.6, i32* %cnt.i220, align 4
  %arrayidx134.7 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 4, i64 7
  %22 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx134.7, align 8, !tbaa !53
  %agg.tmp131.sroa.0.0..sroa_idx.7 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %22, i64 0, i32 2, i32 0
  %agg.tmp131.sroa.0.0.copyload.7 = load i32, i32* %agg.tmp131.sroa.0.0..sroa_idx.7, align 4
  %add.i219.7 = add nsw i32 %agg.tmp131.sroa.0.0.copyload.7, %add.i219.6
  store i32 %add.i219.7, i32* %cnt.i220, align 4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #2
  br label %if.end163

for.body77:                                       ; preds = %cond.end, %if.end
  %indvars.iv = phi i64 [ 0, %if.end ], [ %indvars.iv.next.pre-phi, %cond.end ]
  %usedNodes.0243 = phi i32 [ 0, %if.end ], [ %add120, %cond.end ]
  %cmp78 = icmp eq i64 %indvars.iv, 7
  br i1 %cmp78, label %cond.end, label %cond.false

cond.false:                                       ; preds = %for.body77
  %23 = add nuw nsw i64 %indvars.iv, 1
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %offsets67, i64 0, i64 %23
  %24 = load i32, i32* %arrayidx, align 4, !tbaa !59
  br label %cond.end

cond.end:                                         ; preds = %for.body77, %cond.false
  %indvars.iv.next.pre-phi = phi i64 [ %23, %cond.false ], [ 8, %for.body77 ]
  %.pre-phi = phi i32 [ %24, %cond.false ], [ %conv, %for.body77 ]
  %arrayidx83 = getelementptr inbounds [8 x i32], [8 x i32]* %offsets67, i64 0, i64 %indvars.iv
  %25 = load i32, i32* %arrayidx83, align 4, !tbaa !59
  %conv86 = sub i32 %.pre-phi, %25
  %idx.ext = sext i32 %25 to i64
  %add.ptr = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %S.coerce0, i64 %idx.ext
  %conv91 = sext i32 %conv86 to i64
  %26 = load double, double* %size, align 8, !tbaa !219
  %div94 = fmul fast double %26, 2.500000e-01
  %27 = trunc i64 %indvars.iv to i32
  %sub.i = fsub fast double -0.000000e+00, %div94
  %28 = load <2 x double>, <2 x double>* %12, align 8, !tbaa !18, !noalias !223
  %29 = insertelement <2 x i32> undef, i32 %27, i32 0
  %30 = shufflevector <2 x i32> %29, <2 x i32> undef, <2 x i32> zeroinitializer
  %31 = and <2 x i32> %30, <i32 1, i32 2>
  %32 = icmp eq <2 x i32> %31, zeroinitializer
  %33 = insertelement <2 x double> undef, double %sub.i, i32 0
  %34 = shufflevector <2 x double> %33, <2 x double> undef, <2 x i32> zeroinitializer
  %35 = insertelement <2 x double> undef, double %div94, i32 0
  %36 = shufflevector <2 x double> %35, <2 x double> undef, <2 x i32> zeroinitializer
  %37 = select <2 x i1> %32, <2 x double> %34, <2 x double> %36
  %38 = fadd fast <2 x double> %37, %28
  %39 = load double, double* %z.i, align 8, !tbaa !12, !noalias !223
  %and10.i = and i32 %27, 4
  %tobool11.i = icmp eq i32 %and10.i, 0
  %cond16.i = select i1 %tobool11.i, double %sub.i, double %div94
  %add17.i = fadd fast double %39, %cond16.i
  store <2 x double> %38, <2 x double>* %13, align 16
  store double %add17.i, double* %newcenter.sroa.5.0..sroa_idx227, align 16
  %div98 = fmul fast double %26, 5.000000e-01
  %idx.ext99 = sext i32 %usedNodes.0243 to i64
  %add.ptr100 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %newNodes.addr.0, i64 %idx.ext99
  %mul105 = mul nsw i32 %conv86, %sub104
  %40 = load i32, i32* %count, align 4, !tbaa !215
  %div107 = sdiv i32 %mul105, %40
  %add108 = add nsw i32 %div107, 1
  %call109 = call %class.gTreeNode.31* @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i(%struct.vertex.29** %add.ptr, i64 %conv91, %class._point3d* byval nonnull align 8 %agg.tmp96, double %div98, %class.gTreeNode.31* %add.ptr100, i32 %add108)
  %arrayidx111 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 4, i64 %indvars.iv
  store %class.gTreeNode.31* %call109, %class.gTreeNode.31** %arrayidx111, align 8, !tbaa !53
  %41 = load i32, i32* %count, align 4, !tbaa !215
  %div118 = sdiv i32 %mul105, %41
  %add119 = add i32 %usedNodes.0243, 1
  %add120 = add i32 %add119, %div118
  %exitcond248 = icmp eq i64 %indvars.iv.next.pre-phi, 8
  br i1 %exitcond248, label %for.cond.cleanup76, label %for.body77

if.else142:                                       ; preds = %if.else
  store %struct.vertex.29** %S.coerce0, %struct.vertex.29*** %vertices, align 8, !tbaa !226
  %cmp148244 = icmp sgt i32 %conv, 0
  br i1 %cmp148244, label %for.body150.lr.ph, label %if.end163

for.body150.lr.ph:                                ; preds = %if.else142
  store i32 %conv, i32* %cnt.i220, align 4
  br label %if.end163

if.end163:                                        ; preds = %if.else142, %for.body150.lr.ph, %for.cond.cleanup76, %for.cond.cleanup
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_(%"struct.std::pair.33"* noalias sret %agg.result, i32 %s, i32 %e, %struct.vertex.29** %g.coerce) local_unnamed_addr #7 comdat {
entry:
  %r = alloca %"struct.std::pair.33", align 8
  %sub = sub nsw i32 %e, %s
  %sub1 = add nsw i32 %sub, -1
  %div = sdiv i32 %sub1, 1024
  %add = add nsw i32 %div, 1
  %cmp = icmp slt i32 %sub, 1025
  br i1 %cmp, label %if.then, label %pfor.detach.lr.ph

if.then:                                          ; preds = %entry
  %idxprom.i.i = sext i32 %s to i64
  %arrayidx.i.i = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %g.coerce, i64 %idxprom.i.i
  %0 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx.i.i, align 8, !tbaa !53, !noalias !227
  %pt.i.i.i = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %0, i64 0, i32 1
  %1 = bitcast %"struct.std::pair.33"* %agg.result to i8*
  %2 = bitcast %class._point3d* %pt.i.i.i to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* nonnull %2, i64 24, i32 8, i1 false) #2, !tbaa.struct !220
  %second.i.i.i.i = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %agg.result, i64 0, i32 1
  %3 = bitcast %class._point3d* %second.i.i.i.i to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %3, i8* nonnull %2, i64 24, i32 8, i1 false) #2, !tbaa.struct !220
  %j.055.i = add nsw i32 %s, 1
  %cmp56.i = icmp slt i32 %j.055.i, %e
  br i1 %cmp56.i, label %for.body.lr.ph.i, label %cleanup

for.body.lr.ph.i:                                 ; preds = %if.then
  %agg.tmp.sroa.3.0..sroa_idx36.i = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %agg.result, i64 0, i32 0, i32 2
  %agg.tmp.sroa.4.0..sroa_idx37.i = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %agg.result, i64 0, i32 1, i32 0
  %agg.tmp.sroa.6.0..sroa_idx39.i = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %agg.result, i64 0, i32 1, i32 2
  %4 = bitcast %"struct.std::pair.33"* %agg.result to <2 x double>*
  %5 = load <2 x double>, <2 x double>* %4, align 8, !alias.scope !232
  %agg.tmp.sroa.3.0..sroa_idx36.promoted.i = load double, double* %agg.tmp.sroa.3.0..sroa_idx36.i, align 8, !alias.scope !232
  %6 = bitcast double* %agg.tmp.sroa.4.0..sroa_idx37.i to <2 x double>*
  %7 = load <2 x double>, <2 x double>* %6, align 8, !alias.scope !232
  %agg.tmp.sroa.6.0..sroa_idx39.promoted.i = load double, double* %agg.tmp.sroa.6.0..sroa_idx39.i, align 8, !alias.scope !232
  %8 = sext i32 %j.055.i to i64
  %9 = sub i32 3, %s
  %10 = add i32 %9, %e
  %11 = sub i32 -2, %s
  %12 = add i32 %11, %e
  %xtraiter = and i32 %10, 3
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body.i.prol.loopexit, label %for.body.i.prol.preheader

for.body.i.prol.preheader:                        ; preds = %for.body.lr.ph.i
  %13 = add nsw i32 %xtraiter, -1
  br label %for.body.i.prol

for.body.i.prol:                                  ; preds = %for.body.i.prol, %for.body.i.prol.preheader
  %indvars.iv.i.prol = phi i64 [ %8, %for.body.i.prol.preheader ], [ %indvars.iv.next.i.prol, %for.body.i.prol ]
  %14 = phi double [ %agg.tmp.sroa.6.0..sroa_idx39.promoted.i, %for.body.i.prol.preheader ], [ %26, %for.body.i.prol ]
  %15 = phi double [ %agg.tmp.sroa.3.0..sroa_idx36.promoted.i, %for.body.i.prol.preheader ], [ %23, %for.body.i.prol ]
  %16 = phi <2 x double> [ %5, %for.body.i.prol.preheader ], [ %22, %for.body.i.prol ]
  %17 = phi <2 x double> [ %7, %for.body.i.prol.preheader ], [ %25, %for.body.i.prol ]
  %prol.iter = phi i32 [ %xtraiter, %for.body.i.prol.preheader ], [ %prol.iter.sub, %for.body.i.prol ]
  %arrayidx.i10.i.prol = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %g.coerce, i64 %indvars.iv.i.prol
  %18 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx.i10.i.prol, align 8, !tbaa !53, !noalias !233
  %agg.tmp1.sroa.0.0..sroa_idx.i.prol = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %18, i64 0, i32 1, i32 0
  %19 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i.prol to <2 x double>*
  %20 = load <2 x double>, <2 x double>* %19, align 8, !noalias !232
  %agg.tmp1.sroa.3.0..sroa_idx52.i.prol = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %18, i64 0, i32 1, i32 2
  %agg.tmp1.sroa.3.0.copyload.i.prol = load double, double* %agg.tmp1.sroa.3.0..sroa_idx52.i.prol, align 8, !noalias !232
  %21 = fcmp fast olt <2 x double> %20, %16
  %22 = select <2 x i1> %21, <2 x double> %20, <2 x double> %16
  %cmp.i7.i.i.i.prol = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i.prol, %15
  %23 = select i1 %cmp.i7.i.i.i.prol, double %agg.tmp1.sroa.3.0.copyload.i.prol, double %15
  %24 = fcmp fast olt <2 x double> %17, %20
  %25 = select <2 x i1> %24, <2 x double> %20, <2 x double> %17
  %cmp.i7.i16.i.i.prol = fcmp fast olt double %14, %agg.tmp1.sroa.3.0.copyload.i.prol
  %26 = select i1 %cmp.i7.i16.i.i.prol, double %agg.tmp1.sroa.3.0.copyload.i.prol, double %14
  %indvars.iv.next.i.prol = add nsw i64 %indvars.iv.i.prol, 1
  %prol.iter.sub = add nsw i32 %prol.iter, -1
  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body.i.prol.loopexit.loopexit, label %for.body.i.prol, !llvm.loop !236

for.body.i.prol.loopexit.loopexit:                ; preds = %for.body.i.prol
  %27 = zext i32 %13 to i64
  %28 = add nsw i64 %8, 1
  %29 = add nsw i64 %28, %27
  br label %for.body.i.prol.loopexit

for.body.i.prol.loopexit:                         ; preds = %for.body.i.prol.loopexit.loopexit, %for.body.lr.ph.i
  %.lcssa176.unr = phi <2 x double> [ undef, %for.body.lr.ph.i ], [ %22, %for.body.i.prol.loopexit.loopexit ]
  %.lcssa175.unr = phi double [ undef, %for.body.lr.ph.i ], [ %23, %for.body.i.prol.loopexit.loopexit ]
  %.lcssa174.unr = phi <2 x double> [ undef, %for.body.lr.ph.i ], [ %25, %for.body.i.prol.loopexit.loopexit ]
  %.lcssa.unr = phi double [ undef, %for.body.lr.ph.i ], [ %26, %for.body.i.prol.loopexit.loopexit ]
  %indvars.iv.i.unr = phi i64 [ %8, %for.body.lr.ph.i ], [ %29, %for.body.i.prol.loopexit.loopexit ]
  %.unr = phi double [ %agg.tmp.sroa.6.0..sroa_idx39.promoted.i, %for.body.lr.ph.i ], [ %26, %for.body.i.prol.loopexit.loopexit ]
  %.unr181 = phi double [ %agg.tmp.sroa.3.0..sroa_idx36.promoted.i, %for.body.lr.ph.i ], [ %23, %for.body.i.prol.loopexit.loopexit ]
  %.unr182 = phi <2 x double> [ %5, %for.body.lr.ph.i ], [ %22, %for.body.i.prol.loopexit.loopexit ]
  %.unr183 = phi <2 x double> [ %7, %for.body.lr.ph.i ], [ %25, %for.body.i.prol.loopexit.loopexit ]
  %30 = icmp ult i32 %12, 3
  br i1 %30, label %for.cond.for.cond.cleanup_crit_edge.i, label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %for.body.i.prol.loopexit
  br label %for.body.i

for.cond.for.cond.cleanup_crit_edge.i:            ; preds = %for.body.i, %for.body.i.prol.loopexit
  %.lcssa176 = phi <2 x double> [ %.lcssa176.unr, %for.body.i.prol.loopexit ], [ %66, %for.body.i ]
  %.lcssa175 = phi double [ %.lcssa175.unr, %for.body.i.prol.loopexit ], [ %67, %for.body.i ]
  %.lcssa174 = phi <2 x double> [ %.lcssa174.unr, %for.body.i.prol.loopexit ], [ %69, %for.body.i ]
  %.lcssa = phi double [ %.lcssa.unr, %for.body.i.prol.loopexit ], [ %70, %for.body.i ]
  store <2 x double> %.lcssa176, <2 x double>* %4, align 8, !alias.scope !232
  store double %.lcssa175, double* %agg.tmp.sroa.3.0..sroa_idx36.i, align 8, !alias.scope !232
  store <2 x double> %.lcssa174, <2 x double>* %6, align 8, !alias.scope !232
  store double %.lcssa, double* %agg.tmp.sroa.6.0..sroa_idx39.i, align 8, !alias.scope !232
  br label %cleanup

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body.i ], [ %indvars.iv.i.unr, %for.body.i.preheader ]
  %31 = phi double [ %70, %for.body.i ], [ %.unr, %for.body.i.preheader ]
  %32 = phi double [ %67, %for.body.i ], [ %.unr181, %for.body.i.preheader ]
  %33 = phi <2 x double> [ %66, %for.body.i ], [ %.unr182, %for.body.i.preheader ]
  %34 = phi <2 x double> [ %69, %for.body.i ], [ %.unr183, %for.body.i.preheader ]
  %arrayidx.i10.i = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %g.coerce, i64 %indvars.iv.i
  %35 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx.i10.i, align 8, !tbaa !53, !noalias !233
  %agg.tmp1.sroa.0.0..sroa_idx.i = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %35, i64 0, i32 1, i32 0
  %36 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i to <2 x double>*
  %37 = load <2 x double>, <2 x double>* %36, align 8, !noalias !232
  %agg.tmp1.sroa.3.0..sroa_idx52.i = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %35, i64 0, i32 1, i32 2
  %agg.tmp1.sroa.3.0.copyload.i = load double, double* %agg.tmp1.sroa.3.0..sroa_idx52.i, align 8, !noalias !232
  %38 = fcmp fast olt <2 x double> %37, %33
  %39 = select <2 x i1> %38, <2 x double> %37, <2 x double> %33
  %cmp.i7.i.i.i = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i, %32
  %40 = select i1 %cmp.i7.i.i.i, double %agg.tmp1.sroa.3.0.copyload.i, double %32
  %41 = fcmp fast olt <2 x double> %34, %37
  %42 = select <2 x i1> %41, <2 x double> %37, <2 x double> %34
  %cmp.i7.i16.i.i = fcmp fast olt double %31, %agg.tmp1.sroa.3.0.copyload.i
  %43 = select i1 %cmp.i7.i16.i.i, double %agg.tmp1.sroa.3.0.copyload.i, double %31
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, 1
  %arrayidx.i10.i.1 = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %g.coerce, i64 %indvars.iv.next.i
  %44 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx.i10.i.1, align 8, !tbaa !53, !noalias !233
  %agg.tmp1.sroa.0.0..sroa_idx.i.1 = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %44, i64 0, i32 1, i32 0
  %45 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i.1 to <2 x double>*
  %46 = load <2 x double>, <2 x double>* %45, align 8, !noalias !232
  %agg.tmp1.sroa.3.0..sroa_idx52.i.1 = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %44, i64 0, i32 1, i32 2
  %agg.tmp1.sroa.3.0.copyload.i.1 = load double, double* %agg.tmp1.sroa.3.0..sroa_idx52.i.1, align 8, !noalias !232
  %47 = fcmp fast olt <2 x double> %46, %39
  %48 = select <2 x i1> %47, <2 x double> %46, <2 x double> %39
  %cmp.i7.i.i.i.1 = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i.1, %40
  %49 = select i1 %cmp.i7.i.i.i.1, double %agg.tmp1.sroa.3.0.copyload.i.1, double %40
  %50 = fcmp fast olt <2 x double> %42, %46
  %51 = select <2 x i1> %50, <2 x double> %46, <2 x double> %42
  %cmp.i7.i16.i.i.1 = fcmp fast olt double %43, %agg.tmp1.sroa.3.0.copyload.i.1
  %52 = select i1 %cmp.i7.i16.i.i.1, double %agg.tmp1.sroa.3.0.copyload.i.1, double %43
  %indvars.iv.next.i.1 = add nsw i64 %indvars.iv.i, 2
  %arrayidx.i10.i.2 = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %g.coerce, i64 %indvars.iv.next.i.1
  %53 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx.i10.i.2, align 8, !tbaa !53, !noalias !233
  %agg.tmp1.sroa.0.0..sroa_idx.i.2 = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %53, i64 0, i32 1, i32 0
  %54 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i.2 to <2 x double>*
  %55 = load <2 x double>, <2 x double>* %54, align 8, !noalias !232
  %agg.tmp1.sroa.3.0..sroa_idx52.i.2 = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %53, i64 0, i32 1, i32 2
  %agg.tmp1.sroa.3.0.copyload.i.2 = load double, double* %agg.tmp1.sroa.3.0..sroa_idx52.i.2, align 8, !noalias !232
  %56 = fcmp fast olt <2 x double> %55, %48
  %57 = select <2 x i1> %56, <2 x double> %55, <2 x double> %48
  %cmp.i7.i.i.i.2 = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i.2, %49
  %58 = select i1 %cmp.i7.i.i.i.2, double %agg.tmp1.sroa.3.0.copyload.i.2, double %49
  %59 = fcmp fast olt <2 x double> %51, %55
  %60 = select <2 x i1> %59, <2 x double> %55, <2 x double> %51
  %cmp.i7.i16.i.i.2 = fcmp fast olt double %52, %agg.tmp1.sroa.3.0.copyload.i.2
  %61 = select i1 %cmp.i7.i16.i.i.2, double %agg.tmp1.sroa.3.0.copyload.i.2, double %52
  %indvars.iv.next.i.2 = add nsw i64 %indvars.iv.i, 3
  %arrayidx.i10.i.3 = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %g.coerce, i64 %indvars.iv.next.i.2
  %62 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx.i10.i.3, align 8, !tbaa !53, !noalias !233
  %agg.tmp1.sroa.0.0..sroa_idx.i.3 = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %62, i64 0, i32 1, i32 0
  %63 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i.3 to <2 x double>*
  %64 = load <2 x double>, <2 x double>* %63, align 8, !noalias !232
  %agg.tmp1.sroa.3.0..sroa_idx52.i.3 = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %62, i64 0, i32 1, i32 2
  %agg.tmp1.sroa.3.0.copyload.i.3 = load double, double* %agg.tmp1.sroa.3.0..sroa_idx52.i.3, align 8, !noalias !232
  %65 = fcmp fast olt <2 x double> %64, %57
  %66 = select <2 x i1> %65, <2 x double> %64, <2 x double> %57
  %cmp.i7.i.i.i.3 = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i.3, %58
  %67 = select i1 %cmp.i7.i.i.i.3, double %agg.tmp1.sroa.3.0.copyload.i.3, double %58
  %68 = fcmp fast olt <2 x double> %60, %64
  %69 = select <2 x i1> %68, <2 x double> %64, <2 x double> %60
  %cmp.i7.i16.i.i.3 = fcmp fast olt double %61, %agg.tmp1.sroa.3.0.copyload.i.3
  %70 = select i1 %cmp.i7.i16.i.i.3, double %agg.tmp1.sroa.3.0.copyload.i.3, double %61
  %indvars.iv.next.i.3 = add nsw i64 %indvars.iv.i, 4
  %lftr.wideiv.i.3 = trunc i64 %indvars.iv.next.i.3 to i32
  %exitcond.i.3 = icmp eq i32 %lftr.wideiv.i.3, %e
  br i1 %exitcond.i.3, label %for.cond.for.cond.cleanup_crit_edge.i, label %for.body.i

pfor.detach.lr.ph:                                ; preds = %entry
  %71 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8 = shl i32 %71, 3
  %mulconv = mul nsw i32 %add, 48
  %mul = sext i32 %mulconv to i64
  %call = tail call noalias i8* @malloc(i64 %mul) #2
  %72 = bitcast i8* %call to %"struct.std::pair.33"*
  %73 = sext i32 %s to i64
  %74 = sext i32 %e to i64
  %75 = sext i32 %div to i64
  %76 = xor i32 %s, 3
  %77 = sub i32 -2, %s
  %78 = add nsw i64 %73, 2
  %79 = icmp sgt i64 %75, 0
  %smax = select i1 %79, i64 %75, i64 0
  %80 = zext i32 %__cilkrts_wc8 to i64
  %81 = add nsw i64 %smax, -1
  %82 = add nsw i64 %81, %80
  %83 = udiv i64 %82, %80
  %84 = icmp ult i64 %83, 2048
  %85 = select i1 %84, i64 %83, i64 2048
  tail call fastcc void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2__pfor.detach.ls(i64 0, i64 %smax, i64 %85, i64 %78, i32 %77, i64 %73, i64 %74, i32 %e, %struct.vertex.29** %g.coerce, i32 %76, %"struct.std::pair.33"* %72)
  %86 = bitcast %"struct.std::pair.33"* %r to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %86) #2
  call void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_(%"struct.std::pair.33"* nonnull sret %r, i32 0, i32 %add, %"struct.std::pair.33"* %72)
  call void @free(i8* %call) #2
  %87 = bitcast %"struct.std::pair.33"* %agg.result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* nonnull %86, i64 48, i32 8, i1 false), !tbaa.struct !237
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %86) #2
  br label %cleanup

cleanup:                                          ; preds = %for.cond.for.cond.cleanup_crit_edge.i, %if.then, %pfor.detach.lr.ph
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_(%"struct.std::pair.33"* noalias sret %agg.result, i32 %s, i32 %e, %"struct.std::pair.33"* %g.coerce) local_unnamed_addr #7 comdat {
entry:
  %r = alloca %"struct.std::pair.33", align 8
  %sub = sub nsw i32 %e, %s
  %sub1 = add nsw i32 %sub, -1
  %div = sdiv i32 %sub1, 1024
  %add = add nsw i32 %div, 1
  %cmp = icmp slt i32 %sub, 1025
  br i1 %cmp, label %if.then, label %pfor.detach.lr.ph

if.then:                                          ; preds = %entry
  %idxprom.i.i = sext i32 %s to i64
  %arrayidx.i.i = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %idxprom.i.i
  %0 = bitcast %"struct.std::pair.33"* %agg.result to i8*
  %1 = bitcast %"struct.std::pair.33"* %arrayidx.i.i to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 48, i32 8, i1 false) #2, !tbaa.struct !237
  %j.054.i = add nsw i32 %s, 1
  %cmp55.i = icmp slt i32 %j.054.i, %e
  br i1 %cmp55.i, label %for.body.lr.ph.i, label %cleanup

for.body.lr.ph.i:                                 ; preds = %if.then
  %agg.tmp.sroa.3.0..sroa_idx34.i = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %agg.result, i64 0, i32 0, i32 2
  %agg.tmp.sroa.4.0..sroa_idx35.i = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %agg.result, i64 0, i32 1, i32 0
  %agg.tmp.sroa.6.0..sroa_idx37.i = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %agg.result, i64 0, i32 1, i32 2
  %2 = bitcast %"struct.std::pair.33"* %agg.result to <2 x double>*
  %3 = load <2 x double>, <2 x double>* %2, align 8, !alias.scope !238
  %agg.tmp.sroa.3.0..sroa_idx34.promoted.i = load double, double* %agg.tmp.sroa.3.0..sroa_idx34.i, align 8, !alias.scope !238
  %4 = bitcast double* %agg.tmp.sroa.4.0..sroa_idx35.i to <2 x double>*
  %5 = load <2 x double>, <2 x double>* %4, align 8, !alias.scope !238
  %agg.tmp.sroa.6.0..sroa_idx37.promoted.i = load double, double* %agg.tmp.sroa.6.0..sroa_idx37.i, align 8, !alias.scope !238
  %6 = sext i32 %j.054.i to i64
  %7 = sub i32 1, %s
  %8 = add i32 %7, %e
  %9 = add i32 %e, -2
  %xtraiter = and i32 %8, 1
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body.i.prol.loopexit, label %for.body.i.prol

for.body.i.prol:                                  ; preds = %for.body.lr.ph.i
  %agg.tmp1.sroa.0.0..sroa_idx.i.prol = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %6, i32 0, i32 0
  %10 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i.prol to <2 x double>*
  %11 = load <2 x double>, <2 x double>* %10, align 8, !noalias !238
  %agg.tmp1.sroa.3.0..sroa_idx50.i.prol = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %6, i32 0, i32 2
  %agg.tmp1.sroa.3.0.copyload.i.prol = load double, double* %agg.tmp1.sroa.3.0..sroa_idx50.i.prol, align 8, !noalias !238
  %agg.tmp1.sroa.4.0..sroa_idx51.i.prol = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %6, i32 1, i32 0
  %12 = bitcast double* %agg.tmp1.sroa.4.0..sroa_idx51.i.prol to <2 x double>*
  %13 = load <2 x double>, <2 x double>* %12, align 8, !noalias !238
  %agg.tmp1.sroa.6.0..sroa_idx53.i.prol = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %6, i32 1, i32 2
  %agg.tmp1.sroa.6.0.copyload.i.prol = load double, double* %agg.tmp1.sroa.6.0..sroa_idx53.i.prol, align 8, !noalias !238
  %14 = fcmp fast olt <2 x double> %11, %3
  %15 = select <2 x i1> %14, <2 x double> %11, <2 x double> %3
  %cmp.i7.i.i.i.prol = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i.prol, %agg.tmp.sroa.3.0..sroa_idx34.promoted.i
  %16 = select i1 %cmp.i7.i.i.i.prol, double %agg.tmp1.sroa.3.0.copyload.i.prol, double %agg.tmp.sroa.3.0..sroa_idx34.promoted.i
  %17 = fcmp fast olt <2 x double> %5, %13
  %18 = select <2 x i1> %17, <2 x double> %13, <2 x double> %5
  %cmp.i7.i16.i.i.prol = fcmp fast olt double %agg.tmp.sroa.6.0..sroa_idx37.promoted.i, %agg.tmp1.sroa.6.0.copyload.i.prol
  %19 = select i1 %cmp.i7.i16.i.i.prol, double %agg.tmp1.sroa.6.0.copyload.i.prol, double %agg.tmp.sroa.6.0..sroa_idx37.promoted.i
  %indvars.iv.next.i.prol = add nsw i64 %6, 1
  br label %for.body.i.prol.loopexit

for.body.i.prol.loopexit:                         ; preds = %for.body.lr.ph.i, %for.body.i.prol
  %.lcssa173.unr = phi <2 x double> [ undef, %for.body.lr.ph.i ], [ %15, %for.body.i.prol ]
  %.lcssa172.unr = phi double [ undef, %for.body.lr.ph.i ], [ %16, %for.body.i.prol ]
  %.lcssa171.unr = phi <2 x double> [ undef, %for.body.lr.ph.i ], [ %18, %for.body.i.prol ]
  %.lcssa.unr = phi double [ undef, %for.body.lr.ph.i ], [ %19, %for.body.i.prol ]
  %indvars.iv.i.unr = phi i64 [ %6, %for.body.lr.ph.i ], [ %indvars.iv.next.i.prol, %for.body.i.prol ]
  %.unr = phi double [ %agg.tmp.sroa.6.0..sroa_idx37.promoted.i, %for.body.lr.ph.i ], [ %19, %for.body.i.prol ]
  %.unr178 = phi double [ %agg.tmp.sroa.3.0..sroa_idx34.promoted.i, %for.body.lr.ph.i ], [ %16, %for.body.i.prol ]
  %.unr179 = phi <2 x double> [ %3, %for.body.lr.ph.i ], [ %15, %for.body.i.prol ]
  %.unr180 = phi <2 x double> [ %5, %for.body.lr.ph.i ], [ %18, %for.body.i.prol ]
  %20 = icmp eq i32 %9, %s
  br i1 %20, label %for.cond.for.cond.cleanup_crit_edge.i, label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %for.body.i.prol.loopexit
  br label %for.body.i

for.cond.for.cond.cleanup_crit_edge.i:            ; preds = %for.body.i, %for.body.i.prol.loopexit
  %.lcssa173 = phi <2 x double> [ %.lcssa173.unr, %for.body.i.prol.loopexit ], [ %40, %for.body.i ]
  %.lcssa172 = phi double [ %.lcssa172.unr, %for.body.i.prol.loopexit ], [ %41, %for.body.i ]
  %.lcssa171 = phi <2 x double> [ %.lcssa171.unr, %for.body.i.prol.loopexit ], [ %43, %for.body.i ]
  %.lcssa = phi double [ %.lcssa.unr, %for.body.i.prol.loopexit ], [ %44, %for.body.i ]
  store <2 x double> %.lcssa173, <2 x double>* %2, align 8, !alias.scope !238
  store double %.lcssa172, double* %agg.tmp.sroa.3.0..sroa_idx34.i, align 8, !alias.scope !238
  store <2 x double> %.lcssa171, <2 x double>* %4, align 8, !alias.scope !238
  store double %.lcssa, double* %agg.tmp.sroa.6.0..sroa_idx37.i, align 8, !alias.scope !238
  br label %cleanup

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.1, %for.body.i ], [ %indvars.iv.i.unr, %for.body.i.preheader ]
  %21 = phi double [ %44, %for.body.i ], [ %.unr, %for.body.i.preheader ]
  %22 = phi double [ %41, %for.body.i ], [ %.unr178, %for.body.i.preheader ]
  %23 = phi <2 x double> [ %40, %for.body.i ], [ %.unr179, %for.body.i.preheader ]
  %24 = phi <2 x double> [ %43, %for.body.i ], [ %.unr180, %for.body.i.preheader ]
  %agg.tmp1.sroa.0.0..sroa_idx.i = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %indvars.iv.i, i32 0, i32 0
  %25 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i to <2 x double>*
  %26 = load <2 x double>, <2 x double>* %25, align 8, !noalias !238
  %agg.tmp1.sroa.3.0..sroa_idx50.i = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %indvars.iv.i, i32 0, i32 2
  %agg.tmp1.sroa.3.0.copyload.i = load double, double* %agg.tmp1.sroa.3.0..sroa_idx50.i, align 8, !noalias !238
  %agg.tmp1.sroa.4.0..sroa_idx51.i = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %indvars.iv.i, i32 1, i32 0
  %27 = bitcast double* %agg.tmp1.sroa.4.0..sroa_idx51.i to <2 x double>*
  %28 = load <2 x double>, <2 x double>* %27, align 8, !noalias !238
  %agg.tmp1.sroa.6.0..sroa_idx53.i = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %indvars.iv.i, i32 1, i32 2
  %agg.tmp1.sroa.6.0.copyload.i = load double, double* %agg.tmp1.sroa.6.0..sroa_idx53.i, align 8, !noalias !238
  %29 = fcmp fast olt <2 x double> %26, %23
  %30 = select <2 x i1> %29, <2 x double> %26, <2 x double> %23
  %cmp.i7.i.i.i = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i, %22
  %31 = select i1 %cmp.i7.i.i.i, double %agg.tmp1.sroa.3.0.copyload.i, double %22
  %32 = fcmp fast olt <2 x double> %24, %28
  %33 = select <2 x i1> %32, <2 x double> %28, <2 x double> %24
  %cmp.i7.i16.i.i = fcmp fast olt double %21, %agg.tmp1.sroa.6.0.copyload.i
  %34 = select i1 %cmp.i7.i16.i.i, double %agg.tmp1.sroa.6.0.copyload.i, double %21
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, 1
  %agg.tmp1.sroa.0.0..sroa_idx.i.1 = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %indvars.iv.next.i, i32 0, i32 0
  %35 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i.1 to <2 x double>*
  %36 = load <2 x double>, <2 x double>* %35, align 8, !noalias !238
  %agg.tmp1.sroa.3.0..sroa_idx50.i.1 = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %indvars.iv.next.i, i32 0, i32 2
  %agg.tmp1.sroa.3.0.copyload.i.1 = load double, double* %agg.tmp1.sroa.3.0..sroa_idx50.i.1, align 8, !noalias !238
  %agg.tmp1.sroa.4.0..sroa_idx51.i.1 = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %indvars.iv.next.i, i32 1, i32 0
  %37 = bitcast double* %agg.tmp1.sroa.4.0..sroa_idx51.i.1 to <2 x double>*
  %38 = load <2 x double>, <2 x double>* %37, align 8, !noalias !238
  %agg.tmp1.sroa.6.0..sroa_idx53.i.1 = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %indvars.iv.next.i, i32 1, i32 2
  %agg.tmp1.sroa.6.0.copyload.i.1 = load double, double* %agg.tmp1.sroa.6.0..sroa_idx53.i.1, align 8, !noalias !238
  %39 = fcmp fast olt <2 x double> %36, %30
  %40 = select <2 x i1> %39, <2 x double> %36, <2 x double> %30
  %cmp.i7.i.i.i.1 = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i.1, %31
  %41 = select i1 %cmp.i7.i.i.i.1, double %agg.tmp1.sroa.3.0.copyload.i.1, double %31
  %42 = fcmp fast olt <2 x double> %33, %38
  %43 = select <2 x i1> %42, <2 x double> %38, <2 x double> %33
  %cmp.i7.i16.i.i.1 = fcmp fast olt double %34, %agg.tmp1.sroa.6.0.copyload.i.1
  %44 = select i1 %cmp.i7.i16.i.i.1, double %agg.tmp1.sroa.6.0.copyload.i.1, double %34
  %indvars.iv.next.i.1 = add nsw i64 %indvars.iv.i, 2
  %lftr.wideiv.i.1 = trunc i64 %indvars.iv.next.i.1 to i32
  %exitcond.i.1 = icmp eq i32 %lftr.wideiv.i.1, %e
  br i1 %exitcond.i.1, label %for.cond.for.cond.cleanup_crit_edge.i, label %for.body.i

pfor.detach.lr.ph:                                ; preds = %entry
  %45 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8 = shl i32 %45, 3
  %mulconv = mul nsw i32 %add, 48
  %mul = sext i32 %mulconv to i64
  %call = tail call noalias i8* @malloc(i64 %mul) #2
  %46 = bitcast i8* %call to %"struct.std::pair.33"*
  %47 = sext i32 %s to i64
  %48 = sext i32 %e to i64
  %49 = sext i32 %div to i64
  %50 = xor i32 %s, 1
  %51 = sub i32 -2, %s
  %52 = icmp sgt i64 %49, 0
  %smax = select i1 %52, i64 %49, i64 0
  %53 = zext i32 %__cilkrts_wc8 to i64
  %54 = add nsw i64 %smax, -1
  %55 = add nsw i64 %54, %53
  %56 = udiv i64 %55, %53
  %57 = icmp ult i64 %56, 2048
  %58 = select i1 %57, i64 %56, i64 2048
  tail call fastcc void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2__pfor.detach.ls(i64 0, i64 %smax, i64 %58, i32 %51, i64 %47, i64 %48, i32 %e, %"struct.std::pair.33"* %g.coerce, i32 %50, %"struct.std::pair.33"* %46)
  %59 = bitcast %"struct.std::pair.33"* %r to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %59) #2
  call void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_(%"struct.std::pair.33"* nonnull sret %r, i32 0, i32 %add, %"struct.std::pair.33"* %46)
  call void @free(i8* %call) #2
  %60 = bitcast %"struct.std::pair.33"* %agg.result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %60, i8* nonnull %59, i64 48, i32 8, i1 false), !tbaa.struct !237
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %59) #2
  br label %cleanup

cleanup:                                          ; preds = %for.cond.for.cond.cleanup_crit_edge.i, %if.then, %pfor.detach.lr.ph
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi(%struct.vertex.29** %S, i32 %count, i32 %quadrants, i32 %logdivs, double %size, %class._point3d* byval align 8 %center, i32* %offsets) local_unnamed_addr #7 comdat align 2 {
entry:
  %0 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8133 = shl i32 %0, 3
  %conv = sext i32 %count to i64
  %mul = shl nsw i64 %conv, 4
  %call = tail call noalias i8* @malloc(i64 %mul) #2
  %1 = bitcast i8* %call to %"struct.std::pair.38"*
  %shl = shl i32 1, %logdivs
  %div2.neg.neg = fmul fast double %size, 5.000000e-01
  %cmp94 = icmp sgt i32 %count, 0
  br i1 %cmp94, label %pfor.detach.lr.ph, label %sync.continue

pfor.detach.lr.ph:                                ; preds = %entry
  %cmp75.i = icmp sgt i32 %logdivs, 0
  %wide.trip.count99 = zext i32 %count to i64
  br i1 %cmp75.i, label %pfor.detach.us.preheader, label %pfor.detach.preheader

pfor.detach.preheader:                            ; preds = %pfor.detach.lr.ph
  %2 = add nsw i64 %wide.trip.count99, -1
  %3 = zext i32 %__cilkrts_wc8133 to i64
  %4 = add nsw i64 %wide.trip.count99, -2
  %5 = add nsw i64 %4, %3
  %6 = udiv i64 %5, %3
  %7 = icmp ult i64 %6, 2048
  %8 = select i1 %7, i64 %6, i64 2048
  tail call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.ls(i64 0, i64 %2, i64 %8, %struct.vertex.29** %S, %"struct.std::pair.38"* %1)
  br label %sync.continue

pfor.detach.us.preheader:                         ; preds = %pfor.detach.lr.ph
  %z.i = getelementptr inbounds %class._point3d, %class._point3d* %center, i64 0, i32 2
  %9 = load double, double* %z.i, align 8, !tbaa !12, !noalias !241
  %add17.i.neg = fsub fast double %div2.neg.neg, %9
  %y.i = getelementptr inbounds %class._point3d, %class._point3d* %center, i64 0, i32 1
  %10 = load double, double* %y.i, align 8, !tbaa !11, !noalias !241
  %add9.i.neg = fsub fast double %div2.neg.neg, %10
  %sub3.i = add nsw i32 %shl, -1
  %conv1 = sitofp i32 %shl to double
  %div = fdiv fast double %size, %conv1
  %11 = fdiv fast double 1.000000e+00, %div
  %x.i = getelementptr inbounds %class._point3d, %class._point3d* %center, i64 0, i32 0
  %12 = load double, double* %x.i, align 8, !tbaa !6, !noalias !241
  %add.i.neg = fsub fast double %div2.neg.neg, %12
  %min.iters.check = icmp ult i32 %logdivs, 16
  %n.vec = and i32 %logdivs, -16
  %cmp.n = icmp eq i32 %n.vec, %logdivs
  %13 = add nsw i64 %wide.trip.count99, -1
  %14 = zext i32 %__cilkrts_wc8133 to i64
  %15 = add nsw i64 %wide.trip.count99, -2
  %16 = add nsw i64 %15, %14
  %17 = udiv i64 %16, %14
  %18 = icmp ult i64 %17, 2048
  %19 = select i1 %18, i64 %17, i64 2048
  tail call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.us.ls(i64 0, i64 %13, i64 %19, %struct.vertex.29** %S, double %add.i.neg, double %11, i32 %sub3.i, double %add9.i.neg, double %add17.i.neg, i1 %min.iters.check, i32 %n.vec, i1 %cmp.n, i32 %logdivs, %"struct.std::pair.38"* %1)
  br label %sync.continue

sync.continue:                                    ; preds = %entry, %pfor.detach.us.preheader, %pfor.detach.preheader
  %conv16 = sext i32 %quadrants to i64
  %cmp.i.i.i = icmp eq i32 %count, 2147483647
  %cond.i.i.i = select i1 %cmp.i.i.i, i64 8, i64 4
  %div.i.i.i = sdiv i64 %conv, 2048
  %add.i.i.i = add nsw i64 %div.i.i.i, 1
  %mul112.i.i.i = or i64 %cond.i.i.i, 16
  %add2.i.i.i = mul nsw i64 %mul112.i.i.i, %conv
  %mul3.i.i.i = shl nuw nsw i64 %cond.i.i.i, 8
  %mul4.i.i.i = mul nsw i64 %mul3.i.i.i, %add.i.i.i
  %add5.i.i.i = add nsw i64 %add2.i.i.i, %mul4.i.i.i
  %call1.i.i = tail call noalias i8* @malloc(i64 %add5.i.i.i) #2
  tail call void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1_(%"struct.std::pair.38"* %1, i32* %offsets, i64 %conv, i64 %conv16, i1 zeroext false, i8* %call1.i.i) #2
  tail call void @free(i8* %call1.i.i) #2
  br i1 %cmp94, label %pfor.detach29.lr.ph, label %sync.continue42

pfor.detach29.lr.ph:                              ; preds = %sync.continue
  %wide.trip.count = zext i32 %count to i64
  %20 = add nsw i64 %wide.trip.count, -1
  %21 = zext i32 %__cilkrts_wc8133 to i64
  %22 = add nsw i64 %wide.trip.count, -2
  %23 = add nsw i64 %22, %21
  %24 = udiv i64 %23, %21
  %25 = icmp ult i64 %24, 2048
  %26 = select i1 %25, i64 %24, i64 2048
  tail call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach29.ls(i64 0, i64 %20, i64 %26, %"struct.std::pair.38"* %1, %struct.vertex.29** %S)
  br label %sync.continue42

sync.continue42:                                  ; preds = %sync.continue, %pfor.detach29.lr.ph
  tail call void @free(i8* %call) #2
  ret void
}

; Function Attrs: nounwind stealable uwtable
define linkonce_odr void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii(%class.gTreeNode.31* %this, %struct.vertex.29** %S.coerce0, i64 %S.coerce1, i32* %offsets, i32 %quadrants, %class.gTreeNode.31* %newNodes, %class.gTreeNode.31* %parent, i32 %nodesToLeft, i32 %height, i32 %depth) local_unnamed_addr #15 comdat align 2 {
entry:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %entry
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %entry, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %entry ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %entry ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %__dnew.i.i.i.i.i = alloca i64, align 8
  %agg.tmp.i = alloca %"class.std::__cxx11::basic_string", align 8
  %agg.tmp2.i = alloca %class._point3d, align 16
  %count = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %parent, i64 0, i32 3
  store i32 0, i32* %count, align 4, !tbaa !215
  %cmp = icmp eq i32 %height, 1
  %size = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %parent, i64 0, i32 1
  %z.i = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %parent, i64 0, i32 0, i32 2
  %shl6 = shl i32 %nodesToLeft, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %__cilkrts_enter_frame_1.exit
  %sub = add nsw i32 %quadrants, -1
  %9 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp.i to i8*
  %10 = bitcast %class._point3d* %agg.tmp2.i to i8*
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp.i, i64 0, i32 2
  %12 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp.i to %union.anon.1**
  %13 = bitcast %union.anon.1* %11 to i8*
  %14 = bitcast i64* %__dnew.i.i.i.i.i to i8*
  %_M_p.i13.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp.i, i64 0, i32 0, i32 0
  %_M_allocated_capacity.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp.i, i64 0, i32 2, i32 0
  %_M_string_length.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp.i, i64 0, i32 1
  %agg.tmp22183.sroa.5.0..sroa_idx208 = getelementptr inbounds %class._point3d, %class._point3d* %agg.tmp2.i, i64 0, i32 2
  %15 = sext i32 %shl6 to i64
  %16 = bitcast %class.gTreeNode.31* %parent to <2 x double>*
  %17 = bitcast %class._point3d* %agg.tmp2.i to <2 x double>*
  br label %for.body

for.body:                                         ; preds = %_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit, %if.then
  %indvars.iv = phi i64 [ 0, %if.then ], [ %indvars.iv.next, %_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit ]
  %18 = load double, double* %size, align 8, !tbaa !219
  %div = fmul fast double %18, 2.500000e-01
  %19 = trunc i64 %indvars.iv to i32
  %sub.i = fsub fast double -0.000000e+00, %div
  %20 = load <2 x double>, <2 x double>* %16, align 8, !tbaa !18, !noalias !244
  %21 = insertelement <2 x i32> undef, i32 %19, i32 0
  %22 = shufflevector <2 x i32> %21, <2 x i32> undef, <2 x i32> zeroinitializer
  %23 = and <2 x i32> %22, <i32 1, i32 2>
  %24 = icmp eq <2 x i32> %23, zeroinitializer
  %25 = insertelement <2 x double> undef, double %sub.i, i32 0
  %26 = shufflevector <2 x double> %25, <2 x double> undef, <2 x i32> zeroinitializer
  %27 = insertelement <2 x double> undef, double %div, i32 0
  %28 = shufflevector <2 x double> %27, <2 x double> undef, <2 x i32> zeroinitializer
  %29 = select <2 x i1> %24, <2 x double> %26, <2 x double> %28
  %30 = fadd fast <2 x double> %29, %20
  %31 = load double, double* %z.i, align 8, !tbaa !12, !noalias !244
  %and10.i = and i32 %19, 4
  %tobool11.i = icmp eq i32 %and10.i, 0
  %cond16.i = select i1 %tobool11.i, double %sub.i, double %div
  %add17.i = fadd fast double %cond16.i, %31
  %32 = add nuw nsw i64 %indvars.iv, %15
  %33 = trunc i64 %32 to i32
  %cmp7 = icmp eq i32 %sub, %33
  br i1 %cmp7, label %cond.end, label %cond.false

cond.false:                                       ; preds = %for.body
  %34 = add nsw i64 %32, 1
  %arrayidx = getelementptr inbounds i32, i32* %offsets, i64 %34
  %35 = load i32, i32* %arrayidx, align 4, !tbaa !59
  %conv = sext i32 %35 to i64
  br label %cond.end

cond.end:                                         ; preds = %for.body, %cond.false
  %cond = phi i64 [ %conv, %cond.false ], [ %S.coerce1, %for.body ]
  %arrayidx10 = getelementptr inbounds i32, i32* %offsets, i64 %32
  %36 = load i32, i32* %arrayidx10, align 4, !tbaa !59
  %37 = trunc i64 %cond to i32
  %conv13 = sub i32 %37, %36
  %idx.ext = sext i32 %36 to i64
  %add.ptr = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %S.coerce0, i64 %idx.ext
  %conv17 = sext i32 %conv13 to i64
  %add.ptr19 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %newNodes, i64 %32
  %arrayidx21 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %parent, i64 0, i32 4, i64 %indvars.iv
  store %class.gTreeNode.31* %add.ptr19, %class.gTreeNode.31** %arrayidx21, align 8, !tbaa !53
  %div24 = fmul fast double %18, 5.000000e-01
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10)
  store %union.anon.1* %11, %union.anon.1** %12, align 8, !tbaa !47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #2
  store i64 17, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !49
  %call5.i.i.i.i.i = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp.i, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i.i, i64 0) #2
  store i8* %call5.i.i.i.i.i, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %38 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !49
  store i64 %38, i64* %_M_allocated_capacity.i.i.i.i.i.i, align 8, !tbaa !22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call5.i.i.i.i.i, i8* nonnull getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i64 17, i32 1, i1 false) #2
  store i64 %38, i64* %_M_string_length.i.i.i.i.i.i.i, align 8, !tbaa !52
  %39 = load i8*, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds i8, i8* %39, i64 %38
  store i8 0, i8* %arrayidx.i.i.i.i.i.i, align 1, !tbaa !22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #2
  %40 = load i8*, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %cmp.i.i.i.i = icmp eq i8* %40, %13
  br i1 %cmp.i.i.i.i, label %_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %cond.end
  call void @_ZdlPv(i8* %40) #2
  br label %_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit

_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit: ; preds = %cond.end, %if.then.i.i.i
  store <2 x double> %30, <2 x double>* %17, align 16
  store double %add17.i, double* %agg.tmp22183.sroa.5.0..sroa_idx208, align 16
  %add.ptr.i = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %add.ptr19, i64 1
  call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i(%class.gTreeNode.31* %add.ptr19, %struct.vertex.29** %add.ptr, i64 %conv17, %class._point3d* byval nonnull align 8 %agg.tmp2.i, double %div24, %class.gTreeNode.31* nonnull %add.ptr.i, i32 0) #2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 8
  br i1 %exitcond, label %if.end, label %for.body

if.else:                                          ; preds = %__cilkrts_enter_frame_1.exit
  %idx.ext45 = sext i32 %shl6 to i64
  %add68 = add nsw i32 %depth, 1
  %sub67 = add nsw i32 %height, -1
  %mul56 = mul nsw i32 %depth, 3
  %shl57 = shl i32 1, %mul56
  %idx.ext58 = sext i32 %shl57 to i64
  %add.ptr59 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %newNodes, i64 %idx.ext58
  %41 = bitcast %class.gTreeNode.31* %parent to <2 x double>*
  %42 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %43 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %44 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %45 = getelementptr inbounds [5 x i8*], [5 x i8*]* %44, i64 0, i64 0
  %46 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %47 = bitcast [5 x i8*]* %44 to i8*
  br label %for.body35

for.body35:                                       ; preds = %det.cont70, %if.else
  %indvars.iv217 = phi i64 [ 0, %if.else ], [ %indvars.iv.next218, %det.cont70 ]
  %48 = load double, double* %size, align 8, !tbaa !219
  %div39 = fmul fast double %48, 2.500000e-01
  %49 = trunc i64 %indvars.iv217 to i32
  %sub.i165 = fsub fast double -0.000000e+00, %div39
  %50 = load <2 x double>, <2 x double>* %41, align 8, !tbaa !18, !noalias !247
  %51 = insertelement <2 x i32> undef, i32 %49, i32 0
  %52 = shufflevector <2 x i32> %51, <2 x i32> undef, <2 x i32> zeroinitializer
  %53 = and <2 x i32> %52, <i32 1, i32 2>
  %54 = icmp eq <2 x i32> %53, zeroinitializer
  %55 = insertelement <2 x double> undef, double %sub.i165, i32 0
  %56 = shufflevector <2 x double> %55, <2 x double> undef, <2 x i32> zeroinitializer
  %57 = insertelement <2 x double> undef, double %div39, i32 0
  %58 = shufflevector <2 x double> %57, <2 x double> undef, <2 x i32> zeroinitializer
  %59 = select <2 x i1> %54, <2 x double> %56, <2 x double> %58
  %60 = fadd fast <2 x double> %59, %50
  %61 = load double, double* %z.i, align 8, !tbaa !12, !noalias !247
  %and10.i174 = and i32 %49, 4
  %tobool11.i175 = icmp eq i32 %and10.i174, 0
  %cond16.i176 = select i1 %tobool11.i175, double %sub.i165, double %div39
  %add17.i177 = fadd fast double %cond16.i176, %61
  %add.ptr41 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %newNodes, i64 %indvars.iv217
  %add.ptr46 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %add.ptr41, i64 %idx.ext45
  %div49 = fmul fast double %48, 5.000000e-01
  %cnt.i.i = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %add.ptr46, i64 0, i32 2, i32 0
  store i32 0, i32* %cnt.i.i, align 4, !tbaa !218
  %count.i = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %add.ptr46, i64 0, i32 3
  store i32 0, i32* %count.i, align 4, !tbaa !215
  %size.i = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %add.ptr46, i64 0, i32 1
  store double %div49, double* %size.i, align 8, !tbaa !219
  %62 = bitcast %class.gTreeNode.31* %add.ptr46 to <2 x double>*
  store <2 x double> %60, <2 x double>* %62, align 8
  %agg.tmp47181.sroa.5.0..sroa_idx203 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %add.ptr46, i64 0, i32 0, i32 2
  store double %add17.i177, double* %agg.tmp47181.sroa.5.0..sroa_idx203, align 8
  %vertices.i = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %add.ptr46, i64 0, i32 5
  %63 = bitcast %struct.vertex.29*** %vertices.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull %63, i8 0, i64 16, i32 8, i1 false) #2
  %arrayidx52 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %parent, i64 0, i32 4, i64 %indvars.iv217
  store %class.gTreeNode.31* %add.ptr46, %class.gTreeNode.31** %arrayidx52, align 8, !tbaa !53
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %42, i16* nonnull %43) #2
  %64 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %64, i8** %45, align 8
  %65 = call i8* @llvm.stacksave()
  store volatile i8* %65, i8** %46, align 8
  %66 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %47) #23
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %for.body35.split, label %det.cont70

for.body35.split:                                 ; preds = %for.body35
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii_det.achd69.cilk(i64 %indvars.iv217, i32 %shl6, %class.gTreeNode.31* %this, %struct.vertex.29** %S.coerce0, i64 %S.coerce1, i32* %offsets, i32 %quadrants, %class.gTreeNode.31* nonnull %add.ptr59, %class.gTreeNode.31* %add.ptr46, i32 %sub67, i32 %add68)
  br label %det.cont70

det.cont70:                                       ; preds = %for.body35.split, %for.body35
  %indvars.iv.next218 = add nuw nsw i64 %indvars.iv217, 1
  %exitcond220 = icmp eq i64 %indvars.iv.next218, 8
  br i1 %exitcond220, label %if.end, label %for.body35

if.end:                                           ; preds = %det.cont70, %_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit
  %68 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %69 = load atomic i32, i32* %68 acquire, align 8
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %if.end
  %72 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %73 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %74 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %73, i16* nonnull %74) #2
  %75 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %76 = call i8* @llvm.frameaddress(i32 0) #2
  %77 = getelementptr inbounds [5 x i8*], [5 x i8*]* %75, i64 0, i64 0
  store volatile i8* %76, i8** %77, align 8
  %78 = call i8* @llvm.stacksave() #2
  %79 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %78, i8** %79, align 8
  %80 = bitcast [5 x i8*]* %75 to i8*
  %81 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %80) #24
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %if.end, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %83 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %84 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %83, i64 0, i32 12, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, 1
  store i64 %86, i64* %84, align 8
  %cnt.i = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %parent, i64 0, i32 2, i32 0
  %arrayidx86 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %parent, i64 0, i32 4, i64 0
  %87 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx86, align 8, !tbaa !53
  %agg.tmp83.sroa.0.0..sroa_idx = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %87, i64 0, i32 2, i32 0
  %agg.tmp83.sroa.0.0.copyload = load i32, i32* %agg.tmp83.sroa.0.0..sroa_idx, align 4
  %88 = load i32, i32* %cnt.i, align 4, !tbaa !218
  %add.i182 = add nsw i32 %88, %agg.tmp83.sroa.0.0.copyload
  store i32 %add.i182, i32* %cnt.i, align 4
  %count94 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %87, i64 0, i32 3
  %89 = load i32, i32* %count94, align 4, !tbaa !215
  %90 = load i32, i32* %count, align 4, !tbaa !215
  %add96 = add nsw i32 %90, %89
  store i32 %add96, i32* %count, align 4, !tbaa !215
  %arrayidx86.1 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %parent, i64 0, i32 4, i64 1
  %91 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx86.1, align 8, !tbaa !53
  %agg.tmp83.sroa.0.0..sroa_idx.1 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %91, i64 0, i32 2, i32 0
  %agg.tmp83.sroa.0.0.copyload.1 = load i32, i32* %agg.tmp83.sroa.0.0..sroa_idx.1, align 4
  %add.i182.1 = add nsw i32 %agg.tmp83.sroa.0.0.copyload.1, %add.i182
  store i32 %add.i182.1, i32* %cnt.i, align 4
  %count94.1 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %91, i64 0, i32 3
  %92 = load i32, i32* %count94.1, align 4, !tbaa !215
  %add96.1 = add nsw i32 %92, %add96
  store i32 %add96.1, i32* %count, align 4, !tbaa !215
  %arrayidx86.2 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %parent, i64 0, i32 4, i64 2
  %93 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx86.2, align 8, !tbaa !53
  %agg.tmp83.sroa.0.0..sroa_idx.2 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %93, i64 0, i32 2, i32 0
  %agg.tmp83.sroa.0.0.copyload.2 = load i32, i32* %agg.tmp83.sroa.0.0..sroa_idx.2, align 4
  %add.i182.2 = add nsw i32 %agg.tmp83.sroa.0.0.copyload.2, %add.i182.1
  store i32 %add.i182.2, i32* %cnt.i, align 4
  %count94.2 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %93, i64 0, i32 3
  %94 = load i32, i32* %count94.2, align 4, !tbaa !215
  %add96.2 = add nsw i32 %94, %add96.1
  store i32 %add96.2, i32* %count, align 4, !tbaa !215
  %arrayidx86.3 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %parent, i64 0, i32 4, i64 3
  %95 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx86.3, align 8, !tbaa !53
  %agg.tmp83.sroa.0.0..sroa_idx.3 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %95, i64 0, i32 2, i32 0
  %agg.tmp83.sroa.0.0.copyload.3 = load i32, i32* %agg.tmp83.sroa.0.0..sroa_idx.3, align 4
  %add.i182.3 = add nsw i32 %agg.tmp83.sroa.0.0.copyload.3, %add.i182.2
  store i32 %add.i182.3, i32* %cnt.i, align 4
  %count94.3 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %95, i64 0, i32 3
  %96 = load i32, i32* %count94.3, align 4, !tbaa !215
  %add96.3 = add nsw i32 %96, %add96.2
  store i32 %add96.3, i32* %count, align 4, !tbaa !215
  %arrayidx86.4 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %parent, i64 0, i32 4, i64 4
  %97 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx86.4, align 8, !tbaa !53
  %agg.tmp83.sroa.0.0..sroa_idx.4 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %97, i64 0, i32 2, i32 0
  %agg.tmp83.sroa.0.0.copyload.4 = load i32, i32* %agg.tmp83.sroa.0.0..sroa_idx.4, align 4
  %add.i182.4 = add nsw i32 %agg.tmp83.sroa.0.0.copyload.4, %add.i182.3
  store i32 %add.i182.4, i32* %cnt.i, align 4
  %count94.4 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %97, i64 0, i32 3
  %98 = load i32, i32* %count94.4, align 4, !tbaa !215
  %add96.4 = add nsw i32 %98, %add96.3
  store i32 %add96.4, i32* %count, align 4, !tbaa !215
  %arrayidx86.5 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %parent, i64 0, i32 4, i64 5
  %99 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx86.5, align 8, !tbaa !53
  %agg.tmp83.sroa.0.0..sroa_idx.5 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %99, i64 0, i32 2, i32 0
  %agg.tmp83.sroa.0.0.copyload.5 = load i32, i32* %agg.tmp83.sroa.0.0..sroa_idx.5, align 4
  %add.i182.5 = add nsw i32 %agg.tmp83.sroa.0.0.copyload.5, %add.i182.4
  store i32 %add.i182.5, i32* %cnt.i, align 4
  %count94.5 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %99, i64 0, i32 3
  %100 = load i32, i32* %count94.5, align 4, !tbaa !215
  %add96.5 = add nsw i32 %100, %add96.4
  store i32 %add96.5, i32* %count, align 4, !tbaa !215
  %arrayidx86.6 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %parent, i64 0, i32 4, i64 6
  %101 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx86.6, align 8, !tbaa !53
  %agg.tmp83.sroa.0.0..sroa_idx.6 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %101, i64 0, i32 2, i32 0
  %agg.tmp83.sroa.0.0.copyload.6 = load i32, i32* %agg.tmp83.sroa.0.0..sroa_idx.6, align 4
  %add.i182.6 = add nsw i32 %agg.tmp83.sroa.0.0.copyload.6, %add.i182.5
  store i32 %add.i182.6, i32* %cnt.i, align 4
  %count94.6 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %101, i64 0, i32 3
  %102 = load i32, i32* %count94.6, align 4, !tbaa !215
  %add96.6 = add nsw i32 %102, %add96.5
  store i32 %add96.6, i32* %count, align 4, !tbaa !215
  %arrayidx86.7 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %parent, i64 0, i32 4, i64 7
  %103 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx86.7, align 8, !tbaa !53
  %agg.tmp83.sroa.0.0..sroa_idx.7 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %103, i64 0, i32 2, i32 0
  %agg.tmp83.sroa.0.0.copyload.7 = load i32, i32* %agg.tmp83.sroa.0.0..sroa_idx.7, align 4
  %add.i182.7 = add nsw i32 %agg.tmp83.sroa.0.0.copyload.7, %add.i182.6
  store i32 %add.i182.7, i32* %cnt.i, align 4
  %count94.7 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %103, i64 0, i32 3
  %104 = load i32, i32* %count94.7, align 4, !tbaa !215
  %add96.7 = add nsw i32 %104, %add96.6
  store i32 %add96.7, i32* %count, align 4, !tbaa !215
  %cmp101 = icmp eq i32 %add96.7, 0
  br i1 %cmp101, label %if.then102, label %if.end104

if.then102:                                       ; preds = %__cilk_sync_nothrow.exit
  %vertices = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %parent, i64 0, i32 5
  store %struct.vertex.29** %S.coerce0, %struct.vertex.29*** %vertices, align 8, !tbaa !226
  br label %if.end104

if.end104:                                        ; preds = %if.then102, %__cilk_sync_nothrow.exit
  %105 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %106 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %105, i64 0, i32 9
  %109 = bitcast %struct.__cilkrts_stack_frame** %108 to i64*
  store atomic i64 %107, i64* %109 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %110 = load atomic i32, i32* %68 acquire, align 8
  %111 = icmp eq i32 %110, 16777216
  br i1 %111, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.end104
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.end104, %body.i
  ret void
}

; Function Attrs: nounwind stealable uwtable
define linkonce_odr void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE15sortBlocksSmallEPPS5_iS1_Pi(%struct.vertex.29** %S, i32 %count, %class._point3d* byval align 8 %center, i32* %offsets) local_unnamed_addr #15 comdat align 2 {
entry:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %entry
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %entry, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %entry ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %entry ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %conv = sext i32 %count to i64
  %mul = shl nsw i64 %conv, 4
  %call1 = tail call noalias i8* @malloc(i64 %mul) #2
  %9 = bitcast i8* %call1 to %"struct.std::pair.38"*
  %cmp101 = icmp sgt i32 %count, 0
  br i1 %cmp101, label %for.body.lr.ph, label %while.body32.lr.ph

for.body.lr.ph:                                   ; preds = %__cilkrts_enter_frame_1.exit
  %agg.tmp.sroa.0.0..sroa_idx = getelementptr inbounds %class._point3d, %class._point3d* %center, i64 0, i32 0
  %agg.tmp.sroa.0.0.copyload = load double, double* %agg.tmp.sroa.0.0..sroa_idx, align 8
  %agg.tmp.sroa.2.0..sroa_idx87 = getelementptr inbounds %class._point3d, %class._point3d* %center, i64 0, i32 1
  %agg.tmp.sroa.2.0.copyload = load double, double* %agg.tmp.sroa.2.0..sroa_idx87, align 8
  %agg.tmp.sroa.3.0..sroa_idx88 = getelementptr inbounds %class._point3d, %class._point3d* %center, i64 0, i32 2
  %agg.tmp.sroa.3.0.copyload = load double, double* %agg.tmp.sroa.3.0..sroa_idx88, align 8
  %wide.trip.count112 = zext i32 %count to i64
  %xtraiter170 = and i64 %wide.trip.count112, 1
  %10 = icmp eq i32 %count, 1
  br i1 %10, label %for.cond.cleanup.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter172 = sub nsw i64 %wide.trip.count112, %xtraiter170
  br label %for.body

for.cond.cleanup.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv110.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next111.1, %for.body ]
  %lcmp.mod171 = icmp eq i64 %xtraiter170, 0
  br i1 %lcmp.mod171, label %for.cond.cleanup, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond.cleanup.unr-lcssa
  %arrayidx3.epil = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %S, i64 %indvars.iv110.unr
  %11 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx3.epil, align 8, !tbaa !53
  %x.i.epil = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %11, i64 0, i32 1, i32 0
  %12 = load double, double* %x.i.epil, align 8, !tbaa !6
  %cmp.i.epil = fcmp fast ogt double %12, %agg.tmp.sroa.0.0.copyload
  %index.0.i.epil = zext i1 %cmp.i.epil to i32
  %y.i.epil = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %11, i64 0, i32 1, i32 1
  %13 = load double, double* %y.i.epil, align 8, !tbaa !11
  %cmp4.i.epil = fcmp fast ogt double %13, %agg.tmp.sroa.2.0.copyload
  %add6.i.epil = or i32 %index.0.i.epil, 2
  %index.1.i.epil = select i1 %cmp4.i.epil, i32 %add6.i.epil, i32 %index.0.i.epil
  %z.i.epil = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %11, i64 0, i32 1, i32 2
  %14 = load double, double* %z.i.epil, align 8, !tbaa !12
  %cmp9.i.epil = fcmp fast ogt double %14, %agg.tmp.sroa.3.0.copyload
  %add11.i.epil = or i32 %index.1.i.epil, 4
  %index.2.i.epil = select i1 %cmp9.i.epil, i32 %add11.i.epil, i32 %index.1.i.epil
  %15 = ptrtoint %struct.vertex.29* %11 to i64
  %first2.i.epil = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %9, i64 %indvars.iv110.unr, i32 0
  store i32 %index.2.i.epil, i32* %first2.i.epil, align 8, !tbaa !250
  %second4.i.epil = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %9, i64 %indvars.iv110.unr, i32 1
  %16 = bitcast %struct.vertex.29** %second4.i.epil to i64*
  store i64 %15, i64* %16, align 8, !tbaa !252
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.unr-lcssa, %for.body.epil
  %cmp.i68 = icmp slt i32 %count, 256
  br i1 %cmp.i68, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %for.cond.cleanup
  %cmp20.i = icmp sgt i32 %count, 20
  br i1 %cmp20.i, label %while.body.lr.ph.i, label %while.end.i

while.body.lr.ph.i:                               ; preds = %if.then.i
  %sub.ptr.rhs.cast4.i = ptrtoint i8* %call1 to i64
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i, %while.body.lr.ph.i
  %n.addr.021.i = phi i32 [ %count, %while.body.lr.ph.i ], [ %conv.i, %while.body.i ]
  %call.i69 = tail call { %"struct.std::pair.38"*, %"struct.std::pair.38"* } bitcast ({ %"struct.std::pair.23"*, %"struct.std::pair.23"* } (%"struct.std::pair.23"*, i32)* @_Z5splitISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEiES0_IPT_SF_ESF_T1_T0_ to { %"struct.std::pair.38"*, %"struct.std::pair.38"* } (%"struct.std::pair.38"*, i32)*)(%"struct.std::pair.38"* %9, i32 %n.addr.021.i) #2
  %17 = extractvalue { %"struct.std::pair.38"*, %"struct.std::pair.38"* } %call.i69, 0
  %18 = extractvalue { %"struct.std::pair.38"*, %"struct.std::pair.38"* } %call.i69, 1
  %idx.ext.i70 = sext i32 %n.addr.021.i to i64
  %add.ptr.i71 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %9, i64 %idx.ext.i70
  %sub.ptr.lhs.cast.i72 = ptrtoint %"struct.std::pair.38"* %add.ptr.i71 to i64
  %sub.ptr.rhs.cast.i73 = ptrtoint %"struct.std::pair.38"* %18 to i64
  %sub.ptr.sub.i74 = sub i64 %sub.ptr.lhs.cast.i72, %sub.ptr.rhs.cast.i73
  %sub.ptr.div.i75 = ashr exact i64 %sub.ptr.sub.i74, 4
  %19 = bitcast %"struct.std::pair.38"* %18 to %"struct.std::pair.6"*
  tail call void @_Z15quickSortSerialISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.6"* %19, i64 %sub.ptr.div.i75) #2
  %sub.ptr.lhs.cast3.i = ptrtoint %"struct.std::pair.38"* %17 to i64
  %sub.ptr.sub5.i = sub i64 %sub.ptr.lhs.cast3.i, %sub.ptr.rhs.cast4.i
  %20 = lshr exact i64 %sub.ptr.sub5.i, 4
  %conv.i = trunc i64 %20 to i32
  %cmp.i76 = icmp sgt i32 %conv.i, 20
  br i1 %cmp.i76, label %while.body.i, label %while.end.i.loopexit

while.end.i.loopexit:                             ; preds = %while.body.i
  %conv.i.le = trunc i64 %20 to i32
  br label %while.end.i

while.end.i:                                      ; preds = %while.end.i.loopexit, %if.then.i
  %n.addr.0.lcssa.i = phi i32 [ %count, %if.then.i ], [ %conv.i.le, %while.end.i.loopexit ]
  %cmp37.i.i = icmp sgt i32 %n.addr.0.lcssa.i, 0
  br i1 %cmp37.i.i, label %for.body.lr.ph.i.i, label %for.body15.preheader

for.body.lr.ph.i.i:                               ; preds = %while.end.i
  %wide.trip.count.i.i = zext i32 %n.addr.0.lcssa.i to i64
  %xtraiter166 = and i64 %wide.trip.count.i.i, 1
  %21 = icmp eq i32 %n.addr.0.lcssa.i, 1
  br i1 %21, label %_Z9quickSortISt4pairIiP6vertexI8_point3dIdELi1EEEN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE9compFirstEiEvPT_T1_T0_.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.new

for.body.lr.ph.i.i.new:                           ; preds = %for.body.lr.ph.i.i
  %unroll_iter168 = sub nsw i64 %wide.trip.count.i.i, %xtraiter166
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %while.end.i.i.1, %for.body.lr.ph.i.i.new
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.new ], [ %indvars.iv.next.i.i.1, %while.end.i.i.1 ]
  %niter169 = phi i64 [ %unroll_iter168, %for.body.lr.ph.i.i.new ], [ %niter169.nsub.1, %while.end.i.i.1 ]
  %arrayidx.i.i = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %9, i64 %indvars.iv.i.i
  %v.sroa.0.0..sroa_idx.i.i = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %arrayidx.i.i, i64 0, i32 0
  %v.sroa.0.0.copyload.i.i = load i32, i32* %v.sroa.0.0..sroa_idx.i.i, align 8
  %v.sroa.528.0..sroa_idx29.i.i = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %9, i64 %indvars.iv.i.i, i32 1
  %v.sroa.528.0..sroa_cast30.i.i = bitcast %struct.vertex.29** %v.sroa.528.0..sroa_idx29.i.i to i64*
  %v.sroa.528.0.copyload.i.i = load i64, i64* %v.sroa.528.0..sroa_cast30.i.i, align 8
  %incdec.ptr32.i.i = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %arrayidx.i.i, i64 -1
  %cmp133.i.i = icmp ult %"struct.std::pair.38"* %incdec.ptr32.i.i, %9
  br i1 %cmp133.i.i, label %while.end.i.i, label %land.rhs.i.i.preheader

land.rhs.i.i.preheader:                           ; preds = %for.body.i.i
  br label %land.rhs.i.i

land.rhs.i.i:                                     ; preds = %land.rhs.i.i.preheader, %while.body.i.i
  %incdec.ptr35.i.i = phi %"struct.std::pair.38"* [ %incdec.ptr.i.i, %while.body.i.i ], [ %incdec.ptr32.i.i, %land.rhs.i.i.preheader ]
  %B.034.i.i = phi %"struct.std::pair.38"* [ %incdec.ptr35.i.i, %while.body.i.i ], [ %arrayidx.i.i, %land.rhs.i.i.preheader ]
  %agg.tmp2.sroa.0.0..sroa_idx.i.i = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %incdec.ptr35.i.i, i64 0, i32 0
  %agg.tmp2.sroa.0.0.copyload.i.i = load i32, i32* %agg.tmp2.sroa.0.0..sroa_idx.i.i, align 8
  %cmp.i.i.i = icmp slt i32 %v.sroa.0.0.copyload.i.i, %agg.tmp2.sroa.0.0.copyload.i.i
  %first2.i22.i.i = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B.034.i.i, i64 0, i32 0
  br i1 %cmp.i.i.i, label %while.body.i.i, label %while.end.i.i

while.body.i.i:                                   ; preds = %land.rhs.i.i
  store i32 %agg.tmp2.sroa.0.0.copyload.i.i, i32* %first2.i22.i.i, align 8, !tbaa !250
  %second.i23.i.i = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B.034.i.i, i64 -1, i32 1
  %22 = bitcast %struct.vertex.29** %second.i23.i.i to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !252
  %second3.i24.i.i = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B.034.i.i, i64 0, i32 1
  %24 = bitcast %struct.vertex.29** %second3.i24.i.i to i64*
  store i64 %23, i64* %24, align 8, !tbaa !252
  %incdec.ptr.i.i = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %incdec.ptr35.i.i, i64 -1
  %cmp1.i.i = icmp ult %"struct.std::pair.38"* %incdec.ptr.i.i, %9
  br i1 %cmp1.i.i, label %while.end.i.i.loopexit.split.loop.exit, label %land.rhs.i.i

while.end.i.i.loopexit.split.loop.exit:           ; preds = %while.body.i.i
  %agg.tmp2.sroa.0.0..sroa_idx.i.i.le = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %incdec.ptr35.i.i, i64 0, i32 0
  br label %while.end.i.i

while.end.i.i:                                    ; preds = %land.rhs.i.i, %while.end.i.i.loopexit.split.loop.exit, %for.body.i.i
  %first2.i.pre-phi.i.i = phi i32* [ %v.sroa.0.0..sroa_idx.i.i, %for.body.i.i ], [ %agg.tmp2.sroa.0.0..sroa_idx.i.i.le, %while.end.i.i.loopexit.split.loop.exit ], [ %first2.i22.i.i, %land.rhs.i.i ]
  %B.0.lcssa.i.i = phi %"struct.std::pair.38"* [ %arrayidx.i.i, %for.body.i.i ], [ %incdec.ptr35.i.i, %while.end.i.i.loopexit.split.loop.exit ], [ %B.034.i.i, %land.rhs.i.i ]
  store i32 %v.sroa.0.0.copyload.i.i, i32* %first2.i.pre-phi.i.i, align 8, !tbaa !250
  %second3.i.i.i = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B.0.lcssa.i.i, i64 0, i32 1
  %25 = bitcast %struct.vertex.29** %second3.i.i.i to i64*
  store i64 %v.sroa.528.0.copyload.i.i, i64* %25, align 8, !tbaa !252
  %indvars.iv.next.i.i = or i64 %indvars.iv.i.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %9, i64 %indvars.iv.next.i.i
  %v.sroa.0.0..sroa_idx.i.i.1 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %arrayidx.i.i.1, i64 0, i32 0
  %v.sroa.0.0.copyload.i.i.1 = load i32, i32* %v.sroa.0.0..sroa_idx.i.i.1, align 8
  %v.sroa.528.0..sroa_idx29.i.i.1 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %9, i64 %indvars.iv.next.i.i, i32 1
  %v.sroa.528.0..sroa_cast30.i.i.1 = bitcast %struct.vertex.29** %v.sroa.528.0..sroa_idx29.i.i.1 to i64*
  %v.sroa.528.0.copyload.i.i.1 = load i64, i64* %v.sroa.528.0..sroa_cast30.i.i.1, align 8
  %cmp133.i.i.1 = icmp ult %"struct.std::pair.38"* %arrayidx.i.i, %9
  br i1 %cmp133.i.i.1, label %while.end.i.i.1, label %land.rhs.i.i.1.preheader

land.rhs.i.i.1.preheader:                         ; preds = %while.end.i.i
  br label %land.rhs.i.i.1

if.else.i:                                        ; preds = %for.cond.cleanup
  %call.i = tail call { %"struct.std::pair.38"*, %"struct.std::pair.38"* } bitcast ({ %"struct.std::pair.23"*, %"struct.std::pair.23"* } (%"struct.std::pair.23"*, i32)* @_Z5splitISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEiES0_IPT_SF_ESF_T1_T0_ to { %"struct.std::pair.38"*, %"struct.std::pair.38"* } (%"struct.std::pair.38"*, i32)*)(%"struct.std::pair.38"* %9, i32 %count) #2
  %26 = extractvalue { %"struct.std::pair.38"*, %"struct.std::pair.38"* } %call.i, 1
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0)
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave()
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #23
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %if.else.i.split, label %det.cont.i

if.else.i.split:                                  ; preds = %if.else.i
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE15sortBlocksSmallEPPS5_iS1_Pi_det.achd.i.cilk({ %"struct.std::pair.38"*, %"struct.std::pair.38"* } %call.i, i8* %call1, %"struct.std::pair.38"* %9)
  br label %det.cont.i

det.cont.i:                                       ; preds = %if.else.i.split, %if.else.i
  %add.ptr.i = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %9, i64 %conv
  %sub.ptr.lhs.cast4.i = ptrtoint %"struct.std::pair.38"* %add.ptr.i to i64
  %sub.ptr.rhs.cast5.i = ptrtoint %"struct.std::pair.38"* %26 to i64
  %sub.ptr.sub6.i = sub i64 %sub.ptr.lhs.cast4.i, %sub.ptr.rhs.cast5.i
  %sub.ptr.div7.i = ashr exact i64 %sub.ptr.sub6.i, 4
  tail call void @_Z9quickSortISt4pairIiP6vertexI8_point3dIdELi1EEEN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.38"* %26, i64 %sub.ptr.div7.i) #2
  %37 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %38 = load atomic i32, i32* %37 acquire, align 8
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %det.cont.i
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  store volatile i8* %30, i8** %31, align 8
  %42 = call i8* @llvm.stacksave() #2
  store volatile i8* %42, i8** %33, align 8
  %43 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %det.cont.i, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %45 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %46 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %45, i64 0, i32 12, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %46, align 8
  br label %for.body15.preheader

for.body15.preheader:                             ; preds = %while.end.i, %_Z9quickSortISt4pairIiP6vertexI8_point3dIdELi1EEEN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE9compFirstEiEvPT_T1_T0_.exit.loopexit.unr-lcssa, %while.end.i.i.epil, %__cilk_sync_nothrow.exit
  br label %for.body15

_Z9quickSortISt4pairIiP6vertexI8_point3dIdELi1EEEN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE9compFirstEiEvPT_T1_T0_.exit.loopexit.unr-lcssa: ; preds = %while.end.i.i.1, %for.body.lr.ph.i.i
  %indvars.iv.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i.1, %while.end.i.i.1 ]
  %lcmp.mod167 = icmp eq i64 %xtraiter166, 0
  br i1 %lcmp.mod167, label %for.body15.preheader, label %for.body.i.i.epil

for.body.i.i.epil:                                ; preds = %_Z9quickSortISt4pairIiP6vertexI8_point3dIdELi1EEEN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE9compFirstEiEvPT_T1_T0_.exit.loopexit.unr-lcssa
  %arrayidx.i.i.epil = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %9, i64 %indvars.iv.i.i.unr
  %v.sroa.0.0..sroa_idx.i.i.epil = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %arrayidx.i.i.epil, i64 0, i32 0
  %v.sroa.0.0.copyload.i.i.epil = load i32, i32* %v.sroa.0.0..sroa_idx.i.i.epil, align 8
  %v.sroa.528.0..sroa_idx29.i.i.epil = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %9, i64 %indvars.iv.i.i.unr, i32 1
  %v.sroa.528.0..sroa_cast30.i.i.epil = bitcast %struct.vertex.29** %v.sroa.528.0..sroa_idx29.i.i.epil to i64*
  %v.sroa.528.0.copyload.i.i.epil = load i64, i64* %v.sroa.528.0..sroa_cast30.i.i.epil, align 8
  %incdec.ptr32.i.i.epil = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %arrayidx.i.i.epil, i64 -1
  %cmp133.i.i.epil = icmp ult %"struct.std::pair.38"* %incdec.ptr32.i.i.epil, %9
  br i1 %cmp133.i.i.epil, label %while.end.i.i.epil, label %land.rhs.i.i.epil.preheader

land.rhs.i.i.epil.preheader:                      ; preds = %for.body.i.i.epil
  br label %land.rhs.i.i.epil

land.rhs.i.i.epil:                                ; preds = %land.rhs.i.i.epil.preheader, %while.body.i.i.epil
  %incdec.ptr35.i.i.epil = phi %"struct.std::pair.38"* [ %incdec.ptr.i.i.epil, %while.body.i.i.epil ], [ %incdec.ptr32.i.i.epil, %land.rhs.i.i.epil.preheader ]
  %B.034.i.i.epil = phi %"struct.std::pair.38"* [ %incdec.ptr35.i.i.epil, %while.body.i.i.epil ], [ %arrayidx.i.i.epil, %land.rhs.i.i.epil.preheader ]
  %agg.tmp2.sroa.0.0..sroa_idx.i.i.epil = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %incdec.ptr35.i.i.epil, i64 0, i32 0
  %agg.tmp2.sroa.0.0.copyload.i.i.epil = load i32, i32* %agg.tmp2.sroa.0.0..sroa_idx.i.i.epil, align 8
  %cmp.i.i.i.epil = icmp slt i32 %v.sroa.0.0.copyload.i.i.epil, %agg.tmp2.sroa.0.0.copyload.i.i.epil
  %first2.i22.i.i.epil = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B.034.i.i.epil, i64 0, i32 0
  br i1 %cmp.i.i.i.epil, label %while.body.i.i.epil, label %while.end.i.i.epil

while.body.i.i.epil:                              ; preds = %land.rhs.i.i.epil
  store i32 %agg.tmp2.sroa.0.0.copyload.i.i.epil, i32* %first2.i22.i.i.epil, align 8, !tbaa !250
  %second.i23.i.i.epil = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B.034.i.i.epil, i64 -1, i32 1
  %49 = bitcast %struct.vertex.29** %second.i23.i.i.epil to i64*
  %50 = load i64, i64* %49, align 8, !tbaa !252
  %second3.i24.i.i.epil = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B.034.i.i.epil, i64 0, i32 1
  %51 = bitcast %struct.vertex.29** %second3.i24.i.i.epil to i64*
  store i64 %50, i64* %51, align 8, !tbaa !252
  %incdec.ptr.i.i.epil = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %incdec.ptr35.i.i.epil, i64 -1
  %cmp1.i.i.epil = icmp ult %"struct.std::pair.38"* %incdec.ptr.i.i.epil, %9
  br i1 %cmp1.i.i.epil, label %while.end.i.i.epil.loopexit.split.loop.exit, label %land.rhs.i.i.epil

while.end.i.i.epil.loopexit.split.loop.exit:      ; preds = %while.body.i.i.epil
  %agg.tmp2.sroa.0.0..sroa_idx.i.i.epil.le = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %incdec.ptr35.i.i.epil, i64 0, i32 0
  br label %while.end.i.i.epil

while.end.i.i.epil:                               ; preds = %land.rhs.i.i.epil, %while.end.i.i.epil.loopexit.split.loop.exit, %for.body.i.i.epil
  %first2.i.pre-phi.i.i.epil = phi i32* [ %v.sroa.0.0..sroa_idx.i.i.epil, %for.body.i.i.epil ], [ %agg.tmp2.sroa.0.0..sroa_idx.i.i.epil.le, %while.end.i.i.epil.loopexit.split.loop.exit ], [ %first2.i22.i.i.epil, %land.rhs.i.i.epil ]
  %B.0.lcssa.i.i.epil = phi %"struct.std::pair.38"* [ %arrayidx.i.i.epil, %for.body.i.i.epil ], [ %incdec.ptr35.i.i.epil, %while.end.i.i.epil.loopexit.split.loop.exit ], [ %B.034.i.i.epil, %land.rhs.i.i.epil ]
  store i32 %v.sroa.0.0.copyload.i.i.epil, i32* %first2.i.pre-phi.i.i.epil, align 8, !tbaa !250
  %second3.i.i.i.epil = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B.0.lcssa.i.i.epil, i64 0, i32 1
  %52 = bitcast %struct.vertex.29** %second3.i.i.i.epil to i64*
  store i64 %v.sroa.528.0.copyload.i.i.epil, i64* %52, align 8, !tbaa !252
  br label %for.body15.preheader

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv110 = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next111.1, %for.body ]
  %niter173 = phi i64 [ %unroll_iter172, %for.body.lr.ph.new ], [ %niter173.nsub.1, %for.body ]
  %arrayidx3 = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %S, i64 %indvars.iv110
  %53 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx3, align 8, !tbaa !53
  %x.i = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %53, i64 0, i32 1, i32 0
  %54 = load double, double* %x.i, align 8, !tbaa !6
  %cmp.i = fcmp fast ogt double %54, %agg.tmp.sroa.0.0.copyload
  %index.0.i = zext i1 %cmp.i to i32
  %y.i = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %53, i64 0, i32 1, i32 1
  %55 = load double, double* %y.i, align 8, !tbaa !11
  %cmp4.i = fcmp fast ogt double %55, %agg.tmp.sroa.2.0.copyload
  %add6.i = or i32 %index.0.i, 2
  %index.1.i = select i1 %cmp4.i, i32 %add6.i, i32 %index.0.i
  %z.i = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %53, i64 0, i32 1, i32 2
  %56 = load double, double* %z.i, align 8, !tbaa !12
  %cmp9.i = fcmp fast ogt double %56, %agg.tmp.sroa.3.0.copyload
  %add11.i = or i32 %index.1.i, 4
  %index.2.i = select i1 %cmp9.i, i32 %add11.i, i32 %index.1.i
  %57 = ptrtoint %struct.vertex.29* %53 to i64
  %first2.i = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %9, i64 %indvars.iv110, i32 0
  store i32 %index.2.i, i32* %first2.i, align 8, !tbaa !250
  %second4.i = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %9, i64 %indvars.iv110, i32 1
  %58 = bitcast %struct.vertex.29** %second4.i to i64*
  store i64 %57, i64* %58, align 8, !tbaa !252
  %indvars.iv.next111 = or i64 %indvars.iv110, 1
  %arrayidx3.1 = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %S, i64 %indvars.iv.next111
  %59 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx3.1, align 8, !tbaa !53
  %x.i.1 = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %59, i64 0, i32 1, i32 0
  %60 = load double, double* %x.i.1, align 8, !tbaa !6
  %cmp.i.1 = fcmp fast ogt double %60, %agg.tmp.sroa.0.0.copyload
  %index.0.i.1 = zext i1 %cmp.i.1 to i32
  %y.i.1 = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %59, i64 0, i32 1, i32 1
  %61 = load double, double* %y.i.1, align 8, !tbaa !11
  %cmp4.i.1 = fcmp fast ogt double %61, %agg.tmp.sroa.2.0.copyload
  %add6.i.1 = or i32 %index.0.i.1, 2
  %index.1.i.1 = select i1 %cmp4.i.1, i32 %add6.i.1, i32 %index.0.i.1
  %z.i.1 = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %59, i64 0, i32 1, i32 2
  %62 = load double, double* %z.i.1, align 8, !tbaa !12
  %cmp9.i.1 = fcmp fast ogt double %62, %agg.tmp.sroa.3.0.copyload
  %add11.i.1 = or i32 %index.1.i.1, 4
  %index.2.i.1 = select i1 %cmp9.i.1, i32 %add11.i.1, i32 %index.1.i.1
  %63 = ptrtoint %struct.vertex.29* %59 to i64
  %first2.i.1 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %9, i64 %indvars.iv.next111, i32 0
  store i32 %index.2.i.1, i32* %first2.i.1, align 8, !tbaa !250
  %second4.i.1 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %9, i64 %indvars.iv.next111, i32 1
  %64 = bitcast %struct.vertex.29** %second4.i.1 to i64*
  store i64 %63, i64* %64, align 8, !tbaa !252
  %indvars.iv.next111.1 = add nuw nsw i64 %indvars.iv110, 2
  %niter173.nsub.1 = add i64 %niter173, -2
  %niter173.ncmp.1 = icmp eq i64 %niter173.nsub.1, 0
  br i1 %niter173.ncmp.1, label %for.cond.cleanup.unr-lcssa, label %for.body

for.cond.cleanup14:                               ; preds = %for.inc26
  %cmp3190 = icmp slt i32 %j.1.lcssa, 7
  br i1 %cmp3190, label %while.body32.lr.ph, label %while.end35

while.body32.lr.ph:                               ; preds = %__cilkrts_enter_frame_1.exit, %for.cond.cleanup14
  %j.0.lcssa118 = phi i32 [ %j.1.lcssa, %for.cond.cleanup14 ], [ -1, %__cilkrts_enter_frame_1.exit ]
  %65 = sext i32 %j.0.lcssa118 to i64
  %66 = icmp sgt i64 %65, 6
  %smax = select i1 %66, i64 %65, i64 6
  %67 = sub nsw i64 1, %65
  %68 = add nsw i64 %67, %smax
  %min.iters.check139 = icmp ult i64 %68, 32
  br i1 %min.iters.check139, label %while.body32.preheader, label %vector.ph140

while.body32.preheader:                           ; preds = %middle.block137, %while.body32.lr.ph
  %indvars.iv.ph = phi i64 [ %ind.end146, %middle.block137 ], [ %65, %while.body32.lr.ph ]
  br label %while.body32

vector.ph140:                                     ; preds = %while.body32.lr.ph
  %n.vec142 = and i64 %68, -32
  %ind.end146 = add nsw i64 %n.vec142, %65
  %broadcast.splatinsert155 = insertelement <8 x i32> undef, i32 %count, i32 0
  %broadcast.splat156 = shufflevector <8 x i32> %broadcast.splatinsert155, <8 x i32> undef, <8 x i32> zeroinitializer
  %69 = add nsw i64 %n.vec142, -32
  %70 = lshr exact i64 %69, 5
  %71 = add nuw nsw i64 %70, 1
  %xtraiter = and i64 %71, 3
  %72 = icmp ult i64 %69, 96
  br i1 %72, label %middle.block137.unr-lcssa, label %vector.ph140.new

vector.ph140.new:                                 ; preds = %vector.ph140
  %unroll_iter = sub nsw i64 %71, %xtraiter
  %73 = add nsw i64 %65, 1
  br label %vector.body136

vector.body136:                                   ; preds = %vector.body136, %vector.ph140.new
  %index143 = phi i64 [ 0, %vector.ph140.new ], [ %index.next144.3, %vector.body136 ]
  %niter = phi i64 [ %unroll_iter, %vector.ph140.new ], [ %niter.nsub.3, %vector.body136 ]
  %74 = add i64 %73, %index143
  %75 = getelementptr inbounds i32, i32* %offsets, i64 %74
  %76 = bitcast i32* %75 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %76, align 4, !tbaa !59
  %77 = getelementptr i32, i32* %75, i64 8
  %78 = bitcast i32* %77 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %78, align 4, !tbaa !59
  %79 = getelementptr i32, i32* %75, i64 16
  %80 = bitcast i32* %79 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %80, align 4, !tbaa !59
  %81 = getelementptr i32, i32* %75, i64 24
  %82 = bitcast i32* %81 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %82, align 4, !tbaa !59
  %index.next144 = or i64 %index143, 32
  %83 = add i64 %73, %index.next144
  %84 = getelementptr inbounds i32, i32* %offsets, i64 %83
  %85 = bitcast i32* %84 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %85, align 4, !tbaa !59
  %86 = getelementptr i32, i32* %84, i64 8
  %87 = bitcast i32* %86 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %87, align 4, !tbaa !59
  %88 = getelementptr i32, i32* %84, i64 16
  %89 = bitcast i32* %88 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %89, align 4, !tbaa !59
  %90 = getelementptr i32, i32* %84, i64 24
  %91 = bitcast i32* %90 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %91, align 4, !tbaa !59
  %index.next144.1 = or i64 %index143, 64
  %92 = add i64 %73, %index.next144.1
  %93 = getelementptr inbounds i32, i32* %offsets, i64 %92
  %94 = bitcast i32* %93 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %94, align 4, !tbaa !59
  %95 = getelementptr i32, i32* %93, i64 8
  %96 = bitcast i32* %95 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %96, align 4, !tbaa !59
  %97 = getelementptr i32, i32* %93, i64 16
  %98 = bitcast i32* %97 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %98, align 4, !tbaa !59
  %99 = getelementptr i32, i32* %93, i64 24
  %100 = bitcast i32* %99 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %100, align 4, !tbaa !59
  %index.next144.2 = or i64 %index143, 96
  %101 = add i64 %73, %index.next144.2
  %102 = getelementptr inbounds i32, i32* %offsets, i64 %101
  %103 = bitcast i32* %102 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %103, align 4, !tbaa !59
  %104 = getelementptr i32, i32* %102, i64 8
  %105 = bitcast i32* %104 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %105, align 4, !tbaa !59
  %106 = getelementptr i32, i32* %102, i64 16
  %107 = bitcast i32* %106 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %107, align 4, !tbaa !59
  %108 = getelementptr i32, i32* %102, i64 24
  %109 = bitcast i32* %108 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %109, align 4, !tbaa !59
  %index.next144.3 = add i64 %index143, 128
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %middle.block137.unr-lcssa, label %vector.body136, !llvm.loop !253

middle.block137.unr-lcssa:                        ; preds = %vector.body136, %vector.ph140
  %index143.unr = phi i64 [ 0, %vector.ph140 ], [ %index.next144.3, %vector.body136 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block137, label %vector.body136.epil.preheader

vector.body136.epil.preheader:                    ; preds = %middle.block137.unr-lcssa
  %110 = add nsw i64 %65, 1
  br label %vector.body136.epil

vector.body136.epil:                              ; preds = %vector.body136.epil, %vector.body136.epil.preheader
  %index143.epil = phi i64 [ %index143.unr, %vector.body136.epil.preheader ], [ %index.next144.epil, %vector.body136.epil ]
  %epil.iter = phi i64 [ %xtraiter, %vector.body136.epil.preheader ], [ %epil.iter.sub, %vector.body136.epil ]
  %111 = add i64 %110, %index143.epil
  %112 = getelementptr inbounds i32, i32* %offsets, i64 %111
  %113 = bitcast i32* %112 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %113, align 4, !tbaa !59
  %114 = getelementptr i32, i32* %112, i64 8
  %115 = bitcast i32* %114 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %115, align 4, !tbaa !59
  %116 = getelementptr i32, i32* %112, i64 16
  %117 = bitcast i32* %116 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %117, align 4, !tbaa !59
  %118 = getelementptr i32, i32* %112, i64 24
  %119 = bitcast i32* %118 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %119, align 4, !tbaa !59
  %index.next144.epil = add i64 %index143.epil, 32
  %epil.iter.sub = add nsw i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block137, label %vector.body136.epil, !llvm.loop !254

middle.block137:                                  ; preds = %vector.body136.epil, %middle.block137.unr-lcssa
  %cmp.n147 = icmp eq i64 %68, %n.vec142
  br i1 %cmp.n147, label %while.end35, label %while.body32.preheader

for.body15:                                       ; preds = %for.body15.preheader, %for.inc26
  %indvars.iv108 = phi i64 [ %indvars.iv.next109, %for.inc26 ], [ 0, %for.body15.preheader ]
  %j.095 = phi i32 [ %j.1.lcssa, %for.inc26 ], [ -1, %for.body15.preheader ]
  %second = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %9, i64 %indvars.iv108, i32 1
  %120 = bitcast %struct.vertex.29** %second to i64*
  %121 = load i64, i64* %120, align 8, !tbaa !252
  %arrayidx19 = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %S, i64 %indvars.iv108
  %122 = bitcast %struct.vertex.29** %arrayidx19 to i64*
  store i64 %121, i64* %122, align 8, !tbaa !53
  %first = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %9, i64 %indvars.iv108, i32 0
  %123 = load i32, i32* %first, align 8, !tbaa !250
  %cmp2292 = icmp eq i32 %123, %j.095
  br i1 %cmp2292, label %for.inc26, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %for.body15
  %124 = sext i32 %j.095 to i64
  %125 = trunc i64 %indvars.iv108 to i32
  %126 = xor i32 %j.095, -1
  %127 = add i32 %123, %126
  %128 = zext i32 %127 to i64
  %129 = add nuw nsw i64 %128, 1
  %min.iters.check = icmp ult i64 %129, 32
  br i1 %min.iters.check, label %while.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %while.body.lr.ph
  %130 = add i32 %127, 1
  %131 = and i32 %130, 31
  %n.mod.vf = zext i32 %131 to i64
  %n.vec = sub nsw i64 %129, %n.mod.vf
  %broadcast.splatinsert128 = insertelement <8 x i32> undef, i32 %125, i32 0
  %broadcast.splat129 = shufflevector <8 x i32> %broadcast.splatinsert128, <8 x i32> undef, <8 x i32> zeroinitializer
  %132 = add nsw i64 %124, 1
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %133 = add i64 %132, %index
  %134 = getelementptr inbounds i32, i32* %offsets, i64 %133
  %135 = bitcast i32* %134 to <8 x i32>*
  store <8 x i32> %broadcast.splat129, <8 x i32>* %135, align 4, !tbaa !59
  %136 = getelementptr i32, i32* %134, i64 8
  %137 = bitcast i32* %136 to <8 x i32>*
  store <8 x i32> %broadcast.splat129, <8 x i32>* %137, align 4, !tbaa !59
  %138 = getelementptr i32, i32* %134, i64 16
  %139 = bitcast i32* %138 to <8 x i32>*
  store <8 x i32> %broadcast.splat129, <8 x i32>* %139, align 4, !tbaa !59
  %140 = getelementptr i32, i32* %134, i64 24
  %141 = bitcast i32* %140 to <8 x i32>*
  store <8 x i32> %broadcast.splat129, <8 x i32>* %141, align 4, !tbaa !59
  %index.next = add i64 %index, 32
  %142 = icmp eq i64 %index.next, %n.vec
  br i1 %142, label %middle.block, label %vector.body, !llvm.loop !255

middle.block:                                     ; preds = %vector.body
  %ind.end = add nsw i64 %n.vec, %124
  %cmp.n = icmp eq i32 %131, 0
  br i1 %cmp.n, label %for.inc26, label %while.body.preheader

while.body.preheader:                             ; preds = %middle.block, %while.body.lr.ph
  %indvars.iv106.ph = phi i64 [ %ind.end, %middle.block ], [ %124, %while.body.lr.ph ]
  br label %while.body

while.body:                                       ; preds = %while.body.preheader, %while.body
  %indvars.iv106 = phi i64 [ %indvars.iv.next107, %while.body ], [ %indvars.iv106.ph, %while.body.preheader ]
  %indvars.iv.next107 = add nsw i64 %indvars.iv106, 1
  %arrayidx25 = getelementptr inbounds i32, i32* %offsets, i64 %indvars.iv.next107
  store i32 %125, i32* %arrayidx25, align 4, !tbaa !59
  %143 = trunc i64 %indvars.iv.next107 to i32
  %cmp22 = icmp eq i32 %123, %143
  br i1 %cmp22, label %for.inc26, label %while.body, !llvm.loop !256

for.inc26:                                        ; preds = %while.body, %middle.block, %for.body15
  %j.1.lcssa = phi i32 [ %j.095, %for.body15 ], [ %123, %middle.block ], [ %123, %while.body ]
  %indvars.iv.next109 = add nuw nsw i64 %indvars.iv108, 1
  %exitcond = icmp eq i64 %indvars.iv.next109, %wide.trip.count112
  br i1 %exitcond, label %for.cond.cleanup14, label %for.body15

while.body32:                                     ; preds = %while.body32.preheader, %while.body32
  %indvars.iv = phi i64 [ %indvars.iv.next, %while.body32 ], [ %indvars.iv.ph, %while.body32.preheader ]
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %arrayidx34 = getelementptr inbounds i32, i32* %offsets, i64 %indvars.iv.next
  store i32 %count, i32* %arrayidx34, align 4, !tbaa !59
  %cmp31 = icmp slt i64 %indvars.iv, 6
  br i1 %cmp31, label %while.body32, label %while.end35, !llvm.loop !257

while.end35:                                      ; preds = %while.body32, %middle.block137, %for.cond.cleanup14
  tail call void @free(i8* %call1) #2
  %144 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %145 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %144, i64 0, i32 9
  %148 = bitcast %struct.__cilkrts_stack_frame** %147 to i64*
  store atomic i64 %146, i64* %148 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %149 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %150 = load atomic i32, i32* %149 acquire, align 8
  %151 = icmp eq i32 %150, 16777216
  br i1 %151, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %while.end35
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %while.end35, %body.i
  ret void

land.rhs.i.i.1:                                   ; preds = %land.rhs.i.i.1.preheader, %while.body.i.i.1
  %incdec.ptr35.i.i.1 = phi %"struct.std::pair.38"* [ %incdec.ptr.i.i.1, %while.body.i.i.1 ], [ %arrayidx.i.i, %land.rhs.i.i.1.preheader ]
  %B.034.i.i.1 = phi %"struct.std::pair.38"* [ %incdec.ptr35.i.i.1, %while.body.i.i.1 ], [ %arrayidx.i.i.1, %land.rhs.i.i.1.preheader ]
  %agg.tmp2.sroa.0.0..sroa_idx.i.i.1 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %incdec.ptr35.i.i.1, i64 0, i32 0
  %agg.tmp2.sroa.0.0.copyload.i.i.1 = load i32, i32* %agg.tmp2.sroa.0.0..sroa_idx.i.i.1, align 8
  %cmp.i.i.i.1 = icmp slt i32 %v.sroa.0.0.copyload.i.i.1, %agg.tmp2.sroa.0.0.copyload.i.i.1
  %first2.i22.i.i.1 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B.034.i.i.1, i64 0, i32 0
  br i1 %cmp.i.i.i.1, label %while.body.i.i.1, label %while.end.i.i.1

while.body.i.i.1:                                 ; preds = %land.rhs.i.i.1
  store i32 %agg.tmp2.sroa.0.0.copyload.i.i.1, i32* %first2.i22.i.i.1, align 8, !tbaa !250
  %second.i23.i.i.1 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B.034.i.i.1, i64 -1, i32 1
  %152 = bitcast %struct.vertex.29** %second.i23.i.i.1 to i64*
  %153 = load i64, i64* %152, align 8, !tbaa !252
  %second3.i24.i.i.1 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B.034.i.i.1, i64 0, i32 1
  %154 = bitcast %struct.vertex.29** %second3.i24.i.i.1 to i64*
  store i64 %153, i64* %154, align 8, !tbaa !252
  %incdec.ptr.i.i.1 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %incdec.ptr35.i.i.1, i64 -1
  %cmp1.i.i.1 = icmp ult %"struct.std::pair.38"* %incdec.ptr.i.i.1, %9
  br i1 %cmp1.i.i.1, label %while.end.i.i.1.loopexit.split.loop.exit, label %land.rhs.i.i.1

while.end.i.i.1.loopexit.split.loop.exit:         ; preds = %while.body.i.i.1
  %agg.tmp2.sroa.0.0..sroa_idx.i.i.1.le = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %incdec.ptr35.i.i.1, i64 0, i32 0
  br label %while.end.i.i.1

while.end.i.i.1:                                  ; preds = %land.rhs.i.i.1, %while.end.i.i.1.loopexit.split.loop.exit, %while.end.i.i
  %first2.i.pre-phi.i.i.1 = phi i32* [ %v.sroa.0.0..sroa_idx.i.i.1, %while.end.i.i ], [ %agg.tmp2.sroa.0.0..sroa_idx.i.i.1.le, %while.end.i.i.1.loopexit.split.loop.exit ], [ %first2.i22.i.i.1, %land.rhs.i.i.1 ]
  %B.0.lcssa.i.i.1 = phi %"struct.std::pair.38"* [ %arrayidx.i.i.1, %while.end.i.i ], [ %incdec.ptr35.i.i.1, %while.end.i.i.1.loopexit.split.loop.exit ], [ %B.034.i.i.1, %land.rhs.i.i.1 ]
  store i32 %v.sroa.0.0.copyload.i.i.1, i32* %first2.i.pre-phi.i.i.1, align 8, !tbaa !250
  %second3.i.i.i.1 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B.0.lcssa.i.i.1, i64 0, i32 1
  %155 = bitcast %struct.vertex.29** %second3.i.i.i.1 to i64*
  store i64 %v.sroa.528.0.copyload.i.i.1, i64* %155, align 8, !tbaa !252
  %indvars.iv.next.i.i.1 = add nuw nsw i64 %indvars.iv.i.i, 2
  %niter169.nsub.1 = add i64 %niter169, -2
  %niter169.ncmp.1 = icmp eq i64 %niter169.nsub.1, 0
  br i1 %niter169.ncmp.1, label %_Z9quickSortISt4pairIiP6vertexI8_point3dIdELi1EEEN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE9compFirstEiEvPT_T1_T0_.exit.loopexit.unr-lcssa, label %for.body.i.i
}

; Function Attrs: nounwind uwtable
define linkonce_odr %class.gTreeNode.31* @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i(%struct.vertex.29** %S.coerce0, i64 %S.coerce1, %class._point3d* byval align 8 %cnt, double %sz, %class.gTreeNode.31* %newNodes, i32 %numNewNodes) local_unnamed_addr #7 comdat align 2 {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %cmp = icmp slt i32 %numNewNodes, 1
  %0 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %1 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp to %union.anon.1**
  store %union.anon.1* %0, %union.anon.1** %1, align 8, !tbaa !47
  %2 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #2
  store i64 17, i64* %__dnew.i.i.i.i, align 8, !tbaa !49
  %call5.i.i.i.i = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i, i64 0) #2
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i.i, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !50
  %3 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !49
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2, i32 0
  store i64 %3, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call5.i.i.i.i, i8* nonnull getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i64 17, i32 1, i1 false) #2
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 1
  store i64 %3, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !52
  %4 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !50
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %4, i64 %3
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #2
  br i1 %cmp, label %if.then.i, label %_ZN5utilsL8myAssertEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit

if.then.i:                                        ; preds = %entry
  %call.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.tmp) #2
  %call.i.i6 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call.i) #2
  call void @abort() #21
  unreachable

_ZN5utilsL8myAssertEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit: ; preds = %entry
  %5 = bitcast %union.anon.1* %0 to i8*
  %6 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !50
  %cmp.i.i.i = icmp eq i8* %6, %5
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %_ZN5utilsL8myAssertEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit
  call void @_ZdlPv(i8* %6) #2
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %_ZN5utilsL8myAssertEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit, %if.then.i.i
  %add.ptr = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %newNodes, i64 1
  %sub = add nsw i32 %numNewNodes, -1
  call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i(%class.gTreeNode.31* %newNodes, %struct.vertex.29** %S.coerce0, i64 %S.coerce1, %class._point3d* byval nonnull align 8 %cnt, double %sz, %class.gTreeNode.31* nonnull %add.ptr, i32 %sub)
  ret %class.gTreeNode.31* %newNodes
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1_(%"struct.std::pair.38"* %A, i32* %bucketOffsets, i64 %n, i64 %m, i1 zeroext %bottomUp, i8* %tmpSpace) local_unnamed_addr #7 comdat {
entry:
  %0 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8185 = shl i32 %0, 3
  %agg.tmp.i = alloca %"struct.intSort::eBits.40", align 8
  %agg.tmp = alloca %"struct.intSort::eBits.40", align 8
  %cmp6.i = icmp sgt i64 %m, 1
  br i1 %cmp6.i, label %while.body.lr.ph.i, label %_ZN5utilsL6log2UpIlEEiT_.exit

while.body.lr.ph.i:                               ; preds = %entry
  %sub.i = add nsw i64 %m, -1
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i, %while.body.lr.ph.i
  %b.08.i = phi i64 [ %sub.i, %while.body.lr.ph.i ], [ %shr5.i, %while.body.i ]
  %a.07.i = phi i32 [ 0, %while.body.lr.ph.i ], [ %inc.i, %while.body.i ]
  %shr5.i = lshr i64 %b.08.i, 1
  %inc.i = add nuw nsw i32 %a.07.i, 1
  %cmp.i = icmp eq i64 %shr5.i, 0
  br i1 %cmp.i, label %_ZN5utilsL6log2UpIlEEiT_.exit, label %while.body.i

_ZN5utilsL6log2UpIlEEiT_.exit:                    ; preds = %while.body.i, %entry
  %a.0.lcssa.i = phi i32 [ 0, %entry ], [ %inc.i, %while.body.i ]
  %conv = sext i32 %a.0.lcssa.i to i64
  %div = sdiv i64 %n, 2048
  %add = add nsw i64 %div, 1
  %1 = bitcast i8* %tmpSpace to %"struct.std::pair.38"*
  %mul = shl i64 %n, 4
  %add.ptr = getelementptr inbounds i8, i8* %tmpSpace, i64 %mul
  %add.ptr3 = getelementptr inbounds i8, i8* %add.ptr, i64 %n
  %2 = bitcast i8* %add.ptr3 to [256 x i32]*
  %cmp = icmp slt i32 %a.0.lcssa.i, 9
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %_ZN5utilsL6log2UpIlEEiT_.exit
  %shl = shl i64 1, %conv
  %_mask.i = getelementptr inbounds %"struct.intSort::eBits.40", %"struct.intSort::eBits.40"* %agg.tmp, i64 0, i32 1
  %shl.i = shl i32 1, %a.0.lcssa.i
  %sub.i169 = add nsw i32 %shl.i, -1
  %conv.i = sext i32 %sub.i169 to i64
  store i64 %conv.i, i64* %_mask.i, align 8, !tbaa !258
  %_offset.i = getelementptr inbounds %"struct.intSort::eBits.40", %"struct.intSort::eBits.40"* %agg.tmp, i64 0, i32 2
  store i64 0, i64* %_offset.i, align 8, !tbaa !261
  call void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_(%"struct.std::pair.38"* %A, %"struct.std::pair.38"* %1, i8* %add.ptr, [256 x i32]* %2, i64 %add, i64 %n, i64 %shl, i1 zeroext true, %"struct.intSort::eBits.40"* byval nonnull align 8 %agg.tmp)
  %cmp5 = icmp ne i32* %bucketOffsets, null
  %cmp10176 = icmp sgt i64 %m, 0
  %or.cond = and i1 %cmp5, %cmp10176
  br i1 %or.cond, label %pfor.detach.preheader, label %cleanup

pfor.detach.preheader:                            ; preds = %if.then
  %3 = add i64 %m, -1
  %4 = zext i32 %__cilkrts_wc8185 to i64
  %5 = add i64 %m, -2
  %6 = add i64 %5, %4
  %7 = udiv i64 %6, %4
  %8 = icmp ult i64 %7, 2048
  %9 = select i1 %8, i64 %7, i64 2048
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach.ls(i64 0, i64 %3, i64 %9, [256 x i32]* %2, i32* nonnull %bucketOffsets)
  br label %cleanup

if.else:                                          ; preds = %_ZN5utilsL6log2UpIlEEiT_.exit
  br i1 %bottomUp, label %while.body.lr.ph.i171, label %if.else17

while.body.lr.ph.i171:                            ; preds = %if.else
  %10 = getelementptr inbounds %"struct.intSort::eBits.40", %"struct.intSort::eBits.40"* %agg.tmp.i, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10)
  %sub.i170 = add nsw i64 %conv, -1
  %div.i = sdiv i64 %sub.i170, 8
  %add.i = add nsw i64 %div.i, 1
  %div2.i = sdiv i64 %sub.i170, %add.i
  %add3.i = add nsw i64 %div2.i, 1
  %_mask.i.i = getelementptr inbounds %"struct.intSort::eBits.40", %"struct.intSort::eBits.40"* %agg.tmp.i, i64 0, i32 1
  %_offset.i.i = getelementptr inbounds %"struct.intSort::eBits.40", %"struct.intSort::eBits.40"* %agg.tmp.i, i64 0, i32 2
  br label %while.body.i175

while.body.i175:                                  ; preds = %while.body.i175, %while.body.lr.ph.i171
  %bitOffset.025.i = phi i64 [ 0, %while.body.lr.ph.i171 ], [ %add8.i, %while.body.i175 ]
  %rbits.024.i = phi i64 [ %add3.i, %while.body.lr.ph.i171 ], [ %spec.select.i, %while.body.i175 ]
  %add4.i = add nsw i64 %rbits.024.i, %bitOffset.025.i
  %cmp5.i = icmp sgt i64 %add4.i, %conv
  %sub6.i = sub nsw i64 %conv, %bitOffset.025.i
  %spec.select.i = select i1 %cmp5.i, i64 %sub6.i, i64 %rbits.024.i
  %sh_prom.i = trunc i64 %spec.select.i to i32
  %shl.i172 = shl i32 1, %sh_prom.i
  %conv.i173 = sext i32 %shl.i172 to i64
  %sub.i.i = add nsw i32 %shl.i172, -1
  %conv.i.i = sext i32 %sub.i.i to i64
  store i64 %conv.i.i, i64* %_mask.i.i, align 8, !tbaa !258
  store i64 %bitOffset.025.i, i64* %_offset.i.i, align 8, !tbaa !261
  call void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_(%"struct.std::pair.38"* %A, %"struct.std::pair.38"* %1, i8* %add.ptr, [256 x i32]* %2, i64 %add, i64 %n, i64 %conv.i173, i1 zeroext true, %"struct.intSort::eBits.40"* byval nonnull align 8 %agg.tmp.i) #2
  %add8.i = add nsw i64 %spec.select.i, %bitOffset.025.i
  %cmp.i174 = icmp slt i64 %add8.i, %conv
  br i1 %cmp.i174, label %while.body.i175, label %_ZN7intSort17radixLoopBottomUpISt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllbT0_.exit

_ZN7intSort17radixLoopBottomUpISt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllbT0_.exit: ; preds = %while.body.i175
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10)
  br label %if.end20

if.else17:                                        ; preds = %if.else
  tail call void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0_(%"struct.std::pair.38"* %A, %"struct.std::pair.38"* %1, i8* %add.ptr, [256 x i32]* %2, i64 %add, i64 %n, i64 %conv)
  br label %if.end20

if.end20:                                         ; preds = %_ZN7intSort17radixLoopBottomUpISt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllbT0_.exit, %if.else17
  %cmp21 = icmp eq i32* %bucketOffsets, null
  br i1 %cmp21, label %cleanup, label %if.then22

if.then22:                                        ; preds = %if.end20
  %cmp32180 = icmp sgt i64 %m, 0
  br i1 %cmp32180, label %pfor.detach34.lr.ph, label %sync.continue45

pfor.detach34.lr.ph:                              ; preds = %if.then22
  %conv40 = trunc i64 %n to i32
  %11 = add i64 %m, -1
  %12 = zext i32 %__cilkrts_wc8185 to i64
  %13 = add i64 %m, -2
  %14 = add i64 %13, %12
  %15 = udiv i64 %14, %12
  %16 = icmp ult i64 %15, 2048
  %17 = select i1 %16, i64 %15, i64 2048
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach34.ls(i64 0, i64 %11, i64 %17, i32* nonnull %bucketOffsets, i32 %conv40)
  br label %sync.continue45

sync.continue45:                                  ; preds = %if.then22, %pfor.detach34.lr.ph
  %cmp57178 = icmp sgt i64 %n, 1
  br i1 %cmp57178, label %pfor.detach59.preheader, label %sync.continue83

pfor.detach59.preheader:                          ; preds = %sync.continue45
  %18 = add i64 %n, -2
  %19 = zext i32 %__cilkrts_wc8185 to i64
  %20 = add i64 %n, -3
  %21 = add i64 %20, %19
  %22 = udiv i64 %21, %19
  %23 = icmp ult i64 %22, 2048
  %24 = select i1 %23, i64 %22, i64 2048
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach59.ls(i64 0, i64 %18, i64 %24, %"struct.std::pair.38"* %A, i32* nonnull %bucketOffsets)
  br label %sync.continue83

sync.continue83:                                  ; preds = %sync.continue45, %pfor.detach59.preheader
  %agg.tmp85.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %A, i64 0, i32 0
  %agg.tmp85.sroa.0.0.copyload = load i32, i32* %agg.tmp85.sroa.0.0..sroa_idx, align 8
  %idxprom = sext i32 %agg.tmp85.sroa.0.0.copyload to i64
  %arrayidx88 = getelementptr inbounds i32, i32* %bucketOffsets, i64 %idxprom
  store i32 0, i32* %arrayidx88, align 4, !tbaa !59
  %conv90 = trunc i64 %n to i32
  %call.i = call i32 @_ZN8sequence4scanIilN5utils4minFIiEENS_4getAIilEEEET_PS6_T0_S8_T1_T2_S6_bb(i32* nonnull %bucketOffsets, i64 0, i64 %m, i32* nonnull %bucketOffsets, i32 %conv90, i1 zeroext true, i1 zeroext true) #2
  br label %cleanup

cleanup:                                          ; preds = %if.then, %pfor.detach.preheader, %sync.continue83, %if.end20
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_(%"struct.std::pair.38"* %A, %"struct.std::pair.38"* %B, i8* %Tmp, [256 x i32]* %BK, i64 %numBK, i64 %n, i64 %m, i1 zeroext %top, %"struct.intSort::eBits.40"* byval align 8 %extract) local_unnamed_addr #7 comdat {
entry:
  %ref.tmp29 = alloca %struct.transpose, align 8
  %ref.tmp42 = alloca %struct.blockTrans.41, align 8
  %div = sdiv i64 %numBK, 3
  %div2 = sdiv i64 %n, 8192
  %add = add nsw i64 %div2, 1
  %cmp.i = icmp slt i64 %add, %div
  %.sroa.speculated135 = select i1 %cmp.i, i64 %add, i64 %div
  %cmp = icmp slt i64 %.sroa.speculated135, 2
  br i1 %cmp, label %if.then, label %pfor.detach.lr.ph

if.then:                                          ; preds = %entry
  %agg.tmp.sroa.2.0..sroa_idx = getelementptr inbounds %"struct.intSort::eBits.40", %"struct.intSort::eBits.40"* %extract, i64 0, i32 1
  %agg.tmp.sroa.2.0.copyload = load i64, i64* %agg.tmp.sroa.2.0..sroa_idx, align 8
  %agg.tmp.sroa.3.0..sroa_idx = getelementptr inbounds %"struct.intSort::eBits.40", %"struct.intSort::eBits.40"* %extract, i64 0, i32 2
  %agg.tmp.sroa.3.0.copyload = load i64, i64* %agg.tmp.sroa.3.0..sroa_idx, align 8
  %cmp74.i.i = icmp sgt i64 %m, 0
  br i1 %cmp74.i.i, label %for.body.lr.ph.i.i, label %for.cond.cleanup.i.i

for.body.lr.ph.i.i:                               ; preds = %if.then
  %counts78.i.i = bitcast [256 x i32]* %BK to i8*
  %0 = shl i64 %m, 2
  tail call void @llvm.memset.p0i8.i64(i8* %counts78.i.i, i8 0, i64 %0, i32 4, i1 false) #2
  br label %for.cond.cleanup.i.i

for.cond.cleanup.i.i:                             ; preds = %for.body.lr.ph.i.i, %if.then
  %cmp272.i.i = icmp sgt i64 %n, 0
  br i1 %cmp272.i.i, label %for.body4.lr.ph.i.i, label %for.cond.cleanup3.i.i

for.body4.lr.ph.i.i:                              ; preds = %for.cond.cleanup.i.i
  %sh_prom.i.i.i = trunc i64 %agg.tmp.sroa.3.0.copyload to i32
  %xtraiter170 = and i64 %n, 1
  %1 = icmp eq i64 %n, 1
  br i1 %1, label %for.body4.i.i.epil, label %for.body4.lr.ph.i.i.new

for.body4.lr.ph.i.i.new:                          ; preds = %for.body4.lr.ph.i.i
  %unroll_iter172 = sub i64 %n, %xtraiter170
  br label %for.body4.i.i

for.cond.cleanup3.i.i.loopexit.unr-lcssa:         ; preds = %for.body4.i.i
  %lcmp.mod171 = icmp eq i64 %xtraiter170, 0
  br i1 %lcmp.mod171, label %for.cond.cleanup3.i.i, label %for.body4.i.i.epil

for.body4.i.i.epil:                               ; preds = %for.body4.lr.ph.i.i, %for.cond.cleanup3.i.i.loopexit.unr-lcssa
  %j.073.i.i.unr205 = phi i64 [ %inc11.i.i.1, %for.cond.cleanup3.i.i.loopexit.unr-lcssa ], [ 0, %for.body4.lr.ph.i.i ]
  %agg.tmp.sroa.0.0..sroa_idx.i.i.epil = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %A, i64 %j.073.i.i.unr205, i32 0
  %agg.tmp.sroa.0.0.copyload.i.i.epil = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.i.epil, align 8
  %shr.i.i.i.epil = ashr i32 %agg.tmp.sroa.0.0.copyload.i.i.epil, %sh_prom.i.i.i
  %conv.i.i.i.epil = sext i32 %shr.i.i.i.epil to i64
  %and.i.i.i.epil = and i64 %agg.tmp.sroa.2.0.copyload, %conv.i.i.i.epil
  %conv.i.i.epil = trunc i64 %and.i.i.i.epil to i8
  %arrayidx6.i.i.epil = getelementptr inbounds i8, i8* %Tmp, i64 %j.073.i.i.unr205
  store i8 %conv.i.i.epil, i8* %arrayidx6.i.i.epil, align 1, !tbaa !22
  %conv7.i.i.epil = and i64 %and.i.i.i.epil, 255
  %arrayidx8.i.i.epil = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %conv7.i.i.epil
  %2 = load i32, i32* %arrayidx8.i.i.epil, align 4, !tbaa !59
  %inc9.i.i.epil = add i32 %2, 1
  store i32 %inc9.i.i.epil, i32* %arrayidx8.i.i.epil, align 4, !tbaa !59
  br label %for.cond.cleanup3.i.i

for.cond.cleanup3.i.i:                            ; preds = %for.body4.i.i.epil, %for.cond.cleanup3.i.i.loopexit.unr-lcssa, %for.cond.cleanup.i.i
  br i1 %cmp74.i.i, label %for.body17.i.i.preheader, label %for.cond.cleanup16.i.i

for.body17.i.i.preheader:                         ; preds = %for.cond.cleanup3.i.i
  %3 = add i64 %m, -1
  %xtraiter165 = and i64 %m, 7
  %4 = icmp ult i64 %3, 7
  br i1 %4, label %for.cond.cleanup16.i.i.loopexit.unr-lcssa, label %for.body17.i.i.preheader.new

for.body17.i.i.preheader.new:                     ; preds = %for.body17.i.i.preheader
  %unroll_iter168 = sub i64 %m, %xtraiter165
  br label %for.body17.i.i

for.body4.i.i:                                    ; preds = %for.body4.i.i, %for.body4.lr.ph.i.i.new
  %j.073.i.i = phi i64 [ 0, %for.body4.lr.ph.i.i.new ], [ %inc11.i.i.1, %for.body4.i.i ]
  %niter173 = phi i64 [ %unroll_iter172, %for.body4.lr.ph.i.i.new ], [ %niter173.nsub.1, %for.body4.i.i ]
  %agg.tmp.sroa.0.0..sroa_idx.i.i = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %A, i64 %j.073.i.i, i32 0
  %agg.tmp.sroa.0.0.copyload.i.i = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.i, align 8
  %shr.i.i.i = ashr i32 %agg.tmp.sroa.0.0.copyload.i.i, %sh_prom.i.i.i
  %conv.i.i.i = sext i32 %shr.i.i.i to i64
  %and.i.i.i = and i64 %agg.tmp.sroa.2.0.copyload, %conv.i.i.i
  %conv.i.i = trunc i64 %and.i.i.i to i8
  %arrayidx6.i.i = getelementptr inbounds i8, i8* %Tmp, i64 %j.073.i.i
  store i8 %conv.i.i, i8* %arrayidx6.i.i, align 1, !tbaa !22
  %conv7.i.i = and i64 %and.i.i.i, 255
  %arrayidx8.i.i = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %conv7.i.i
  %5 = load i32, i32* %arrayidx8.i.i, align 4, !tbaa !59
  %inc9.i.i = add i32 %5, 1
  store i32 %inc9.i.i, i32* %arrayidx8.i.i, align 4, !tbaa !59
  %inc11.i.i = or i64 %j.073.i.i, 1
  %agg.tmp.sroa.0.0..sroa_idx.i.i.1 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %A, i64 %inc11.i.i, i32 0
  %agg.tmp.sroa.0.0.copyload.i.i.1 = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.i.1, align 8
  %shr.i.i.i.1 = ashr i32 %agg.tmp.sroa.0.0.copyload.i.i.1, %sh_prom.i.i.i
  %conv.i.i.i.1 = sext i32 %shr.i.i.i.1 to i64
  %and.i.i.i.1 = and i64 %agg.tmp.sroa.2.0.copyload, %conv.i.i.i.1
  %conv.i.i.1 = trunc i64 %and.i.i.i.1 to i8
  %arrayidx6.i.i.1 = getelementptr inbounds i8, i8* %Tmp, i64 %inc11.i.i
  store i8 %conv.i.i.1, i8* %arrayidx6.i.i.1, align 1, !tbaa !22
  %conv7.i.i.1 = and i64 %and.i.i.i.1, 255
  %arrayidx8.i.i.1 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %conv7.i.i.1
  %6 = load i32, i32* %arrayidx8.i.i.1, align 4, !tbaa !59
  %inc9.i.i.1 = add i32 %6, 1
  store i32 %inc9.i.i.1, i32* %arrayidx8.i.i.1, align 4, !tbaa !59
  %inc11.i.i.1 = add nuw nsw i64 %j.073.i.i, 2
  %niter173.nsub.1 = add i64 %niter173, -2
  %niter173.ncmp.1 = icmp eq i64 %niter173.nsub.1, 0
  br i1 %niter173.ncmp.1, label %for.cond.cleanup3.i.i.loopexit.unr-lcssa, label %for.body4.i.i

for.cond.cleanup16.i.i.loopexit.unr-lcssa:        ; preds = %for.body17.i.i, %for.body17.i.i.preheader
  %i13.071.i.i.unr = phi i64 [ 0, %for.body17.i.i.preheader ], [ %inc21.i.i.7, %for.body17.i.i ]
  %s.070.i.i.unr = phi i32 [ 0, %for.body17.i.i.preheader ], [ %add.i.i.7, %for.body17.i.i ]
  %lcmp.mod167 = icmp eq i64 %xtraiter165, 0
  br i1 %lcmp.mod167, label %for.cond.cleanup16.i.i, label %for.body17.i.i.epil.preheader

for.body17.i.i.epil.preheader:                    ; preds = %for.cond.cleanup16.i.i.loopexit.unr-lcssa
  br label %for.body17.i.i.epil

for.body17.i.i.epil:                              ; preds = %for.body17.i.i.epil.preheader, %for.body17.i.i.epil
  %i13.071.i.i.epil = phi i64 [ %inc21.i.i.epil, %for.body17.i.i.epil ], [ %i13.071.i.i.unr, %for.body17.i.i.epil.preheader ]
  %s.070.i.i.epil = phi i32 [ %add.i.i.epil, %for.body17.i.i.epil ], [ %s.070.i.i.unr, %for.body17.i.i.epil.preheader ]
  %epil.iter166 = phi i64 [ %epil.iter166.sub, %for.body17.i.i.epil ], [ %xtraiter165, %for.body17.i.i.epil.preheader ]
  %arrayidx18.i.i.epil = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %i13.071.i.i.epil
  %7 = load i32, i32* %arrayidx18.i.i.epil, align 4, !tbaa !59
  %add.i.i.epil = add i32 %7, %s.070.i.i.epil
  store i32 %add.i.i.epil, i32* %arrayidx18.i.i.epil, align 4, !tbaa !59
  %inc21.i.i.epil = add nuw nsw i64 %i13.071.i.i.epil, 1
  %epil.iter166.sub = add nsw i64 %epil.iter166, -1
  %epil.iter166.cmp = icmp eq i64 %epil.iter166.sub, 0
  br i1 %epil.iter166.cmp, label %for.cond.cleanup16.i.i, label %for.body17.i.i.epil, !llvm.loop !262

for.cond.cleanup16.i.i:                           ; preds = %for.body17.i.i.epil, %for.cond.cleanup16.i.i.loopexit.unr-lcssa, %for.cond.cleanup3.i.i
  br i1 %cmp272.i.i, label %for.body27.i.i.preheader, label %cleanup

for.body27.i.i.preheader:                         ; preds = %for.cond.cleanup16.i.i
  br label %for.body27.i.i

for.body17.i.i:                                   ; preds = %for.body17.i.i, %for.body17.i.i.preheader.new
  %i13.071.i.i = phi i64 [ 0, %for.body17.i.i.preheader.new ], [ %inc21.i.i.7, %for.body17.i.i ]
  %s.070.i.i = phi i32 [ 0, %for.body17.i.i.preheader.new ], [ %add.i.i.7, %for.body17.i.i ]
  %niter169 = phi i64 [ %unroll_iter168, %for.body17.i.i.preheader.new ], [ %niter169.nsub.7, %for.body17.i.i ]
  %arrayidx18.i.i = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %i13.071.i.i
  %8 = load i32, i32* %arrayidx18.i.i, align 4, !tbaa !59
  %add.i.i = add i32 %8, %s.070.i.i
  store i32 %add.i.i, i32* %arrayidx18.i.i, align 4, !tbaa !59
  %inc21.i.i = or i64 %i13.071.i.i, 1
  %arrayidx18.i.i.1 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i
  %9 = load i32, i32* %arrayidx18.i.i.1, align 4, !tbaa !59
  %add.i.i.1 = add i32 %9, %add.i.i
  store i32 %add.i.i.1, i32* %arrayidx18.i.i.1, align 4, !tbaa !59
  %inc21.i.i.1 = or i64 %i13.071.i.i, 2
  %arrayidx18.i.i.2 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i.1
  %10 = load i32, i32* %arrayidx18.i.i.2, align 4, !tbaa !59
  %add.i.i.2 = add i32 %10, %add.i.i.1
  store i32 %add.i.i.2, i32* %arrayidx18.i.i.2, align 4, !tbaa !59
  %inc21.i.i.2 = or i64 %i13.071.i.i, 3
  %arrayidx18.i.i.3 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i.2
  %11 = load i32, i32* %arrayidx18.i.i.3, align 4, !tbaa !59
  %add.i.i.3 = add i32 %11, %add.i.i.2
  store i32 %add.i.i.3, i32* %arrayidx18.i.i.3, align 4, !tbaa !59
  %inc21.i.i.3 = or i64 %i13.071.i.i, 4
  %arrayidx18.i.i.4 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i.3
  %12 = load i32, i32* %arrayidx18.i.i.4, align 4, !tbaa !59
  %add.i.i.4 = add i32 %12, %add.i.i.3
  store i32 %add.i.i.4, i32* %arrayidx18.i.i.4, align 4, !tbaa !59
  %inc21.i.i.4 = or i64 %i13.071.i.i, 5
  %arrayidx18.i.i.5 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i.4
  %13 = load i32, i32* %arrayidx18.i.i.5, align 4, !tbaa !59
  %add.i.i.5 = add i32 %13, %add.i.i.4
  store i32 %add.i.i.5, i32* %arrayidx18.i.i.5, align 4, !tbaa !59
  %inc21.i.i.5 = or i64 %i13.071.i.i, 6
  %arrayidx18.i.i.6 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i.5
  %14 = load i32, i32* %arrayidx18.i.i.6, align 4, !tbaa !59
  %add.i.i.6 = add i32 %14, %add.i.i.5
  store i32 %add.i.i.6, i32* %arrayidx18.i.i.6, align 4, !tbaa !59
  %inc21.i.i.6 = or i64 %i13.071.i.i, 7
  %arrayidx18.i.i.7 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i.6
  %15 = load i32, i32* %arrayidx18.i.i.7, align 4, !tbaa !59
  %add.i.i.7 = add i32 %15, %add.i.i.6
  store i32 %add.i.i.7, i32* %arrayidx18.i.i.7, align 4, !tbaa !59
  %inc21.i.i.7 = add nuw nsw i64 %i13.071.i.i, 8
  %niter169.nsub.7 = add i64 %niter169, -8
  %niter169.ncmp.7 = icmp eq i64 %niter169.nsub.7, 0
  br i1 %niter169.ncmp.7, label %for.cond.cleanup16.i.i.loopexit.unr-lcssa, label %for.body17.i.i

for.body27.i.i:                                   ; preds = %for.body27.i.i.preheader, %for.body27.i.i
  %j23.068.in.i.i = phi i64 [ %j23.068.i.i, %for.body27.i.i ], [ %n, %for.body27.i.i.preheader ]
  %j23.068.i.i = add nsw i64 %j23.068.in.i.i, -1
  %arrayidx28.i.i = getelementptr inbounds i8, i8* %Tmp, i64 %j23.068.i.i
  %16 = load i8, i8* %arrayidx28.i.i, align 1, !tbaa !22
  %idxprom29.i.i = zext i8 %16 to i64
  %arrayidx30.i.i = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %idxprom29.i.i
  %17 = load i32, i32* %arrayidx30.i.i, align 4, !tbaa !59
  %dec.i.i = add i32 %17, -1
  store i32 %dec.i.i, i32* %arrayidx30.i.i, align 4, !tbaa !59
  %idxprom32.i.i = zext i32 %dec.i.i to i64
  %first.i.i.i = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %A, i64 %j23.068.i.i, i32 0
  %18 = load i32, i32* %first.i.i.i, align 8, !tbaa !250
  %first2.i.i.i = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B, i64 %idxprom32.i.i, i32 0
  store i32 %18, i32* %first2.i.i.i, align 8, !tbaa !250
  %second.i.i.i = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %A, i64 %j23.068.i.i, i32 1
  %19 = bitcast %struct.vertex.29** %second.i.i.i to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !252
  %second3.i.i.i = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B, i64 %idxprom32.i.i, i32 1
  %21 = bitcast %struct.vertex.29** %second3.i.i.i to i64*
  store i64 %20, i64* %21, align 8, !tbaa !252
  %cmp25.i.i = icmp sgt i64 %j23.068.in.i.i, 1
  br i1 %cmp25.i.i, label %for.body27.i.i, label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %for.body27.i.i
  %22 = add i64 %n, -1
  %xtraiter = and i64 %n, 3
  %23 = icmp ult i64 %22, 3
  br i1 %23, label %cleanup.loopexit.unr-lcssa, label %for.body.i.preheader.new

for.body.i.preheader.new:                         ; preds = %for.body.i.preheader
  %unroll_iter = sub i64 %n, %xtraiter
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.i.preheader.new
  %i.018.i = phi i64 [ 0, %for.body.i.preheader.new ], [ %inc.i.3, %for.body.i ]
  %niter = phi i64 [ %unroll_iter, %for.body.i.preheader.new ], [ %niter.nsub.3, %for.body.i ]
  %first.i.i = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B, i64 %i.018.i, i32 0
  %24 = load i32, i32* %first.i.i, align 8, !tbaa !250
  %first2.i.i = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %A, i64 %i.018.i, i32 0
  store i32 %24, i32* %first2.i.i, align 8, !tbaa !250
  %second.i.i = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B, i64 %i.018.i, i32 1
  %25 = bitcast %struct.vertex.29** %second.i.i to i64*
  %26 = load i64, i64* %25, align 8, !tbaa !252
  %second3.i.i = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %A, i64 %i.018.i, i32 1
  %27 = bitcast %struct.vertex.29** %second3.i.i to i64*
  store i64 %26, i64* %27, align 8, !tbaa !252
  %inc.i = or i64 %i.018.i, 1
  %first.i.i.1 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B, i64 %inc.i, i32 0
  %28 = load i32, i32* %first.i.i.1, align 8, !tbaa !250
  %first2.i.i.1 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %A, i64 %inc.i, i32 0
  store i32 %28, i32* %first2.i.i.1, align 8, !tbaa !250
  %second.i.i.1 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B, i64 %inc.i, i32 1
  %29 = bitcast %struct.vertex.29** %second.i.i.1 to i64*
  %30 = load i64, i64* %29, align 8, !tbaa !252
  %second3.i.i.1 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %A, i64 %inc.i, i32 1
  %31 = bitcast %struct.vertex.29** %second3.i.i.1 to i64*
  store i64 %30, i64* %31, align 8, !tbaa !252
  %inc.i.1 = or i64 %i.018.i, 2
  %first.i.i.2 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B, i64 %inc.i.1, i32 0
  %32 = load i32, i32* %first.i.i.2, align 8, !tbaa !250
  %first2.i.i.2 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %A, i64 %inc.i.1, i32 0
  store i32 %32, i32* %first2.i.i.2, align 8, !tbaa !250
  %second.i.i.2 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B, i64 %inc.i.1, i32 1
  %33 = bitcast %struct.vertex.29** %second.i.i.2 to i64*
  %34 = load i64, i64* %33, align 8, !tbaa !252
  %second3.i.i.2 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %A, i64 %inc.i.1, i32 1
  %35 = bitcast %struct.vertex.29** %second3.i.i.2 to i64*
  store i64 %34, i64* %35, align 8, !tbaa !252
  %inc.i.2 = or i64 %i.018.i, 3
  %first.i.i.3 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B, i64 %inc.i.2, i32 0
  %36 = load i32, i32* %first.i.i.3, align 8, !tbaa !250
  %first2.i.i.3 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %A, i64 %inc.i.2, i32 0
  store i32 %36, i32* %first2.i.i.3, align 8, !tbaa !250
  %second.i.i.3 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B, i64 %inc.i.2, i32 1
  %37 = bitcast %struct.vertex.29** %second.i.i.3 to i64*
  %38 = load i64, i64* %37, align 8, !tbaa !252
  %second3.i.i.3 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %A, i64 %inc.i.2, i32 1
  %39 = bitcast %struct.vertex.29** %second3.i.i.3 to i64*
  store i64 %38, i64* %39, align 8, !tbaa !252
  %inc.i.3 = add nuw nsw i64 %i.018.i, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %cleanup.loopexit.unr-lcssa, label %for.body.i

pfor.detach.lr.ph:                                ; preds = %entry
  %add3 = add i64 %n, -1
  %sub = add i64 %add3, %.sroa.speculated135
  %div4 = sdiv i64 %sub, %.sroa.speculated135
  %40 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 0
  %41 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 0
  %mul5 = shl nsw i64 %.sroa.speculated135, 1
  %42 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %mul5, i64 0
  %agg.tmp28.sroa.2.0..sroa_idx = getelementptr inbounds %"struct.intSort::eBits.40", %"struct.intSort::eBits.40"* %extract, i64 0, i32 1
  %agg.tmp28.sroa.2.0.copyload = load i64, i64* %agg.tmp28.sroa.2.0..sroa_idx, align 8
  %agg.tmp28.sroa.3.0..sroa_idx = getelementptr inbounds %"struct.intSort::eBits.40", %"struct.intSort::eBits.40"* %extract, i64 0, i32 2
  %agg.tmp28.sroa.3.0.copyload = load i64, i64* %agg.tmp28.sroa.3.0..sroa_idx, align 8
  %cmp74.i = icmp sgt i64 %m, 0
  %sh_prom.i.i = trunc i64 %agg.tmp28.sroa.3.0.copyload to i32
  br i1 %cmp74.i, label %pfor.detach.us.preheader, label %pfor.detach.preheader

pfor.detach.preheader:                            ; preds = %pfor.detach.lr.ph
  %43 = xor i64 %div, -1
  %44 = sub nsw i64 -2, %div2
  %45 = icmp slt i64 %44, %43
  %smax202 = select i1 %45, i64 %43, i64 %44
  %46 = sub nsw i64 -2, %smax202
  tail call fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.ls(i64 0, i64 %46, i64 %div4, i64 %n, %"struct.std::pair.38"* %A, i8* %Tmp, i64 %m, [256 x i32]* %BK, i64 %mul5, i32 %sh_prom.i.i, i64 %agg.tmp28.sroa.2.0.copyload, %"struct.std::pair.38"* %B)
  br label %sync.continue

pfor.detach.us.preheader:                         ; preds = %pfor.detach.lr.ph
  %47 = shl i64 %m, 2
  %48 = add i64 %m, -1
  %xtraiter189 = and i64 %m, 7
  %49 = icmp ult i64 %48, 7
  %unroll_iter192 = sub i64 %m, %xtraiter189
  %lcmp.mod191 = icmp eq i64 %xtraiter189, 0
  %50 = xor i64 %div, -1
  %51 = sub nsw i64 -2, %div2
  %52 = icmp slt i64 %51, %50
  %smax203 = select i1 %52, i64 %50, i64 %51
  %53 = sub nsw i64 -2, %smax203
  tail call fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.us.ls(i64 0, i64 %53, i64 %div4, i64 %n, %"struct.std::pair.38"* %A, i8* %Tmp, i64 %m, [256 x i32]* %BK, i64 %mul5, i64 %47, i32 %sh_prom.i.i, i64 %agg.tmp28.sroa.2.0.copyload, i1 %49, i64 %unroll_iter192, i1 %lcmp.mod191, i64 %xtraiter189, %"struct.std::pair.38"* %B)
  br label %sync.continue

sync.continue:                                    ; preds = %pfor.detach.us.preheader, %pfor.detach.preheader
  %54 = bitcast %struct.transpose* %ref.tmp29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #2
  %A.i116 = getelementptr inbounds %struct.transpose, %struct.transpose* %ref.tmp29, i64 0, i32 0
  store i32* %40, i32** %A.i116, align 8, !tbaa !122
  %B.i117 = getelementptr inbounds %struct.transpose, %struct.transpose* %ref.tmp29, i64 0, i32 1
  store i32* %41, i32** %B.i117, align 8, !tbaa !124
  %conv30 = trunc i64 %.sroa.speculated135 to i32
  %conv31 = trunc i64 %m to i32
  call void @_ZN9transposeIjjE6transREjjjjjj(%struct.transpose* nonnull %ref.tmp29, i32 0, i32 %conv30, i32 %conv31, i32 0, i32 %conv31, i32 %conv30) #2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #2
  %mul33 = mul nsw i64 %.sroa.speculated135, %m
  br i1 %top, label %if.then32, label %if.else

if.then32:                                        ; preds = %sync.continue
  %call.i = call i32 @_ZN8sequence4scanIjlN5utils4addFIjEENS_4getAIjlEEEET_PS6_T0_S8_T1_T2_S6_bb(i32* %41, i64 0, i64 %mul33, i32* %41, i32 0, i1 zeroext false, i1 zeroext false) #2
  br label %if.end41

if.else:                                          ; preds = %sync.continue
  %cmp34110.i.i = icmp sgt i64 %mul33, 0
  br i1 %cmp34110.i.i, label %for.body36.i.i.preheader, label %if.end41

for.body36.i.i.preheader:                         ; preds = %if.else
  %55 = add i64 %mul33, -1
  %xtraiter179 = and i64 %mul33, 7
  %56 = icmp ult i64 %55, 7
  br i1 %56, label %if.end41.loopexit.unr-lcssa, label %for.body36.i.i.preheader.new

for.body36.i.i.preheader.new:                     ; preds = %for.body36.i.i.preheader
  %unroll_iter182 = sub i64 %mul33, %xtraiter179
  br label %for.body36.i.i

for.body36.i.i:                                   ; preds = %for.body36.i.i, %for.body36.i.i.preheader.new
  %i32.0112.i.i = phi i64 [ 0, %for.body36.i.i.preheader.new ], [ %inc42.i.i.7, %for.body36.i.i ]
  %r.3111.i.i = phi i32 [ 0, %for.body36.i.i.preheader.new ], [ %add.i.i.i.7, %for.body36.i.i ]
  %niter183 = phi i64 [ %unroll_iter182, %for.body36.i.i.preheader.new ], [ %niter183.nsub.7, %for.body36.i.i ]
  %arrayidx.i72.i.i = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %i32.0112.i.i
  %57 = load i32, i32* %arrayidx.i72.i.i, align 4, !tbaa !59
  store i32 %r.3111.i.i, i32* %arrayidx.i72.i.i, align 4, !tbaa !59
  %add.i.i.i = add i32 %57, %r.3111.i.i
  %inc42.i.i = or i64 %i32.0112.i.i, 1
  %arrayidx.i72.i.i.1 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i
  %58 = load i32, i32* %arrayidx.i72.i.i.1, align 4, !tbaa !59
  store i32 %add.i.i.i, i32* %arrayidx.i72.i.i.1, align 4, !tbaa !59
  %add.i.i.i.1 = add i32 %58, %add.i.i.i
  %inc42.i.i.1 = or i64 %i32.0112.i.i, 2
  %arrayidx.i72.i.i.2 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i.1
  %59 = load i32, i32* %arrayidx.i72.i.i.2, align 4, !tbaa !59
  store i32 %add.i.i.i.1, i32* %arrayidx.i72.i.i.2, align 4, !tbaa !59
  %add.i.i.i.2 = add i32 %59, %add.i.i.i.1
  %inc42.i.i.2 = or i64 %i32.0112.i.i, 3
  %arrayidx.i72.i.i.3 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i.2
  %60 = load i32, i32* %arrayidx.i72.i.i.3, align 4, !tbaa !59
  store i32 %add.i.i.i.2, i32* %arrayidx.i72.i.i.3, align 4, !tbaa !59
  %add.i.i.i.3 = add i32 %60, %add.i.i.i.2
  %inc42.i.i.3 = or i64 %i32.0112.i.i, 4
  %arrayidx.i72.i.i.4 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i.3
  %61 = load i32, i32* %arrayidx.i72.i.i.4, align 4, !tbaa !59
  store i32 %add.i.i.i.3, i32* %arrayidx.i72.i.i.4, align 4, !tbaa !59
  %add.i.i.i.4 = add i32 %61, %add.i.i.i.3
  %inc42.i.i.4 = or i64 %i32.0112.i.i, 5
  %arrayidx.i72.i.i.5 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i.4
  %62 = load i32, i32* %arrayidx.i72.i.i.5, align 4, !tbaa !59
  store i32 %add.i.i.i.4, i32* %arrayidx.i72.i.i.5, align 4, !tbaa !59
  %add.i.i.i.5 = add i32 %62, %add.i.i.i.4
  %inc42.i.i.5 = or i64 %i32.0112.i.i, 6
  %arrayidx.i72.i.i.6 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i.5
  %63 = load i32, i32* %arrayidx.i72.i.i.6, align 4, !tbaa !59
  store i32 %add.i.i.i.5, i32* %arrayidx.i72.i.i.6, align 4, !tbaa !59
  %add.i.i.i.6 = add i32 %63, %add.i.i.i.5
  %inc42.i.i.6 = or i64 %i32.0112.i.i, 7
  %arrayidx.i72.i.i.7 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i.6
  %64 = load i32, i32* %arrayidx.i72.i.i.7, align 4, !tbaa !59
  store i32 %add.i.i.i.6, i32* %arrayidx.i72.i.i.7, align 4, !tbaa !59
  %add.i.i.i.7 = add i32 %64, %add.i.i.i.6
  %inc42.i.i.7 = add nuw nsw i64 %i32.0112.i.i, 8
  %niter183.nsub.7 = add i64 %niter183, -8
  %niter183.ncmp.7 = icmp eq i64 %niter183.nsub.7, 0
  br i1 %niter183.ncmp.7, label %if.end41.loopexit.unr-lcssa, label %for.body36.i.i

if.end41.loopexit.unr-lcssa:                      ; preds = %for.body36.i.i, %for.body36.i.i.preheader
  %i32.0112.i.i.unr = phi i64 [ 0, %for.body36.i.i.preheader ], [ %inc42.i.i.7, %for.body36.i.i ]
  %r.3111.i.i.unr = phi i32 [ 0, %for.body36.i.i.preheader ], [ %add.i.i.i.7, %for.body36.i.i ]
  %lcmp.mod181 = icmp eq i64 %xtraiter179, 0
  br i1 %lcmp.mod181, label %if.end41, label %for.body36.i.i.epil.preheader

for.body36.i.i.epil.preheader:                    ; preds = %if.end41.loopexit.unr-lcssa
  br label %for.body36.i.i.epil

for.body36.i.i.epil:                              ; preds = %for.body36.i.i.epil.preheader, %for.body36.i.i.epil
  %i32.0112.i.i.epil = phi i64 [ %inc42.i.i.epil, %for.body36.i.i.epil ], [ %i32.0112.i.i.unr, %for.body36.i.i.epil.preheader ]
  %r.3111.i.i.epil = phi i32 [ %add.i.i.i.epil, %for.body36.i.i.epil ], [ %r.3111.i.i.unr, %for.body36.i.i.epil.preheader ]
  %epil.iter180 = phi i64 [ %epil.iter180.sub, %for.body36.i.i.epil ], [ %xtraiter179, %for.body36.i.i.epil.preheader ]
  %arrayidx.i72.i.i.epil = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %i32.0112.i.i.epil
  %65 = load i32, i32* %arrayidx.i72.i.i.epil, align 4, !tbaa !59
  store i32 %r.3111.i.i.epil, i32* %arrayidx.i72.i.i.epil, align 4, !tbaa !59
  %add.i.i.i.epil = add i32 %65, %r.3111.i.i.epil
  %inc42.i.i.epil = add nuw nsw i64 %i32.0112.i.i.epil, 1
  %epil.iter180.sub = add nsw i64 %epil.iter180, -1
  %epil.iter180.cmp = icmp eq i64 %epil.iter180.sub, 0
  br i1 %epil.iter180.cmp, label %if.end41, label %for.body36.i.i.epil, !llvm.loop !263

if.end41:                                         ; preds = %for.body36.i.i.epil, %if.end41.loopexit.unr-lcssa, %if.else, %if.then32
  %66 = bitcast %struct.blockTrans.41* %ref.tmp42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %66) #2
  %A.i = getelementptr inbounds %struct.blockTrans.41, %struct.blockTrans.41* %ref.tmp42, i64 0, i32 0
  store %"struct.std::pair.38"* %B, %"struct.std::pair.38"** %A.i, align 8, !tbaa !264
  %B.i = getelementptr inbounds %struct.blockTrans.41, %struct.blockTrans.41* %ref.tmp42, i64 0, i32 1
  store %"struct.std::pair.38"* %A, %"struct.std::pair.38"** %B.i, align 8, !tbaa !266
  %OA.i = getelementptr inbounds %struct.blockTrans.41, %struct.blockTrans.41* %ref.tmp42, i64 0, i32 2
  store i32* %42, i32** %OA.i, align 8, !tbaa !267
  %OB.i = getelementptr inbounds %struct.blockTrans.41, %struct.blockTrans.41* %ref.tmp42, i64 0, i32 3
  store i32* %41, i32** %OB.i, align 8, !tbaa !268
  %L.i = getelementptr inbounds %struct.blockTrans.41, %struct.blockTrans.41* %ref.tmp42, i64 0, i32 4
  store i32* %40, i32** %L.i, align 8, !tbaa !269
  call void @_ZN10blockTransISt4pairIiP6vertexI8_point3dIdELi1EEEjE6transREjjjjjj(%struct.blockTrans.41* nonnull %ref.tmp42, i32 0, i32 %conv30, i32 %conv31, i32 0, i32 %conv31, i32 %conv30) #2
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %66) #2
  br i1 %cmp74.i, label %for.body.preheader, label %cleanup

for.body.preheader:                               ; preds = %if.end41
  %67 = add i64 %m, -1
  %xtraiter174 = and i64 %m, 7
  %68 = icmp ult i64 %67, 7
  br i1 %68, label %cleanup.loopexit163.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter177 = sub i64 %m, %xtraiter174
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.preheader.new
  %j.0154 = phi i64 [ 0, %for.body.preheader.new ], [ %inc50.7, %for.body ]
  %niter178 = phi i64 [ %unroll_iter177, %for.body.preheader.new ], [ %niter178.nsub.7, %for.body ]
  %mul46 = mul nsw i64 %j.0154, %.sroa.speculated135
  %arrayidx47 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46
  %69 = load i32, i32* %arrayidx47, align 4, !tbaa !59
  %arrayidx49 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %j.0154
  store i32 %69, i32* %arrayidx49, align 4, !tbaa !59
  %inc50 = or i64 %j.0154, 1
  %mul46.1 = mul nsw i64 %inc50, %.sroa.speculated135
  %arrayidx47.1 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.1
  %70 = load i32, i32* %arrayidx47.1, align 4, !tbaa !59
  %arrayidx49.1 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50
  store i32 %70, i32* %arrayidx49.1, align 4, !tbaa !59
  %inc50.1 = or i64 %j.0154, 2
  %mul46.2 = mul nsw i64 %inc50.1, %.sroa.speculated135
  %arrayidx47.2 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.2
  %71 = load i32, i32* %arrayidx47.2, align 4, !tbaa !59
  %arrayidx49.2 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50.1
  store i32 %71, i32* %arrayidx49.2, align 4, !tbaa !59
  %inc50.2 = or i64 %j.0154, 3
  %mul46.3 = mul nsw i64 %inc50.2, %.sroa.speculated135
  %arrayidx47.3 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.3
  %72 = load i32, i32* %arrayidx47.3, align 4, !tbaa !59
  %arrayidx49.3 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50.2
  store i32 %72, i32* %arrayidx49.3, align 4, !tbaa !59
  %inc50.3 = or i64 %j.0154, 4
  %mul46.4 = mul nsw i64 %inc50.3, %.sroa.speculated135
  %arrayidx47.4 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.4
  %73 = load i32, i32* %arrayidx47.4, align 4, !tbaa !59
  %arrayidx49.4 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50.3
  store i32 %73, i32* %arrayidx49.4, align 4, !tbaa !59
  %inc50.4 = or i64 %j.0154, 5
  %mul46.5 = mul nsw i64 %inc50.4, %.sroa.speculated135
  %arrayidx47.5 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.5
  %74 = load i32, i32* %arrayidx47.5, align 4, !tbaa !59
  %arrayidx49.5 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50.4
  store i32 %74, i32* %arrayidx49.5, align 4, !tbaa !59
  %inc50.5 = or i64 %j.0154, 6
  %mul46.6 = mul nsw i64 %inc50.5, %.sroa.speculated135
  %arrayidx47.6 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.6
  %75 = load i32, i32* %arrayidx47.6, align 4, !tbaa !59
  %arrayidx49.6 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50.5
  store i32 %75, i32* %arrayidx49.6, align 4, !tbaa !59
  %inc50.6 = or i64 %j.0154, 7
  %mul46.7 = mul nsw i64 %inc50.6, %.sroa.speculated135
  %arrayidx47.7 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.7
  %76 = load i32, i32* %arrayidx47.7, align 4, !tbaa !59
  %arrayidx49.7 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50.6
  store i32 %76, i32* %arrayidx49.7, align 4, !tbaa !59
  %inc50.7 = add nuw nsw i64 %j.0154, 8
  %niter178.nsub.7 = add i64 %niter178, -8
  %niter178.ncmp.7 = icmp eq i64 %niter178.nsub.7, 0
  br i1 %niter178.ncmp.7, label %cleanup.loopexit163.unr-lcssa, label %for.body

cleanup.loopexit.unr-lcssa:                       ; preds = %for.body.i, %for.body.i.preheader
  %i.018.i.unr = phi i64 [ 0, %for.body.i.preheader ], [ %inc.i.3, %for.body.i ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %cleanup, label %for.body.i.epil.preheader

for.body.i.epil.preheader:                        ; preds = %cleanup.loopexit.unr-lcssa
  br label %for.body.i.epil

for.body.i.epil:                                  ; preds = %for.body.i.epil.preheader, %for.body.i.epil
  %i.018.i.epil = phi i64 [ %inc.i.epil, %for.body.i.epil ], [ %i.018.i.unr, %for.body.i.epil.preheader ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body.i.epil ], [ %xtraiter, %for.body.i.epil.preheader ]
  %first.i.i.epil = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B, i64 %i.018.i.epil, i32 0
  %77 = load i32, i32* %first.i.i.epil, align 8, !tbaa !250
  %first2.i.i.epil = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %A, i64 %i.018.i.epil, i32 0
  store i32 %77, i32* %first2.i.i.epil, align 8, !tbaa !250
  %second.i.i.epil = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B, i64 %i.018.i.epil, i32 1
  %78 = bitcast %struct.vertex.29** %second.i.i.epil to i64*
  %79 = load i64, i64* %78, align 8, !tbaa !252
  %second3.i.i.epil = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %A, i64 %i.018.i.epil, i32 1
  %80 = bitcast %struct.vertex.29** %second3.i.i.epil to i64*
  store i64 %79, i64* %80, align 8, !tbaa !252
  %inc.i.epil = add nuw nsw i64 %i.018.i.epil, 1
  %epil.iter.sub = add nsw i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %cleanup, label %for.body.i.epil, !llvm.loop !270

cleanup.loopexit163.unr-lcssa:                    ; preds = %for.body, %for.body.preheader
  %j.0154.unr = phi i64 [ 0, %for.body.preheader ], [ %inc50.7, %for.body ]
  %lcmp.mod176 = icmp eq i64 %xtraiter174, 0
  br i1 %lcmp.mod176, label %cleanup, label %for.body.epil.preheader

for.body.epil.preheader:                          ; preds = %cleanup.loopexit163.unr-lcssa
  br label %for.body.epil

for.body.epil:                                    ; preds = %for.body.epil.preheader, %for.body.epil
  %j.0154.epil = phi i64 [ %inc50.epil, %for.body.epil ], [ %j.0154.unr, %for.body.epil.preheader ]
  %epil.iter175 = phi i64 [ %epil.iter175.sub, %for.body.epil ], [ %xtraiter174, %for.body.epil.preheader ]
  %mul46.epil = mul nsw i64 %j.0154.epil, %.sroa.speculated135
  %arrayidx47.epil = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.epil
  %81 = load i32, i32* %arrayidx47.epil, align 4, !tbaa !59
  %arrayidx49.epil = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %j.0154.epil
  store i32 %81, i32* %arrayidx49.epil, align 4, !tbaa !59
  %inc50.epil = add nuw nsw i64 %j.0154.epil, 1
  %epil.iter175.sub = add nsw i64 %epil.iter175, -1
  %epil.iter175.cmp = icmp eq i64 %epil.iter175.sub, 0
  br i1 %epil.iter175.cmp, label %cleanup, label %for.body.epil, !llvm.loop !271

cleanup:                                          ; preds = %for.body.epil, %for.body.i.epil, %cleanup.loopexit163.unr-lcssa, %cleanup.loopexit.unr-lcssa, %if.end41, %for.cond.cleanup16.i.i
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0_(%"struct.std::pair.38"* %A, %"struct.std::pair.38"* %B, i8* %Tmp, [256 x i32]* %BK, i64 %numBK, i64 %n, i64 %bits) local_unnamed_addr #7 comdat {
entry:
  %0 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8 = shl i32 %0, 3
  %agg.tmp.i = alloca %"struct.intSort::eBits.40", align 8
  %agg.tmp = alloca %"struct.intSort::eBits.40", align 8
  %agg.tmp6 = alloca %"struct.intSort::eBits.40", align 8
  %cmp = icmp eq i64 %n, 0
  br i1 %cmp, label %cleanup.cont, label %if.end

if.end:                                           ; preds = %entry
  %cmp1 = icmp slt i64 %bits, 9
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  %shl = shl i64 1, %bits
  %_mask.i = getelementptr inbounds %"struct.intSort::eBits.40", %"struct.intSort::eBits.40"* %agg.tmp, i64 0, i32 1
  %sh_prom.i = trunc i64 %bits to i32
  %shl.i = shl i32 1, %sh_prom.i
  %sub.i = add nsw i32 %shl.i, -1
  %conv.i = sext i32 %sub.i to i64
  store i64 %conv.i, i64* %_mask.i, align 8, !tbaa !258
  %_offset.i = getelementptr inbounds %"struct.intSort::eBits.40", %"struct.intSort::eBits.40"* %agg.tmp, i64 0, i32 2
  store i64 0, i64* %_offset.i, align 8, !tbaa !261
  call void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_(%"struct.std::pair.38"* %A, %"struct.std::pair.38"* %B, i8* %Tmp, [256 x i32]* %BK, i64 %numBK, i64 %n, i64 %shl, i1 zeroext true, %"struct.intSort::eBits.40"* byval nonnull align 8 %agg.tmp)
  br label %cleanup.cont

if.else:                                          ; preds = %if.end
  %cmp4 = icmp sgt i64 %numBK, 256
  br i1 %cmp4, label %if.then5, label %while.body.lr.ph.i

if.then5:                                         ; preds = %if.else
  %sub = add nsw i64 %bits, -8
  %_mask.i90 = getelementptr inbounds %"struct.intSort::eBits.40", %"struct.intSort::eBits.40"* %agg.tmp6, i64 0, i32 1
  store i64 255, i64* %_mask.i90, align 8, !tbaa !258
  %_offset.i91 = getelementptr inbounds %"struct.intSort::eBits.40", %"struct.intSort::eBits.40"* %agg.tmp6, i64 0, i32 2
  store i64 %sub, i64* %_offset.i91, align 8, !tbaa !261
  call void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_(%"struct.std::pair.38"* %A, %"struct.std::pair.38"* %B, i8* %Tmp, [256 x i32]* %BK, i64 %numBK, i64 %n, i64 256, i1 zeroext true, %"struct.intSort::eBits.40"* byval nonnull align 8 %agg.tmp6)
  %sub9 = add nsw i64 %numBK, -257
  %conv = sitofp i64 %sub9 to float
  %conv10 = sitofp i64 %n to float
  %div = fdiv fast float %conv, %conv10
  %1 = zext i32 %__cilkrts_wc8 to i64
  %2 = add nuw nsw i64 %1, 254
  %3 = udiv i64 %2, %1
  %4 = icmp ult i64 %3, 2048
  %5 = select i1 %4, i64 %3, i64 2048
  call fastcc void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0__pfor.detach.ls(i64 0, i64 255, i64 %5, [256 x i32]* %BK, float %conv10, i64 %n, float %div, %"struct.std::pair.38"* %A, %"struct.std::pair.38"* %B, i8* %Tmp, i64 %sub)
  br label %cleanup.cont

while.body.lr.ph.i:                               ; preds = %if.else
  %6 = getelementptr inbounds %"struct.intSort::eBits.40", %"struct.intSort::eBits.40"* %agg.tmp.i, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6)
  %sub.i92 = add nsw i64 %bits, -1
  %div.i = sdiv i64 %sub.i92, 8
  %add.i = add nsw i64 %div.i, 1
  %div2.i = sdiv i64 %sub.i92, %add.i
  %add3.i = add nsw i64 %div2.i, 1
  %_mask.i.i = getelementptr inbounds %"struct.intSort::eBits.40", %"struct.intSort::eBits.40"* %agg.tmp.i, i64 0, i32 1
  %_offset.i.i = getelementptr inbounds %"struct.intSort::eBits.40", %"struct.intSort::eBits.40"* %agg.tmp.i, i64 0, i32 2
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i, %while.body.lr.ph.i
  %bitOffset.025.i = phi i64 [ 0, %while.body.lr.ph.i ], [ %add8.i, %while.body.i ]
  %rbits.024.i = phi i64 [ %add3.i, %while.body.lr.ph.i ], [ %spec.select.i, %while.body.i ]
  %add4.i = add nsw i64 %rbits.024.i, %bitOffset.025.i
  %cmp5.i = icmp sgt i64 %add4.i, %bits
  %sub6.i = sub nsw i64 %bits, %bitOffset.025.i
  %spec.select.i = select i1 %cmp5.i, i64 %sub6.i, i64 %rbits.024.i
  %sh_prom.i93 = trunc i64 %spec.select.i to i32
  %shl.i94 = shl i32 1, %sh_prom.i93
  %conv.i95 = sext i32 %shl.i94 to i64
  %sub.i.i = add nsw i32 %shl.i94, -1
  %conv.i.i = sext i32 %sub.i.i to i64
  store i64 %conv.i.i, i64* %_mask.i.i, align 8, !tbaa !258
  store i64 %bitOffset.025.i, i64* %_offset.i.i, align 8, !tbaa !261
  call void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_(%"struct.std::pair.38"* %A, %"struct.std::pair.38"* %B, i8* %Tmp, [256 x i32]* %BK, i64 %numBK, i64 %n, i64 %conv.i95, i1 zeroext false, %"struct.intSort::eBits.40"* byval nonnull align 8 %agg.tmp.i) #2
  %add8.i = add nsw i64 %spec.select.i, %bitOffset.025.i
  %cmp.i = icmp slt i64 %add8.i, %bits
  br i1 %cmp.i, label %while.body.i, label %_ZN7intSort17radixLoopBottomUpISt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllbT0_.exit

_ZN7intSort17radixLoopBottomUpISt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllbT0_.exit: ; preds = %while.body.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6)
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.then5, %if.then2, %_ZN7intSort17radixLoopBottomUpISt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllbT0_.exit, %entry
  ret void
}

; Function Attrs: nounwind stealable uwtable
define linkonce_odr void @_ZN10blockTransISt4pairIiP6vertexI8_point3dIdELi1EEEjE6transREjjjjjj(%struct.blockTrans.41* %this, i32 %rStart, i32 %rCount, i32 %rLength, i32 %cStart, i32 %cCount, i32 %cLength) local_unnamed_addr #15 comdat align 2 {
entry:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %entry
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %entry, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %entry ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %entry ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %9 = or i32 %cCount, %rCount
  %10 = icmp ult i32 %9, 64
  br i1 %10, label %if.then, label %if.else.preheader

if.else.preheader:                                ; preds = %__cilkrts_enter_frame_1.exit
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %13 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %14 = getelementptr inbounds [5 x i8*], [5 x i8*]* %13, i64 0, i64 0
  %15 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %16 = bitcast [5 x i8*]* %13 to i8*
  br label %if.else

if.then:                                          ; preds = %det.cont, %__cilkrts_enter_frame_1.exit
  %cStart.tr.lcssa = phi i32 [ %cStart, %__cilkrts_enter_frame_1.exit ], [ %add34, %det.cont ]
  %cCount.tr.lcssa = phi i32 [ %cCount, %__cilkrts_enter_frame_1.exit ], [ %sub, %det.cont ]
  %add = add i32 %rCount, %rStart
  %cmp3110 = icmp ugt i32 %add, %rStart
  br i1 %cmp3110, label %for.body.lr.ph, label %if.end46

for.body.lr.ph:                                   ; preds = %if.then
  %add5 = add i32 %cCount.tr.lcssa, %cStart.tr.lcssa
  %cmp6108 = icmp ult i32 %cStart.tr.lcssa, %add5
  br i1 %cmp6108, label %for.body.lr.ph.split.us, label %if.end46

for.body.lr.ph.split.us:                          ; preds = %for.body.lr.ph
  %L = getelementptr inbounds %struct.blockTrans.41, %struct.blockTrans.41* %this, i64 0, i32 4
  %OB = getelementptr inbounds %struct.blockTrans.41, %struct.blockTrans.41* %this, i64 0, i32 3
  %B = getelementptr inbounds %struct.blockTrans.41, %struct.blockTrans.41* %this, i64 0, i32 1
  %OA = getelementptr inbounds %struct.blockTrans.41, %struct.blockTrans.41* %this, i64 0, i32 2
  %A = getelementptr inbounds %struct.blockTrans.41, %struct.blockTrans.41* %this, i64 0, i32 0
  %17 = zext i32 %cStart.tr.lcssa to i64
  %18 = load %"struct.std::pair.38"*, %"struct.std::pair.38"** %A, align 8, !tbaa !264
  %19 = load i32*, i32** %OA, align 8, !tbaa !267
  %20 = load %"struct.std::pair.38"*, %"struct.std::pair.38"** %B, align 8, !tbaa !266
  %21 = load i32*, i32** %OB, align 8, !tbaa !268
  %22 = load i32*, i32** %L, align 8, !tbaa !269
  %wide.trip.count = zext i32 %add5 to i64
  br label %for.body.us

for.body.us:                                      ; preds = %for.cond4.for.cond.cleanup7_crit_edge.us, %for.body.lr.ph.split.us
  %i.0111.us = phi i32 [ %rStart, %for.body.lr.ph.split.us ], [ %inc29.us, %for.cond4.for.cond.cleanup7_crit_edge.us ]
  %mul.us = mul i32 %i.0111.us, %rLength
  br label %for.body8.us

for.body8.us:                                     ; preds = %for.cond.cleanup22.us, %for.body.us
  %indvars.iv = phi i64 [ %17, %for.body.us ], [ %indvars.iv.next, %for.cond.cleanup22.us ]
  %23 = trunc i64 %indvars.iv to i32
  %add9.us = add i32 %mul.us, %23
  %idxprom.us = zext i32 %add9.us to i64
  %arrayidx19.us = getelementptr inbounds i32, i32* %22, i64 %idxprom.us
  %24 = load i32, i32* %arrayidx19.us, align 4, !tbaa !59
  %cmp21104.us = icmp eq i32 %24, 0
  br i1 %cmp21104.us, label %for.cond.cleanup22.us, label %for.body23.lr.ph.us

for.cond.cleanup22.us.loopexit.unr-lcssa:         ; preds = %for.body23.us, %for.body23.lr.ph.us
  %pa.0107.us.unr = phi %"struct.std::pair.38"* [ %add.ptr.us, %for.body23.lr.ph.us ], [ %incdec.ptr.us.7, %for.body23.us ]
  %pb.0105.us.unr = phi %"struct.std::pair.38"* [ %add.ptr15.us, %for.body23.lr.ph.us ], [ %incdec.ptr24.us.7, %for.body23.us ]
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod, label %for.cond.cleanup22.us, label %for.body23.us.epil.preheader

for.body23.us.epil.preheader:                     ; preds = %for.cond.cleanup22.us.loopexit.unr-lcssa
  br label %for.body23.us.epil

for.body23.us.epil:                               ; preds = %for.body23.us.epil.preheader, %for.body23.us.epil
  %pa.0107.us.epil = phi %"struct.std::pair.38"* [ %incdec.ptr.us.epil, %for.body23.us.epil ], [ %pa.0107.us.unr, %for.body23.us.epil.preheader ]
  %pb.0105.us.epil = phi %"struct.std::pair.38"* [ %incdec.ptr24.us.epil, %for.body23.us.epil ], [ %pb.0105.us.unr, %for.body23.us.epil.preheader ]
  %epil.iter = phi i32 [ %epil.iter.sub, %for.body23.us.epil ], [ %xtraiter, %for.body23.us.epil.preheader ]
  %incdec.ptr.us.epil = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pa.0107.us.epil, i64 1
  %incdec.ptr24.us.epil = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pb.0105.us.epil, i64 1
  %first.i.us.epil = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pa.0107.us.epil, i64 0, i32 0
  %25 = load i32, i32* %first.i.us.epil, align 8, !tbaa !250
  %first2.i.us.epil = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pb.0105.us.epil, i64 0, i32 0
  store i32 %25, i32* %first2.i.us.epil, align 8, !tbaa !250
  %second.i.us.epil = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pa.0107.us.epil, i64 0, i32 1
  %26 = bitcast %struct.vertex.29** %second.i.us.epil to i64*
  %27 = load i64, i64* %26, align 8, !tbaa !252
  %second3.i.us.epil = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pb.0105.us.epil, i64 0, i32 1
  %28 = bitcast %struct.vertex.29** %second3.i.us.epil to i64*
  store i64 %27, i64* %28, align 8, !tbaa !252
  %epil.iter.sub = add nsw i32 %epil.iter, -1
  %epil.iter.cmp = icmp eq i32 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond.cleanup22.us, label %for.body23.us.epil, !llvm.loop !272

for.cond.cleanup22.us:                            ; preds = %for.body23.us.epil, %for.cond.cleanup22.us.loopexit.unr-lcssa, %for.body8.us
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond119 = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond119, label %for.cond4.for.cond.cleanup7_crit_edge.us, label %for.body8.us

for.body23.us:                                    ; preds = %for.body23.us, %for.body23.lr.ph.us.new
  %pa.0107.us = phi %"struct.std::pair.38"* [ %add.ptr.us, %for.body23.lr.ph.us.new ], [ %incdec.ptr.us.7, %for.body23.us ]
  %pb.0105.us = phi %"struct.std::pair.38"* [ %add.ptr15.us, %for.body23.lr.ph.us.new ], [ %incdec.ptr24.us.7, %for.body23.us ]
  %niter = phi i32 [ %unroll_iter, %for.body23.lr.ph.us.new ], [ %niter.nsub.7, %for.body23.us ]
  %first.i.us = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pa.0107.us, i64 0, i32 0
  %29 = load i32, i32* %first.i.us, align 8, !tbaa !250
  %first2.i.us = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pb.0105.us, i64 0, i32 0
  store i32 %29, i32* %first2.i.us, align 8, !tbaa !250
  %second.i.us = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pa.0107.us, i64 0, i32 1
  %30 = bitcast %struct.vertex.29** %second.i.us to i64*
  %31 = load i64, i64* %30, align 8, !tbaa !252
  %second3.i.us = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pb.0105.us, i64 0, i32 1
  %32 = bitcast %struct.vertex.29** %second3.i.us to i64*
  store i64 %31, i64* %32, align 8, !tbaa !252
  %first.i.us.1 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pa.0107.us, i64 1, i32 0
  %33 = load i32, i32* %first.i.us.1, align 8, !tbaa !250
  %first2.i.us.1 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pb.0105.us, i64 1, i32 0
  store i32 %33, i32* %first2.i.us.1, align 8, !tbaa !250
  %second.i.us.1 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pa.0107.us, i64 1, i32 1
  %34 = bitcast %struct.vertex.29** %second.i.us.1 to i64*
  %35 = load i64, i64* %34, align 8, !tbaa !252
  %second3.i.us.1 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pb.0105.us, i64 1, i32 1
  %36 = bitcast %struct.vertex.29** %second3.i.us.1 to i64*
  store i64 %35, i64* %36, align 8, !tbaa !252
  %first.i.us.2 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pa.0107.us, i64 2, i32 0
  %37 = load i32, i32* %first.i.us.2, align 8, !tbaa !250
  %first2.i.us.2 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pb.0105.us, i64 2, i32 0
  store i32 %37, i32* %first2.i.us.2, align 8, !tbaa !250
  %second.i.us.2 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pa.0107.us, i64 2, i32 1
  %38 = bitcast %struct.vertex.29** %second.i.us.2 to i64*
  %39 = load i64, i64* %38, align 8, !tbaa !252
  %second3.i.us.2 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pb.0105.us, i64 2, i32 1
  %40 = bitcast %struct.vertex.29** %second3.i.us.2 to i64*
  store i64 %39, i64* %40, align 8, !tbaa !252
  %first.i.us.3 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pa.0107.us, i64 3, i32 0
  %41 = load i32, i32* %first.i.us.3, align 8, !tbaa !250
  %first2.i.us.3 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pb.0105.us, i64 3, i32 0
  store i32 %41, i32* %first2.i.us.3, align 8, !tbaa !250
  %second.i.us.3 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pa.0107.us, i64 3, i32 1
  %42 = bitcast %struct.vertex.29** %second.i.us.3 to i64*
  %43 = load i64, i64* %42, align 8, !tbaa !252
  %second3.i.us.3 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pb.0105.us, i64 3, i32 1
  %44 = bitcast %struct.vertex.29** %second3.i.us.3 to i64*
  store i64 %43, i64* %44, align 8, !tbaa !252
  %first.i.us.4 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pa.0107.us, i64 4, i32 0
  %45 = load i32, i32* %first.i.us.4, align 8, !tbaa !250
  %first2.i.us.4 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pb.0105.us, i64 4, i32 0
  store i32 %45, i32* %first2.i.us.4, align 8, !tbaa !250
  %second.i.us.4 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pa.0107.us, i64 4, i32 1
  %46 = bitcast %struct.vertex.29** %second.i.us.4 to i64*
  %47 = load i64, i64* %46, align 8, !tbaa !252
  %second3.i.us.4 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pb.0105.us, i64 4, i32 1
  %48 = bitcast %struct.vertex.29** %second3.i.us.4 to i64*
  store i64 %47, i64* %48, align 8, !tbaa !252
  %first.i.us.5 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pa.0107.us, i64 5, i32 0
  %49 = load i32, i32* %first.i.us.5, align 8, !tbaa !250
  %first2.i.us.5 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pb.0105.us, i64 5, i32 0
  store i32 %49, i32* %first2.i.us.5, align 8, !tbaa !250
  %second.i.us.5 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pa.0107.us, i64 5, i32 1
  %50 = bitcast %struct.vertex.29** %second.i.us.5 to i64*
  %51 = load i64, i64* %50, align 8, !tbaa !252
  %second3.i.us.5 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pb.0105.us, i64 5, i32 1
  %52 = bitcast %struct.vertex.29** %second3.i.us.5 to i64*
  store i64 %51, i64* %52, align 8, !tbaa !252
  %first.i.us.6 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pa.0107.us, i64 6, i32 0
  %53 = load i32, i32* %first.i.us.6, align 8, !tbaa !250
  %first2.i.us.6 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pb.0105.us, i64 6, i32 0
  store i32 %53, i32* %first2.i.us.6, align 8, !tbaa !250
  %second.i.us.6 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pa.0107.us, i64 6, i32 1
  %54 = bitcast %struct.vertex.29** %second.i.us.6 to i64*
  %55 = load i64, i64* %54, align 8, !tbaa !252
  %second3.i.us.6 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pb.0105.us, i64 6, i32 1
  %56 = bitcast %struct.vertex.29** %second3.i.us.6 to i64*
  store i64 %55, i64* %56, align 8, !tbaa !252
  %incdec.ptr.us.7 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pa.0107.us, i64 8
  %incdec.ptr24.us.7 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pb.0105.us, i64 8
  %first.i.us.7 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pa.0107.us, i64 7, i32 0
  %57 = load i32, i32* %first.i.us.7, align 8, !tbaa !250
  %first2.i.us.7 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pb.0105.us, i64 7, i32 0
  store i32 %57, i32* %first2.i.us.7, align 8, !tbaa !250
  %second.i.us.7 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pa.0107.us, i64 7, i32 1
  %58 = bitcast %struct.vertex.29** %second.i.us.7 to i64*
  %59 = load i64, i64* %58, align 8, !tbaa !252
  %second3.i.us.7 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %pb.0105.us, i64 7, i32 1
  %60 = bitcast %struct.vertex.29** %second3.i.us.7 to i64*
  store i64 %59, i64* %60, align 8, !tbaa !252
  %niter.nsub.7 = add i32 %niter, -8
  %niter.ncmp.7 = icmp eq i32 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %for.cond.cleanup22.us.loopexit.unr-lcssa, label %for.body23.us

for.body23.lr.ph.us:                              ; preds = %for.body8.us
  %mul10.us = mul i32 %23, %cLength
  %add11.us = add i32 %mul10.us, %i.0111.us
  %idxprom12.us = zext i32 %add11.us to i64
  %arrayidx13.us = getelementptr inbounds i32, i32* %21, i64 %idxprom12.us
  %61 = load i32, i32* %arrayidx13.us, align 4, !tbaa !59
  %idx.ext14.us = zext i32 %61 to i64
  %add.ptr15.us = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %20, i64 %idx.ext14.us
  %arrayidx.us = getelementptr inbounds i32, i32* %19, i64 %idxprom.us
  %62 = load i32, i32* %arrayidx.us, align 4, !tbaa !59
  %idx.ext.us = zext i32 %62 to i64
  %add.ptr.us = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %18, i64 %idx.ext.us
  %63 = add i32 %24, -1
  %xtraiter = and i32 %24, 7
  %64 = icmp ult i32 %63, 7
  br i1 %64, label %for.cond.cleanup22.us.loopexit.unr-lcssa, label %for.body23.lr.ph.us.new

for.body23.lr.ph.us.new:                          ; preds = %for.body23.lr.ph.us
  %unroll_iter = sub i32 %24, %xtraiter
  br label %for.body23.us

for.cond4.for.cond.cleanup7_crit_edge.us:         ; preds = %for.cond.cleanup22.us
  %inc29.us = add nuw i32 %i.0111.us, 1
  %exitcond120 = icmp eq i32 %inc29.us, %add
  br i1 %exitcond120, label %if.end46, label %for.body.us

if.else:                                          ; preds = %if.else.preheader, %det.cont
  %cCount.tr114 = phi i32 [ %sub, %det.cont ], [ %cCount, %if.else.preheader ]
  %cStart.tr113 = phi i32 [ %add34, %det.cont ], [ %cStart, %if.else.preheader ]
  %cmp31 = icmp ugt i32 %cCount.tr114, %rCount
  br i1 %cmp31, label %if.then32, label %if.else36

if.then32:                                        ; preds = %if.else
  %div = lshr i32 %cCount.tr114, 1
  %sub = sub i32 %cCount.tr114, %div
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %11, i16* nonnull %12) #2
  %65 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %65, i8** %14, align 8
  %66 = call i8* @llvm.stacksave()
  store volatile i8* %66, i8** %15, align 8
  %67 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %16) #23
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %if.then32.split, label %det.cont

if.then32.split:                                  ; preds = %if.then32
  call fastcc void @_ZN10blockTransISt4pairIiP6vertexI8_point3dIdELi1EEEjE6transREjjjjjj_det.achd.cilk(%struct.blockTrans.41* %this, i32 %rStart, i32 %rCount, i32 %rLength, i32 %cStart.tr113, i32 %div, i32 %cLength)
  br label %det.cont

det.cont:                                         ; preds = %if.then32.split, %if.then32
  %add34 = add i32 %div, %cStart.tr113
  %69 = or i32 %sub, %rCount
  %70 = icmp ult i32 %69, 64
  br i1 %70, label %if.then, label %if.else

if.else36:                                        ; preds = %if.else
  %div38 = lshr i32 %rCount, 1
  %sub41 = sub i32 %rCount, %div38
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %11, i16* nonnull %12) #2
  %71 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %71, i8** %14, align 8
  %72 = call i8* @llvm.stacksave()
  store volatile i8* %72, i8** %15, align 8
  %73 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %16) #23
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %if.else36.split, label %det.cont43

if.else36.split:                                  ; preds = %if.else36
  call fastcc void @_ZN10blockTransISt4pairIiP6vertexI8_point3dIdELi1EEEjE6transREjjjjjj_det.achd42.cilk(%struct.blockTrans.41* %this, i32 %rStart, i32 %div38, i32 %rLength, i32 %cStart.tr113, i32 %cCount.tr114, i32 %cLength)
  br label %det.cont43

det.cont43:                                       ; preds = %if.else36.split, %if.else36
  %add44 = add i32 %div38, %rStart
  tail call void @_ZN10blockTransISt4pairIiP6vertexI8_point3dIdELi1EEEjE6transREjjjjjj(%struct.blockTrans.41* %this, i32 %add44, i32 %sub41, i32 %rLength, i32 %cStart.tr113, i32 %cCount.tr114, i32 %cLength)
  %75 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %76 = load atomic i32, i32* %75 acquire, align 8
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %det.cont43
  %79 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %11, i16* nonnull %12) #2
  store volatile i8* %71, i8** %14, align 8
  %80 = call i8* @llvm.stacksave() #2
  store volatile i8* %80, i8** %15, align 8
  %81 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %16) #24
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %det.cont43, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %83 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %84 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %83, i64 0, i32 12, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, 1
  store i64 %86, i64* %84, align 8
  br label %if.end46

if.end46:                                         ; preds = %for.cond4.for.cond.cleanup7_crit_edge.us, %__cilk_sync_nothrow.exit, %for.body.lr.ph, %if.then
  %87 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %88 = load atomic i32, i32* %87 acquire, align 8
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %__cilk_sync_nothrow.exit134, label %cilk.sync.savestate.i132

cilk.sync.savestate.i132:                         ; preds = %if.end46
  %91 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %92 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %93 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %92, i16* nonnull %93) #2
  %94 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %95 = call i8* @llvm.frameaddress(i32 0) #2
  %96 = getelementptr inbounds [5 x i8*], [5 x i8*]* %94, i64 0, i64 0
  store volatile i8* %95, i8** %96, align 8
  %97 = call i8* @llvm.stacksave() #2
  %98 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %97, i8** %98, align 8
  %99 = bitcast [5 x i8*]* %94 to i8*
  %100 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %99) #24
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %cilk.sync.runtimecall.i133, label %__cilk_sync_nothrow.exit134

cilk.sync.runtimecall.i133:                       ; preds = %cilk.sync.savestate.i132
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit134

__cilk_sync_nothrow.exit134:                      ; preds = %if.end46, %cilk.sync.savestate.i132, %cilk.sync.runtimecall.i133
  %102 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %103 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %102, i64 0, i32 12, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = add i64 %104, 1
  store i64 %105, i64* %103, align 8
  %106 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %107 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %106, i64 0, i32 9
  %110 = bitcast %struct.__cilkrts_stack_frame** %109 to i64*
  store atomic i64 %108, i64* %110 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %111 = load atomic i32, i32* %87 acquire, align 8
  %112 = icmp eq i32 %111, 16777216
  br i1 %112, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit134
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit134, %body.i
  ret void
}

; Function Attrs: nounwind stealable uwtable
define linkonce_odr void @_Z9quickSortISt4pairIiP6vertexI8_point3dIdELi1EEEN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.38"* %A, i64 %n) local_unnamed_addr #15 comdat {
entry:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %entry
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %entry, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %entry ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %entry ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %cmp21 = icmp slt i64 %n, 256
  br i1 %cmp21, label %if.then, label %if.else.preheader

if.else.preheader:                                ; preds = %__cilkrts_enter_frame_1.exit
  %9 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %12 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 0
  %13 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %14 = bitcast [5 x i8*]* %11 to i8*
  br label %if.else

if.then:                                          ; preds = %det.cont, %__cilkrts_enter_frame_1.exit
  %A.tr.lcssa = phi %"struct.std::pair.38"* [ %A, %__cilkrts_enter_frame_1.exit ], [ %42, %det.cont ]
  %n.tr.lcssa = phi i64 [ %n, %__cilkrts_enter_frame_1.exit ], [ %sub.ptr.div7, %det.cont ]
  %15 = bitcast %"struct.std::pair.38"* %A.tr.lcssa to %"struct.std::pair.6"*
  tail call void @_Z15quickSortSerialISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.6"* %15, i64 %n.tr.lcssa) #2
  %16 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %17 = load atomic i32, i32* %16 acquire, align 8
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %if.then
  %20 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %21 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  %23 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %24 = call i8* @llvm.frameaddress(i32 0) #2
  %25 = getelementptr inbounds [5 x i8*], [5 x i8*]* %23, i64 0, i64 0
  store volatile i8* %24, i8** %25, align 8
  %26 = call i8* @llvm.stacksave() #2
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %26, i8** %27, align 8
  %28 = bitcast [5 x i8*]* %23 to i8*
  %29 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #24
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %if.then, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %31 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %32 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %31, i64 0, i32 12, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %32, align 8
  %35 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %36 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %35, i64 0, i32 9
  %39 = bitcast %struct.__cilkrts_stack_frame** %38 to i64*
  store atomic i64 %37, i64* %39 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %40 = load atomic i32, i32* %16 acquire, align 8
  %41 = icmp eq i32 %40, 16777216
  br i1 %41, label %__cilk_parent_epilogue.exit, label %body.i

if.else:                                          ; preds = %if.else.preheader, %det.cont
  %n.tr23 = phi i64 [ %sub.ptr.div7, %det.cont ], [ %n, %if.else.preheader ]
  %A.tr22 = phi %"struct.std::pair.38"* [ %42, %det.cont ], [ %A, %if.else.preheader ]
  %call = tail call { %"struct.std::pair.38"*, %"struct.std::pair.38"* } bitcast ({ %"struct.std::pair.23"*, %"struct.std::pair.23"* } (%"struct.std::pair.23"*, i64)* @_Z5splitISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElES0_IPT_SF_ESF_T1_T0_ to { %"struct.std::pair.38"*, %"struct.std::pair.38"* } (%"struct.std::pair.38"*, i64)*)(%"struct.std::pair.38"* %A.tr22, i64 %n.tr23) #2
  %42 = extractvalue { %"struct.std::pair.38"*, %"struct.std::pair.38"* } %call, 1
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %9, i16* nonnull %10) #2
  %43 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %43, i8** %12, align 8
  %44 = call i8* @llvm.stacksave()
  store volatile i8* %44, i8** %13, align 8
  %45 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %14) #23
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %if.else.split, label %det.cont

if.else.split:                                    ; preds = %if.else
  call fastcc void @_Z9quickSortISt4pairIiP6vertexI8_point3dIdELi1EEEN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0__det.achd.cilk({ %"struct.std::pair.38"*, %"struct.std::pair.38"* } %call, %"struct.std::pair.38"* %A.tr22)
  br label %det.cont

det.cont:                                         ; preds = %if.else.split, %if.else
  %add.ptr = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %A.tr22, i64 %n.tr23
  %sub.ptr.lhs.cast4 = ptrtoint %"struct.std::pair.38"* %add.ptr to i64
  %sub.ptr.rhs.cast5 = ptrtoint %"struct.std::pair.38"* %42 to i64
  %sub.ptr.sub6 = sub i64 %sub.ptr.lhs.cast4, %sub.ptr.rhs.cast5
  %sub.ptr.div7 = ashr exact i64 %sub.ptr.sub6, 4
  %cmp = icmp slt i64 %sub.ptr.sub6, 4096
  br i1 %cmp, label %if.then, label %if.else

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void
}

; Function Attrs: nounwind stealable uwtable
define linkonce_odr void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT_(%class.gTreeNode.31* %this, i32 %s, %struct.vertex.29** %f.coerce) local_unnamed_addr #15 comdat align 2 {
entry:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %entry
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %entry, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %entry ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %entry ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %vertices.i = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 5
  %9 = load %struct.vertex.29**, %struct.vertex.29*** %vertices.i, align 8, !tbaa !226
  %cmp.i = icmp eq %struct.vertex.29** %9, null
  br i1 %cmp.i, label %if.else, label %if.then

if.then:                                          ; preds = %__cilkrts_enter_frame_1.exit
  %count = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 3
  %10 = load i32, i32* %count, align 4, !tbaa !215
  %cmp35 = icmp sgt i32 %10, 0
  br i1 %cmp35, label %for.body.lr.ph, label %if.end

for.body.lr.ph:                                   ; preds = %if.then
  %11 = sext i32 %s to i64
  %12 = sext i32 %10 to i64
  %13 = bitcast %struct.vertex.29** %9 to i64*
  %14 = load i64, i64* %13, align 8, !tbaa !53
  %arrayidx.i39 = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %f.coerce, i64 %11
  %15 = bitcast %struct.vertex.29** %arrayidx.i39 to i64*
  store i64 %14, i64* %15, align 8, !tbaa !53
  %cmp40 = icmp eq i32 %10, 1
  br i1 %cmp40, label %if.end, label %for.body.for.body_crit_edge.preheader

for.body.for.body_crit_edge.preheader:            ; preds = %for.body.lr.ph
  br label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body.for.body_crit_edge.preheader, %for.body.for.body_crit_edge
  %indvars.iv.next41 = phi i64 [ %indvars.iv.next, %for.body.for.body_crit_edge ], [ 1, %for.body.for.body_crit_edge.preheader ]
  %.pre = load %struct.vertex.29**, %struct.vertex.29*** %vertices.i, align 8, !tbaa !226
  %arrayidx = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %.pre, i64 %indvars.iv.next41
  %16 = bitcast %struct.vertex.29** %arrayidx to i64*
  %17 = load i64, i64* %16, align 8, !tbaa !53
  %18 = add nsw i64 %indvars.iv.next41, %11
  %arrayidx.i = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %f.coerce, i64 %18
  %19 = bitcast %struct.vertex.29** %arrayidx.i to i64*
  store i64 %17, i64* %19, align 8, !tbaa !53
  %indvars.iv.next = add nuw nsw i64 %indvars.iv.next41, 1
  %cmp = icmp slt i64 %indvars.iv.next, %12
  br i1 %cmp, label %for.body.for.body_crit_edge, label %if.end

if.else:                                          ; preds = %__cilkrts_enter_frame_1.exit
  %arrayidx9 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 4, i64 0
  %20 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx9, align 8, !tbaa !53
  %21 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  %23 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %24 = call i8* @llvm.frameaddress(i32 0)
  %25 = getelementptr inbounds [5 x i8*], [5 x i8*]* %23, i64 0, i64 0
  store volatile i8* %24, i8** %25, align 8
  %26 = call i8* @llvm.stacksave()
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %26, i8** %27, align 8
  %28 = bitcast [5 x i8*]* %23 to i8*
  %29 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #23
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %if.else.split, label %det.cont

if.else.split:                                    ; preds = %if.else
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.1.cilk(%class.gTreeNode.31* align 1 %20, i32 %s, %struct.vertex.29** align 1 %f.coerce)
  br label %det.cont

det.cont:                                         ; preds = %if.else.split, %if.else
  %31 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx9, align 8, !tbaa !53
  %count14 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %31, i64 0, i32 3
  %32 = load i32, i32* %count14, align 4, !tbaa !215
  %add15 = add nsw i32 %32, %s
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %34 = load atomic i32, i32* %33 acquire, align 8
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %det.cont
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %38 = call i8* @llvm.stacksave() #2
  store volatile i8* %38, i8** %27, align 8
  %39 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #24
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %det.cont, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 12, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %42, align 8
  %arrayidx9.1 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 4, i64 1
  %45 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx9.1, align 8, !tbaa !53
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %46 = call i8* @llvm.stacksave()
  store volatile i8* %46, i8** %27, align 8
  %47 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #23
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %for.inc16.split, label %det.cont.1

for.inc16.split:                                  ; preds = %__cilk_sync_nothrow.exit
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.1.cilk(%class.gTreeNode.31* %45, i32 %add15, %struct.vertex.29** %f.coerce)
  br label %det.cont.1

if.end:                                           ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph, %__cilk_sync_nothrow.exit59, %if.then
  %49 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %50 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %49, i64 0, i32 9
  %53 = bitcast %struct.__cilkrts_stack_frame** %52 to i64*
  store atomic i64 %51, i64* %53 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %54 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %55 = load atomic i32, i32* %54 acquire, align 8
  %56 = icmp eq i32 %55, 16777216
  br i1 %56, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.end
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.end, %body.i
  ret void

det.cont.1:                                       ; preds = %for.inc16.split, %__cilk_sync_nothrow.exit
  %57 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx9.1, align 8, !tbaa !53
  %count14.1 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %57, i64 0, i32 3
  %58 = load i32, i32* %count14.1, align 4, !tbaa !215
  %add15.1 = add nsw i32 %58, %add15
  %59 = load atomic i32, i32* %33 acquire, align 8
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %__cilk_sync_nothrow.exit44, label %cilk.sync.savestate.i42

cilk.sync.savestate.i42:                          ; preds = %det.cont.1
  %62 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %63 = call i8* @llvm.stacksave() #2
  store volatile i8* %63, i8** %27, align 8
  %64 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #24
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %cilk.sync.runtimecall.i43, label %__cilk_sync_nothrow.exit44

cilk.sync.runtimecall.i43:                        ; preds = %cilk.sync.savestate.i42
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit44

__cilk_sync_nothrow.exit44:                       ; preds = %det.cont.1, %cilk.sync.savestate.i42, %cilk.sync.runtimecall.i43
  %66 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %67 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %66, i64 0, i32 12, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  store i64 %69, i64* %67, align 8
  %arrayidx9.2 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 4, i64 2
  %70 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx9.2, align 8, !tbaa !53
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %71 = call i8* @llvm.stacksave()
  store volatile i8* %71, i8** %27, align 8
  %72 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #23
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %for.inc16.1.split, label %det.cont.2

for.inc16.1.split:                                ; preds = %__cilk_sync_nothrow.exit44
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.1.cilk(%class.gTreeNode.31* align 1 %70, i32 %add15.1, %struct.vertex.29** align 1 %f.coerce)
  br label %det.cont.2

det.cont.2:                                       ; preds = %for.inc16.1.split, %__cilk_sync_nothrow.exit44
  %74 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx9.2, align 8, !tbaa !53
  %count14.2 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %74, i64 0, i32 3
  %75 = load i32, i32* %count14.2, align 4, !tbaa !215
  %add15.2 = add nsw i32 %75, %add15.1
  %76 = load atomic i32, i32* %33 acquire, align 8
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %__cilk_sync_nothrow.exit47, label %cilk.sync.savestate.i45

cilk.sync.savestate.i45:                          ; preds = %det.cont.2
  %79 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %80 = call i8* @llvm.stacksave() #2
  store volatile i8* %80, i8** %27, align 8
  %81 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #24
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %cilk.sync.runtimecall.i46, label %__cilk_sync_nothrow.exit47

cilk.sync.runtimecall.i46:                        ; preds = %cilk.sync.savestate.i45
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit47

__cilk_sync_nothrow.exit47:                       ; preds = %det.cont.2, %cilk.sync.savestate.i45, %cilk.sync.runtimecall.i46
  %83 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %84 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %83, i64 0, i32 12, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, 1
  store i64 %86, i64* %84, align 8
  %arrayidx9.3 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 4, i64 3
  %87 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx9.3, align 8, !tbaa !53
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %88 = call i8* @llvm.stacksave()
  store volatile i8* %88, i8** %27, align 8
  %89 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #23
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %for.inc16.2.split, label %det.cont.3

for.inc16.2.split:                                ; preds = %__cilk_sync_nothrow.exit47
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.1.cilk(%class.gTreeNode.31* align 1 %87, i32 %add15.2, %struct.vertex.29** align 1 %f.coerce)
  br label %det.cont.3

det.cont.3:                                       ; preds = %for.inc16.2.split, %__cilk_sync_nothrow.exit47
  %91 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx9.3, align 8, !tbaa !53
  %count14.3 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %91, i64 0, i32 3
  %92 = load i32, i32* %count14.3, align 4, !tbaa !215
  %add15.3 = add nsw i32 %92, %add15.2
  %93 = load atomic i32, i32* %33 acquire, align 8
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %__cilk_sync_nothrow.exit50, label %cilk.sync.savestate.i48

cilk.sync.savestate.i48:                          ; preds = %det.cont.3
  %96 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %97 = call i8* @llvm.stacksave() #2
  store volatile i8* %97, i8** %27, align 8
  %98 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #24
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %cilk.sync.runtimecall.i49, label %__cilk_sync_nothrow.exit50

cilk.sync.runtimecall.i49:                        ; preds = %cilk.sync.savestate.i48
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit50

__cilk_sync_nothrow.exit50:                       ; preds = %det.cont.3, %cilk.sync.savestate.i48, %cilk.sync.runtimecall.i49
  %100 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %101 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %100, i64 0, i32 12, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = add i64 %102, 1
  store i64 %103, i64* %101, align 8
  %arrayidx9.4 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 4, i64 4
  %104 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx9.4, align 8, !tbaa !53
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %105 = call i8* @llvm.stacksave()
  store volatile i8* %105, i8** %27, align 8
  %106 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #23
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %for.inc16.3.split, label %det.cont.4

for.inc16.3.split:                                ; preds = %__cilk_sync_nothrow.exit50
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.1.cilk(%class.gTreeNode.31* align 1 %104, i32 %add15.3, %struct.vertex.29** align 1 %f.coerce)
  br label %det.cont.4

det.cont.4:                                       ; preds = %for.inc16.3.split, %__cilk_sync_nothrow.exit50
  %108 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx9.4, align 8, !tbaa !53
  %count14.4 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %108, i64 0, i32 3
  %109 = load i32, i32* %count14.4, align 4, !tbaa !215
  %add15.4 = add nsw i32 %109, %add15.3
  %110 = load atomic i32, i32* %33 acquire, align 8
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %__cilk_sync_nothrow.exit53, label %cilk.sync.savestate.i51

cilk.sync.savestate.i51:                          ; preds = %det.cont.4
  %113 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %114 = call i8* @llvm.stacksave() #2
  store volatile i8* %114, i8** %27, align 8
  %115 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #24
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %cilk.sync.runtimecall.i52, label %__cilk_sync_nothrow.exit53

cilk.sync.runtimecall.i52:                        ; preds = %cilk.sync.savestate.i51
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit53

__cilk_sync_nothrow.exit53:                       ; preds = %det.cont.4, %cilk.sync.savestate.i51, %cilk.sync.runtimecall.i52
  %117 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %118 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %117, i64 0, i32 12, i32 0
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 1
  store i64 %120, i64* %118, align 8
  %arrayidx9.5 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 4, i64 5
  %121 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx9.5, align 8, !tbaa !53
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %122 = call i8* @llvm.stacksave()
  store volatile i8* %122, i8** %27, align 8
  %123 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #23
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %for.inc16.4.split, label %det.cont.5

for.inc16.4.split:                                ; preds = %__cilk_sync_nothrow.exit53
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.1.cilk(%class.gTreeNode.31* align 1 %121, i32 %add15.4, %struct.vertex.29** align 1 %f.coerce)
  br label %det.cont.5

det.cont.5:                                       ; preds = %for.inc16.4.split, %__cilk_sync_nothrow.exit53
  %125 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx9.5, align 8, !tbaa !53
  %count14.5 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %125, i64 0, i32 3
  %126 = load i32, i32* %count14.5, align 4, !tbaa !215
  %add15.5 = add nsw i32 %126, %add15.4
  %127 = load atomic i32, i32* %33 acquire, align 8
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %__cilk_sync_nothrow.exit56, label %cilk.sync.savestate.i54

cilk.sync.savestate.i54:                          ; preds = %det.cont.5
  %130 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %131 = call i8* @llvm.stacksave() #2
  store volatile i8* %131, i8** %27, align 8
  %132 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #24
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %cilk.sync.runtimecall.i55, label %__cilk_sync_nothrow.exit56

cilk.sync.runtimecall.i55:                        ; preds = %cilk.sync.savestate.i54
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit56

__cilk_sync_nothrow.exit56:                       ; preds = %det.cont.5, %cilk.sync.savestate.i54, %cilk.sync.runtimecall.i55
  %134 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %135 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %134, i64 0, i32 12, i32 0
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %136, 1
  store i64 %137, i64* %135, align 8
  %arrayidx9.6 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 4, i64 6
  %138 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx9.6, align 8, !tbaa !53
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %139 = call i8* @llvm.stacksave()
  store volatile i8* %139, i8** %27, align 8
  %140 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #23
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %for.inc16.5.split, label %det.cont.6

for.inc16.5.split:                                ; preds = %__cilk_sync_nothrow.exit56
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.6.cilk(%class.gTreeNode.31* %138, i32 %add15.5, %struct.vertex.29** %f.coerce)
  br label %det.cont.6

det.cont.6:                                       ; preds = %for.inc16.5.split, %__cilk_sync_nothrow.exit56
  %142 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx9.6, align 8, !tbaa !53
  %count14.6 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %142, i64 0, i32 3
  %143 = load i32, i32* %count14.6, align 4, !tbaa !215
  %add15.6 = add nsw i32 %143, %add15.5
  %144 = load atomic i32, i32* %33 acquire, align 8
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %__cilk_sync_nothrow.exit59, label %cilk.sync.savestate.i57

cilk.sync.savestate.i57:                          ; preds = %det.cont.6
  %147 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %148 = call i8* @llvm.stacksave() #2
  store volatile i8* %148, i8** %27, align 8
  %149 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #24
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %cilk.sync.runtimecall.i58, label %__cilk_sync_nothrow.exit59

cilk.sync.runtimecall.i58:                        ; preds = %cilk.sync.savestate.i57
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit59

__cilk_sync_nothrow.exit59:                       ; preds = %det.cont.6, %cilk.sync.savestate.i57, %cilk.sync.runtimecall.i58
  %151 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %152 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %151, i64 0, i32 12, i32 0
  %153 = load i64, i64* %152, align 8
  %154 = add i64 %153, 1
  store i64 %154, i64* %152, align 8
  %arrayidx9.7 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %this, i64 0, i32 4, i64 7
  %155 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx9.7, align 8, !tbaa !53
  tail call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT_(%class.gTreeNode.31* %155, i32 %add15.6, %struct.vertex.29** %f.coerce)
  br label %if.end
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNN10nearestNghEP9gTreeNodeIS2_7_vect3dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %this, %class.gTreeNode.31* %T) local_unnamed_addr #7 comdat align 2 {
entry:
  %vertices.i = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %T, i64 0, i32 5
  %0 = load %struct.vertex.29**, %struct.vertex.29*** %vertices.i, align 8, !tbaa !226
  %cmp.i = icmp eq %struct.vertex.29** %0, null
  br i1 %cmp.i, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %count = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %T, i64 0, i32 3
  %1 = load i32, i32* %count, align 4, !tbaa !215
  %cmp46 = icmp sgt i32 %1, 0
  br i1 %cmp46, label %for.body.lr.ph, label %if.end22

for.body.lr.ph:                                   ; preds = %if.then
  %ps = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %this, i64 0, i32 0
  %arrayidx.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %this, i64 0, i32 2, i64 0
  %arrayidx3.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %this, i64 0, i32 1, i64 0
  %k.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %this, i64 0, i32 4
  %2 = sext i32 %1 to i64
  br label %for.body

for.body:                                         ; preds = %if.end.for.body_crit_edge, %for.body.lr.ph
  %3 = phi %struct.vertex.29** [ %0, %for.body.lr.ph ], [ %.pre, %if.end.for.body_crit_edge ]
  %indvars.iv49 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next50, %if.end.for.body_crit_edge ]
  %arrayidx = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %3, i64 %indvars.iv49
  %4 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx, align 8, !tbaa !53
  %5 = load %struct.vertex.29*, %struct.vertex.29** %ps, align 8, !tbaa !273
  %cmp2 = icmp eq %struct.vertex.29* %4, %5
  br i1 %cmp2, label %if.end, label %if.then3

if.then3:                                         ; preds = %for.body
  %opt.sroa.0.0..sroa_idx.i = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %4, i64 0, i32 1, i32 0
  %opt.sroa.0.0.copyload.i = load double, double* %opt.sroa.0.0..sroa_idx.i, align 8
  %opt.sroa.4.0..sroa_idx55.i = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %4, i64 0, i32 1, i32 1
  %6 = bitcast double* %opt.sroa.4.0..sroa_idx55.i to <2 x double>*
  %7 = load <2 x double>, <2 x double>* %6, align 8
  %x.i.i = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %5, i64 0, i32 1, i32 0
  %8 = load double, double* %x.i.i, align 8, !tbaa !6, !noalias !275
  %sub.i.i = fsub fast double %8, %opt.sroa.0.0.copyload.i
  %y.i.i = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %5, i64 0, i32 1, i32 1
  %9 = bitcast double* %y.i.i to <2 x double>*
  %10 = load <2 x double>, <2 x double>* %9, align 8, !tbaa !18, !noalias !275
  %11 = fsub fast <2 x double> %10, %7
  %mul.i.i = fmul fast double %sub.i.i, %sub.i.i
  %12 = fmul fast <2 x double> %11, %11
  %13 = extractelement <2 x double> %12, i32 0
  %add.i.i = fadd fast double %13, %mul.i.i
  %14 = extractelement <2 x double> %12, i32 1
  %add7.i.i = fadd fast double %add.i.i, %14
  %15 = tail call fast double @llvm.sqrt.f64(double %add7.i.i) #2
  %16 = load double, double* %arrayidx.i, align 8, !tbaa !18
  %cmp.i39 = fcmp fast olt double %15, %16
  br i1 %cmp.i39, label %if.then.i, label %if.end

if.then.i:                                        ; preds = %if.then3
  store %struct.vertex.29* %4, %struct.vertex.29** %arrayidx3.i, align 8, !tbaa !53
  store double %15, double* %arrayidx.i, align 8, !tbaa !18
  %17 = load i32, i32* %k.i, align 4, !tbaa !278
  %cmp659.i = icmp sgt i32 %17, 1
  br i1 %cmp659.i, label %land.rhs.lr.ph.i, label %if.end

land.rhs.lr.ph.i:                                 ; preds = %if.then.i
  %18 = sext i32 %17 to i64
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %for.body.i, %land.rhs.lr.ph.i
  %19 = phi double [ %15, %land.rhs.lr.ph.i ], [ %26, %for.body.i ]
  %indvars.iv.i = phi i64 [ 1, %land.rhs.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %20 = add nsw i64 %indvars.iv.i, -1
  %arrayidx11.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %this, i64 0, i32 2, i64 %indvars.iv.i
  %21 = load double, double* %arrayidx11.i, align 8, !tbaa !18
  %cmp12.i = fcmp fast olt double %19, %21
  br i1 %cmp12.i, label %for.body.i, label %if.end

for.body.i:                                       ; preds = %land.rhs.i
  %arrayidx8.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %this, i64 0, i32 2, i64 %20
  %arrayidx23.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %this, i64 0, i32 1, i64 %20
  %22 = bitcast %struct.vertex.29** %arrayidx23.i to <2 x i64>*
  %23 = load <2 x i64>, <2 x i64>* %22, align 8, !tbaa !22
  store double %21, double* %arrayidx8.i, align 8, !tbaa !18
  %arrayidx26.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %this, i64 0, i32 1, i64 %indvars.iv.i
  %24 = bitcast %struct.vertex.29** %arrayidx23.i to double*
  store double %21, double* %24, align 8, !tbaa !53
  %25 = bitcast %struct.vertex.29** %arrayidx26.i to <2 x i64>*
  store <2 x i64> %23, <2 x i64>* %25, align 8, !tbaa !22
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %cmp6.i = icmp slt i64 %indvars.iv.next.i, %18
  %bc = bitcast <2 x i64> %23 to <2 x double>
  %26 = extractelement <2 x double> %bc, i32 1
  br i1 %cmp6.i, label %land.rhs.i, label %if.end

if.end:                                           ; preds = %for.body.i, %land.rhs.i, %if.then.i, %if.then3, %for.body
  %indvars.iv.next50 = add nuw nsw i64 %indvars.iv49, 1
  %cmp = icmp slt i64 %indvars.iv.next50, %2
  br i1 %cmp, label %if.end.for.body_crit_edge, label %if.end22

if.end.for.body_crit_edge:                        ; preds = %if.end
  %.pre = load %struct.vertex.29**, %struct.vertex.29*** %vertices.i, align 8, !tbaa !226
  br label %for.body

if.else:                                          ; preds = %entry
  %ps5 = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %this, i64 0, i32 0
  %27 = load %struct.vertex.29*, %struct.vertex.29** %ps5, align 8, !tbaa !273
  %agg.tmp.sroa.0.0..sroa_idx.i = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %T, i64 0, i32 0, i32 0
  %agg.tmp.sroa.0.0.copyload.i = load double, double* %agg.tmp.sroa.0.0..sroa_idx.i, align 8
  %agg.tmp.sroa.2.0..sroa_idx8.i = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %T, i64 0, i32 0, i32 1
  %agg.tmp.sroa.2.0.copyload.i = load double, double* %agg.tmp.sroa.2.0..sroa_idx8.i, align 8
  %agg.tmp.sroa.3.0..sroa_idx9.i = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %T, i64 0, i32 0, i32 2
  %agg.tmp.sroa.3.0.copyload.i = load double, double* %agg.tmp.sroa.3.0..sroa_idx9.i, align 8
  %x.i.i40 = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %27, i64 0, i32 1, i32 0
  %28 = load double, double* %x.i.i40, align 8, !tbaa !6
  %cmp.i.i = fcmp fast ogt double %28, %agg.tmp.sroa.0.0.copyload.i
  %index.0.i.i = zext i1 %cmp.i.i to i32
  %y.i.i41 = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %27, i64 0, i32 1, i32 1
  %29 = load double, double* %y.i.i41, align 8, !tbaa !11
  %cmp4.i.i = fcmp fast ogt double %29, %agg.tmp.sroa.2.0.copyload.i
  %add6.i.i = or i32 %index.0.i.i, 2
  %index.1.i.i = select i1 %cmp4.i.i, i32 %add6.i.i, i32 %index.0.i.i
  %z.i.i42 = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %27, i64 0, i32 1, i32 2
  %30 = load double, double* %z.i.i42, align 8, !tbaa !12
  %cmp9.i.i = fcmp fast ogt double %30, %agg.tmp.sroa.3.0.copyload.i
  %add11.i.i = or i32 %index.1.i.i, 4
  %index.2.i.i = select i1 %cmp9.i.i, i32 %add11.i.i, i32 %index.1.i.i
  %31 = zext i32 %index.2.i.i to i64
  %arrayidx8 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %T, i64 0, i32 4, i64 %31
  %32 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx8, align 8, !tbaa !53
  tail call void @_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNN10nearestNghEP9gTreeNodeIS2_7_vect3dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %this, %class.gTreeNode.31* %32)
  %quads = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %this, i64 0, i32 3
  %33 = load i32, i32* %quads, align 8, !tbaa !279
  %cmp1044 = icmp sgt i32 %33, 0
  br i1 %cmp1044, label %for.body12.preheader, label %if.end22

for.body12.preheader:                             ; preds = %if.else
  br label %for.body12

for.body12:                                       ; preds = %for.body12.preheader, %for.inc19
  %34 = phi i32 [ %36, %for.inc19 ], [ %33, %for.body12.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc19 ], [ 0, %for.body12.preheader ]
  %cmp13 = icmp eq i64 %indvars.iv, %31
  br i1 %cmp13, label %for.inc19, label %if.then14

if.then14:                                        ; preds = %for.body12
  %arrayidx17 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %T, i64 0, i32 4, i64 %indvars.iv
  %35 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx17, align 8, !tbaa !53
  tail call void @_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNN14nearestNghTrimEP9gTreeNodeIS2_7_vect3dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* nonnull %this, %class.gTreeNode.31* %35)
  %.pre51 = load i32, i32* %quads, align 8, !tbaa !279
  br label %for.inc19

for.inc19:                                        ; preds = %for.body12, %if.then14
  %36 = phi i32 [ %34, %for.body12 ], [ %.pre51, %if.then14 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %37 = sext i32 %36 to i64
  %cmp10 = icmp slt i64 %indvars.iv.next, %37
  br i1 %cmp10, label %for.body12, label %if.end22

if.end22:                                         ; preds = %if.end, %for.inc19, %if.then, %if.else
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNN14nearestNghTrimEP9gTreeNodeIS2_7_vect3dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %this, %class.gTreeNode.31* %T) local_unnamed_addr #7 comdat align 2 {
entry:
  %ps = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %this, i64 0, i32 0
  %0 = load %struct.vertex.29*, %struct.vertex.29** %ps, align 8, !tbaa !273
  %agg.tmp.sroa.0.0..sroa_idx = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %0, i64 0, i32 1, i32 0
  %agg.tmp.sroa.0.0.copyload = load double, double* %agg.tmp.sroa.0.0..sroa_idx, align 8
  %agg.tmp.sroa.2.0..sroa_idx34 = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %0, i64 0, i32 1, i32 1
  %1 = bitcast double* %agg.tmp.sroa.2.0..sroa_idx34 to <2 x double>*
  %2 = load <2 x double>, <2 x double>* %1, align 8
  %size = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %T, i64 0, i32 1
  %3 = load double, double* %size, align 8, !tbaa !219
  %div = fmul fast double %3, 5.000000e-01
  %arrayidx = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %this, i64 0, i32 2, i64 0
  %4 = load double, double* %arrayidx, align 8, !tbaa !18
  %add = fadd fast double %div, %4
  %x.i = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %T, i64 0, i32 0, i32 0
  %5 = load double, double* %x.i, align 8, !tbaa !6
  %sub.i = fsub fast double %5, %add
  %cmp.i = fcmp fast ogt double %sub.i, %agg.tmp.sroa.0.0.copyload
  %add.i = fadd fast double %5, %add
  %cmp5.i = fcmp fast olt double %add.i, %agg.tmp.sroa.0.0.copyload
  %or.cond.i = or i1 %cmp.i, %cmp5.i
  br i1 %or.cond.i, label %if.end14, label %lor.lhs.false6.i

lor.lhs.false6.i:                                 ; preds = %entry
  %y.i = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %T, i64 0, i32 0, i32 1
  %6 = load double, double* %y.i, align 8, !tbaa !11
  %sub7.i = fsub fast double %6, %add
  %7 = extractelement <2 x double> %2, i32 0
  %cmp9.i = fcmp fast ogt double %sub7.i, %7
  %add12.i = fadd fast double %6, %add
  %cmp14.i = fcmp fast olt double %add12.i, %7
  %or.cond28.i = or i1 %cmp9.i, %cmp14.i
  br i1 %or.cond28.i, label %if.end14, label %lor.lhs.false15.i

lor.lhs.false15.i:                                ; preds = %lor.lhs.false6.i
  %z.i = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %T, i64 0, i32 0, i32 2
  %8 = load double, double* %z.i, align 8, !tbaa !12
  %sub16.i = fsub fast double %8, %add
  %9 = extractelement <2 x double> %2, i32 1
  %cmp18.i = fcmp fast ogt double %sub16.i, %9
  %add20.i = fadd fast double %8, %add
  %cmp22.i = fcmp fast olt double %add20.i, %9
  %or.cond = or i1 %cmp18.i, %cmp22.i
  br i1 %or.cond, label %if.end14, label %if.then

if.then:                                          ; preds = %lor.lhs.false15.i
  %vertices.i = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %T, i64 0, i32 5
  %10 = load %struct.vertex.29**, %struct.vertex.29*** %vertices.i, align 8, !tbaa !226
  %cmp.i27 = icmp eq %struct.vertex.29** %10, null
  br i1 %cmp.i27, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.then
  %count = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %T, i64 0, i32 3
  %11 = load i32, i32* %count, align 4, !tbaa !215
  %cmp39 = icmp sgt i32 %11, 0
  br i1 %cmp39, label %for.body.lr.ph, label %if.end14

for.body.lr.ph:                                   ; preds = %if.then3
  %arrayidx3.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %this, i64 0, i32 1, i64 0
  %k.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %this, i64 0, i32 4
  %12 = sext i32 %11 to i64
  br label %for.body

for.body:                                         ; preds = %_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNN6updateEPS3_.exit.for.body_crit_edge, %for.body.lr.ph
  %13 = phi double [ %4, %for.body.lr.ph ], [ %.pre48, %_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNN6updateEPS3_.exit.for.body_crit_edge ]
  %14 = phi double [ %agg.tmp.sroa.0.0.copyload, %for.body.lr.ph ], [ %.pre45, %_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNN6updateEPS3_.exit.for.body_crit_edge ]
  %15 = phi %struct.vertex.29** [ %10, %for.body.lr.ph ], [ %.pre, %_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNN6updateEPS3_.exit.for.body_crit_edge ]
  %indvars.iv42 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next43, %_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNN6updateEPS3_.exit.for.body_crit_edge ]
  %16 = phi <2 x double> [ %2, %for.body.lr.ph ], [ %36, %_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNN6updateEPS3_.exit.for.body_crit_edge ]
  %arrayidx4 = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %15, i64 %indvars.iv42
  %17 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx4, align 8, !tbaa !53
  %opt.sroa.0.0..sroa_idx.i = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %17, i64 0, i32 1, i32 0
  %opt.sroa.0.0.copyload.i = load double, double* %opt.sroa.0.0..sroa_idx.i, align 8
  %opt.sroa.4.0..sroa_idx55.i = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %17, i64 0, i32 1, i32 1
  %18 = bitcast double* %opt.sroa.4.0..sroa_idx55.i to <2 x double>*
  %19 = load <2 x double>, <2 x double>* %18, align 8
  %sub.i.i = fsub fast double %14, %opt.sroa.0.0.copyload.i
  %20 = fsub fast <2 x double> %16, %19
  %mul.i.i = fmul fast double %sub.i.i, %sub.i.i
  %21 = fmul fast <2 x double> %20, %20
  %22 = extractelement <2 x double> %21, i32 0
  %add.i.i = fadd fast double %22, %mul.i.i
  %23 = extractelement <2 x double> %21, i32 1
  %add7.i.i = fadd fast double %add.i.i, %23
  %24 = tail call fast double @llvm.sqrt.f64(double %add7.i.i) #2
  %cmp.i28 = fcmp fast olt double %24, %13
  br i1 %cmp.i28, label %if.then.i, label %_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNN6updateEPS3_.exit

if.then.i:                                        ; preds = %for.body
  store %struct.vertex.29* %17, %struct.vertex.29** %arrayidx3.i, align 8, !tbaa !53
  store double %24, double* %arrayidx, align 8, !tbaa !18
  %25 = load i32, i32* %k.i, align 4, !tbaa !278
  %cmp659.i = icmp sgt i32 %25, 1
  br i1 %cmp659.i, label %land.rhs.lr.ph.i, label %_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNN6updateEPS3_.exit

land.rhs.lr.ph.i:                                 ; preds = %if.then.i
  %26 = sext i32 %25 to i64
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %for.body.i, %land.rhs.lr.ph.i
  %27 = phi double [ %24, %land.rhs.lr.ph.i ], [ %34, %for.body.i ]
  %indvars.iv.i = phi i64 [ 1, %land.rhs.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %28 = add nsw i64 %indvars.iv.i, -1
  %arrayidx11.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %this, i64 0, i32 2, i64 %indvars.iv.i
  %29 = load double, double* %arrayidx11.i, align 8, !tbaa !18
  %cmp12.i = fcmp fast olt double %27, %29
  br i1 %cmp12.i, label %for.body.i, label %_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNN6updateEPS3_.exit

for.body.i:                                       ; preds = %land.rhs.i
  %arrayidx8.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %this, i64 0, i32 2, i64 %28
  %arrayidx23.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %this, i64 0, i32 1, i64 %28
  %30 = bitcast %struct.vertex.29** %arrayidx23.i to <2 x i64>*
  %31 = load <2 x i64>, <2 x i64>* %30, align 8, !tbaa !22
  store double %29, double* %arrayidx8.i, align 8, !tbaa !18
  %arrayidx26.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %this, i64 0, i32 1, i64 %indvars.iv.i
  %32 = bitcast %struct.vertex.29** %arrayidx23.i to double*
  store double %29, double* %32, align 8, !tbaa !53
  %33 = bitcast %struct.vertex.29** %arrayidx26.i to <2 x i64>*
  store <2 x i64> %31, <2 x i64>* %33, align 8, !tbaa !22
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %cmp6.i = icmp slt i64 %indvars.iv.next.i, %26
  %bc = bitcast <2 x i64> %31 to <2 x double>
  %34 = extractelement <2 x double> %bc, i32 1
  br i1 %cmp6.i, label %land.rhs.i, label %_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNN6updateEPS3_.exit

_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNN6updateEPS3_.exit: ; preds = %land.rhs.i, %for.body.i, %for.body, %if.then.i
  %indvars.iv.next43 = add nuw nsw i64 %indvars.iv42, 1
  %cmp = icmp slt i64 %indvars.iv.next43, %12
  br i1 %cmp, label %_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNN6updateEPS3_.exit.for.body_crit_edge, label %if.end14

_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNN6updateEPS3_.exit.for.body_crit_edge: ; preds = %_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNN6updateEPS3_.exit
  %.pre = load %struct.vertex.29**, %struct.vertex.29*** %vertices.i, align 8, !tbaa !226
  %.pre44 = load %struct.vertex.29*, %struct.vertex.29** %ps, align 8, !tbaa !273
  %x.i.i.phi.trans.insert = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %.pre44, i64 0, i32 1, i32 0
  %.pre45 = load double, double* %x.i.i.phi.trans.insert, align 8, !tbaa !6, !noalias !280
  %y.i.i.phi.trans.insert = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %.pre44, i64 0, i32 1, i32 1
  %35 = bitcast double* %y.i.i.phi.trans.insert to <2 x double>*
  %36 = load <2 x double>, <2 x double>* %35, align 8, !tbaa !18, !noalias !280
  %.pre48 = load double, double* %arrayidx, align 8, !tbaa !18
  br label %for.body

if.else:                                          ; preds = %if.then
  %quads = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %this, i64 0, i32 3
  %37 = load i32, i32* %quads, align 8, !tbaa !279
  %cmp637 = icmp sgt i32 %37, 0
  br i1 %cmp637, label %for.body8.preheader, label %if.end14

for.body8.preheader:                              ; preds = %if.else
  br label %for.body8

for.body8:                                        ; preds = %for.body8.preheader, %for.body8
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body8 ], [ 0, %for.body8.preheader ]
  %arrayidx10 = getelementptr inbounds %class.gTreeNode.31, %class.gTreeNode.31* %T, i64 0, i32 4, i64 %indvars.iv
  %38 = load %class.gTreeNode.31*, %class.gTreeNode.31** %arrayidx10, align 8, !tbaa !53
  tail call void @_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNN14nearestNghTrimEP9gTreeNodeIS2_7_vect3dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* nonnull %this, %class.gTreeNode.31* %38)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %39 = load i32, i32* %quads, align 8, !tbaa !279
  %40 = sext i32 %39 to i64
  %cmp6 = icmp slt i64 %indvars.iv.next, %40
  br i1 %cmp6, label %for.body8, label %if.end14

if.end14:                                         ; preds = %_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNN6updateEPS3_.exit, %for.body8, %if.then3, %if.else, %entry, %lor.lhs.false6.i, %lor.lhs.false15.i
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_Z3ANNILi10E6vertexI8_point3dIdELi10EEEvPPT0_ii(%struct.vertex.44** %v, i32 %n, i32 %k) local_unnamed_addr #7 comdat {
entry:
  %T = alloca %struct.kNearestNeighbor.45, align 8
  %0 = bitcast %struct.kNearestNeighbor.45* %T to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #2
  %call.i = tail call %class.gTreeNode.46* @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE5gTreeEPPS5_i(%struct.vertex.44** %v, i32 %n) #2
  %tree.i = getelementptr inbounds %struct.kNearestNeighbor.45, %struct.kNearestNeighbor.45* %T, i64 0, i32 0
  store %class.gTreeNode.46* %call.i, %class.gTreeNode.46** %tree.i, align 8, !tbaa !283
  %count.i.i = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %call.i, i64 0, i32 3
  %1 = load i32, i32* %count.i.i, align 4, !tbaa !285
  %2 = sext i32 %1 to i64
  %3 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %2, i64 8) #2
  %4 = extractvalue { i64, i1 } %3, 1
  %5 = extractvalue { i64, i1 } %3, 0
  %6 = select i1 %4, i64 -1, i64 %5
  %call.i.i = tail call i8* @_Znam(i64 %6) #22
  %7 = bitcast i8* %call.i.i to %struct.vertex.44**
  tail call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT_(%class.gTreeNode.46* %call.i, i32 0, %struct.vertex.44** nonnull %7) #2
  %cmp18 = icmp sgt i32 %n, 0
  br i1 %cmp18, label %pfor.detach.lr.ph, label %sync.continue

pfor.detach.lr.ph:                                ; preds = %entry
  %wide.trip.count = zext i32 %n to i64
  %8 = add nsw i64 %wide.trip.count, -1
  call fastcc void @_Z3ANNILi10E6vertexI8_point3dIdELi10EEEvPPT0_ii_pfor.detach.ls(i64 0, i64 %8, %struct.vertex.44** nonnull %7, %struct.kNearestNeighbor.45* nonnull %T, i32 %k)
  br label %sync.continue

sync.continue:                                    ; preds = %entry, %pfor.detach.lr.ph
  call void @free(i8* nonnull %call.i.i) #2
  %9 = load %class.gTreeNode.46*, %class.gTreeNode.46** %tree.i, align 8, !tbaa !283
  call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE3delEv(%class.gTreeNode.46* %9) #2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #2
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE8kNearestEPS3_PS5_i(%struct.kNearestNeighbor.45* %this, %struct.vertex.44* %p, %struct.vertex.44** %result, i32 %k) local_unnamed_addr #7 comdat align 2 {
entry:
  %result33 = bitcast %struct.vertex.44** %result to i8*
  %nn = alloca %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", align 8
  %0 = bitcast %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %nn to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %0) #2
  %cmp.i = icmp sgt i32 %k, 10
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.26, i64 0, i64 0)) #2
  %call.i.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call.i) #2
  tail call void @abort() #21
  unreachable

if.end.i:                                         ; preds = %entry
  %k.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 4
  store i32 %k, i32* %k.i, align 4, !tbaa !288
  %quads.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 3
  store i32 8, i32* %quads.i, align 8, !tbaa !290
  %ps.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 0
  store %struct.vertex.44* %p, %struct.vertex.44** %ps.i, align 8, !tbaa !291
  %cmp515.i = icmp sgt i32 %k, 0
  br i1 %cmp515.i, label %for.body.i.preheader, label %_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNNC2EPS3_i.exit.thread

_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNNC2EPS3_i.exit.thread: ; preds = %if.end.i
  %tree35 = getelementptr inbounds %struct.kNearestNeighbor.45, %struct.kNearestNeighbor.45* %this, i64 0, i32 0
  %1 = load %class.gTreeNode.46*, %class.gTreeNode.46** %tree35, align 8, !tbaa !283
  call void @_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNN10nearestNghEP9gTreeNodeIS2_7_vect3dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* nonnull %nn, %class.gTreeNode.46* %1)
  br label %for.cond.cleanup5

for.body.i.preheader:                             ; preds = %if.end.i
  %wide.trip.count.i = zext i32 %k to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ 0, %for.body.i.preheader ]
  %arrayidx.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 1, i64 %indvars.iv.i
  store %struct.vertex.44* null, %struct.vertex.44** %arrayidx.i, align 8, !tbaa !53
  %arrayidx8.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 2, i64 %indvars.iv.i
  store double 0x7FEFFFFFFFFFFFFF, double* %arrayidx8.i, align 8, !tbaa !18
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.i, label %for.body6.preheader, label %for.body.i, !llvm.loop !292

for.body6.preheader:                              ; preds = %for.body.i
  %tree = getelementptr inbounds %struct.kNearestNeighbor.45, %struct.kNearestNeighbor.45* %this, i64 0, i32 0
  %2 = load %class.gTreeNode.46*, %class.gTreeNode.46** %tree, align 8, !tbaa !283
  call void @_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNN10nearestNghEP9gTreeNodeIS2_7_vect3dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* nonnull %nn, %class.gTreeNode.46* %2)
  %3 = shl nuw nsw i64 %wide.trip.count.i, 3
  call void @llvm.memset.p0i8.i64(i8* %result33, i8 0, i64 %3, i32 8, i1 false)
  %4 = load i32, i32* %k.i, align 4, !tbaa !288
  %5 = add nsw i64 %wide.trip.count.i, -1
  %xtraiter = and i64 %wide.trip.count.i, 7
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body6.prol.loopexit, label %for.body6.prol.preheader

for.body6.prol.preheader:                         ; preds = %for.body6.preheader
  br label %for.body6.prol

for.body6.prol:                                   ; preds = %for.body6.prol.preheader, %for.body6.prol
  %indvars.iv.prol = phi i64 [ %indvars.iv.next.prol, %for.body6.prol ], [ 0, %for.body6.prol.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body6.prol ], [ %xtraiter, %for.body6.prol.preheader ]
  %6 = trunc i64 %indvars.iv.prol to i32
  %7 = xor i32 %6, -1
  %sub2.i.prol = add i32 %4, %7
  %idxprom.i.prol = sext i32 %sub2.i.prol to i64
  %arrayidx.i23.prol = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 1, i64 %idxprom.i.prol
  %8 = bitcast %struct.vertex.44** %arrayidx.i23.prol to i64*
  %9 = load i64, i64* %8, align 8, !tbaa !53
  %arrayidx8.prol = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %result, i64 %indvars.iv.prol
  %10 = bitcast %struct.vertex.44** %arrayidx8.prol to i64*
  store i64 %9, i64* %10, align 8, !tbaa !53
  %indvars.iv.next.prol = add nuw nsw i64 %indvars.iv.prol, 1
  %prol.iter.sub = add nsw i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body6.prol.loopexit, label %for.body6.prol, !llvm.loop !293

for.body6.prol.loopexit:                          ; preds = %for.body6.prol, %for.body6.preheader
  %indvars.iv.unr = phi i64 [ 0, %for.body6.preheader ], [ %xtraiter, %for.body6.prol ]
  %11 = icmp ult i64 %5, 7
  br i1 %11, label %for.cond.cleanup5, label %for.body6.preheader76

for.body6.preheader76:                            ; preds = %for.body6.prol.loopexit
  br label %for.body6

for.cond.cleanup5:                                ; preds = %for.body6, %for.body6.prol.loopexit, %_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNNC2EPS3_i.exit.thread
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %0) #2
  ret void

for.body6:                                        ; preds = %for.body6.preheader76, %for.body6
  %indvars.iv = phi i64 [ %indvars.iv.next.7, %for.body6 ], [ %indvars.iv.unr, %for.body6.preheader76 ]
  %12 = trunc i64 %indvars.iv to i32
  %13 = xor i32 %12, -1
  %sub2.i = add i32 %4, %13
  %idxprom.i = sext i32 %sub2.i to i64
  %arrayidx.i23 = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 1, i64 %idxprom.i
  %14 = bitcast %struct.vertex.44** %arrayidx.i23 to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !53
  %arrayidx8 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %result, i64 %indvars.iv
  %16 = bitcast %struct.vertex.44** %arrayidx8 to i64*
  store i64 %15, i64* %16, align 8, !tbaa !53
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %17 = trunc i64 %indvars.iv.next to i32
  %18 = xor i32 %17, -1
  %sub2.i.1 = add i32 %4, %18
  %idxprom.i.1 = sext i32 %sub2.i.1 to i64
  %arrayidx.i23.1 = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 1, i64 %idxprom.i.1
  %19 = bitcast %struct.vertex.44** %arrayidx.i23.1 to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !53
  %arrayidx8.1 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %result, i64 %indvars.iv.next
  %21 = bitcast %struct.vertex.44** %arrayidx8.1 to i64*
  store i64 %20, i64* %21, align 8, !tbaa !53
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %22 = trunc i64 %indvars.iv.next.1 to i32
  %23 = xor i32 %22, -1
  %sub2.i.2 = add i32 %4, %23
  %idxprom.i.2 = sext i32 %sub2.i.2 to i64
  %arrayidx.i23.2 = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 1, i64 %idxprom.i.2
  %24 = bitcast %struct.vertex.44** %arrayidx.i23.2 to i64*
  %25 = load i64, i64* %24, align 8, !tbaa !53
  %arrayidx8.2 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %result, i64 %indvars.iv.next.1
  %26 = bitcast %struct.vertex.44** %arrayidx8.2 to i64*
  store i64 %25, i64* %26, align 8, !tbaa !53
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv, 3
  %27 = trunc i64 %indvars.iv.next.2 to i32
  %28 = xor i32 %27, -1
  %sub2.i.3 = add i32 %4, %28
  %idxprom.i.3 = sext i32 %sub2.i.3 to i64
  %arrayidx.i23.3 = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 1, i64 %idxprom.i.3
  %29 = bitcast %struct.vertex.44** %arrayidx.i23.3 to i64*
  %30 = load i64, i64* %29, align 8, !tbaa !53
  %arrayidx8.3 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %result, i64 %indvars.iv.next.2
  %31 = bitcast %struct.vertex.44** %arrayidx8.3 to i64*
  store i64 %30, i64* %31, align 8, !tbaa !53
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %32 = trunc i64 %indvars.iv.next.3 to i32
  %33 = xor i32 %32, -1
  %sub2.i.4 = add i32 %4, %33
  %idxprom.i.4 = sext i32 %sub2.i.4 to i64
  %arrayidx.i23.4 = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 1, i64 %idxprom.i.4
  %34 = bitcast %struct.vertex.44** %arrayidx.i23.4 to i64*
  %35 = load i64, i64* %34, align 8, !tbaa !53
  %arrayidx8.4 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %result, i64 %indvars.iv.next.3
  %36 = bitcast %struct.vertex.44** %arrayidx8.4 to i64*
  store i64 %35, i64* %36, align 8, !tbaa !53
  %indvars.iv.next.4 = add nuw nsw i64 %indvars.iv, 5
  %37 = trunc i64 %indvars.iv.next.4 to i32
  %38 = xor i32 %37, -1
  %sub2.i.5 = add i32 %4, %38
  %idxprom.i.5 = sext i32 %sub2.i.5 to i64
  %arrayidx.i23.5 = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 1, i64 %idxprom.i.5
  %39 = bitcast %struct.vertex.44** %arrayidx.i23.5 to i64*
  %40 = load i64, i64* %39, align 8, !tbaa !53
  %arrayidx8.5 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %result, i64 %indvars.iv.next.4
  %41 = bitcast %struct.vertex.44** %arrayidx8.5 to i64*
  store i64 %40, i64* %41, align 8, !tbaa !53
  %indvars.iv.next.5 = add nuw nsw i64 %indvars.iv, 6
  %42 = trunc i64 %indvars.iv.next.5 to i32
  %43 = xor i32 %42, -1
  %sub2.i.6 = add i32 %4, %43
  %idxprom.i.6 = sext i32 %sub2.i.6 to i64
  %arrayidx.i23.6 = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 1, i64 %idxprom.i.6
  %44 = bitcast %struct.vertex.44** %arrayidx.i23.6 to i64*
  %45 = load i64, i64* %44, align 8, !tbaa !53
  %arrayidx8.6 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %result, i64 %indvars.iv.next.5
  %46 = bitcast %struct.vertex.44** %arrayidx8.6 to i64*
  store i64 %45, i64* %46, align 8, !tbaa !53
  %indvars.iv.next.6 = add nuw nsw i64 %indvars.iv, 7
  %47 = trunc i64 %indvars.iv.next.6 to i32
  %48 = xor i32 %47, -1
  %sub2.i.7 = add i32 %4, %48
  %idxprom.i.7 = sext i32 %sub2.i.7 to i64
  %arrayidx.i23.7 = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %nn, i64 0, i32 1, i64 %idxprom.i.7
  %49 = bitcast %struct.vertex.44** %arrayidx.i23.7 to i64*
  %50 = load i64, i64* %49, align 8, !tbaa !53
  %arrayidx8.7 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %result, i64 %indvars.iv.next.6
  %51 = bitcast %struct.vertex.44** %arrayidx8.7 to i64*
  store i64 %50, i64* %51, align 8, !tbaa !53
  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8
  %exitcond.7 = icmp eq i64 %indvars.iv.next.7, %wide.trip.count.i
  br i1 %exitcond.7, label %for.cond.cleanup5, label %for.body6, !llvm.loop !294
}

; Function Attrs: nounwind uwtable
define linkonce_odr %class.gTreeNode.46* @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE5gTreeEPPS5_i(%struct.vertex.44** %vv, i32 %n) local_unnamed_addr #7 comdat align 2 {
entry:
  %minMaxPair = alloca %"struct.std::pair.33", align 16
  %agg.tmp12 = alloca %class._point3d, align 16
  %0 = bitcast %"struct.std::pair.33"* %minMaxPair to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %0) #2
  call void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_(%"struct.std::pair.33"* nonnull sret %minMaxPair, i32 0, i32 %n, %struct.vertex.44** %vv) #2
  %1 = bitcast %"struct.std::pair.33"* %minMaxPair to <2 x double>*
  %2 = load <2 x double>, <2 x double>* %1, align 16
  %minPt.sroa.6.0..sroa_idx73 = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %minMaxPair, i64 0, i32 0, i32 2
  %minPt.sroa.6.0.copyload = load double, double* %minPt.sroa.6.0..sroa_idx73, align 16
  %maxPt.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %minMaxPair, i64 0, i32 1, i32 0
  %3 = bitcast double* %maxPt.sroa.0.0..sroa_idx to <2 x double>*
  %4 = load <2 x double>, <2 x double>* %3, align 8
  %maxPt.sroa.5.0..sroa_idx64 = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %minMaxPair, i64 0, i32 1, i32 2
  %maxPt.sroa.5.0.copyload = load double, double* %maxPt.sroa.5.0..sroa_idx64, align 8
  %5 = fsub fast <2 x double> %4, %2
  %sub6.i = fsub fast double %maxPt.sroa.5.0.copyload, %minPt.sroa.6.0.copyload
  %6 = fmul fast <2 x double> %5, <double 5.000000e-01, double 5.000000e-01>
  %div3.i = fmul fast double %sub6.i, 5.000000e-01
  %7 = fadd fast <2 x double> %6, %2
  %add6.i = fadd fast double %div3.i, %minPt.sroa.6.0.copyload
  %conv = sext i32 %n to i64
  %mul = shl nsw i64 %conv, 3
  %call = call noalias i8* @malloc(i64 %mul) #2
  %8 = bitcast i8* %call to %struct.vertex.44**
  %cmp85 = icmp sgt i32 %n, 0
  br i1 %cmp85, label %pfor.detach.lr.ph, label %sync.continue

pfor.detach.lr.ph:                                ; preds = %entry
  %9 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8 = shl i32 %9, 3
  %wide.trip.count = zext i32 %n to i64
  %10 = add nsw i64 %wide.trip.count, -1
  %11 = zext i32 %__cilkrts_wc8 to i64
  %12 = add nsw i64 %wide.trip.count, -2
  %13 = add nsw i64 %12, %11
  %14 = udiv i64 %13, %11
  %15 = icmp ult i64 %14, 2048
  %16 = select i1 %15, i64 %14, i64 2048
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE5gTreeEPPS5_i_pfor.detach.ls(i64 0, i64 %10, i64 %16, %struct.vertex.44** %vv, %struct.vertex.44** %8)
  br label %sync.continue

sync.continue:                                    ; preds = %entry, %pfor.detach.lr.ph
  %call9 = call i8* @_Znwm(i64 120) #22
  %17 = bitcast i8* %call9 to %class.gTreeNode.46*
  %18 = bitcast %class._point3d* %agg.tmp12 to <2 x double>*
  store <2 x double> %7, <2 x double>* %18, align 16
  %center.sroa.5.0..sroa_idx53 = getelementptr inbounds %class._point3d, %class._point3d* %agg.tmp12, i64 0, i32 2
  store double %add6.i, double* %center.sroa.5.0..sroa_idx53, align 16
  %19 = extractelement <2 x double> %5, i32 1
  %cmp.i.i = fcmp fast olt double %19, %sub6.i
  %20 = select i1 %cmp.i.i, double %sub6.i, double %19
  %21 = extractelement <2 x double> %5, i32 0
  %cmp.i3.i = fcmp fast olt double %21, %20
  %22 = select i1 %cmp.i3.i, double %20, double %21
  call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i(%class.gTreeNode.46* nonnull %17, %struct.vertex.44** %8, i64 %conv, %class._point3d* byval nonnull align 8 %agg.tmp12, double %22, %class.gTreeNode.46* null, i32 0)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %0) #2
  ret %class.gTreeNode.46* %17
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i(%class.gTreeNode.46* %this, %struct.vertex.44** %S.coerce0, i64 %S.coerce1, %class._point3d* byval align 8 %cnt, double %sz, %class.gTreeNode.46* %newNodes, i32 %numNewNodes) unnamed_addr #7 comdat align 2 {
entry:
  %offsets67 = alloca [8 x i32], align 16
  %agg.tmp96 = alloca %class._point3d, align 16
  %0 = bitcast %class.gTreeNode.46* %this to i8*
  %cnt.i220 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 2, i32 0
  store i32 0, i32* %cnt.i220, align 4, !tbaa !295
  %conv = trunc i64 %S.coerce1 to i32
  %count = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 3
  store i32 %conv, i32* %count, align 4, !tbaa !285
  %size = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 1
  store double %sz, double* %size, align 8, !tbaa !296
  %1 = bitcast %class._point3d* %cnt to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* nonnull %1, i64 24, i32 8, i1 false), !tbaa.struct !220
  %vertices = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 5
  %nodeMemory = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 6
  %conv.i = sitofp i32 %conv to double
  %2 = tail call fast double @llvm.log2.f64(double %conv.i) #2
  %div = fmul fast double %2, 0x3FD3A06D3A06D3A1
  %conv7 = fptosi double %div to i32
  %cmp = icmp sgt i32 %conv7, 1
  %cmp9 = icmp sgt i32 %conv, 65536
  %or.cond = and i1 %cmp9, %cmp
  %3 = bitcast %struct.vertex.44*** %vertices to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull %3, i8 0, i64 16, i32 8, i1 false)
  br i1 %or.cond, label %for.body.lr.ph, label %if.else

for.body.lr.ph:                                   ; preds = %entry
  %mul12 = mul nsw i32 %conv7, 3
  %shl13 = shl i32 1, %mul12
  %conv14 = sext i32 %shl13 to i64
  %mul15 = shl nsw i64 %conv14, 2
  %call16 = tail call noalias i8* @malloc(i64 %mul15) #2
  %4 = bitcast i8* %call16 to i32*
  %tmpcast = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 0
  tail call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi(%struct.vertex.44** %S.coerce0, i32 %conv, i32 %shl13, i32 %conv7, double %sz, %class._point3d* byval nonnull align 8 %tmpcast, i32* %4)
  %5 = add i32 %conv7, -1
  %xtraiter = and i32 %conv7, 7
  %6 = icmp ult i32 %5, 7
  br i1 %6, label %for.cond.cleanup.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = sub i32 %conv7, %xtraiter
  br label %for.body

for.cond.cleanup.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %add.lcssa.ph = phi i32 [ undef, %for.body.lr.ph ], [ %add.7, %for.body ]
  %numNewNodes.addr.0240.unr = phi i32 [ 8, %for.body.lr.ph ], [ %add.7, %for.body ]
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod, label %for.cond.cleanup, label %for.body.epil.preheader

for.body.epil.preheader:                          ; preds = %for.cond.cleanup.unr-lcssa
  br label %for.body.epil

for.body.epil:                                    ; preds = %for.body.epil.preheader, %for.body.epil
  %numNewNodes.addr.0240.epil = phi i32 [ %add.epil, %for.body.epil ], [ %numNewNodes.addr.0240.unr, %for.body.epil.preheader ]
  %epil.iter = phi i32 [ %epil.iter.sub, %for.body.epil ], [ %xtraiter, %for.body.epil.preheader ]
  %shl26.epil = shl i32 %numNewNodes.addr.0240.epil, 3
  %add.epil = add nsw i32 %shl26.epil, 8
  %epil.iter.sub = add nsw i32 %epil.iter, -1
  %epil.iter.cmp = icmp eq i32 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond.cleanup, label %for.body.epil, !llvm.loop !297

for.cond.cleanup:                                 ; preds = %for.body.epil, %for.cond.cleanup.unr-lcssa
  %add.lcssa = phi i32 [ %add.lcssa.ph, %for.cond.cleanup.unr-lcssa ], [ %add.epil, %for.body.epil ]
  %phitmp = sext i32 %add.lcssa to i64
  %phitmp252 = mul nsw i64 %phitmp, 120
  %call32 = tail call noalias i8* @malloc(i64 %phitmp252) #2
  %7 = bitcast i8* %call32 to %class.gTreeNode.46*
  %8 = bitcast %class.gTreeNode.46** %nodeMemory to i8**
  store i8* %call32, i8** %8, align 8, !tbaa !298
  tail call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii(%class.gTreeNode.46* %this, %struct.vertex.44** %S.coerce0, i64 %S.coerce1, i32* %4, i32 %shl13, %class.gTreeNode.46* %7, %class.gTreeNode.46* %this, i32 0, i32 %conv7, i32 1)
  tail call void @free(i8* %call16) #2
  br label %if.end163

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %numNewNodes.addr.0240 = phi i32 [ 8, %for.body.lr.ph.new ], [ %add.7, %for.body ]
  %niter = phi i32 [ %unroll_iter, %for.body.lr.ph.new ], [ %niter.nsub.7, %for.body ]
  %add.6 = shl i32 %numNewNodes.addr.0240, 24
  %add.7 = add i32 %add.6, 19173960
  %niter.nsub.7 = add i32 %niter, -8
  %niter.ncmp.7 = icmp eq i32 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %for.cond.cleanup.unr-lcssa, label %for.body

if.else:                                          ; preds = %entry
  %cmp37 = icmp sgt i32 %conv, 16
  br i1 %cmp37, label %if.then38, label %if.else142

if.then38:                                        ; preds = %if.else
  %cmp42 = icmp slt i32 %numNewNodes, 8
  br i1 %cmp42, label %if.then43, label %if.end

if.then43:                                        ; preds = %if.then38
  %call60 = tail call noalias i8* @malloc(i64 960) #2
  %9 = bitcast i8* %call60 to %class.gTreeNode.46*
  %10 = bitcast %class.gTreeNode.46** %nodeMemory to i8**
  store i8* %call60, i8** %10, align 8, !tbaa !298
  br label %if.end

if.end:                                           ; preds = %if.then43, %if.then38
  %numNewNodes.addr.1 = phi i32 [ 8, %if.then43 ], [ %numNewNodes, %if.then38 ]
  %newNodes.addr.0 = phi %class.gTreeNode.46* [ %9, %if.then43 ], [ %newNodes, %if.then38 ]
  %11 = bitcast [8 x i32]* %offsets67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #2
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %offsets67, i64 0, i64 0
  %tmpcast251 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 0
  call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE15sortBlocksSmallEPPS5_iS1_Pi(%struct.vertex.44** %S.coerce0, i32 %conv, %class._point3d* byval nonnull align 8 %tmpcast251, i32* nonnull %arraydecay)
  %z.i = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 0, i32 2
  %newcenter.sroa.5.0..sroa_idx227 = getelementptr inbounds %class._point3d, %class._point3d* %agg.tmp96, i64 0, i32 2
  %sub104 = add nsw i32 %numNewNodes.addr.1, -8
  %12 = bitcast %class.gTreeNode.46* %this to <2 x double>*
  %13 = bitcast %class._point3d* %agg.tmp96 to <2 x double>*
  br label %for.body77

for.cond.cleanup76:                               ; preds = %cond.end
  %arrayidx134 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 4, i64 0
  %14 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx134, align 8, !tbaa !53
  %agg.tmp131.sroa.0.0..sroa_idx = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %14, i64 0, i32 2, i32 0
  %agg.tmp131.sroa.0.0.copyload = load i32, i32* %agg.tmp131.sroa.0.0..sroa_idx, align 4
  %15 = load i32, i32* %cnt.i220, align 4, !tbaa !295
  %add.i219 = add nsw i32 %15, %agg.tmp131.sroa.0.0.copyload
  store i32 %add.i219, i32* %cnt.i220, align 4
  %arrayidx134.1 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 4, i64 1
  %16 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx134.1, align 8, !tbaa !53
  %agg.tmp131.sroa.0.0..sroa_idx.1 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %16, i64 0, i32 2, i32 0
  %agg.tmp131.sroa.0.0.copyload.1 = load i32, i32* %agg.tmp131.sroa.0.0..sroa_idx.1, align 4
  %add.i219.1 = add nsw i32 %agg.tmp131.sroa.0.0.copyload.1, %add.i219
  store i32 %add.i219.1, i32* %cnt.i220, align 4
  %arrayidx134.2 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 4, i64 2
  %17 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx134.2, align 8, !tbaa !53
  %agg.tmp131.sroa.0.0..sroa_idx.2 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %17, i64 0, i32 2, i32 0
  %agg.tmp131.sroa.0.0.copyload.2 = load i32, i32* %agg.tmp131.sroa.0.0..sroa_idx.2, align 4
  %add.i219.2 = add nsw i32 %agg.tmp131.sroa.0.0.copyload.2, %add.i219.1
  store i32 %add.i219.2, i32* %cnt.i220, align 4
  %arrayidx134.3 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 4, i64 3
  %18 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx134.3, align 8, !tbaa !53
  %agg.tmp131.sroa.0.0..sroa_idx.3 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %18, i64 0, i32 2, i32 0
  %agg.tmp131.sroa.0.0.copyload.3 = load i32, i32* %agg.tmp131.sroa.0.0..sroa_idx.3, align 4
  %add.i219.3 = add nsw i32 %agg.tmp131.sroa.0.0.copyload.3, %add.i219.2
  store i32 %add.i219.3, i32* %cnt.i220, align 4
  %arrayidx134.4 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 4, i64 4
  %19 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx134.4, align 8, !tbaa !53
  %agg.tmp131.sroa.0.0..sroa_idx.4 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %19, i64 0, i32 2, i32 0
  %agg.tmp131.sroa.0.0.copyload.4 = load i32, i32* %agg.tmp131.sroa.0.0..sroa_idx.4, align 4
  %add.i219.4 = add nsw i32 %agg.tmp131.sroa.0.0.copyload.4, %add.i219.3
  store i32 %add.i219.4, i32* %cnt.i220, align 4
  %arrayidx134.5 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 4, i64 5
  %20 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx134.5, align 8, !tbaa !53
  %agg.tmp131.sroa.0.0..sroa_idx.5 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %20, i64 0, i32 2, i32 0
  %agg.tmp131.sroa.0.0.copyload.5 = load i32, i32* %agg.tmp131.sroa.0.0..sroa_idx.5, align 4
  %add.i219.5 = add nsw i32 %agg.tmp131.sroa.0.0.copyload.5, %add.i219.4
  store i32 %add.i219.5, i32* %cnt.i220, align 4
  %arrayidx134.6 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 4, i64 6
  %21 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx134.6, align 8, !tbaa !53
  %agg.tmp131.sroa.0.0..sroa_idx.6 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %21, i64 0, i32 2, i32 0
  %agg.tmp131.sroa.0.0.copyload.6 = load i32, i32* %agg.tmp131.sroa.0.0..sroa_idx.6, align 4
  %add.i219.6 = add nsw i32 %agg.tmp131.sroa.0.0.copyload.6, %add.i219.5
  store i32 %add.i219.6, i32* %cnt.i220, align 4
  %arrayidx134.7 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 4, i64 7
  %22 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx134.7, align 8, !tbaa !53
  %agg.tmp131.sroa.0.0..sroa_idx.7 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %22, i64 0, i32 2, i32 0
  %agg.tmp131.sroa.0.0.copyload.7 = load i32, i32* %agg.tmp131.sroa.0.0..sroa_idx.7, align 4
  %add.i219.7 = add nsw i32 %agg.tmp131.sroa.0.0.copyload.7, %add.i219.6
  store i32 %add.i219.7, i32* %cnt.i220, align 4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #2
  br label %if.end163

for.body77:                                       ; preds = %cond.end, %if.end
  %indvars.iv = phi i64 [ 0, %if.end ], [ %indvars.iv.next.pre-phi, %cond.end ]
  %usedNodes.0243 = phi i32 [ 0, %if.end ], [ %add120, %cond.end ]
  %cmp78 = icmp eq i64 %indvars.iv, 7
  br i1 %cmp78, label %cond.end, label %cond.false

cond.false:                                       ; preds = %for.body77
  %23 = add nuw nsw i64 %indvars.iv, 1
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %offsets67, i64 0, i64 %23
  %24 = load i32, i32* %arrayidx, align 4, !tbaa !59
  br label %cond.end

cond.end:                                         ; preds = %for.body77, %cond.false
  %indvars.iv.next.pre-phi = phi i64 [ %23, %cond.false ], [ 8, %for.body77 ]
  %.pre-phi = phi i32 [ %24, %cond.false ], [ %conv, %for.body77 ]
  %arrayidx83 = getelementptr inbounds [8 x i32], [8 x i32]* %offsets67, i64 0, i64 %indvars.iv
  %25 = load i32, i32* %arrayidx83, align 4, !tbaa !59
  %conv86 = sub i32 %.pre-phi, %25
  %idx.ext = sext i32 %25 to i64
  %add.ptr = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %S.coerce0, i64 %idx.ext
  %conv91 = sext i32 %conv86 to i64
  %26 = load double, double* %size, align 8, !tbaa !296
  %div94 = fmul fast double %26, 2.500000e-01
  %27 = trunc i64 %indvars.iv to i32
  %sub.i = fsub fast double -0.000000e+00, %div94
  %28 = load <2 x double>, <2 x double>* %12, align 8, !tbaa !18, !noalias !299
  %29 = insertelement <2 x i32> undef, i32 %27, i32 0
  %30 = shufflevector <2 x i32> %29, <2 x i32> undef, <2 x i32> zeroinitializer
  %31 = and <2 x i32> %30, <i32 1, i32 2>
  %32 = icmp eq <2 x i32> %31, zeroinitializer
  %33 = insertelement <2 x double> undef, double %sub.i, i32 0
  %34 = shufflevector <2 x double> %33, <2 x double> undef, <2 x i32> zeroinitializer
  %35 = insertelement <2 x double> undef, double %div94, i32 0
  %36 = shufflevector <2 x double> %35, <2 x double> undef, <2 x i32> zeroinitializer
  %37 = select <2 x i1> %32, <2 x double> %34, <2 x double> %36
  %38 = fadd fast <2 x double> %37, %28
  %39 = load double, double* %z.i, align 8, !tbaa !12, !noalias !299
  %and10.i = and i32 %27, 4
  %tobool11.i = icmp eq i32 %and10.i, 0
  %cond16.i = select i1 %tobool11.i, double %sub.i, double %div94
  %add17.i = fadd fast double %39, %cond16.i
  store <2 x double> %38, <2 x double>* %13, align 16
  store double %add17.i, double* %newcenter.sroa.5.0..sroa_idx227, align 16
  %div98 = fmul fast double %26, 5.000000e-01
  %idx.ext99 = sext i32 %usedNodes.0243 to i64
  %add.ptr100 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %newNodes.addr.0, i64 %idx.ext99
  %mul105 = mul nsw i32 %conv86, %sub104
  %40 = load i32, i32* %count, align 4, !tbaa !285
  %div107 = sdiv i32 %mul105, %40
  %add108 = add nsw i32 %div107, 1
  %call109 = call %class.gTreeNode.46* @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i(%struct.vertex.44** %add.ptr, i64 %conv91, %class._point3d* byval nonnull align 8 %agg.tmp96, double %div98, %class.gTreeNode.46* %add.ptr100, i32 %add108)
  %arrayidx111 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 4, i64 %indvars.iv
  store %class.gTreeNode.46* %call109, %class.gTreeNode.46** %arrayidx111, align 8, !tbaa !53
  %41 = load i32, i32* %count, align 4, !tbaa !285
  %div118 = sdiv i32 %mul105, %41
  %add119 = add i32 %usedNodes.0243, 1
  %add120 = add i32 %add119, %div118
  %exitcond248 = icmp eq i64 %indvars.iv.next.pre-phi, 8
  br i1 %exitcond248, label %for.cond.cleanup76, label %for.body77

if.else142:                                       ; preds = %if.else
  store %struct.vertex.44** %S.coerce0, %struct.vertex.44*** %vertices, align 8, !tbaa !302
  %cmp148244 = icmp sgt i32 %conv, 0
  br i1 %cmp148244, label %for.body150.lr.ph, label %if.end163

for.body150.lr.ph:                                ; preds = %if.else142
  store i32 %conv, i32* %cnt.i220, align 4
  br label %if.end163

if.end163:                                        ; preds = %if.else142, %for.body150.lr.ph, %for.cond.cleanup76, %for.cond.cleanup
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_(%"struct.std::pair.33"* noalias sret %agg.result, i32 %s, i32 %e, %struct.vertex.44** %g.coerce) local_unnamed_addr #7 comdat {
entry:
  %r = alloca %"struct.std::pair.33", align 8
  %sub = sub nsw i32 %e, %s
  %sub1 = add nsw i32 %sub, -1
  %div = sdiv i32 %sub1, 1024
  %add = add nsw i32 %div, 1
  %cmp = icmp slt i32 %sub, 1025
  br i1 %cmp, label %if.then, label %pfor.detach.lr.ph

if.then:                                          ; preds = %entry
  %idxprom.i.i = sext i32 %s to i64
  %arrayidx.i.i = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %g.coerce, i64 %idxprom.i.i
  %0 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx.i.i, align 8, !tbaa !53, !noalias !303
  %pt.i.i.i = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %0, i64 0, i32 1
  %1 = bitcast %"struct.std::pair.33"* %agg.result to i8*
  %2 = bitcast %class._point3d* %pt.i.i.i to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* nonnull %2, i64 24, i32 8, i1 false) #2, !tbaa.struct !220
  %second.i.i.i.i = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %agg.result, i64 0, i32 1
  %3 = bitcast %class._point3d* %second.i.i.i.i to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %3, i8* nonnull %2, i64 24, i32 8, i1 false) #2, !tbaa.struct !220
  %j.055.i = add nsw i32 %s, 1
  %cmp56.i = icmp slt i32 %j.055.i, %e
  br i1 %cmp56.i, label %for.body.lr.ph.i, label %cleanup

for.body.lr.ph.i:                                 ; preds = %if.then
  %agg.tmp.sroa.3.0..sroa_idx36.i = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %agg.result, i64 0, i32 0, i32 2
  %agg.tmp.sroa.4.0..sroa_idx37.i = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %agg.result, i64 0, i32 1, i32 0
  %agg.tmp.sroa.6.0..sroa_idx39.i = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %agg.result, i64 0, i32 1, i32 2
  %4 = bitcast %"struct.std::pair.33"* %agg.result to <2 x double>*
  %5 = load <2 x double>, <2 x double>* %4, align 8, !alias.scope !308
  %agg.tmp.sroa.3.0..sroa_idx36.promoted.i = load double, double* %agg.tmp.sroa.3.0..sroa_idx36.i, align 8, !alias.scope !308
  %6 = bitcast double* %agg.tmp.sroa.4.0..sroa_idx37.i to <2 x double>*
  %7 = load <2 x double>, <2 x double>* %6, align 8, !alias.scope !308
  %agg.tmp.sroa.6.0..sroa_idx39.promoted.i = load double, double* %agg.tmp.sroa.6.0..sroa_idx39.i, align 8, !alias.scope !308
  %8 = sext i32 %j.055.i to i64
  %9 = sub i32 3, %s
  %10 = add i32 %9, %e
  %11 = sub i32 -2, %s
  %12 = add i32 %11, %e
  %xtraiter = and i32 %10, 3
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body.i.prol.loopexit, label %for.body.i.prol.preheader

for.body.i.prol.preheader:                        ; preds = %for.body.lr.ph.i
  %13 = add nsw i32 %xtraiter, -1
  br label %for.body.i.prol

for.body.i.prol:                                  ; preds = %for.body.i.prol, %for.body.i.prol.preheader
  %indvars.iv.i.prol = phi i64 [ %8, %for.body.i.prol.preheader ], [ %indvars.iv.next.i.prol, %for.body.i.prol ]
  %14 = phi double [ %agg.tmp.sroa.6.0..sroa_idx39.promoted.i, %for.body.i.prol.preheader ], [ %26, %for.body.i.prol ]
  %15 = phi double [ %agg.tmp.sroa.3.0..sroa_idx36.promoted.i, %for.body.i.prol.preheader ], [ %23, %for.body.i.prol ]
  %16 = phi <2 x double> [ %5, %for.body.i.prol.preheader ], [ %22, %for.body.i.prol ]
  %17 = phi <2 x double> [ %7, %for.body.i.prol.preheader ], [ %25, %for.body.i.prol ]
  %prol.iter = phi i32 [ %xtraiter, %for.body.i.prol.preheader ], [ %prol.iter.sub, %for.body.i.prol ]
  %arrayidx.i10.i.prol = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %g.coerce, i64 %indvars.iv.i.prol
  %18 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx.i10.i.prol, align 8, !tbaa !53, !noalias !309
  %agg.tmp1.sroa.0.0..sroa_idx.i.prol = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %18, i64 0, i32 1, i32 0
  %19 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i.prol to <2 x double>*
  %20 = load <2 x double>, <2 x double>* %19, align 8, !noalias !308
  %agg.tmp1.sroa.3.0..sroa_idx52.i.prol = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %18, i64 0, i32 1, i32 2
  %agg.tmp1.sroa.3.0.copyload.i.prol = load double, double* %agg.tmp1.sroa.3.0..sroa_idx52.i.prol, align 8, !noalias !308
  %21 = fcmp fast olt <2 x double> %20, %16
  %22 = select <2 x i1> %21, <2 x double> %20, <2 x double> %16
  %cmp.i7.i.i.i.prol = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i.prol, %15
  %23 = select i1 %cmp.i7.i.i.i.prol, double %agg.tmp1.sroa.3.0.copyload.i.prol, double %15
  %24 = fcmp fast olt <2 x double> %17, %20
  %25 = select <2 x i1> %24, <2 x double> %20, <2 x double> %17
  %cmp.i7.i16.i.i.prol = fcmp fast olt double %14, %agg.tmp1.sroa.3.0.copyload.i.prol
  %26 = select i1 %cmp.i7.i16.i.i.prol, double %agg.tmp1.sroa.3.0.copyload.i.prol, double %14
  %indvars.iv.next.i.prol = add nsw i64 %indvars.iv.i.prol, 1
  %prol.iter.sub = add nsw i32 %prol.iter, -1
  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body.i.prol.loopexit.loopexit, label %for.body.i.prol, !llvm.loop !312

for.body.i.prol.loopexit.loopexit:                ; preds = %for.body.i.prol
  %27 = zext i32 %13 to i64
  %28 = add nsw i64 %8, 1
  %29 = add nsw i64 %28, %27
  br label %for.body.i.prol.loopexit

for.body.i.prol.loopexit:                         ; preds = %for.body.i.prol.loopexit.loopexit, %for.body.lr.ph.i
  %.lcssa176.unr = phi <2 x double> [ undef, %for.body.lr.ph.i ], [ %22, %for.body.i.prol.loopexit.loopexit ]
  %.lcssa175.unr = phi double [ undef, %for.body.lr.ph.i ], [ %23, %for.body.i.prol.loopexit.loopexit ]
  %.lcssa174.unr = phi <2 x double> [ undef, %for.body.lr.ph.i ], [ %25, %for.body.i.prol.loopexit.loopexit ]
  %.lcssa.unr = phi double [ undef, %for.body.lr.ph.i ], [ %26, %for.body.i.prol.loopexit.loopexit ]
  %indvars.iv.i.unr = phi i64 [ %8, %for.body.lr.ph.i ], [ %29, %for.body.i.prol.loopexit.loopexit ]
  %.unr = phi double [ %agg.tmp.sroa.6.0..sroa_idx39.promoted.i, %for.body.lr.ph.i ], [ %26, %for.body.i.prol.loopexit.loopexit ]
  %.unr181 = phi double [ %agg.tmp.sroa.3.0..sroa_idx36.promoted.i, %for.body.lr.ph.i ], [ %23, %for.body.i.prol.loopexit.loopexit ]
  %.unr182 = phi <2 x double> [ %5, %for.body.lr.ph.i ], [ %22, %for.body.i.prol.loopexit.loopexit ]
  %.unr183 = phi <2 x double> [ %7, %for.body.lr.ph.i ], [ %25, %for.body.i.prol.loopexit.loopexit ]
  %30 = icmp ult i32 %12, 3
  br i1 %30, label %for.cond.for.cond.cleanup_crit_edge.i, label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %for.body.i.prol.loopexit
  br label %for.body.i

for.cond.for.cond.cleanup_crit_edge.i:            ; preds = %for.body.i, %for.body.i.prol.loopexit
  %.lcssa176 = phi <2 x double> [ %.lcssa176.unr, %for.body.i.prol.loopexit ], [ %66, %for.body.i ]
  %.lcssa175 = phi double [ %.lcssa175.unr, %for.body.i.prol.loopexit ], [ %67, %for.body.i ]
  %.lcssa174 = phi <2 x double> [ %.lcssa174.unr, %for.body.i.prol.loopexit ], [ %69, %for.body.i ]
  %.lcssa = phi double [ %.lcssa.unr, %for.body.i.prol.loopexit ], [ %70, %for.body.i ]
  store <2 x double> %.lcssa176, <2 x double>* %4, align 8, !alias.scope !308
  store double %.lcssa175, double* %agg.tmp.sroa.3.0..sroa_idx36.i, align 8, !alias.scope !308
  store <2 x double> %.lcssa174, <2 x double>* %6, align 8, !alias.scope !308
  store double %.lcssa, double* %agg.tmp.sroa.6.0..sroa_idx39.i, align 8, !alias.scope !308
  br label %cleanup

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body.i ], [ %indvars.iv.i.unr, %for.body.i.preheader ]
  %31 = phi double [ %70, %for.body.i ], [ %.unr, %for.body.i.preheader ]
  %32 = phi double [ %67, %for.body.i ], [ %.unr181, %for.body.i.preheader ]
  %33 = phi <2 x double> [ %66, %for.body.i ], [ %.unr182, %for.body.i.preheader ]
  %34 = phi <2 x double> [ %69, %for.body.i ], [ %.unr183, %for.body.i.preheader ]
  %arrayidx.i10.i = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %g.coerce, i64 %indvars.iv.i
  %35 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx.i10.i, align 8, !tbaa !53, !noalias !309
  %agg.tmp1.sroa.0.0..sroa_idx.i = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %35, i64 0, i32 1, i32 0
  %36 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i to <2 x double>*
  %37 = load <2 x double>, <2 x double>* %36, align 8, !noalias !308
  %agg.tmp1.sroa.3.0..sroa_idx52.i = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %35, i64 0, i32 1, i32 2
  %agg.tmp1.sroa.3.0.copyload.i = load double, double* %agg.tmp1.sroa.3.0..sroa_idx52.i, align 8, !noalias !308
  %38 = fcmp fast olt <2 x double> %37, %33
  %39 = select <2 x i1> %38, <2 x double> %37, <2 x double> %33
  %cmp.i7.i.i.i = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i, %32
  %40 = select i1 %cmp.i7.i.i.i, double %agg.tmp1.sroa.3.0.copyload.i, double %32
  %41 = fcmp fast olt <2 x double> %34, %37
  %42 = select <2 x i1> %41, <2 x double> %37, <2 x double> %34
  %cmp.i7.i16.i.i = fcmp fast olt double %31, %agg.tmp1.sroa.3.0.copyload.i
  %43 = select i1 %cmp.i7.i16.i.i, double %agg.tmp1.sroa.3.0.copyload.i, double %31
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, 1
  %arrayidx.i10.i.1 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %g.coerce, i64 %indvars.iv.next.i
  %44 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx.i10.i.1, align 8, !tbaa !53, !noalias !309
  %agg.tmp1.sroa.0.0..sroa_idx.i.1 = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %44, i64 0, i32 1, i32 0
  %45 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i.1 to <2 x double>*
  %46 = load <2 x double>, <2 x double>* %45, align 8, !noalias !308
  %agg.tmp1.sroa.3.0..sroa_idx52.i.1 = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %44, i64 0, i32 1, i32 2
  %agg.tmp1.sroa.3.0.copyload.i.1 = load double, double* %agg.tmp1.sroa.3.0..sroa_idx52.i.1, align 8, !noalias !308
  %47 = fcmp fast olt <2 x double> %46, %39
  %48 = select <2 x i1> %47, <2 x double> %46, <2 x double> %39
  %cmp.i7.i.i.i.1 = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i.1, %40
  %49 = select i1 %cmp.i7.i.i.i.1, double %agg.tmp1.sroa.3.0.copyload.i.1, double %40
  %50 = fcmp fast olt <2 x double> %42, %46
  %51 = select <2 x i1> %50, <2 x double> %46, <2 x double> %42
  %cmp.i7.i16.i.i.1 = fcmp fast olt double %43, %agg.tmp1.sroa.3.0.copyload.i.1
  %52 = select i1 %cmp.i7.i16.i.i.1, double %agg.tmp1.sroa.3.0.copyload.i.1, double %43
  %indvars.iv.next.i.1 = add nsw i64 %indvars.iv.i, 2
  %arrayidx.i10.i.2 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %g.coerce, i64 %indvars.iv.next.i.1
  %53 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx.i10.i.2, align 8, !tbaa !53, !noalias !309
  %agg.tmp1.sroa.0.0..sroa_idx.i.2 = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %53, i64 0, i32 1, i32 0
  %54 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i.2 to <2 x double>*
  %55 = load <2 x double>, <2 x double>* %54, align 8, !noalias !308
  %agg.tmp1.sroa.3.0..sroa_idx52.i.2 = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %53, i64 0, i32 1, i32 2
  %agg.tmp1.sroa.3.0.copyload.i.2 = load double, double* %agg.tmp1.sroa.3.0..sroa_idx52.i.2, align 8, !noalias !308
  %56 = fcmp fast olt <2 x double> %55, %48
  %57 = select <2 x i1> %56, <2 x double> %55, <2 x double> %48
  %cmp.i7.i.i.i.2 = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i.2, %49
  %58 = select i1 %cmp.i7.i.i.i.2, double %agg.tmp1.sroa.3.0.copyload.i.2, double %49
  %59 = fcmp fast olt <2 x double> %51, %55
  %60 = select <2 x i1> %59, <2 x double> %55, <2 x double> %51
  %cmp.i7.i16.i.i.2 = fcmp fast olt double %52, %agg.tmp1.sroa.3.0.copyload.i.2
  %61 = select i1 %cmp.i7.i16.i.i.2, double %agg.tmp1.sroa.3.0.copyload.i.2, double %52
  %indvars.iv.next.i.2 = add nsw i64 %indvars.iv.i, 3
  %arrayidx.i10.i.3 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %g.coerce, i64 %indvars.iv.next.i.2
  %62 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx.i10.i.3, align 8, !tbaa !53, !noalias !309
  %agg.tmp1.sroa.0.0..sroa_idx.i.3 = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %62, i64 0, i32 1, i32 0
  %63 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i.3 to <2 x double>*
  %64 = load <2 x double>, <2 x double>* %63, align 8, !noalias !308
  %agg.tmp1.sroa.3.0..sroa_idx52.i.3 = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %62, i64 0, i32 1, i32 2
  %agg.tmp1.sroa.3.0.copyload.i.3 = load double, double* %agg.tmp1.sroa.3.0..sroa_idx52.i.3, align 8, !noalias !308
  %65 = fcmp fast olt <2 x double> %64, %57
  %66 = select <2 x i1> %65, <2 x double> %64, <2 x double> %57
  %cmp.i7.i.i.i.3 = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i.3, %58
  %67 = select i1 %cmp.i7.i.i.i.3, double %agg.tmp1.sroa.3.0.copyload.i.3, double %58
  %68 = fcmp fast olt <2 x double> %60, %64
  %69 = select <2 x i1> %68, <2 x double> %64, <2 x double> %60
  %cmp.i7.i16.i.i.3 = fcmp fast olt double %61, %agg.tmp1.sroa.3.0.copyload.i.3
  %70 = select i1 %cmp.i7.i16.i.i.3, double %agg.tmp1.sroa.3.0.copyload.i.3, double %61
  %indvars.iv.next.i.3 = add nsw i64 %indvars.iv.i, 4
  %lftr.wideiv.i.3 = trunc i64 %indvars.iv.next.i.3 to i32
  %exitcond.i.3 = icmp eq i32 %lftr.wideiv.i.3, %e
  br i1 %exitcond.i.3, label %for.cond.for.cond.cleanup_crit_edge.i, label %for.body.i

pfor.detach.lr.ph:                                ; preds = %entry
  %71 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8 = shl i32 %71, 3
  %mulconv = mul nsw i32 %add, 48
  %mul = sext i32 %mulconv to i64
  %call = tail call noalias i8* @malloc(i64 %mul) #2
  %72 = bitcast i8* %call to %"struct.std::pair.33"*
  %73 = sext i32 %s to i64
  %74 = sext i32 %e to i64
  %75 = sext i32 %div to i64
  %76 = xor i32 %s, 3
  %77 = sub i32 -2, %s
  %78 = add nsw i64 %73, 2
  %79 = icmp sgt i64 %75, 0
  %smax = select i1 %79, i64 %75, i64 0
  %80 = zext i32 %__cilkrts_wc8 to i64
  %81 = add nsw i64 %smax, -1
  %82 = add nsw i64 %81, %80
  %83 = udiv i64 %82, %80
  %84 = icmp ult i64 %83, 2048
  %85 = select i1 %84, i64 %83, i64 2048
  tail call fastcc void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2__pfor.detach.ls(i64 0, i64 %smax, i64 %85, i64 %78, i32 %77, i64 %73, i64 %74, i32 %e, %struct.vertex.44** %g.coerce, i32 %76, %"struct.std::pair.33"* %72)
  %86 = bitcast %"struct.std::pair.33"* %r to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %86) #2
  call void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_(%"struct.std::pair.33"* nonnull sret %r, i32 0, i32 %add, %"struct.std::pair.33"* %72)
  call void @free(i8* %call) #2
  %87 = bitcast %"struct.std::pair.33"* %agg.result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* nonnull %86, i64 48, i32 8, i1 false), !tbaa.struct !237
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %86) #2
  br label %cleanup

cleanup:                                          ; preds = %for.cond.for.cond.cleanup_crit_edge.i, %if.then, %pfor.detach.lr.ph
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_(%"struct.std::pair.33"* noalias sret %agg.result, i32 %s, i32 %e, %"struct.std::pair.33"* %g.coerce) local_unnamed_addr #7 comdat {
entry:
  %r = alloca %"struct.std::pair.33", align 8
  %sub = sub nsw i32 %e, %s
  %sub1 = add nsw i32 %sub, -1
  %div = sdiv i32 %sub1, 1024
  %add = add nsw i32 %div, 1
  %cmp = icmp slt i32 %sub, 1025
  br i1 %cmp, label %if.then, label %pfor.detach.lr.ph

if.then:                                          ; preds = %entry
  %idxprom.i.i = sext i32 %s to i64
  %arrayidx.i.i = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %idxprom.i.i
  %0 = bitcast %"struct.std::pair.33"* %agg.result to i8*
  %1 = bitcast %"struct.std::pair.33"* %arrayidx.i.i to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 48, i32 8, i1 false) #2, !tbaa.struct !237
  %j.054.i = add nsw i32 %s, 1
  %cmp55.i = icmp slt i32 %j.054.i, %e
  br i1 %cmp55.i, label %for.body.lr.ph.i, label %cleanup

for.body.lr.ph.i:                                 ; preds = %if.then
  %agg.tmp.sroa.3.0..sroa_idx34.i = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %agg.result, i64 0, i32 0, i32 2
  %agg.tmp.sroa.4.0..sroa_idx35.i = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %agg.result, i64 0, i32 1, i32 0
  %agg.tmp.sroa.6.0..sroa_idx37.i = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %agg.result, i64 0, i32 1, i32 2
  %2 = bitcast %"struct.std::pair.33"* %agg.result to <2 x double>*
  %3 = load <2 x double>, <2 x double>* %2, align 8, !alias.scope !313
  %agg.tmp.sroa.3.0..sroa_idx34.promoted.i = load double, double* %agg.tmp.sroa.3.0..sroa_idx34.i, align 8, !alias.scope !313
  %4 = bitcast double* %agg.tmp.sroa.4.0..sroa_idx35.i to <2 x double>*
  %5 = load <2 x double>, <2 x double>* %4, align 8, !alias.scope !313
  %agg.tmp.sroa.6.0..sroa_idx37.promoted.i = load double, double* %agg.tmp.sroa.6.0..sroa_idx37.i, align 8, !alias.scope !313
  %6 = sext i32 %j.054.i to i64
  %7 = sub i32 1, %s
  %8 = add i32 %7, %e
  %9 = add i32 %e, -2
  %xtraiter = and i32 %8, 1
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body.i.prol.loopexit, label %for.body.i.prol

for.body.i.prol:                                  ; preds = %for.body.lr.ph.i
  %agg.tmp1.sroa.0.0..sroa_idx.i.prol = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %6, i32 0, i32 0
  %10 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i.prol to <2 x double>*
  %11 = load <2 x double>, <2 x double>* %10, align 8, !noalias !313
  %agg.tmp1.sroa.3.0..sroa_idx50.i.prol = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %6, i32 0, i32 2
  %agg.tmp1.sroa.3.0.copyload.i.prol = load double, double* %agg.tmp1.sroa.3.0..sroa_idx50.i.prol, align 8, !noalias !313
  %agg.tmp1.sroa.4.0..sroa_idx51.i.prol = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %6, i32 1, i32 0
  %12 = bitcast double* %agg.tmp1.sroa.4.0..sroa_idx51.i.prol to <2 x double>*
  %13 = load <2 x double>, <2 x double>* %12, align 8, !noalias !313
  %agg.tmp1.sroa.6.0..sroa_idx53.i.prol = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %6, i32 1, i32 2
  %agg.tmp1.sroa.6.0.copyload.i.prol = load double, double* %agg.tmp1.sroa.6.0..sroa_idx53.i.prol, align 8, !noalias !313
  %14 = fcmp fast olt <2 x double> %11, %3
  %15 = select <2 x i1> %14, <2 x double> %11, <2 x double> %3
  %cmp.i7.i.i.i.prol = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i.prol, %agg.tmp.sroa.3.0..sroa_idx34.promoted.i
  %16 = select i1 %cmp.i7.i.i.i.prol, double %agg.tmp1.sroa.3.0.copyload.i.prol, double %agg.tmp.sroa.3.0..sroa_idx34.promoted.i
  %17 = fcmp fast olt <2 x double> %5, %13
  %18 = select <2 x i1> %17, <2 x double> %13, <2 x double> %5
  %cmp.i7.i16.i.i.prol = fcmp fast olt double %agg.tmp.sroa.6.0..sroa_idx37.promoted.i, %agg.tmp1.sroa.6.0.copyload.i.prol
  %19 = select i1 %cmp.i7.i16.i.i.prol, double %agg.tmp1.sroa.6.0.copyload.i.prol, double %agg.tmp.sroa.6.0..sroa_idx37.promoted.i
  %indvars.iv.next.i.prol = add nsw i64 %6, 1
  br label %for.body.i.prol.loopexit

for.body.i.prol.loopexit:                         ; preds = %for.body.lr.ph.i, %for.body.i.prol
  %.lcssa173.unr = phi <2 x double> [ undef, %for.body.lr.ph.i ], [ %15, %for.body.i.prol ]
  %.lcssa172.unr = phi double [ undef, %for.body.lr.ph.i ], [ %16, %for.body.i.prol ]
  %.lcssa171.unr = phi <2 x double> [ undef, %for.body.lr.ph.i ], [ %18, %for.body.i.prol ]
  %.lcssa.unr = phi double [ undef, %for.body.lr.ph.i ], [ %19, %for.body.i.prol ]
  %indvars.iv.i.unr = phi i64 [ %6, %for.body.lr.ph.i ], [ %indvars.iv.next.i.prol, %for.body.i.prol ]
  %.unr = phi double [ %agg.tmp.sroa.6.0..sroa_idx37.promoted.i, %for.body.lr.ph.i ], [ %19, %for.body.i.prol ]
  %.unr178 = phi double [ %agg.tmp.sroa.3.0..sroa_idx34.promoted.i, %for.body.lr.ph.i ], [ %16, %for.body.i.prol ]
  %.unr179 = phi <2 x double> [ %3, %for.body.lr.ph.i ], [ %15, %for.body.i.prol ]
  %.unr180 = phi <2 x double> [ %5, %for.body.lr.ph.i ], [ %18, %for.body.i.prol ]
  %20 = icmp eq i32 %9, %s
  br i1 %20, label %for.cond.for.cond.cleanup_crit_edge.i, label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %for.body.i.prol.loopexit
  br label %for.body.i

for.cond.for.cond.cleanup_crit_edge.i:            ; preds = %for.body.i, %for.body.i.prol.loopexit
  %.lcssa173 = phi <2 x double> [ %.lcssa173.unr, %for.body.i.prol.loopexit ], [ %40, %for.body.i ]
  %.lcssa172 = phi double [ %.lcssa172.unr, %for.body.i.prol.loopexit ], [ %41, %for.body.i ]
  %.lcssa171 = phi <2 x double> [ %.lcssa171.unr, %for.body.i.prol.loopexit ], [ %43, %for.body.i ]
  %.lcssa = phi double [ %.lcssa.unr, %for.body.i.prol.loopexit ], [ %44, %for.body.i ]
  store <2 x double> %.lcssa173, <2 x double>* %2, align 8, !alias.scope !313
  store double %.lcssa172, double* %agg.tmp.sroa.3.0..sroa_idx34.i, align 8, !alias.scope !313
  store <2 x double> %.lcssa171, <2 x double>* %4, align 8, !alias.scope !313
  store double %.lcssa, double* %agg.tmp.sroa.6.0..sroa_idx37.i, align 8, !alias.scope !313
  br label %cleanup

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.1, %for.body.i ], [ %indvars.iv.i.unr, %for.body.i.preheader ]
  %21 = phi double [ %44, %for.body.i ], [ %.unr, %for.body.i.preheader ]
  %22 = phi double [ %41, %for.body.i ], [ %.unr178, %for.body.i.preheader ]
  %23 = phi <2 x double> [ %40, %for.body.i ], [ %.unr179, %for.body.i.preheader ]
  %24 = phi <2 x double> [ %43, %for.body.i ], [ %.unr180, %for.body.i.preheader ]
  %agg.tmp1.sroa.0.0..sroa_idx.i = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %indvars.iv.i, i32 0, i32 0
  %25 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i to <2 x double>*
  %26 = load <2 x double>, <2 x double>* %25, align 8, !noalias !313
  %agg.tmp1.sroa.3.0..sroa_idx50.i = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %indvars.iv.i, i32 0, i32 2
  %agg.tmp1.sroa.3.0.copyload.i = load double, double* %agg.tmp1.sroa.3.0..sroa_idx50.i, align 8, !noalias !313
  %agg.tmp1.sroa.4.0..sroa_idx51.i = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %indvars.iv.i, i32 1, i32 0
  %27 = bitcast double* %agg.tmp1.sroa.4.0..sroa_idx51.i to <2 x double>*
  %28 = load <2 x double>, <2 x double>* %27, align 8, !noalias !313
  %agg.tmp1.sroa.6.0..sroa_idx53.i = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %indvars.iv.i, i32 1, i32 2
  %agg.tmp1.sroa.6.0.copyload.i = load double, double* %agg.tmp1.sroa.6.0..sroa_idx53.i, align 8, !noalias !313
  %29 = fcmp fast olt <2 x double> %26, %23
  %30 = select <2 x i1> %29, <2 x double> %26, <2 x double> %23
  %cmp.i7.i.i.i = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i, %22
  %31 = select i1 %cmp.i7.i.i.i, double %agg.tmp1.sroa.3.0.copyload.i, double %22
  %32 = fcmp fast olt <2 x double> %24, %28
  %33 = select <2 x i1> %32, <2 x double> %28, <2 x double> %24
  %cmp.i7.i16.i.i = fcmp fast olt double %21, %agg.tmp1.sroa.6.0.copyload.i
  %34 = select i1 %cmp.i7.i16.i.i, double %agg.tmp1.sroa.6.0.copyload.i, double %21
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, 1
  %agg.tmp1.sroa.0.0..sroa_idx.i.1 = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %indvars.iv.next.i, i32 0, i32 0
  %35 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i.1 to <2 x double>*
  %36 = load <2 x double>, <2 x double>* %35, align 8, !noalias !313
  %agg.tmp1.sroa.3.0..sroa_idx50.i.1 = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %indvars.iv.next.i, i32 0, i32 2
  %agg.tmp1.sroa.3.0.copyload.i.1 = load double, double* %agg.tmp1.sroa.3.0..sroa_idx50.i.1, align 8, !noalias !313
  %agg.tmp1.sroa.4.0..sroa_idx51.i.1 = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %indvars.iv.next.i, i32 1, i32 0
  %37 = bitcast double* %agg.tmp1.sroa.4.0..sroa_idx51.i.1 to <2 x double>*
  %38 = load <2 x double>, <2 x double>* %37, align 8, !noalias !313
  %agg.tmp1.sroa.6.0..sroa_idx53.i.1 = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce, i64 %indvars.iv.next.i, i32 1, i32 2
  %agg.tmp1.sroa.6.0.copyload.i.1 = load double, double* %agg.tmp1.sroa.6.0..sroa_idx53.i.1, align 8, !noalias !313
  %39 = fcmp fast olt <2 x double> %36, %30
  %40 = select <2 x i1> %39, <2 x double> %36, <2 x double> %30
  %cmp.i7.i.i.i.1 = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i.1, %31
  %41 = select i1 %cmp.i7.i.i.i.1, double %agg.tmp1.sroa.3.0.copyload.i.1, double %31
  %42 = fcmp fast olt <2 x double> %33, %38
  %43 = select <2 x i1> %42, <2 x double> %38, <2 x double> %33
  %cmp.i7.i16.i.i.1 = fcmp fast olt double %34, %agg.tmp1.sroa.6.0.copyload.i.1
  %44 = select i1 %cmp.i7.i16.i.i.1, double %agg.tmp1.sroa.6.0.copyload.i.1, double %34
  %indvars.iv.next.i.1 = add nsw i64 %indvars.iv.i, 2
  %lftr.wideiv.i.1 = trunc i64 %indvars.iv.next.i.1 to i32
  %exitcond.i.1 = icmp eq i32 %lftr.wideiv.i.1, %e
  br i1 %exitcond.i.1, label %for.cond.for.cond.cleanup_crit_edge.i, label %for.body.i

pfor.detach.lr.ph:                                ; preds = %entry
  %45 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8 = shl i32 %45, 3
  %mulconv = mul nsw i32 %add, 48
  %mul = sext i32 %mulconv to i64
  %call = tail call noalias i8* @malloc(i64 %mul) #2
  %46 = bitcast i8* %call to %"struct.std::pair.33"*
  %47 = sext i32 %s to i64
  %48 = sext i32 %e to i64
  %49 = sext i32 %div to i64
  %50 = xor i32 %s, 1
  %51 = sub i32 -2, %s
  %52 = icmp sgt i64 %49, 0
  %smax = select i1 %52, i64 %49, i64 0
  %53 = zext i32 %__cilkrts_wc8 to i64
  %54 = add nsw i64 %smax, -1
  %55 = add nsw i64 %54, %53
  %56 = udiv i64 %55, %53
  %57 = icmp ult i64 %56, 2048
  %58 = select i1 %57, i64 %56, i64 2048
  tail call fastcc void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2__pfor.detach.ls(i64 0, i64 %smax, i64 %58, i32 %51, i64 %47, i64 %48, i32 %e, %"struct.std::pair.33"* %g.coerce, i32 %50, %"struct.std::pair.33"* %46)
  %59 = bitcast %"struct.std::pair.33"* %r to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %59) #2
  call void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_(%"struct.std::pair.33"* nonnull sret %r, i32 0, i32 %add, %"struct.std::pair.33"* %46)
  call void @free(i8* %call) #2
  %60 = bitcast %"struct.std::pair.33"* %agg.result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %60, i8* nonnull %59, i64 48, i32 8, i1 false), !tbaa.struct !237
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %59) #2
  br label %cleanup

cleanup:                                          ; preds = %for.cond.for.cond.cleanup_crit_edge.i, %if.then, %pfor.detach.lr.ph
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi(%struct.vertex.44** %S, i32 %count, i32 %quadrants, i32 %logdivs, double %size, %class._point3d* byval align 8 %center, i32* %offsets) local_unnamed_addr #7 comdat align 2 {
entry:
  %0 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8133 = shl i32 %0, 3
  %conv = sext i32 %count to i64
  %mul = shl nsw i64 %conv, 4
  %call = tail call noalias i8* @malloc(i64 %mul) #2
  %1 = bitcast i8* %call to %"struct.std::pair.51"*
  %shl = shl i32 1, %logdivs
  %div2.neg.neg = fmul fast double %size, 5.000000e-01
  %cmp94 = icmp sgt i32 %count, 0
  br i1 %cmp94, label %pfor.detach.lr.ph, label %sync.continue

pfor.detach.lr.ph:                                ; preds = %entry
  %cmp75.i = icmp sgt i32 %logdivs, 0
  %wide.trip.count99 = zext i32 %count to i64
  br i1 %cmp75.i, label %pfor.detach.us.preheader, label %pfor.detach.preheader

pfor.detach.preheader:                            ; preds = %pfor.detach.lr.ph
  %2 = add nsw i64 %wide.trip.count99, -1
  %3 = zext i32 %__cilkrts_wc8133 to i64
  %4 = add nsw i64 %wide.trip.count99, -2
  %5 = add nsw i64 %4, %3
  %6 = udiv i64 %5, %3
  %7 = icmp ult i64 %6, 2048
  %8 = select i1 %7, i64 %6, i64 2048
  tail call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.ls(i64 0, i64 %2, i64 %8, %struct.vertex.44** %S, %"struct.std::pair.51"* %1)
  br label %sync.continue

pfor.detach.us.preheader:                         ; preds = %pfor.detach.lr.ph
  %z.i = getelementptr inbounds %class._point3d, %class._point3d* %center, i64 0, i32 2
  %9 = load double, double* %z.i, align 8, !tbaa !12, !noalias !316
  %add17.i.neg = fsub fast double %div2.neg.neg, %9
  %y.i = getelementptr inbounds %class._point3d, %class._point3d* %center, i64 0, i32 1
  %10 = load double, double* %y.i, align 8, !tbaa !11, !noalias !316
  %add9.i.neg = fsub fast double %div2.neg.neg, %10
  %sub3.i = add nsw i32 %shl, -1
  %conv1 = sitofp i32 %shl to double
  %div = fdiv fast double %size, %conv1
  %11 = fdiv fast double 1.000000e+00, %div
  %x.i = getelementptr inbounds %class._point3d, %class._point3d* %center, i64 0, i32 0
  %12 = load double, double* %x.i, align 8, !tbaa !6, !noalias !316
  %add.i.neg = fsub fast double %div2.neg.neg, %12
  %min.iters.check = icmp ult i32 %logdivs, 16
  %n.vec = and i32 %logdivs, -16
  %cmp.n = icmp eq i32 %n.vec, %logdivs
  %13 = add nsw i64 %wide.trip.count99, -1
  %14 = zext i32 %__cilkrts_wc8133 to i64
  %15 = add nsw i64 %wide.trip.count99, -2
  %16 = add nsw i64 %15, %14
  %17 = udiv i64 %16, %14
  %18 = icmp ult i64 %17, 2048
  %19 = select i1 %18, i64 %17, i64 2048
  tail call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.us.ls(i64 0, i64 %13, i64 %19, %struct.vertex.44** %S, double %add.i.neg, double %11, i32 %sub3.i, double %add9.i.neg, double %add17.i.neg, i1 %min.iters.check, i32 %n.vec, i1 %cmp.n, i32 %logdivs, %"struct.std::pair.51"* %1)
  br label %sync.continue

sync.continue:                                    ; preds = %entry, %pfor.detach.us.preheader, %pfor.detach.preheader
  %conv16 = sext i32 %quadrants to i64
  %cmp.i.i.i = icmp eq i32 %count, 2147483647
  %cond.i.i.i = select i1 %cmp.i.i.i, i64 8, i64 4
  %div.i.i.i = sdiv i64 %conv, 2048
  %add.i.i.i = add nsw i64 %div.i.i.i, 1
  %mul112.i.i.i = or i64 %cond.i.i.i, 16
  %add2.i.i.i = mul nsw i64 %mul112.i.i.i, %conv
  %mul3.i.i.i = shl nuw nsw i64 %cond.i.i.i, 8
  %mul4.i.i.i = mul nsw i64 %mul3.i.i.i, %add.i.i.i
  %add5.i.i.i = add nsw i64 %add2.i.i.i, %mul4.i.i.i
  %call1.i.i = tail call noalias i8* @malloc(i64 %add5.i.i.i) #2
  tail call void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1_(%"struct.std::pair.51"* %1, i32* %offsets, i64 %conv, i64 %conv16, i1 zeroext false, i8* %call1.i.i) #2
  tail call void @free(i8* %call1.i.i) #2
  br i1 %cmp94, label %pfor.detach29.lr.ph, label %sync.continue42

pfor.detach29.lr.ph:                              ; preds = %sync.continue
  %wide.trip.count = zext i32 %count to i64
  %20 = add nsw i64 %wide.trip.count, -1
  %21 = zext i32 %__cilkrts_wc8133 to i64
  %22 = add nsw i64 %wide.trip.count, -2
  %23 = add nsw i64 %22, %21
  %24 = udiv i64 %23, %21
  %25 = icmp ult i64 %24, 2048
  %26 = select i1 %25, i64 %24, i64 2048
  tail call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach29.ls(i64 0, i64 %20, i64 %26, %"struct.std::pair.51"* %1, %struct.vertex.44** %S)
  br label %sync.continue42

sync.continue42:                                  ; preds = %sync.continue, %pfor.detach29.lr.ph
  tail call void @free(i8* %call) #2
  ret void
}

; Function Attrs: nounwind stealable uwtable
define linkonce_odr void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii(%class.gTreeNode.46* %this, %struct.vertex.44** %S.coerce0, i64 %S.coerce1, i32* %offsets, i32 %quadrants, %class.gTreeNode.46* %newNodes, %class.gTreeNode.46* %parent, i32 %nodesToLeft, i32 %height, i32 %depth) local_unnamed_addr #15 comdat align 2 {
entry:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %entry
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %entry, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %entry ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %entry ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %__dnew.i.i.i.i.i = alloca i64, align 8
  %agg.tmp.i = alloca %"class.std::__cxx11::basic_string", align 8
  %agg.tmp2.i = alloca %class._point3d, align 16
  %count = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %parent, i64 0, i32 3
  store i32 0, i32* %count, align 4, !tbaa !285
  %cmp = icmp eq i32 %height, 1
  %size = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %parent, i64 0, i32 1
  %z.i = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %parent, i64 0, i32 0, i32 2
  %shl6 = shl i32 %nodesToLeft, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %__cilkrts_enter_frame_1.exit
  %sub = add nsw i32 %quadrants, -1
  %9 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp.i to i8*
  %10 = bitcast %class._point3d* %agg.tmp2.i to i8*
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp.i, i64 0, i32 2
  %12 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp.i to %union.anon.1**
  %13 = bitcast %union.anon.1* %11 to i8*
  %14 = bitcast i64* %__dnew.i.i.i.i.i to i8*
  %_M_p.i13.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp.i, i64 0, i32 0, i32 0
  %_M_allocated_capacity.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp.i, i64 0, i32 2, i32 0
  %_M_string_length.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp.i, i64 0, i32 1
  %agg.tmp22183.sroa.5.0..sroa_idx208 = getelementptr inbounds %class._point3d, %class._point3d* %agg.tmp2.i, i64 0, i32 2
  %15 = sext i32 %shl6 to i64
  %16 = bitcast %class.gTreeNode.46* %parent to <2 x double>*
  %17 = bitcast %class._point3d* %agg.tmp2.i to <2 x double>*
  br label %for.body

for.body:                                         ; preds = %_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit, %if.then
  %indvars.iv = phi i64 [ 0, %if.then ], [ %indvars.iv.next, %_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit ]
  %18 = load double, double* %size, align 8, !tbaa !296
  %div = fmul fast double %18, 2.500000e-01
  %19 = trunc i64 %indvars.iv to i32
  %sub.i = fsub fast double -0.000000e+00, %div
  %20 = load <2 x double>, <2 x double>* %16, align 8, !tbaa !18, !noalias !319
  %21 = insertelement <2 x i32> undef, i32 %19, i32 0
  %22 = shufflevector <2 x i32> %21, <2 x i32> undef, <2 x i32> zeroinitializer
  %23 = and <2 x i32> %22, <i32 1, i32 2>
  %24 = icmp eq <2 x i32> %23, zeroinitializer
  %25 = insertelement <2 x double> undef, double %sub.i, i32 0
  %26 = shufflevector <2 x double> %25, <2 x double> undef, <2 x i32> zeroinitializer
  %27 = insertelement <2 x double> undef, double %div, i32 0
  %28 = shufflevector <2 x double> %27, <2 x double> undef, <2 x i32> zeroinitializer
  %29 = select <2 x i1> %24, <2 x double> %26, <2 x double> %28
  %30 = fadd fast <2 x double> %29, %20
  %31 = load double, double* %z.i, align 8, !tbaa !12, !noalias !319
  %and10.i = and i32 %19, 4
  %tobool11.i = icmp eq i32 %and10.i, 0
  %cond16.i = select i1 %tobool11.i, double %sub.i, double %div
  %add17.i = fadd fast double %cond16.i, %31
  %32 = add nuw nsw i64 %indvars.iv, %15
  %33 = trunc i64 %32 to i32
  %cmp7 = icmp eq i32 %sub, %33
  br i1 %cmp7, label %cond.end, label %cond.false

cond.false:                                       ; preds = %for.body
  %34 = add nsw i64 %32, 1
  %arrayidx = getelementptr inbounds i32, i32* %offsets, i64 %34
  %35 = load i32, i32* %arrayidx, align 4, !tbaa !59
  %conv = sext i32 %35 to i64
  br label %cond.end

cond.end:                                         ; preds = %for.body, %cond.false
  %cond = phi i64 [ %conv, %cond.false ], [ %S.coerce1, %for.body ]
  %arrayidx10 = getelementptr inbounds i32, i32* %offsets, i64 %32
  %36 = load i32, i32* %arrayidx10, align 4, !tbaa !59
  %37 = trunc i64 %cond to i32
  %conv13 = sub i32 %37, %36
  %idx.ext = sext i32 %36 to i64
  %add.ptr = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %S.coerce0, i64 %idx.ext
  %conv17 = sext i32 %conv13 to i64
  %add.ptr19 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %newNodes, i64 %32
  %arrayidx21 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %parent, i64 0, i32 4, i64 %indvars.iv
  store %class.gTreeNode.46* %add.ptr19, %class.gTreeNode.46** %arrayidx21, align 8, !tbaa !53
  %div24 = fmul fast double %18, 5.000000e-01
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10)
  store %union.anon.1* %11, %union.anon.1** %12, align 8, !tbaa !47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #2
  store i64 17, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !49
  %call5.i.i.i.i.i = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp.i, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i.i, i64 0) #2
  store i8* %call5.i.i.i.i.i, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %38 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !49
  store i64 %38, i64* %_M_allocated_capacity.i.i.i.i.i.i, align 8, !tbaa !22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call5.i.i.i.i.i, i8* nonnull getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i64 17, i32 1, i1 false) #2
  store i64 %38, i64* %_M_string_length.i.i.i.i.i.i.i, align 8, !tbaa !52
  %39 = load i8*, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds i8, i8* %39, i64 %38
  store i8 0, i8* %arrayidx.i.i.i.i.i.i, align 1, !tbaa !22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #2
  %40 = load i8*, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !50
  %cmp.i.i.i.i = icmp eq i8* %40, %13
  br i1 %cmp.i.i.i.i, label %_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %cond.end
  call void @_ZdlPv(i8* %40) #2
  br label %_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit

_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit: ; preds = %cond.end, %if.then.i.i.i
  store <2 x double> %30, <2 x double>* %17, align 16
  store double %add17.i, double* %agg.tmp22183.sroa.5.0..sroa_idx208, align 16
  %add.ptr.i = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %add.ptr19, i64 1
  call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i(%class.gTreeNode.46* %add.ptr19, %struct.vertex.44** %add.ptr, i64 %conv17, %class._point3d* byval nonnull align 8 %agg.tmp2.i, double %div24, %class.gTreeNode.46* nonnull %add.ptr.i, i32 0) #2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 8
  br i1 %exitcond, label %if.end, label %for.body

if.else:                                          ; preds = %__cilkrts_enter_frame_1.exit
  %idx.ext45 = sext i32 %shl6 to i64
  %add68 = add nsw i32 %depth, 1
  %sub67 = add nsw i32 %height, -1
  %mul56 = mul nsw i32 %depth, 3
  %shl57 = shl i32 1, %mul56
  %idx.ext58 = sext i32 %shl57 to i64
  %add.ptr59 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %newNodes, i64 %idx.ext58
  %41 = bitcast %class.gTreeNode.46* %parent to <2 x double>*
  %42 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %43 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %44 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %45 = getelementptr inbounds [5 x i8*], [5 x i8*]* %44, i64 0, i64 0
  %46 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %47 = bitcast [5 x i8*]* %44 to i8*
  br label %for.body35

for.body35:                                       ; preds = %det.cont70, %if.else
  %indvars.iv217 = phi i64 [ 0, %if.else ], [ %indvars.iv.next218, %det.cont70 ]
  %48 = load double, double* %size, align 8, !tbaa !296
  %div39 = fmul fast double %48, 2.500000e-01
  %49 = trunc i64 %indvars.iv217 to i32
  %sub.i165 = fsub fast double -0.000000e+00, %div39
  %50 = load <2 x double>, <2 x double>* %41, align 8, !tbaa !18, !noalias !322
  %51 = insertelement <2 x i32> undef, i32 %49, i32 0
  %52 = shufflevector <2 x i32> %51, <2 x i32> undef, <2 x i32> zeroinitializer
  %53 = and <2 x i32> %52, <i32 1, i32 2>
  %54 = icmp eq <2 x i32> %53, zeroinitializer
  %55 = insertelement <2 x double> undef, double %sub.i165, i32 0
  %56 = shufflevector <2 x double> %55, <2 x double> undef, <2 x i32> zeroinitializer
  %57 = insertelement <2 x double> undef, double %div39, i32 0
  %58 = shufflevector <2 x double> %57, <2 x double> undef, <2 x i32> zeroinitializer
  %59 = select <2 x i1> %54, <2 x double> %56, <2 x double> %58
  %60 = fadd fast <2 x double> %59, %50
  %61 = load double, double* %z.i, align 8, !tbaa !12, !noalias !322
  %and10.i174 = and i32 %49, 4
  %tobool11.i175 = icmp eq i32 %and10.i174, 0
  %cond16.i176 = select i1 %tobool11.i175, double %sub.i165, double %div39
  %add17.i177 = fadd fast double %cond16.i176, %61
  %add.ptr41 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %newNodes, i64 %indvars.iv217
  %add.ptr46 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %add.ptr41, i64 %idx.ext45
  %div49 = fmul fast double %48, 5.000000e-01
  %cnt.i.i = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %add.ptr46, i64 0, i32 2, i32 0
  store i32 0, i32* %cnt.i.i, align 4, !tbaa !295
  %count.i = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %add.ptr46, i64 0, i32 3
  store i32 0, i32* %count.i, align 4, !tbaa !285
  %size.i = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %add.ptr46, i64 0, i32 1
  store double %div49, double* %size.i, align 8, !tbaa !296
  %62 = bitcast %class.gTreeNode.46* %add.ptr46 to <2 x double>*
  store <2 x double> %60, <2 x double>* %62, align 8
  %agg.tmp47181.sroa.5.0..sroa_idx203 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %add.ptr46, i64 0, i32 0, i32 2
  store double %add17.i177, double* %agg.tmp47181.sroa.5.0..sroa_idx203, align 8
  %vertices.i = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %add.ptr46, i64 0, i32 5
  %63 = bitcast %struct.vertex.44*** %vertices.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull %63, i8 0, i64 16, i32 8, i1 false) #2
  %arrayidx52 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %parent, i64 0, i32 4, i64 %indvars.iv217
  store %class.gTreeNode.46* %add.ptr46, %class.gTreeNode.46** %arrayidx52, align 8, !tbaa !53
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %42, i16* nonnull %43) #2
  %64 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %64, i8** %45, align 8
  %65 = call i8* @llvm.stacksave()
  store volatile i8* %65, i8** %46, align 8
  %66 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %47) #23
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %for.body35.split, label %det.cont70

for.body35.split:                                 ; preds = %for.body35
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii_det.achd69.cilk(i64 %indvars.iv217, i32 %shl6, %class.gTreeNode.46* %this, %struct.vertex.44** %S.coerce0, i64 %S.coerce1, i32* %offsets, i32 %quadrants, %class.gTreeNode.46* nonnull %add.ptr59, %class.gTreeNode.46* %add.ptr46, i32 %sub67, i32 %add68)
  br label %det.cont70

det.cont70:                                       ; preds = %for.body35.split, %for.body35
  %indvars.iv.next218 = add nuw nsw i64 %indvars.iv217, 1
  %exitcond220 = icmp eq i64 %indvars.iv.next218, 8
  br i1 %exitcond220, label %if.end, label %for.body35

if.end:                                           ; preds = %det.cont70, %_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i.exit
  %68 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %69 = load atomic i32, i32* %68 acquire, align 8
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %if.end
  %72 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %73 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %74 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %73, i16* nonnull %74) #2
  %75 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %76 = call i8* @llvm.frameaddress(i32 0) #2
  %77 = getelementptr inbounds [5 x i8*], [5 x i8*]* %75, i64 0, i64 0
  store volatile i8* %76, i8** %77, align 8
  %78 = call i8* @llvm.stacksave() #2
  %79 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %78, i8** %79, align 8
  %80 = bitcast [5 x i8*]* %75 to i8*
  %81 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %80) #24
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %if.end, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %83 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %84 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %83, i64 0, i32 12, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, 1
  store i64 %86, i64* %84, align 8
  %cnt.i = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %parent, i64 0, i32 2, i32 0
  %arrayidx86 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %parent, i64 0, i32 4, i64 0
  %87 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx86, align 8, !tbaa !53
  %agg.tmp83.sroa.0.0..sroa_idx = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %87, i64 0, i32 2, i32 0
  %agg.tmp83.sroa.0.0.copyload = load i32, i32* %agg.tmp83.sroa.0.0..sroa_idx, align 4
  %88 = load i32, i32* %cnt.i, align 4, !tbaa !295
  %add.i182 = add nsw i32 %88, %agg.tmp83.sroa.0.0.copyload
  store i32 %add.i182, i32* %cnt.i, align 4
  %count94 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %87, i64 0, i32 3
  %89 = load i32, i32* %count94, align 4, !tbaa !285
  %90 = load i32, i32* %count, align 4, !tbaa !285
  %add96 = add nsw i32 %90, %89
  store i32 %add96, i32* %count, align 4, !tbaa !285
  %arrayidx86.1 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %parent, i64 0, i32 4, i64 1
  %91 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx86.1, align 8, !tbaa !53
  %agg.tmp83.sroa.0.0..sroa_idx.1 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %91, i64 0, i32 2, i32 0
  %agg.tmp83.sroa.0.0.copyload.1 = load i32, i32* %agg.tmp83.sroa.0.0..sroa_idx.1, align 4
  %add.i182.1 = add nsw i32 %agg.tmp83.sroa.0.0.copyload.1, %add.i182
  store i32 %add.i182.1, i32* %cnt.i, align 4
  %count94.1 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %91, i64 0, i32 3
  %92 = load i32, i32* %count94.1, align 4, !tbaa !285
  %add96.1 = add nsw i32 %92, %add96
  store i32 %add96.1, i32* %count, align 4, !tbaa !285
  %arrayidx86.2 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %parent, i64 0, i32 4, i64 2
  %93 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx86.2, align 8, !tbaa !53
  %agg.tmp83.sroa.0.0..sroa_idx.2 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %93, i64 0, i32 2, i32 0
  %agg.tmp83.sroa.0.0.copyload.2 = load i32, i32* %agg.tmp83.sroa.0.0..sroa_idx.2, align 4
  %add.i182.2 = add nsw i32 %agg.tmp83.sroa.0.0.copyload.2, %add.i182.1
  store i32 %add.i182.2, i32* %cnt.i, align 4
  %count94.2 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %93, i64 0, i32 3
  %94 = load i32, i32* %count94.2, align 4, !tbaa !285
  %add96.2 = add nsw i32 %94, %add96.1
  store i32 %add96.2, i32* %count, align 4, !tbaa !285
  %arrayidx86.3 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %parent, i64 0, i32 4, i64 3
  %95 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx86.3, align 8, !tbaa !53
  %agg.tmp83.sroa.0.0..sroa_idx.3 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %95, i64 0, i32 2, i32 0
  %agg.tmp83.sroa.0.0.copyload.3 = load i32, i32* %agg.tmp83.sroa.0.0..sroa_idx.3, align 4
  %add.i182.3 = add nsw i32 %agg.tmp83.sroa.0.0.copyload.3, %add.i182.2
  store i32 %add.i182.3, i32* %cnt.i, align 4
  %count94.3 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %95, i64 0, i32 3
  %96 = load i32, i32* %count94.3, align 4, !tbaa !285
  %add96.3 = add nsw i32 %96, %add96.2
  store i32 %add96.3, i32* %count, align 4, !tbaa !285
  %arrayidx86.4 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %parent, i64 0, i32 4, i64 4
  %97 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx86.4, align 8, !tbaa !53
  %agg.tmp83.sroa.0.0..sroa_idx.4 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %97, i64 0, i32 2, i32 0
  %agg.tmp83.sroa.0.0.copyload.4 = load i32, i32* %agg.tmp83.sroa.0.0..sroa_idx.4, align 4
  %add.i182.4 = add nsw i32 %agg.tmp83.sroa.0.0.copyload.4, %add.i182.3
  store i32 %add.i182.4, i32* %cnt.i, align 4
  %count94.4 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %97, i64 0, i32 3
  %98 = load i32, i32* %count94.4, align 4, !tbaa !285
  %add96.4 = add nsw i32 %98, %add96.3
  store i32 %add96.4, i32* %count, align 4, !tbaa !285
  %arrayidx86.5 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %parent, i64 0, i32 4, i64 5
  %99 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx86.5, align 8, !tbaa !53
  %agg.tmp83.sroa.0.0..sroa_idx.5 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %99, i64 0, i32 2, i32 0
  %agg.tmp83.sroa.0.0.copyload.5 = load i32, i32* %agg.tmp83.sroa.0.0..sroa_idx.5, align 4
  %add.i182.5 = add nsw i32 %agg.tmp83.sroa.0.0.copyload.5, %add.i182.4
  store i32 %add.i182.5, i32* %cnt.i, align 4
  %count94.5 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %99, i64 0, i32 3
  %100 = load i32, i32* %count94.5, align 4, !tbaa !285
  %add96.5 = add nsw i32 %100, %add96.4
  store i32 %add96.5, i32* %count, align 4, !tbaa !285
  %arrayidx86.6 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %parent, i64 0, i32 4, i64 6
  %101 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx86.6, align 8, !tbaa !53
  %agg.tmp83.sroa.0.0..sroa_idx.6 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %101, i64 0, i32 2, i32 0
  %agg.tmp83.sroa.0.0.copyload.6 = load i32, i32* %agg.tmp83.sroa.0.0..sroa_idx.6, align 4
  %add.i182.6 = add nsw i32 %agg.tmp83.sroa.0.0.copyload.6, %add.i182.5
  store i32 %add.i182.6, i32* %cnt.i, align 4
  %count94.6 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %101, i64 0, i32 3
  %102 = load i32, i32* %count94.6, align 4, !tbaa !285
  %add96.6 = add nsw i32 %102, %add96.5
  store i32 %add96.6, i32* %count, align 4, !tbaa !285
  %arrayidx86.7 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %parent, i64 0, i32 4, i64 7
  %103 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx86.7, align 8, !tbaa !53
  %agg.tmp83.sroa.0.0..sroa_idx.7 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %103, i64 0, i32 2, i32 0
  %agg.tmp83.sroa.0.0.copyload.7 = load i32, i32* %agg.tmp83.sroa.0.0..sroa_idx.7, align 4
  %add.i182.7 = add nsw i32 %agg.tmp83.sroa.0.0.copyload.7, %add.i182.6
  store i32 %add.i182.7, i32* %cnt.i, align 4
  %count94.7 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %103, i64 0, i32 3
  %104 = load i32, i32* %count94.7, align 4, !tbaa !285
  %add96.7 = add nsw i32 %104, %add96.6
  store i32 %add96.7, i32* %count, align 4, !tbaa !285
  %cmp101 = icmp eq i32 %add96.7, 0
  br i1 %cmp101, label %if.then102, label %if.end104

if.then102:                                       ; preds = %__cilk_sync_nothrow.exit
  %vertices = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %parent, i64 0, i32 5
  store %struct.vertex.44** %S.coerce0, %struct.vertex.44*** %vertices, align 8, !tbaa !302
  br label %if.end104

if.end104:                                        ; preds = %if.then102, %__cilk_sync_nothrow.exit
  %105 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %106 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %105, i64 0, i32 9
  %109 = bitcast %struct.__cilkrts_stack_frame** %108 to i64*
  store atomic i64 %107, i64* %109 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %110 = load atomic i32, i32* %68 acquire, align 8
  %111 = icmp eq i32 %110, 16777216
  br i1 %111, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.end104
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.end104, %body.i
  ret void
}

; Function Attrs: nounwind stealable uwtable
define linkonce_odr void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE15sortBlocksSmallEPPS5_iS1_Pi(%struct.vertex.44** %S, i32 %count, %class._point3d* byval align 8 %center, i32* %offsets) local_unnamed_addr #15 comdat align 2 {
entry:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %entry
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %entry, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %entry ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %entry ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %conv = sext i32 %count to i64
  %mul = shl nsw i64 %conv, 4
  %call1 = tail call noalias i8* @malloc(i64 %mul) #2
  %9 = bitcast i8* %call1 to %"struct.std::pair.51"*
  %cmp101 = icmp sgt i32 %count, 0
  br i1 %cmp101, label %for.body.lr.ph, label %while.body32.lr.ph

for.body.lr.ph:                                   ; preds = %__cilkrts_enter_frame_1.exit
  %agg.tmp.sroa.0.0..sroa_idx = getelementptr inbounds %class._point3d, %class._point3d* %center, i64 0, i32 0
  %agg.tmp.sroa.0.0.copyload = load double, double* %agg.tmp.sroa.0.0..sroa_idx, align 8
  %agg.tmp.sroa.2.0..sroa_idx87 = getelementptr inbounds %class._point3d, %class._point3d* %center, i64 0, i32 1
  %agg.tmp.sroa.2.0.copyload = load double, double* %agg.tmp.sroa.2.0..sroa_idx87, align 8
  %agg.tmp.sroa.3.0..sroa_idx88 = getelementptr inbounds %class._point3d, %class._point3d* %center, i64 0, i32 2
  %agg.tmp.sroa.3.0.copyload = load double, double* %agg.tmp.sroa.3.0..sroa_idx88, align 8
  %wide.trip.count112 = zext i32 %count to i64
  %xtraiter170 = and i64 %wide.trip.count112, 1
  %10 = icmp eq i32 %count, 1
  br i1 %10, label %for.cond.cleanup.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter172 = sub nsw i64 %wide.trip.count112, %xtraiter170
  br label %for.body

for.cond.cleanup.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv110.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next111.1, %for.body ]
  %lcmp.mod171 = icmp eq i64 %xtraiter170, 0
  br i1 %lcmp.mod171, label %for.cond.cleanup, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond.cleanup.unr-lcssa
  %arrayidx3.epil = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %S, i64 %indvars.iv110.unr
  %11 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx3.epil, align 8, !tbaa !53
  %x.i.epil = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %11, i64 0, i32 1, i32 0
  %12 = load double, double* %x.i.epil, align 8, !tbaa !6
  %cmp.i.epil = fcmp fast ogt double %12, %agg.tmp.sroa.0.0.copyload
  %index.0.i.epil = zext i1 %cmp.i.epil to i32
  %y.i.epil = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %11, i64 0, i32 1, i32 1
  %13 = load double, double* %y.i.epil, align 8, !tbaa !11
  %cmp4.i.epil = fcmp fast ogt double %13, %agg.tmp.sroa.2.0.copyload
  %add6.i.epil = or i32 %index.0.i.epil, 2
  %index.1.i.epil = select i1 %cmp4.i.epil, i32 %add6.i.epil, i32 %index.0.i.epil
  %z.i.epil = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %11, i64 0, i32 1, i32 2
  %14 = load double, double* %z.i.epil, align 8, !tbaa !12
  %cmp9.i.epil = fcmp fast ogt double %14, %agg.tmp.sroa.3.0.copyload
  %add11.i.epil = or i32 %index.1.i.epil, 4
  %index.2.i.epil = select i1 %cmp9.i.epil, i32 %add11.i.epil, i32 %index.1.i.epil
  %15 = ptrtoint %struct.vertex.44* %11 to i64
  %first2.i.epil = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %9, i64 %indvars.iv110.unr, i32 0
  store i32 %index.2.i.epil, i32* %first2.i.epil, align 8, !tbaa !325
  %second4.i.epil = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %9, i64 %indvars.iv110.unr, i32 1
  %16 = bitcast %struct.vertex.44** %second4.i.epil to i64*
  store i64 %15, i64* %16, align 8, !tbaa !327
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.unr-lcssa, %for.body.epil
  %cmp.i68 = icmp slt i32 %count, 256
  br i1 %cmp.i68, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %for.cond.cleanup
  %cmp20.i = icmp sgt i32 %count, 20
  br i1 %cmp20.i, label %while.body.lr.ph.i, label %while.end.i

while.body.lr.ph.i:                               ; preds = %if.then.i
  %sub.ptr.rhs.cast4.i = ptrtoint i8* %call1 to i64
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i, %while.body.lr.ph.i
  %n.addr.021.i = phi i32 [ %count, %while.body.lr.ph.i ], [ %conv.i, %while.body.i ]
  %call.i69 = tail call { %"struct.std::pair.51"*, %"struct.std::pair.51"* } bitcast ({ %"struct.std::pair.23"*, %"struct.std::pair.23"* } (%"struct.std::pair.23"*, i32)* @_Z5splitISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEiES0_IPT_SF_ESF_T1_T0_ to { %"struct.std::pair.51"*, %"struct.std::pair.51"* } (%"struct.std::pair.51"*, i32)*)(%"struct.std::pair.51"* %9, i32 %n.addr.021.i) #2
  %17 = extractvalue { %"struct.std::pair.51"*, %"struct.std::pair.51"* } %call.i69, 0
  %18 = extractvalue { %"struct.std::pair.51"*, %"struct.std::pair.51"* } %call.i69, 1
  %idx.ext.i70 = sext i32 %n.addr.021.i to i64
  %add.ptr.i71 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %9, i64 %idx.ext.i70
  %sub.ptr.lhs.cast.i72 = ptrtoint %"struct.std::pair.51"* %add.ptr.i71 to i64
  %sub.ptr.rhs.cast.i73 = ptrtoint %"struct.std::pair.51"* %18 to i64
  %sub.ptr.sub.i74 = sub i64 %sub.ptr.lhs.cast.i72, %sub.ptr.rhs.cast.i73
  %sub.ptr.div.i75 = ashr exact i64 %sub.ptr.sub.i74, 4
  %19 = bitcast %"struct.std::pair.51"* %18 to %"struct.std::pair.6"*
  tail call void @_Z15quickSortSerialISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.6"* %19, i64 %sub.ptr.div.i75) #2
  %sub.ptr.lhs.cast3.i = ptrtoint %"struct.std::pair.51"* %17 to i64
  %sub.ptr.sub5.i = sub i64 %sub.ptr.lhs.cast3.i, %sub.ptr.rhs.cast4.i
  %20 = lshr exact i64 %sub.ptr.sub5.i, 4
  %conv.i = trunc i64 %20 to i32
  %cmp.i76 = icmp sgt i32 %conv.i, 20
  br i1 %cmp.i76, label %while.body.i, label %while.end.i.loopexit

while.end.i.loopexit:                             ; preds = %while.body.i
  %conv.i.le = trunc i64 %20 to i32
  br label %while.end.i

while.end.i:                                      ; preds = %while.end.i.loopexit, %if.then.i
  %n.addr.0.lcssa.i = phi i32 [ %count, %if.then.i ], [ %conv.i.le, %while.end.i.loopexit ]
  %cmp37.i.i = icmp sgt i32 %n.addr.0.lcssa.i, 0
  br i1 %cmp37.i.i, label %for.body.lr.ph.i.i, label %for.body15.preheader

for.body.lr.ph.i.i:                               ; preds = %while.end.i
  %wide.trip.count.i.i = zext i32 %n.addr.0.lcssa.i to i64
  %xtraiter166 = and i64 %wide.trip.count.i.i, 1
  %21 = icmp eq i32 %n.addr.0.lcssa.i, 1
  br i1 %21, label %_Z9quickSortISt4pairIiP6vertexI8_point3dIdELi10EEEN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE9compFirstEiEvPT_T1_T0_.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.new

for.body.lr.ph.i.i.new:                           ; preds = %for.body.lr.ph.i.i
  %unroll_iter168 = sub nsw i64 %wide.trip.count.i.i, %xtraiter166
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %while.end.i.i.1, %for.body.lr.ph.i.i.new
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.new ], [ %indvars.iv.next.i.i.1, %while.end.i.i.1 ]
  %niter169 = phi i64 [ %unroll_iter168, %for.body.lr.ph.i.i.new ], [ %niter169.nsub.1, %while.end.i.i.1 ]
  %arrayidx.i.i = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %9, i64 %indvars.iv.i.i
  %v.sroa.0.0..sroa_idx.i.i = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %arrayidx.i.i, i64 0, i32 0
  %v.sroa.0.0.copyload.i.i = load i32, i32* %v.sroa.0.0..sroa_idx.i.i, align 8
  %v.sroa.528.0..sroa_idx29.i.i = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %9, i64 %indvars.iv.i.i, i32 1
  %v.sroa.528.0..sroa_cast30.i.i = bitcast %struct.vertex.44** %v.sroa.528.0..sroa_idx29.i.i to i64*
  %v.sroa.528.0.copyload.i.i = load i64, i64* %v.sroa.528.0..sroa_cast30.i.i, align 8
  %incdec.ptr32.i.i = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %arrayidx.i.i, i64 -1
  %cmp133.i.i = icmp ult %"struct.std::pair.51"* %incdec.ptr32.i.i, %9
  br i1 %cmp133.i.i, label %while.end.i.i, label %land.rhs.i.i.preheader

land.rhs.i.i.preheader:                           ; preds = %for.body.i.i
  br label %land.rhs.i.i

land.rhs.i.i:                                     ; preds = %land.rhs.i.i.preheader, %while.body.i.i
  %incdec.ptr35.i.i = phi %"struct.std::pair.51"* [ %incdec.ptr.i.i, %while.body.i.i ], [ %incdec.ptr32.i.i, %land.rhs.i.i.preheader ]
  %B.034.i.i = phi %"struct.std::pair.51"* [ %incdec.ptr35.i.i, %while.body.i.i ], [ %arrayidx.i.i, %land.rhs.i.i.preheader ]
  %agg.tmp2.sroa.0.0..sroa_idx.i.i = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %incdec.ptr35.i.i, i64 0, i32 0
  %agg.tmp2.sroa.0.0.copyload.i.i = load i32, i32* %agg.tmp2.sroa.0.0..sroa_idx.i.i, align 8
  %cmp.i.i.i = icmp slt i32 %v.sroa.0.0.copyload.i.i, %agg.tmp2.sroa.0.0.copyload.i.i
  %first2.i22.i.i = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B.034.i.i, i64 0, i32 0
  br i1 %cmp.i.i.i, label %while.body.i.i, label %while.end.i.i

while.body.i.i:                                   ; preds = %land.rhs.i.i
  store i32 %agg.tmp2.sroa.0.0.copyload.i.i, i32* %first2.i22.i.i, align 8, !tbaa !325
  %second.i23.i.i = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B.034.i.i, i64 -1, i32 1
  %22 = bitcast %struct.vertex.44** %second.i23.i.i to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !327
  %second3.i24.i.i = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B.034.i.i, i64 0, i32 1
  %24 = bitcast %struct.vertex.44** %second3.i24.i.i to i64*
  store i64 %23, i64* %24, align 8, !tbaa !327
  %incdec.ptr.i.i = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %incdec.ptr35.i.i, i64 -1
  %cmp1.i.i = icmp ult %"struct.std::pair.51"* %incdec.ptr.i.i, %9
  br i1 %cmp1.i.i, label %while.end.i.i.loopexit.split.loop.exit, label %land.rhs.i.i

while.end.i.i.loopexit.split.loop.exit:           ; preds = %while.body.i.i
  %agg.tmp2.sroa.0.0..sroa_idx.i.i.le = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %incdec.ptr35.i.i, i64 0, i32 0
  br label %while.end.i.i

while.end.i.i:                                    ; preds = %land.rhs.i.i, %while.end.i.i.loopexit.split.loop.exit, %for.body.i.i
  %first2.i.pre-phi.i.i = phi i32* [ %v.sroa.0.0..sroa_idx.i.i, %for.body.i.i ], [ %agg.tmp2.sroa.0.0..sroa_idx.i.i.le, %while.end.i.i.loopexit.split.loop.exit ], [ %first2.i22.i.i, %land.rhs.i.i ]
  %B.0.lcssa.i.i = phi %"struct.std::pair.51"* [ %arrayidx.i.i, %for.body.i.i ], [ %incdec.ptr35.i.i, %while.end.i.i.loopexit.split.loop.exit ], [ %B.034.i.i, %land.rhs.i.i ]
  store i32 %v.sroa.0.0.copyload.i.i, i32* %first2.i.pre-phi.i.i, align 8, !tbaa !325
  %second3.i.i.i = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B.0.lcssa.i.i, i64 0, i32 1
  %25 = bitcast %struct.vertex.44** %second3.i.i.i to i64*
  store i64 %v.sroa.528.0.copyload.i.i, i64* %25, align 8, !tbaa !327
  %indvars.iv.next.i.i = or i64 %indvars.iv.i.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %9, i64 %indvars.iv.next.i.i
  %v.sroa.0.0..sroa_idx.i.i.1 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %arrayidx.i.i.1, i64 0, i32 0
  %v.sroa.0.0.copyload.i.i.1 = load i32, i32* %v.sroa.0.0..sroa_idx.i.i.1, align 8
  %v.sroa.528.0..sroa_idx29.i.i.1 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %9, i64 %indvars.iv.next.i.i, i32 1
  %v.sroa.528.0..sroa_cast30.i.i.1 = bitcast %struct.vertex.44** %v.sroa.528.0..sroa_idx29.i.i.1 to i64*
  %v.sroa.528.0.copyload.i.i.1 = load i64, i64* %v.sroa.528.0..sroa_cast30.i.i.1, align 8
  %cmp133.i.i.1 = icmp ult %"struct.std::pair.51"* %arrayidx.i.i, %9
  br i1 %cmp133.i.i.1, label %while.end.i.i.1, label %land.rhs.i.i.1.preheader

land.rhs.i.i.1.preheader:                         ; preds = %while.end.i.i
  br label %land.rhs.i.i.1

if.else.i:                                        ; preds = %for.cond.cleanup
  %call.i = tail call { %"struct.std::pair.51"*, %"struct.std::pair.51"* } bitcast ({ %"struct.std::pair.23"*, %"struct.std::pair.23"* } (%"struct.std::pair.23"*, i32)* @_Z5splitISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstEiES0_IPT_SF_ESF_T1_T0_ to { %"struct.std::pair.51"*, %"struct.std::pair.51"* } (%"struct.std::pair.51"*, i32)*)(%"struct.std::pair.51"* %9, i32 %count) #2
  %26 = extractvalue { %"struct.std::pair.51"*, %"struct.std::pair.51"* } %call.i, 1
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0)
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave()
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #23
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %if.else.i.split, label %det.cont.i

if.else.i.split:                                  ; preds = %if.else.i
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE15sortBlocksSmallEPPS5_iS1_Pi_det.achd.i.cilk({ %"struct.std::pair.51"*, %"struct.std::pair.51"* } %call.i, i8* %call1, %"struct.std::pair.51"* %9)
  br label %det.cont.i

det.cont.i:                                       ; preds = %if.else.i.split, %if.else.i
  %add.ptr.i = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %9, i64 %conv
  %sub.ptr.lhs.cast4.i = ptrtoint %"struct.std::pair.51"* %add.ptr.i to i64
  %sub.ptr.rhs.cast5.i = ptrtoint %"struct.std::pair.51"* %26 to i64
  %sub.ptr.sub6.i = sub i64 %sub.ptr.lhs.cast4.i, %sub.ptr.rhs.cast5.i
  %sub.ptr.div7.i = ashr exact i64 %sub.ptr.sub6.i, 4
  tail call void @_Z9quickSortISt4pairIiP6vertexI8_point3dIdELi10EEEN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.51"* %26, i64 %sub.ptr.div7.i) #2
  %37 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %38 = load atomic i32, i32* %37 acquire, align 8
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %det.cont.i
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  store volatile i8* %30, i8** %31, align 8
  %42 = call i8* @llvm.stacksave() #2
  store volatile i8* %42, i8** %33, align 8
  %43 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %det.cont.i, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %45 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %46 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %45, i64 0, i32 12, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %46, align 8
  br label %for.body15.preheader

for.body15.preheader:                             ; preds = %while.end.i, %_Z9quickSortISt4pairIiP6vertexI8_point3dIdELi10EEEN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE9compFirstEiEvPT_T1_T0_.exit.loopexit.unr-lcssa, %while.end.i.i.epil, %__cilk_sync_nothrow.exit
  br label %for.body15

_Z9quickSortISt4pairIiP6vertexI8_point3dIdELi10EEEN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE9compFirstEiEvPT_T1_T0_.exit.loopexit.unr-lcssa: ; preds = %while.end.i.i.1, %for.body.lr.ph.i.i
  %indvars.iv.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i.1, %while.end.i.i.1 ]
  %lcmp.mod167 = icmp eq i64 %xtraiter166, 0
  br i1 %lcmp.mod167, label %for.body15.preheader, label %for.body.i.i.epil

for.body.i.i.epil:                                ; preds = %_Z9quickSortISt4pairIiP6vertexI8_point3dIdELi10EEEN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE9compFirstEiEvPT_T1_T0_.exit.loopexit.unr-lcssa
  %arrayidx.i.i.epil = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %9, i64 %indvars.iv.i.i.unr
  %v.sroa.0.0..sroa_idx.i.i.epil = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %arrayidx.i.i.epil, i64 0, i32 0
  %v.sroa.0.0.copyload.i.i.epil = load i32, i32* %v.sroa.0.0..sroa_idx.i.i.epil, align 8
  %v.sroa.528.0..sroa_idx29.i.i.epil = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %9, i64 %indvars.iv.i.i.unr, i32 1
  %v.sroa.528.0..sroa_cast30.i.i.epil = bitcast %struct.vertex.44** %v.sroa.528.0..sroa_idx29.i.i.epil to i64*
  %v.sroa.528.0.copyload.i.i.epil = load i64, i64* %v.sroa.528.0..sroa_cast30.i.i.epil, align 8
  %incdec.ptr32.i.i.epil = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %arrayidx.i.i.epil, i64 -1
  %cmp133.i.i.epil = icmp ult %"struct.std::pair.51"* %incdec.ptr32.i.i.epil, %9
  br i1 %cmp133.i.i.epil, label %while.end.i.i.epil, label %land.rhs.i.i.epil.preheader

land.rhs.i.i.epil.preheader:                      ; preds = %for.body.i.i.epil
  br label %land.rhs.i.i.epil

land.rhs.i.i.epil:                                ; preds = %land.rhs.i.i.epil.preheader, %while.body.i.i.epil
  %incdec.ptr35.i.i.epil = phi %"struct.std::pair.51"* [ %incdec.ptr.i.i.epil, %while.body.i.i.epil ], [ %incdec.ptr32.i.i.epil, %land.rhs.i.i.epil.preheader ]
  %B.034.i.i.epil = phi %"struct.std::pair.51"* [ %incdec.ptr35.i.i.epil, %while.body.i.i.epil ], [ %arrayidx.i.i.epil, %land.rhs.i.i.epil.preheader ]
  %agg.tmp2.sroa.0.0..sroa_idx.i.i.epil = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %incdec.ptr35.i.i.epil, i64 0, i32 0
  %agg.tmp2.sroa.0.0.copyload.i.i.epil = load i32, i32* %agg.tmp2.sroa.0.0..sroa_idx.i.i.epil, align 8
  %cmp.i.i.i.epil = icmp slt i32 %v.sroa.0.0.copyload.i.i.epil, %agg.tmp2.sroa.0.0.copyload.i.i.epil
  %first2.i22.i.i.epil = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B.034.i.i.epil, i64 0, i32 0
  br i1 %cmp.i.i.i.epil, label %while.body.i.i.epil, label %while.end.i.i.epil

while.body.i.i.epil:                              ; preds = %land.rhs.i.i.epil
  store i32 %agg.tmp2.sroa.0.0.copyload.i.i.epil, i32* %first2.i22.i.i.epil, align 8, !tbaa !325
  %second.i23.i.i.epil = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B.034.i.i.epil, i64 -1, i32 1
  %49 = bitcast %struct.vertex.44** %second.i23.i.i.epil to i64*
  %50 = load i64, i64* %49, align 8, !tbaa !327
  %second3.i24.i.i.epil = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B.034.i.i.epil, i64 0, i32 1
  %51 = bitcast %struct.vertex.44** %second3.i24.i.i.epil to i64*
  store i64 %50, i64* %51, align 8, !tbaa !327
  %incdec.ptr.i.i.epil = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %incdec.ptr35.i.i.epil, i64 -1
  %cmp1.i.i.epil = icmp ult %"struct.std::pair.51"* %incdec.ptr.i.i.epil, %9
  br i1 %cmp1.i.i.epil, label %while.end.i.i.epil.loopexit.split.loop.exit, label %land.rhs.i.i.epil

while.end.i.i.epil.loopexit.split.loop.exit:      ; preds = %while.body.i.i.epil
  %agg.tmp2.sroa.0.0..sroa_idx.i.i.epil.le = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %incdec.ptr35.i.i.epil, i64 0, i32 0
  br label %while.end.i.i.epil

while.end.i.i.epil:                               ; preds = %land.rhs.i.i.epil, %while.end.i.i.epil.loopexit.split.loop.exit, %for.body.i.i.epil
  %first2.i.pre-phi.i.i.epil = phi i32* [ %v.sroa.0.0..sroa_idx.i.i.epil, %for.body.i.i.epil ], [ %agg.tmp2.sroa.0.0..sroa_idx.i.i.epil.le, %while.end.i.i.epil.loopexit.split.loop.exit ], [ %first2.i22.i.i.epil, %land.rhs.i.i.epil ]
  %B.0.lcssa.i.i.epil = phi %"struct.std::pair.51"* [ %arrayidx.i.i.epil, %for.body.i.i.epil ], [ %incdec.ptr35.i.i.epil, %while.end.i.i.epil.loopexit.split.loop.exit ], [ %B.034.i.i.epil, %land.rhs.i.i.epil ]
  store i32 %v.sroa.0.0.copyload.i.i.epil, i32* %first2.i.pre-phi.i.i.epil, align 8, !tbaa !325
  %second3.i.i.i.epil = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B.0.lcssa.i.i.epil, i64 0, i32 1
  %52 = bitcast %struct.vertex.44** %second3.i.i.i.epil to i64*
  store i64 %v.sroa.528.0.copyload.i.i.epil, i64* %52, align 8, !tbaa !327
  br label %for.body15.preheader

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv110 = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next111.1, %for.body ]
  %niter173 = phi i64 [ %unroll_iter172, %for.body.lr.ph.new ], [ %niter173.nsub.1, %for.body ]
  %arrayidx3 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %S, i64 %indvars.iv110
  %53 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx3, align 8, !tbaa !53
  %x.i = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %53, i64 0, i32 1, i32 0
  %54 = load double, double* %x.i, align 8, !tbaa !6
  %cmp.i = fcmp fast ogt double %54, %agg.tmp.sroa.0.0.copyload
  %index.0.i = zext i1 %cmp.i to i32
  %y.i = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %53, i64 0, i32 1, i32 1
  %55 = load double, double* %y.i, align 8, !tbaa !11
  %cmp4.i = fcmp fast ogt double %55, %agg.tmp.sroa.2.0.copyload
  %add6.i = or i32 %index.0.i, 2
  %index.1.i = select i1 %cmp4.i, i32 %add6.i, i32 %index.0.i
  %z.i = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %53, i64 0, i32 1, i32 2
  %56 = load double, double* %z.i, align 8, !tbaa !12
  %cmp9.i = fcmp fast ogt double %56, %agg.tmp.sroa.3.0.copyload
  %add11.i = or i32 %index.1.i, 4
  %index.2.i = select i1 %cmp9.i, i32 %add11.i, i32 %index.1.i
  %57 = ptrtoint %struct.vertex.44* %53 to i64
  %first2.i = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %9, i64 %indvars.iv110, i32 0
  store i32 %index.2.i, i32* %first2.i, align 8, !tbaa !325
  %second4.i = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %9, i64 %indvars.iv110, i32 1
  %58 = bitcast %struct.vertex.44** %second4.i to i64*
  store i64 %57, i64* %58, align 8, !tbaa !327
  %indvars.iv.next111 = or i64 %indvars.iv110, 1
  %arrayidx3.1 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %S, i64 %indvars.iv.next111
  %59 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx3.1, align 8, !tbaa !53
  %x.i.1 = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %59, i64 0, i32 1, i32 0
  %60 = load double, double* %x.i.1, align 8, !tbaa !6
  %cmp.i.1 = fcmp fast ogt double %60, %agg.tmp.sroa.0.0.copyload
  %index.0.i.1 = zext i1 %cmp.i.1 to i32
  %y.i.1 = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %59, i64 0, i32 1, i32 1
  %61 = load double, double* %y.i.1, align 8, !tbaa !11
  %cmp4.i.1 = fcmp fast ogt double %61, %agg.tmp.sroa.2.0.copyload
  %add6.i.1 = or i32 %index.0.i.1, 2
  %index.1.i.1 = select i1 %cmp4.i.1, i32 %add6.i.1, i32 %index.0.i.1
  %z.i.1 = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %59, i64 0, i32 1, i32 2
  %62 = load double, double* %z.i.1, align 8, !tbaa !12
  %cmp9.i.1 = fcmp fast ogt double %62, %agg.tmp.sroa.3.0.copyload
  %add11.i.1 = or i32 %index.1.i.1, 4
  %index.2.i.1 = select i1 %cmp9.i.1, i32 %add11.i.1, i32 %index.1.i.1
  %63 = ptrtoint %struct.vertex.44* %59 to i64
  %first2.i.1 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %9, i64 %indvars.iv.next111, i32 0
  store i32 %index.2.i.1, i32* %first2.i.1, align 8, !tbaa !325
  %second4.i.1 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %9, i64 %indvars.iv.next111, i32 1
  %64 = bitcast %struct.vertex.44** %second4.i.1 to i64*
  store i64 %63, i64* %64, align 8, !tbaa !327
  %indvars.iv.next111.1 = add nuw nsw i64 %indvars.iv110, 2
  %niter173.nsub.1 = add i64 %niter173, -2
  %niter173.ncmp.1 = icmp eq i64 %niter173.nsub.1, 0
  br i1 %niter173.ncmp.1, label %for.cond.cleanup.unr-lcssa, label %for.body

for.cond.cleanup14:                               ; preds = %for.inc26
  %cmp3190 = icmp slt i32 %j.1.lcssa, 7
  br i1 %cmp3190, label %while.body32.lr.ph, label %while.end35

while.body32.lr.ph:                               ; preds = %__cilkrts_enter_frame_1.exit, %for.cond.cleanup14
  %j.0.lcssa118 = phi i32 [ %j.1.lcssa, %for.cond.cleanup14 ], [ -1, %__cilkrts_enter_frame_1.exit ]
  %65 = sext i32 %j.0.lcssa118 to i64
  %66 = icmp sgt i64 %65, 6
  %smax = select i1 %66, i64 %65, i64 6
  %67 = sub nsw i64 1, %65
  %68 = add nsw i64 %67, %smax
  %min.iters.check139 = icmp ult i64 %68, 32
  br i1 %min.iters.check139, label %while.body32.preheader, label %vector.ph140

while.body32.preheader:                           ; preds = %middle.block137, %while.body32.lr.ph
  %indvars.iv.ph = phi i64 [ %ind.end146, %middle.block137 ], [ %65, %while.body32.lr.ph ]
  br label %while.body32

vector.ph140:                                     ; preds = %while.body32.lr.ph
  %n.vec142 = and i64 %68, -32
  %ind.end146 = add nsw i64 %n.vec142, %65
  %broadcast.splatinsert155 = insertelement <8 x i32> undef, i32 %count, i32 0
  %broadcast.splat156 = shufflevector <8 x i32> %broadcast.splatinsert155, <8 x i32> undef, <8 x i32> zeroinitializer
  %69 = add nsw i64 %n.vec142, -32
  %70 = lshr exact i64 %69, 5
  %71 = add nuw nsw i64 %70, 1
  %xtraiter = and i64 %71, 3
  %72 = icmp ult i64 %69, 96
  br i1 %72, label %middle.block137.unr-lcssa, label %vector.ph140.new

vector.ph140.new:                                 ; preds = %vector.ph140
  %unroll_iter = sub nsw i64 %71, %xtraiter
  %73 = add nsw i64 %65, 1
  br label %vector.body136

vector.body136:                                   ; preds = %vector.body136, %vector.ph140.new
  %index143 = phi i64 [ 0, %vector.ph140.new ], [ %index.next144.3, %vector.body136 ]
  %niter = phi i64 [ %unroll_iter, %vector.ph140.new ], [ %niter.nsub.3, %vector.body136 ]
  %74 = add i64 %73, %index143
  %75 = getelementptr inbounds i32, i32* %offsets, i64 %74
  %76 = bitcast i32* %75 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %76, align 4, !tbaa !59
  %77 = getelementptr i32, i32* %75, i64 8
  %78 = bitcast i32* %77 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %78, align 4, !tbaa !59
  %79 = getelementptr i32, i32* %75, i64 16
  %80 = bitcast i32* %79 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %80, align 4, !tbaa !59
  %81 = getelementptr i32, i32* %75, i64 24
  %82 = bitcast i32* %81 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %82, align 4, !tbaa !59
  %index.next144 = or i64 %index143, 32
  %83 = add i64 %73, %index.next144
  %84 = getelementptr inbounds i32, i32* %offsets, i64 %83
  %85 = bitcast i32* %84 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %85, align 4, !tbaa !59
  %86 = getelementptr i32, i32* %84, i64 8
  %87 = bitcast i32* %86 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %87, align 4, !tbaa !59
  %88 = getelementptr i32, i32* %84, i64 16
  %89 = bitcast i32* %88 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %89, align 4, !tbaa !59
  %90 = getelementptr i32, i32* %84, i64 24
  %91 = bitcast i32* %90 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %91, align 4, !tbaa !59
  %index.next144.1 = or i64 %index143, 64
  %92 = add i64 %73, %index.next144.1
  %93 = getelementptr inbounds i32, i32* %offsets, i64 %92
  %94 = bitcast i32* %93 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %94, align 4, !tbaa !59
  %95 = getelementptr i32, i32* %93, i64 8
  %96 = bitcast i32* %95 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %96, align 4, !tbaa !59
  %97 = getelementptr i32, i32* %93, i64 16
  %98 = bitcast i32* %97 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %98, align 4, !tbaa !59
  %99 = getelementptr i32, i32* %93, i64 24
  %100 = bitcast i32* %99 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %100, align 4, !tbaa !59
  %index.next144.2 = or i64 %index143, 96
  %101 = add i64 %73, %index.next144.2
  %102 = getelementptr inbounds i32, i32* %offsets, i64 %101
  %103 = bitcast i32* %102 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %103, align 4, !tbaa !59
  %104 = getelementptr i32, i32* %102, i64 8
  %105 = bitcast i32* %104 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %105, align 4, !tbaa !59
  %106 = getelementptr i32, i32* %102, i64 16
  %107 = bitcast i32* %106 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %107, align 4, !tbaa !59
  %108 = getelementptr i32, i32* %102, i64 24
  %109 = bitcast i32* %108 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %109, align 4, !tbaa !59
  %index.next144.3 = add i64 %index143, 128
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %middle.block137.unr-lcssa, label %vector.body136, !llvm.loop !328

middle.block137.unr-lcssa:                        ; preds = %vector.body136, %vector.ph140
  %index143.unr = phi i64 [ 0, %vector.ph140 ], [ %index.next144.3, %vector.body136 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block137, label %vector.body136.epil.preheader

vector.body136.epil.preheader:                    ; preds = %middle.block137.unr-lcssa
  %110 = add nsw i64 %65, 1
  br label %vector.body136.epil

vector.body136.epil:                              ; preds = %vector.body136.epil, %vector.body136.epil.preheader
  %index143.epil = phi i64 [ %index143.unr, %vector.body136.epil.preheader ], [ %index.next144.epil, %vector.body136.epil ]
  %epil.iter = phi i64 [ %xtraiter, %vector.body136.epil.preheader ], [ %epil.iter.sub, %vector.body136.epil ]
  %111 = add i64 %110, %index143.epil
  %112 = getelementptr inbounds i32, i32* %offsets, i64 %111
  %113 = bitcast i32* %112 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %113, align 4, !tbaa !59
  %114 = getelementptr i32, i32* %112, i64 8
  %115 = bitcast i32* %114 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %115, align 4, !tbaa !59
  %116 = getelementptr i32, i32* %112, i64 16
  %117 = bitcast i32* %116 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %117, align 4, !tbaa !59
  %118 = getelementptr i32, i32* %112, i64 24
  %119 = bitcast i32* %118 to <8 x i32>*
  store <8 x i32> %broadcast.splat156, <8 x i32>* %119, align 4, !tbaa !59
  %index.next144.epil = add i64 %index143.epil, 32
  %epil.iter.sub = add nsw i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block137, label %vector.body136.epil, !llvm.loop !329

middle.block137:                                  ; preds = %vector.body136.epil, %middle.block137.unr-lcssa
  %cmp.n147 = icmp eq i64 %68, %n.vec142
  br i1 %cmp.n147, label %while.end35, label %while.body32.preheader

for.body15:                                       ; preds = %for.body15.preheader, %for.inc26
  %indvars.iv108 = phi i64 [ %indvars.iv.next109, %for.inc26 ], [ 0, %for.body15.preheader ]
  %j.095 = phi i32 [ %j.1.lcssa, %for.inc26 ], [ -1, %for.body15.preheader ]
  %second = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %9, i64 %indvars.iv108, i32 1
  %120 = bitcast %struct.vertex.44** %second to i64*
  %121 = load i64, i64* %120, align 8, !tbaa !327
  %arrayidx19 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %S, i64 %indvars.iv108
  %122 = bitcast %struct.vertex.44** %arrayidx19 to i64*
  store i64 %121, i64* %122, align 8, !tbaa !53
  %first = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %9, i64 %indvars.iv108, i32 0
  %123 = load i32, i32* %first, align 8, !tbaa !325
  %cmp2292 = icmp eq i32 %123, %j.095
  br i1 %cmp2292, label %for.inc26, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %for.body15
  %124 = sext i32 %j.095 to i64
  %125 = trunc i64 %indvars.iv108 to i32
  %126 = xor i32 %j.095, -1
  %127 = add i32 %123, %126
  %128 = zext i32 %127 to i64
  %129 = add nuw nsw i64 %128, 1
  %min.iters.check = icmp ult i64 %129, 32
  br i1 %min.iters.check, label %while.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %while.body.lr.ph
  %130 = add i32 %127, 1
  %131 = and i32 %130, 31
  %n.mod.vf = zext i32 %131 to i64
  %n.vec = sub nsw i64 %129, %n.mod.vf
  %broadcast.splatinsert128 = insertelement <8 x i32> undef, i32 %125, i32 0
  %broadcast.splat129 = shufflevector <8 x i32> %broadcast.splatinsert128, <8 x i32> undef, <8 x i32> zeroinitializer
  %132 = add nsw i64 %124, 1
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %133 = add i64 %132, %index
  %134 = getelementptr inbounds i32, i32* %offsets, i64 %133
  %135 = bitcast i32* %134 to <8 x i32>*
  store <8 x i32> %broadcast.splat129, <8 x i32>* %135, align 4, !tbaa !59
  %136 = getelementptr i32, i32* %134, i64 8
  %137 = bitcast i32* %136 to <8 x i32>*
  store <8 x i32> %broadcast.splat129, <8 x i32>* %137, align 4, !tbaa !59
  %138 = getelementptr i32, i32* %134, i64 16
  %139 = bitcast i32* %138 to <8 x i32>*
  store <8 x i32> %broadcast.splat129, <8 x i32>* %139, align 4, !tbaa !59
  %140 = getelementptr i32, i32* %134, i64 24
  %141 = bitcast i32* %140 to <8 x i32>*
  store <8 x i32> %broadcast.splat129, <8 x i32>* %141, align 4, !tbaa !59
  %index.next = add i64 %index, 32
  %142 = icmp eq i64 %index.next, %n.vec
  br i1 %142, label %middle.block, label %vector.body, !llvm.loop !330

middle.block:                                     ; preds = %vector.body
  %ind.end = add nsw i64 %n.vec, %124
  %cmp.n = icmp eq i32 %131, 0
  br i1 %cmp.n, label %for.inc26, label %while.body.preheader

while.body.preheader:                             ; preds = %middle.block, %while.body.lr.ph
  %indvars.iv106.ph = phi i64 [ %ind.end, %middle.block ], [ %124, %while.body.lr.ph ]
  br label %while.body

while.body:                                       ; preds = %while.body.preheader, %while.body
  %indvars.iv106 = phi i64 [ %indvars.iv.next107, %while.body ], [ %indvars.iv106.ph, %while.body.preheader ]
  %indvars.iv.next107 = add nsw i64 %indvars.iv106, 1
  %arrayidx25 = getelementptr inbounds i32, i32* %offsets, i64 %indvars.iv.next107
  store i32 %125, i32* %arrayidx25, align 4, !tbaa !59
  %143 = trunc i64 %indvars.iv.next107 to i32
  %cmp22 = icmp eq i32 %123, %143
  br i1 %cmp22, label %for.inc26, label %while.body, !llvm.loop !331

for.inc26:                                        ; preds = %while.body, %middle.block, %for.body15
  %j.1.lcssa = phi i32 [ %j.095, %for.body15 ], [ %123, %middle.block ], [ %123, %while.body ]
  %indvars.iv.next109 = add nuw nsw i64 %indvars.iv108, 1
  %exitcond = icmp eq i64 %indvars.iv.next109, %wide.trip.count112
  br i1 %exitcond, label %for.cond.cleanup14, label %for.body15

while.body32:                                     ; preds = %while.body32.preheader, %while.body32
  %indvars.iv = phi i64 [ %indvars.iv.next, %while.body32 ], [ %indvars.iv.ph, %while.body32.preheader ]
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %arrayidx34 = getelementptr inbounds i32, i32* %offsets, i64 %indvars.iv.next
  store i32 %count, i32* %arrayidx34, align 4, !tbaa !59
  %cmp31 = icmp slt i64 %indvars.iv, 6
  br i1 %cmp31, label %while.body32, label %while.end35, !llvm.loop !332

while.end35:                                      ; preds = %while.body32, %middle.block137, %for.cond.cleanup14
  tail call void @free(i8* %call1) #2
  %144 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %145 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %144, i64 0, i32 9
  %148 = bitcast %struct.__cilkrts_stack_frame** %147 to i64*
  store atomic i64 %146, i64* %148 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %149 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %150 = load atomic i32, i32* %149 acquire, align 8
  %151 = icmp eq i32 %150, 16777216
  br i1 %151, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %while.end35
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %while.end35, %body.i
  ret void

land.rhs.i.i.1:                                   ; preds = %land.rhs.i.i.1.preheader, %while.body.i.i.1
  %incdec.ptr35.i.i.1 = phi %"struct.std::pair.51"* [ %incdec.ptr.i.i.1, %while.body.i.i.1 ], [ %arrayidx.i.i, %land.rhs.i.i.1.preheader ]
  %B.034.i.i.1 = phi %"struct.std::pair.51"* [ %incdec.ptr35.i.i.1, %while.body.i.i.1 ], [ %arrayidx.i.i.1, %land.rhs.i.i.1.preheader ]
  %agg.tmp2.sroa.0.0..sroa_idx.i.i.1 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %incdec.ptr35.i.i.1, i64 0, i32 0
  %agg.tmp2.sroa.0.0.copyload.i.i.1 = load i32, i32* %agg.tmp2.sroa.0.0..sroa_idx.i.i.1, align 8
  %cmp.i.i.i.1 = icmp slt i32 %v.sroa.0.0.copyload.i.i.1, %agg.tmp2.sroa.0.0.copyload.i.i.1
  %first2.i22.i.i.1 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B.034.i.i.1, i64 0, i32 0
  br i1 %cmp.i.i.i.1, label %while.body.i.i.1, label %while.end.i.i.1

while.body.i.i.1:                                 ; preds = %land.rhs.i.i.1
  store i32 %agg.tmp2.sroa.0.0.copyload.i.i.1, i32* %first2.i22.i.i.1, align 8, !tbaa !325
  %second.i23.i.i.1 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B.034.i.i.1, i64 -1, i32 1
  %152 = bitcast %struct.vertex.44** %second.i23.i.i.1 to i64*
  %153 = load i64, i64* %152, align 8, !tbaa !327
  %second3.i24.i.i.1 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B.034.i.i.1, i64 0, i32 1
  %154 = bitcast %struct.vertex.44** %second3.i24.i.i.1 to i64*
  store i64 %153, i64* %154, align 8, !tbaa !327
  %incdec.ptr.i.i.1 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %incdec.ptr35.i.i.1, i64 -1
  %cmp1.i.i.1 = icmp ult %"struct.std::pair.51"* %incdec.ptr.i.i.1, %9
  br i1 %cmp1.i.i.1, label %while.end.i.i.1.loopexit.split.loop.exit, label %land.rhs.i.i.1

while.end.i.i.1.loopexit.split.loop.exit:         ; preds = %while.body.i.i.1
  %agg.tmp2.sroa.0.0..sroa_idx.i.i.1.le = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %incdec.ptr35.i.i.1, i64 0, i32 0
  br label %while.end.i.i.1

while.end.i.i.1:                                  ; preds = %land.rhs.i.i.1, %while.end.i.i.1.loopexit.split.loop.exit, %while.end.i.i
  %first2.i.pre-phi.i.i.1 = phi i32* [ %v.sroa.0.0..sroa_idx.i.i.1, %while.end.i.i ], [ %agg.tmp2.sroa.0.0..sroa_idx.i.i.1.le, %while.end.i.i.1.loopexit.split.loop.exit ], [ %first2.i22.i.i.1, %land.rhs.i.i.1 ]
  %B.0.lcssa.i.i.1 = phi %"struct.std::pair.51"* [ %arrayidx.i.i.1, %while.end.i.i ], [ %incdec.ptr35.i.i.1, %while.end.i.i.1.loopexit.split.loop.exit ], [ %B.034.i.i.1, %land.rhs.i.i.1 ]
  store i32 %v.sroa.0.0.copyload.i.i.1, i32* %first2.i.pre-phi.i.i.1, align 8, !tbaa !325
  %second3.i.i.i.1 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B.0.lcssa.i.i.1, i64 0, i32 1
  %155 = bitcast %struct.vertex.44** %second3.i.i.i.1 to i64*
  store i64 %v.sroa.528.0.copyload.i.i.1, i64* %155, align 8, !tbaa !327
  %indvars.iv.next.i.i.1 = add nuw nsw i64 %indvars.iv.i.i, 2
  %niter169.nsub.1 = add i64 %niter169, -2
  %niter169.ncmp.1 = icmp eq i64 %niter169.nsub.1, 0
  br i1 %niter169.ncmp.1, label %_Z9quickSortISt4pairIiP6vertexI8_point3dIdELi10EEEN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE9compFirstEiEvPT_T1_T0_.exit.loopexit.unr-lcssa, label %for.body.i.i
}

; Function Attrs: nounwind uwtable
define linkonce_odr %class.gTreeNode.46* @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE7newTreeE4_seqIPS5_ES1_dPS8_i(%struct.vertex.44** %S.coerce0, i64 %S.coerce1, %class._point3d* byval align 8 %cnt, double %sz, %class.gTreeNode.46* %newNodes, i32 %numNewNodes) local_unnamed_addr #7 comdat align 2 {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %cmp = icmp slt i32 %numNewNodes, 1
  %0 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %1 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp to %union.anon.1**
  store %union.anon.1* %0, %union.anon.1** %1, align 8, !tbaa !47
  %2 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #2
  store i64 17, i64* %__dnew.i.i.i.i, align 8, !tbaa !49
  %call5.i.i.i.i = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i, i64 0) #2
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i.i, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !50
  %3 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !49
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2, i32 0
  store i64 %3, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call5.i.i.i.i, i8* nonnull getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i64 17, i32 1, i1 false) #2
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 1
  store i64 %3, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !52
  %4 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !50
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %4, i64 %3
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #2
  br i1 %cmp, label %if.then.i, label %_ZN5utilsL8myAssertEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit

if.then.i:                                        ; preds = %entry
  %call.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.tmp) #2
  %call.i.i6 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call.i) #2
  call void @abort() #21
  unreachable

_ZN5utilsL8myAssertEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit: ; preds = %entry
  %5 = bitcast %union.anon.1* %0 to i8*
  %6 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !50
  %cmp.i.i.i = icmp eq i8* %6, %5
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %_ZN5utilsL8myAssertEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit
  call void @_ZdlPv(i8* %6) #2
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %_ZN5utilsL8myAssertEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit, %if.then.i.i
  %add.ptr = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %newNodes, i64 1
  %sub = add nsw i32 %numNewNodes, -1
  call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EEC2E4_seqIPS5_ES1_dPS8_i(%class.gTreeNode.46* %newNodes, %struct.vertex.44** %S.coerce0, i64 %S.coerce1, %class._point3d* byval nonnull align 8 %cnt, double %sz, %class.gTreeNode.46* nonnull %add.ptr, i32 %sub)
  ret %class.gTreeNode.46* %newNodes
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1_(%"struct.std::pair.51"* %A, i32* %bucketOffsets, i64 %n, i64 %m, i1 zeroext %bottomUp, i8* %tmpSpace) local_unnamed_addr #7 comdat {
entry:
  %0 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8185 = shl i32 %0, 3
  %agg.tmp.i = alloca %"struct.intSort::eBits.53", align 8
  %agg.tmp = alloca %"struct.intSort::eBits.53", align 8
  %cmp6.i = icmp sgt i64 %m, 1
  br i1 %cmp6.i, label %while.body.lr.ph.i, label %_ZN5utilsL6log2UpIlEEiT_.exit

while.body.lr.ph.i:                               ; preds = %entry
  %sub.i = add nsw i64 %m, -1
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i, %while.body.lr.ph.i
  %b.08.i = phi i64 [ %sub.i, %while.body.lr.ph.i ], [ %shr5.i, %while.body.i ]
  %a.07.i = phi i32 [ 0, %while.body.lr.ph.i ], [ %inc.i, %while.body.i ]
  %shr5.i = lshr i64 %b.08.i, 1
  %inc.i = add nuw nsw i32 %a.07.i, 1
  %cmp.i = icmp eq i64 %shr5.i, 0
  br i1 %cmp.i, label %_ZN5utilsL6log2UpIlEEiT_.exit, label %while.body.i

_ZN5utilsL6log2UpIlEEiT_.exit:                    ; preds = %while.body.i, %entry
  %a.0.lcssa.i = phi i32 [ 0, %entry ], [ %inc.i, %while.body.i ]
  %conv = sext i32 %a.0.lcssa.i to i64
  %div = sdiv i64 %n, 2048
  %add = add nsw i64 %div, 1
  %1 = bitcast i8* %tmpSpace to %"struct.std::pair.51"*
  %mul = shl i64 %n, 4
  %add.ptr = getelementptr inbounds i8, i8* %tmpSpace, i64 %mul
  %add.ptr3 = getelementptr inbounds i8, i8* %add.ptr, i64 %n
  %2 = bitcast i8* %add.ptr3 to [256 x i32]*
  %cmp = icmp slt i32 %a.0.lcssa.i, 9
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %_ZN5utilsL6log2UpIlEEiT_.exit
  %shl = shl i64 1, %conv
  %_mask.i = getelementptr inbounds %"struct.intSort::eBits.53", %"struct.intSort::eBits.53"* %agg.tmp, i64 0, i32 1
  %shl.i = shl i32 1, %a.0.lcssa.i
  %sub.i169 = add nsw i32 %shl.i, -1
  %conv.i = sext i32 %sub.i169 to i64
  store i64 %conv.i, i64* %_mask.i, align 8, !tbaa !333
  %_offset.i = getelementptr inbounds %"struct.intSort::eBits.53", %"struct.intSort::eBits.53"* %agg.tmp, i64 0, i32 2
  store i64 0, i64* %_offset.i, align 8, !tbaa !336
  call void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_(%"struct.std::pair.51"* %A, %"struct.std::pair.51"* %1, i8* %add.ptr, [256 x i32]* %2, i64 %add, i64 %n, i64 %shl, i1 zeroext true, %"struct.intSort::eBits.53"* byval nonnull align 8 %agg.tmp)
  %cmp5 = icmp ne i32* %bucketOffsets, null
  %cmp10176 = icmp sgt i64 %m, 0
  %or.cond = and i1 %cmp5, %cmp10176
  br i1 %or.cond, label %pfor.detach.preheader, label %cleanup

pfor.detach.preheader:                            ; preds = %if.then
  %3 = add i64 %m, -1
  %4 = zext i32 %__cilkrts_wc8185 to i64
  %5 = add i64 %m, -2
  %6 = add i64 %5, %4
  %7 = udiv i64 %6, %4
  %8 = icmp ult i64 %7, 2048
  %9 = select i1 %8, i64 %7, i64 2048
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach.ls(i64 0, i64 %3, i64 %9, [256 x i32]* %2, i32* nonnull %bucketOffsets)
  br label %cleanup

if.else:                                          ; preds = %_ZN5utilsL6log2UpIlEEiT_.exit
  br i1 %bottomUp, label %while.body.lr.ph.i171, label %if.else17

while.body.lr.ph.i171:                            ; preds = %if.else
  %10 = getelementptr inbounds %"struct.intSort::eBits.53", %"struct.intSort::eBits.53"* %agg.tmp.i, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10)
  %sub.i170 = add nsw i64 %conv, -1
  %div.i = sdiv i64 %sub.i170, 8
  %add.i = add nsw i64 %div.i, 1
  %div2.i = sdiv i64 %sub.i170, %add.i
  %add3.i = add nsw i64 %div2.i, 1
  %_mask.i.i = getelementptr inbounds %"struct.intSort::eBits.53", %"struct.intSort::eBits.53"* %agg.tmp.i, i64 0, i32 1
  %_offset.i.i = getelementptr inbounds %"struct.intSort::eBits.53", %"struct.intSort::eBits.53"* %agg.tmp.i, i64 0, i32 2
  br label %while.body.i175

while.body.i175:                                  ; preds = %while.body.i175, %while.body.lr.ph.i171
  %bitOffset.025.i = phi i64 [ 0, %while.body.lr.ph.i171 ], [ %add8.i, %while.body.i175 ]
  %rbits.024.i = phi i64 [ %add3.i, %while.body.lr.ph.i171 ], [ %spec.select.i, %while.body.i175 ]
  %add4.i = add nsw i64 %rbits.024.i, %bitOffset.025.i
  %cmp5.i = icmp sgt i64 %add4.i, %conv
  %sub6.i = sub nsw i64 %conv, %bitOffset.025.i
  %spec.select.i = select i1 %cmp5.i, i64 %sub6.i, i64 %rbits.024.i
  %sh_prom.i = trunc i64 %spec.select.i to i32
  %shl.i172 = shl i32 1, %sh_prom.i
  %conv.i173 = sext i32 %shl.i172 to i64
  %sub.i.i = add nsw i32 %shl.i172, -1
  %conv.i.i = sext i32 %sub.i.i to i64
  store i64 %conv.i.i, i64* %_mask.i.i, align 8, !tbaa !333
  store i64 %bitOffset.025.i, i64* %_offset.i.i, align 8, !tbaa !336
  call void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_(%"struct.std::pair.51"* %A, %"struct.std::pair.51"* %1, i8* %add.ptr, [256 x i32]* %2, i64 %add, i64 %n, i64 %conv.i173, i1 zeroext true, %"struct.intSort::eBits.53"* byval nonnull align 8 %agg.tmp.i) #2
  %add8.i = add nsw i64 %spec.select.i, %bitOffset.025.i
  %cmp.i174 = icmp slt i64 %add8.i, %conv
  br i1 %cmp.i174, label %while.body.i175, label %_ZN7intSort17radixLoopBottomUpISt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllbT0_.exit

_ZN7intSort17radixLoopBottomUpISt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllbT0_.exit: ; preds = %while.body.i175
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10)
  br label %if.end20

if.else17:                                        ; preds = %if.else
  tail call void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0_(%"struct.std::pair.51"* %A, %"struct.std::pair.51"* %1, i8* %add.ptr, [256 x i32]* %2, i64 %add, i64 %n, i64 %conv)
  br label %if.end20

if.end20:                                         ; preds = %_ZN7intSort17radixLoopBottomUpISt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllbT0_.exit, %if.else17
  %cmp21 = icmp eq i32* %bucketOffsets, null
  br i1 %cmp21, label %cleanup, label %if.then22

if.then22:                                        ; preds = %if.end20
  %cmp32180 = icmp sgt i64 %m, 0
  br i1 %cmp32180, label %pfor.detach34.lr.ph, label %sync.continue45

pfor.detach34.lr.ph:                              ; preds = %if.then22
  %conv40 = trunc i64 %n to i32
  %11 = add i64 %m, -1
  %12 = zext i32 %__cilkrts_wc8185 to i64
  %13 = add i64 %m, -2
  %14 = add i64 %13, %12
  %15 = udiv i64 %14, %12
  %16 = icmp ult i64 %15, 2048
  %17 = select i1 %16, i64 %15, i64 2048
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach34.ls(i64 0, i64 %11, i64 %17, i32* nonnull %bucketOffsets, i32 %conv40)
  br label %sync.continue45

sync.continue45:                                  ; preds = %if.then22, %pfor.detach34.lr.ph
  %cmp57178 = icmp sgt i64 %n, 1
  br i1 %cmp57178, label %pfor.detach59.preheader, label %sync.continue83

pfor.detach59.preheader:                          ; preds = %sync.continue45
  %18 = add i64 %n, -2
  %19 = zext i32 %__cilkrts_wc8185 to i64
  %20 = add i64 %n, -3
  %21 = add i64 %20, %19
  %22 = udiv i64 %21, %19
  %23 = icmp ult i64 %22, 2048
  %24 = select i1 %23, i64 %22, i64 2048
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach59.ls(i64 0, i64 %18, i64 %24, %"struct.std::pair.51"* %A, i32* nonnull %bucketOffsets)
  br label %sync.continue83

sync.continue83:                                  ; preds = %sync.continue45, %pfor.detach59.preheader
  %agg.tmp85.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %A, i64 0, i32 0
  %agg.tmp85.sroa.0.0.copyload = load i32, i32* %agg.tmp85.sroa.0.0..sroa_idx, align 8
  %idxprom = sext i32 %agg.tmp85.sroa.0.0.copyload to i64
  %arrayidx88 = getelementptr inbounds i32, i32* %bucketOffsets, i64 %idxprom
  store i32 0, i32* %arrayidx88, align 4, !tbaa !59
  %conv90 = trunc i64 %n to i32
  %call.i = call i32 @_ZN8sequence4scanIilN5utils4minFIiEENS_4getAIilEEEET_PS6_T0_S8_T1_T2_S6_bb(i32* nonnull %bucketOffsets, i64 0, i64 %m, i32* nonnull %bucketOffsets, i32 %conv90, i1 zeroext true, i1 zeroext true) #2
  br label %cleanup

cleanup:                                          ; preds = %if.then, %pfor.detach.preheader, %sync.continue83, %if.end20
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_(%"struct.std::pair.51"* %A, %"struct.std::pair.51"* %B, i8* %Tmp, [256 x i32]* %BK, i64 %numBK, i64 %n, i64 %m, i1 zeroext %top, %"struct.intSort::eBits.53"* byval align 8 %extract) local_unnamed_addr #7 comdat {
entry:
  %ref.tmp29 = alloca %struct.transpose, align 8
  %ref.tmp42 = alloca %struct.blockTrans.54, align 8
  %div = sdiv i64 %numBK, 3
  %div2 = sdiv i64 %n, 8192
  %add = add nsw i64 %div2, 1
  %cmp.i = icmp slt i64 %add, %div
  %.sroa.speculated135 = select i1 %cmp.i, i64 %add, i64 %div
  %cmp = icmp slt i64 %.sroa.speculated135, 2
  br i1 %cmp, label %if.then, label %pfor.detach.lr.ph

if.then:                                          ; preds = %entry
  %agg.tmp.sroa.2.0..sroa_idx = getelementptr inbounds %"struct.intSort::eBits.53", %"struct.intSort::eBits.53"* %extract, i64 0, i32 1
  %agg.tmp.sroa.2.0.copyload = load i64, i64* %agg.tmp.sroa.2.0..sroa_idx, align 8
  %agg.tmp.sroa.3.0..sroa_idx = getelementptr inbounds %"struct.intSort::eBits.53", %"struct.intSort::eBits.53"* %extract, i64 0, i32 2
  %agg.tmp.sroa.3.0.copyload = load i64, i64* %agg.tmp.sroa.3.0..sroa_idx, align 8
  %cmp74.i.i = icmp sgt i64 %m, 0
  br i1 %cmp74.i.i, label %for.body.lr.ph.i.i, label %for.cond.cleanup.i.i

for.body.lr.ph.i.i:                               ; preds = %if.then
  %counts78.i.i = bitcast [256 x i32]* %BK to i8*
  %0 = shl i64 %m, 2
  tail call void @llvm.memset.p0i8.i64(i8* %counts78.i.i, i8 0, i64 %0, i32 4, i1 false) #2
  br label %for.cond.cleanup.i.i

for.cond.cleanup.i.i:                             ; preds = %for.body.lr.ph.i.i, %if.then
  %cmp272.i.i = icmp sgt i64 %n, 0
  br i1 %cmp272.i.i, label %for.body4.lr.ph.i.i, label %for.cond.cleanup3.i.i

for.body4.lr.ph.i.i:                              ; preds = %for.cond.cleanup.i.i
  %sh_prom.i.i.i = trunc i64 %agg.tmp.sroa.3.0.copyload to i32
  %xtraiter170 = and i64 %n, 1
  %1 = icmp eq i64 %n, 1
  br i1 %1, label %for.body4.i.i.epil, label %for.body4.lr.ph.i.i.new

for.body4.lr.ph.i.i.new:                          ; preds = %for.body4.lr.ph.i.i
  %unroll_iter172 = sub i64 %n, %xtraiter170
  br label %for.body4.i.i

for.cond.cleanup3.i.i.loopexit.unr-lcssa:         ; preds = %for.body4.i.i
  %lcmp.mod171 = icmp eq i64 %xtraiter170, 0
  br i1 %lcmp.mod171, label %for.cond.cleanup3.i.i, label %for.body4.i.i.epil

for.body4.i.i.epil:                               ; preds = %for.body4.lr.ph.i.i, %for.cond.cleanup3.i.i.loopexit.unr-lcssa
  %j.073.i.i.unr205 = phi i64 [ %inc11.i.i.1, %for.cond.cleanup3.i.i.loopexit.unr-lcssa ], [ 0, %for.body4.lr.ph.i.i ]
  %agg.tmp.sroa.0.0..sroa_idx.i.i.epil = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %A, i64 %j.073.i.i.unr205, i32 0
  %agg.tmp.sroa.0.0.copyload.i.i.epil = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.i.epil, align 8
  %shr.i.i.i.epil = ashr i32 %agg.tmp.sroa.0.0.copyload.i.i.epil, %sh_prom.i.i.i
  %conv.i.i.i.epil = sext i32 %shr.i.i.i.epil to i64
  %and.i.i.i.epil = and i64 %agg.tmp.sroa.2.0.copyload, %conv.i.i.i.epil
  %conv.i.i.epil = trunc i64 %and.i.i.i.epil to i8
  %arrayidx6.i.i.epil = getelementptr inbounds i8, i8* %Tmp, i64 %j.073.i.i.unr205
  store i8 %conv.i.i.epil, i8* %arrayidx6.i.i.epil, align 1, !tbaa !22
  %conv7.i.i.epil = and i64 %and.i.i.i.epil, 255
  %arrayidx8.i.i.epil = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %conv7.i.i.epil
  %2 = load i32, i32* %arrayidx8.i.i.epil, align 4, !tbaa !59
  %inc9.i.i.epil = add i32 %2, 1
  store i32 %inc9.i.i.epil, i32* %arrayidx8.i.i.epil, align 4, !tbaa !59
  br label %for.cond.cleanup3.i.i

for.cond.cleanup3.i.i:                            ; preds = %for.body4.i.i.epil, %for.cond.cleanup3.i.i.loopexit.unr-lcssa, %for.cond.cleanup.i.i
  br i1 %cmp74.i.i, label %for.body17.i.i.preheader, label %for.cond.cleanup16.i.i

for.body17.i.i.preheader:                         ; preds = %for.cond.cleanup3.i.i
  %3 = add i64 %m, -1
  %xtraiter165 = and i64 %m, 7
  %4 = icmp ult i64 %3, 7
  br i1 %4, label %for.cond.cleanup16.i.i.loopexit.unr-lcssa, label %for.body17.i.i.preheader.new

for.body17.i.i.preheader.new:                     ; preds = %for.body17.i.i.preheader
  %unroll_iter168 = sub i64 %m, %xtraiter165
  br label %for.body17.i.i

for.body4.i.i:                                    ; preds = %for.body4.i.i, %for.body4.lr.ph.i.i.new
  %j.073.i.i = phi i64 [ 0, %for.body4.lr.ph.i.i.new ], [ %inc11.i.i.1, %for.body4.i.i ]
  %niter173 = phi i64 [ %unroll_iter172, %for.body4.lr.ph.i.i.new ], [ %niter173.nsub.1, %for.body4.i.i ]
  %agg.tmp.sroa.0.0..sroa_idx.i.i = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %A, i64 %j.073.i.i, i32 0
  %agg.tmp.sroa.0.0.copyload.i.i = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.i, align 8
  %shr.i.i.i = ashr i32 %agg.tmp.sroa.0.0.copyload.i.i, %sh_prom.i.i.i
  %conv.i.i.i = sext i32 %shr.i.i.i to i64
  %and.i.i.i = and i64 %agg.tmp.sroa.2.0.copyload, %conv.i.i.i
  %conv.i.i = trunc i64 %and.i.i.i to i8
  %arrayidx6.i.i = getelementptr inbounds i8, i8* %Tmp, i64 %j.073.i.i
  store i8 %conv.i.i, i8* %arrayidx6.i.i, align 1, !tbaa !22
  %conv7.i.i = and i64 %and.i.i.i, 255
  %arrayidx8.i.i = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %conv7.i.i
  %5 = load i32, i32* %arrayidx8.i.i, align 4, !tbaa !59
  %inc9.i.i = add i32 %5, 1
  store i32 %inc9.i.i, i32* %arrayidx8.i.i, align 4, !tbaa !59
  %inc11.i.i = or i64 %j.073.i.i, 1
  %agg.tmp.sroa.0.0..sroa_idx.i.i.1 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %A, i64 %inc11.i.i, i32 0
  %agg.tmp.sroa.0.0.copyload.i.i.1 = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.i.1, align 8
  %shr.i.i.i.1 = ashr i32 %agg.tmp.sroa.0.0.copyload.i.i.1, %sh_prom.i.i.i
  %conv.i.i.i.1 = sext i32 %shr.i.i.i.1 to i64
  %and.i.i.i.1 = and i64 %agg.tmp.sroa.2.0.copyload, %conv.i.i.i.1
  %conv.i.i.1 = trunc i64 %and.i.i.i.1 to i8
  %arrayidx6.i.i.1 = getelementptr inbounds i8, i8* %Tmp, i64 %inc11.i.i
  store i8 %conv.i.i.1, i8* %arrayidx6.i.i.1, align 1, !tbaa !22
  %conv7.i.i.1 = and i64 %and.i.i.i.1, 255
  %arrayidx8.i.i.1 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %conv7.i.i.1
  %6 = load i32, i32* %arrayidx8.i.i.1, align 4, !tbaa !59
  %inc9.i.i.1 = add i32 %6, 1
  store i32 %inc9.i.i.1, i32* %arrayidx8.i.i.1, align 4, !tbaa !59
  %inc11.i.i.1 = add nuw nsw i64 %j.073.i.i, 2
  %niter173.nsub.1 = add i64 %niter173, -2
  %niter173.ncmp.1 = icmp eq i64 %niter173.nsub.1, 0
  br i1 %niter173.ncmp.1, label %for.cond.cleanup3.i.i.loopexit.unr-lcssa, label %for.body4.i.i

for.cond.cleanup16.i.i.loopexit.unr-lcssa:        ; preds = %for.body17.i.i, %for.body17.i.i.preheader
  %i13.071.i.i.unr = phi i64 [ 0, %for.body17.i.i.preheader ], [ %inc21.i.i.7, %for.body17.i.i ]
  %s.070.i.i.unr = phi i32 [ 0, %for.body17.i.i.preheader ], [ %add.i.i.7, %for.body17.i.i ]
  %lcmp.mod167 = icmp eq i64 %xtraiter165, 0
  br i1 %lcmp.mod167, label %for.cond.cleanup16.i.i, label %for.body17.i.i.epil.preheader

for.body17.i.i.epil.preheader:                    ; preds = %for.cond.cleanup16.i.i.loopexit.unr-lcssa
  br label %for.body17.i.i.epil

for.body17.i.i.epil:                              ; preds = %for.body17.i.i.epil.preheader, %for.body17.i.i.epil
  %i13.071.i.i.epil = phi i64 [ %inc21.i.i.epil, %for.body17.i.i.epil ], [ %i13.071.i.i.unr, %for.body17.i.i.epil.preheader ]
  %s.070.i.i.epil = phi i32 [ %add.i.i.epil, %for.body17.i.i.epil ], [ %s.070.i.i.unr, %for.body17.i.i.epil.preheader ]
  %epil.iter166 = phi i64 [ %epil.iter166.sub, %for.body17.i.i.epil ], [ %xtraiter165, %for.body17.i.i.epil.preheader ]
  %arrayidx18.i.i.epil = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %i13.071.i.i.epil
  %7 = load i32, i32* %arrayidx18.i.i.epil, align 4, !tbaa !59
  %add.i.i.epil = add i32 %7, %s.070.i.i.epil
  store i32 %add.i.i.epil, i32* %arrayidx18.i.i.epil, align 4, !tbaa !59
  %inc21.i.i.epil = add nuw nsw i64 %i13.071.i.i.epil, 1
  %epil.iter166.sub = add nsw i64 %epil.iter166, -1
  %epil.iter166.cmp = icmp eq i64 %epil.iter166.sub, 0
  br i1 %epil.iter166.cmp, label %for.cond.cleanup16.i.i, label %for.body17.i.i.epil, !llvm.loop !337

for.cond.cleanup16.i.i:                           ; preds = %for.body17.i.i.epil, %for.cond.cleanup16.i.i.loopexit.unr-lcssa, %for.cond.cleanup3.i.i
  br i1 %cmp272.i.i, label %for.body27.i.i.preheader, label %cleanup

for.body27.i.i.preheader:                         ; preds = %for.cond.cleanup16.i.i
  br label %for.body27.i.i

for.body17.i.i:                                   ; preds = %for.body17.i.i, %for.body17.i.i.preheader.new
  %i13.071.i.i = phi i64 [ 0, %for.body17.i.i.preheader.new ], [ %inc21.i.i.7, %for.body17.i.i ]
  %s.070.i.i = phi i32 [ 0, %for.body17.i.i.preheader.new ], [ %add.i.i.7, %for.body17.i.i ]
  %niter169 = phi i64 [ %unroll_iter168, %for.body17.i.i.preheader.new ], [ %niter169.nsub.7, %for.body17.i.i ]
  %arrayidx18.i.i = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %i13.071.i.i
  %8 = load i32, i32* %arrayidx18.i.i, align 4, !tbaa !59
  %add.i.i = add i32 %8, %s.070.i.i
  store i32 %add.i.i, i32* %arrayidx18.i.i, align 4, !tbaa !59
  %inc21.i.i = or i64 %i13.071.i.i, 1
  %arrayidx18.i.i.1 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i
  %9 = load i32, i32* %arrayidx18.i.i.1, align 4, !tbaa !59
  %add.i.i.1 = add i32 %9, %add.i.i
  store i32 %add.i.i.1, i32* %arrayidx18.i.i.1, align 4, !tbaa !59
  %inc21.i.i.1 = or i64 %i13.071.i.i, 2
  %arrayidx18.i.i.2 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i.1
  %10 = load i32, i32* %arrayidx18.i.i.2, align 4, !tbaa !59
  %add.i.i.2 = add i32 %10, %add.i.i.1
  store i32 %add.i.i.2, i32* %arrayidx18.i.i.2, align 4, !tbaa !59
  %inc21.i.i.2 = or i64 %i13.071.i.i, 3
  %arrayidx18.i.i.3 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i.2
  %11 = load i32, i32* %arrayidx18.i.i.3, align 4, !tbaa !59
  %add.i.i.3 = add i32 %11, %add.i.i.2
  store i32 %add.i.i.3, i32* %arrayidx18.i.i.3, align 4, !tbaa !59
  %inc21.i.i.3 = or i64 %i13.071.i.i, 4
  %arrayidx18.i.i.4 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i.3
  %12 = load i32, i32* %arrayidx18.i.i.4, align 4, !tbaa !59
  %add.i.i.4 = add i32 %12, %add.i.i.3
  store i32 %add.i.i.4, i32* %arrayidx18.i.i.4, align 4, !tbaa !59
  %inc21.i.i.4 = or i64 %i13.071.i.i, 5
  %arrayidx18.i.i.5 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i.4
  %13 = load i32, i32* %arrayidx18.i.i.5, align 4, !tbaa !59
  %add.i.i.5 = add i32 %13, %add.i.i.4
  store i32 %add.i.i.5, i32* %arrayidx18.i.i.5, align 4, !tbaa !59
  %inc21.i.i.5 = or i64 %i13.071.i.i, 6
  %arrayidx18.i.i.6 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i.5
  %14 = load i32, i32* %arrayidx18.i.i.6, align 4, !tbaa !59
  %add.i.i.6 = add i32 %14, %add.i.i.5
  store i32 %add.i.i.6, i32* %arrayidx18.i.i.6, align 4, !tbaa !59
  %inc21.i.i.6 = or i64 %i13.071.i.i, 7
  %arrayidx18.i.i.7 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc21.i.i.6
  %15 = load i32, i32* %arrayidx18.i.i.7, align 4, !tbaa !59
  %add.i.i.7 = add i32 %15, %add.i.i.6
  store i32 %add.i.i.7, i32* %arrayidx18.i.i.7, align 4, !tbaa !59
  %inc21.i.i.7 = add nuw nsw i64 %i13.071.i.i, 8
  %niter169.nsub.7 = add i64 %niter169, -8
  %niter169.ncmp.7 = icmp eq i64 %niter169.nsub.7, 0
  br i1 %niter169.ncmp.7, label %for.cond.cleanup16.i.i.loopexit.unr-lcssa, label %for.body17.i.i

for.body27.i.i:                                   ; preds = %for.body27.i.i.preheader, %for.body27.i.i
  %j23.068.in.i.i = phi i64 [ %j23.068.i.i, %for.body27.i.i ], [ %n, %for.body27.i.i.preheader ]
  %j23.068.i.i = add nsw i64 %j23.068.in.i.i, -1
  %arrayidx28.i.i = getelementptr inbounds i8, i8* %Tmp, i64 %j23.068.i.i
  %16 = load i8, i8* %arrayidx28.i.i, align 1, !tbaa !22
  %idxprom29.i.i = zext i8 %16 to i64
  %arrayidx30.i.i = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %idxprom29.i.i
  %17 = load i32, i32* %arrayidx30.i.i, align 4, !tbaa !59
  %dec.i.i = add i32 %17, -1
  store i32 %dec.i.i, i32* %arrayidx30.i.i, align 4, !tbaa !59
  %idxprom32.i.i = zext i32 %dec.i.i to i64
  %first.i.i.i = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %A, i64 %j23.068.i.i, i32 0
  %18 = load i32, i32* %first.i.i.i, align 8, !tbaa !325
  %first2.i.i.i = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B, i64 %idxprom32.i.i, i32 0
  store i32 %18, i32* %first2.i.i.i, align 8, !tbaa !325
  %second.i.i.i = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %A, i64 %j23.068.i.i, i32 1
  %19 = bitcast %struct.vertex.44** %second.i.i.i to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !327
  %second3.i.i.i = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B, i64 %idxprom32.i.i, i32 1
  %21 = bitcast %struct.vertex.44** %second3.i.i.i to i64*
  store i64 %20, i64* %21, align 8, !tbaa !327
  %cmp25.i.i = icmp sgt i64 %j23.068.in.i.i, 1
  br i1 %cmp25.i.i, label %for.body27.i.i, label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %for.body27.i.i
  %22 = add i64 %n, -1
  %xtraiter = and i64 %n, 3
  %23 = icmp ult i64 %22, 3
  br i1 %23, label %cleanup.loopexit.unr-lcssa, label %for.body.i.preheader.new

for.body.i.preheader.new:                         ; preds = %for.body.i.preheader
  %unroll_iter = sub i64 %n, %xtraiter
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.i.preheader.new
  %i.018.i = phi i64 [ 0, %for.body.i.preheader.new ], [ %inc.i.3, %for.body.i ]
  %niter = phi i64 [ %unroll_iter, %for.body.i.preheader.new ], [ %niter.nsub.3, %for.body.i ]
  %first.i.i = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B, i64 %i.018.i, i32 0
  %24 = load i32, i32* %first.i.i, align 8, !tbaa !325
  %first2.i.i = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %A, i64 %i.018.i, i32 0
  store i32 %24, i32* %first2.i.i, align 8, !tbaa !325
  %second.i.i = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B, i64 %i.018.i, i32 1
  %25 = bitcast %struct.vertex.44** %second.i.i to i64*
  %26 = load i64, i64* %25, align 8, !tbaa !327
  %second3.i.i = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %A, i64 %i.018.i, i32 1
  %27 = bitcast %struct.vertex.44** %second3.i.i to i64*
  store i64 %26, i64* %27, align 8, !tbaa !327
  %inc.i = or i64 %i.018.i, 1
  %first.i.i.1 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B, i64 %inc.i, i32 0
  %28 = load i32, i32* %first.i.i.1, align 8, !tbaa !325
  %first2.i.i.1 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %A, i64 %inc.i, i32 0
  store i32 %28, i32* %first2.i.i.1, align 8, !tbaa !325
  %second.i.i.1 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B, i64 %inc.i, i32 1
  %29 = bitcast %struct.vertex.44** %second.i.i.1 to i64*
  %30 = load i64, i64* %29, align 8, !tbaa !327
  %second3.i.i.1 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %A, i64 %inc.i, i32 1
  %31 = bitcast %struct.vertex.44** %second3.i.i.1 to i64*
  store i64 %30, i64* %31, align 8, !tbaa !327
  %inc.i.1 = or i64 %i.018.i, 2
  %first.i.i.2 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B, i64 %inc.i.1, i32 0
  %32 = load i32, i32* %first.i.i.2, align 8, !tbaa !325
  %first2.i.i.2 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %A, i64 %inc.i.1, i32 0
  store i32 %32, i32* %first2.i.i.2, align 8, !tbaa !325
  %second.i.i.2 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B, i64 %inc.i.1, i32 1
  %33 = bitcast %struct.vertex.44** %second.i.i.2 to i64*
  %34 = load i64, i64* %33, align 8, !tbaa !327
  %second3.i.i.2 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %A, i64 %inc.i.1, i32 1
  %35 = bitcast %struct.vertex.44** %second3.i.i.2 to i64*
  store i64 %34, i64* %35, align 8, !tbaa !327
  %inc.i.2 = or i64 %i.018.i, 3
  %first.i.i.3 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B, i64 %inc.i.2, i32 0
  %36 = load i32, i32* %first.i.i.3, align 8, !tbaa !325
  %first2.i.i.3 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %A, i64 %inc.i.2, i32 0
  store i32 %36, i32* %first2.i.i.3, align 8, !tbaa !325
  %second.i.i.3 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B, i64 %inc.i.2, i32 1
  %37 = bitcast %struct.vertex.44** %second.i.i.3 to i64*
  %38 = load i64, i64* %37, align 8, !tbaa !327
  %second3.i.i.3 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %A, i64 %inc.i.2, i32 1
  %39 = bitcast %struct.vertex.44** %second3.i.i.3 to i64*
  store i64 %38, i64* %39, align 8, !tbaa !327
  %inc.i.3 = add nuw nsw i64 %i.018.i, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %cleanup.loopexit.unr-lcssa, label %for.body.i

pfor.detach.lr.ph:                                ; preds = %entry
  %add3 = add i64 %n, -1
  %sub = add i64 %add3, %.sroa.speculated135
  %div4 = sdiv i64 %sub, %.sroa.speculated135
  %40 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 0
  %41 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 0
  %mul5 = shl nsw i64 %.sroa.speculated135, 1
  %42 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %mul5, i64 0
  %agg.tmp28.sroa.2.0..sroa_idx = getelementptr inbounds %"struct.intSort::eBits.53", %"struct.intSort::eBits.53"* %extract, i64 0, i32 1
  %agg.tmp28.sroa.2.0.copyload = load i64, i64* %agg.tmp28.sroa.2.0..sroa_idx, align 8
  %agg.tmp28.sroa.3.0..sroa_idx = getelementptr inbounds %"struct.intSort::eBits.53", %"struct.intSort::eBits.53"* %extract, i64 0, i32 2
  %agg.tmp28.sroa.3.0.copyload = load i64, i64* %agg.tmp28.sroa.3.0..sroa_idx, align 8
  %cmp74.i = icmp sgt i64 %m, 0
  %sh_prom.i.i = trunc i64 %agg.tmp28.sroa.3.0.copyload to i32
  br i1 %cmp74.i, label %pfor.detach.us.preheader, label %pfor.detach.preheader

pfor.detach.preheader:                            ; preds = %pfor.detach.lr.ph
  %43 = xor i64 %div, -1
  %44 = sub nsw i64 -2, %div2
  %45 = icmp slt i64 %44, %43
  %smax202 = select i1 %45, i64 %43, i64 %44
  %46 = sub nsw i64 -2, %smax202
  tail call fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.ls(i64 0, i64 %46, i64 %div4, i64 %n, %"struct.std::pair.51"* %A, i8* %Tmp, i64 %m, [256 x i32]* %BK, i64 %mul5, i32 %sh_prom.i.i, i64 %agg.tmp28.sroa.2.0.copyload, %"struct.std::pair.51"* %B)
  br label %sync.continue

pfor.detach.us.preheader:                         ; preds = %pfor.detach.lr.ph
  %47 = shl i64 %m, 2
  %48 = add i64 %m, -1
  %xtraiter189 = and i64 %m, 7
  %49 = icmp ult i64 %48, 7
  %unroll_iter192 = sub i64 %m, %xtraiter189
  %lcmp.mod191 = icmp eq i64 %xtraiter189, 0
  %50 = xor i64 %div, -1
  %51 = sub nsw i64 -2, %div2
  %52 = icmp slt i64 %51, %50
  %smax203 = select i1 %52, i64 %50, i64 %51
  %53 = sub nsw i64 -2, %smax203
  tail call fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.us.ls(i64 0, i64 %53, i64 %div4, i64 %n, %"struct.std::pair.51"* %A, i8* %Tmp, i64 %m, [256 x i32]* %BK, i64 %mul5, i64 %47, i32 %sh_prom.i.i, i64 %agg.tmp28.sroa.2.0.copyload, i1 %49, i64 %unroll_iter192, i1 %lcmp.mod191, i64 %xtraiter189, %"struct.std::pair.51"* %B)
  br label %sync.continue

sync.continue:                                    ; preds = %pfor.detach.us.preheader, %pfor.detach.preheader
  %54 = bitcast %struct.transpose* %ref.tmp29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #2
  %A.i116 = getelementptr inbounds %struct.transpose, %struct.transpose* %ref.tmp29, i64 0, i32 0
  store i32* %40, i32** %A.i116, align 8, !tbaa !122
  %B.i117 = getelementptr inbounds %struct.transpose, %struct.transpose* %ref.tmp29, i64 0, i32 1
  store i32* %41, i32** %B.i117, align 8, !tbaa !124
  %conv30 = trunc i64 %.sroa.speculated135 to i32
  %conv31 = trunc i64 %m to i32
  call void @_ZN9transposeIjjE6transREjjjjjj(%struct.transpose* nonnull %ref.tmp29, i32 0, i32 %conv30, i32 %conv31, i32 0, i32 %conv31, i32 %conv30) #2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #2
  %mul33 = mul nsw i64 %.sroa.speculated135, %m
  br i1 %top, label %if.then32, label %if.else

if.then32:                                        ; preds = %sync.continue
  %call.i = call i32 @_ZN8sequence4scanIjlN5utils4addFIjEENS_4getAIjlEEEET_PS6_T0_S8_T1_T2_S6_bb(i32* %41, i64 0, i64 %mul33, i32* %41, i32 0, i1 zeroext false, i1 zeroext false) #2
  br label %if.end41

if.else:                                          ; preds = %sync.continue
  %cmp34110.i.i = icmp sgt i64 %mul33, 0
  br i1 %cmp34110.i.i, label %for.body36.i.i.preheader, label %if.end41

for.body36.i.i.preheader:                         ; preds = %if.else
  %55 = add i64 %mul33, -1
  %xtraiter179 = and i64 %mul33, 7
  %56 = icmp ult i64 %55, 7
  br i1 %56, label %if.end41.loopexit.unr-lcssa, label %for.body36.i.i.preheader.new

for.body36.i.i.preheader.new:                     ; preds = %for.body36.i.i.preheader
  %unroll_iter182 = sub i64 %mul33, %xtraiter179
  br label %for.body36.i.i

for.body36.i.i:                                   ; preds = %for.body36.i.i, %for.body36.i.i.preheader.new
  %i32.0112.i.i = phi i64 [ 0, %for.body36.i.i.preheader.new ], [ %inc42.i.i.7, %for.body36.i.i ]
  %r.3111.i.i = phi i32 [ 0, %for.body36.i.i.preheader.new ], [ %add.i.i.i.7, %for.body36.i.i ]
  %niter183 = phi i64 [ %unroll_iter182, %for.body36.i.i.preheader.new ], [ %niter183.nsub.7, %for.body36.i.i ]
  %arrayidx.i72.i.i = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %i32.0112.i.i
  %57 = load i32, i32* %arrayidx.i72.i.i, align 4, !tbaa !59
  store i32 %r.3111.i.i, i32* %arrayidx.i72.i.i, align 4, !tbaa !59
  %add.i.i.i = add i32 %57, %r.3111.i.i
  %inc42.i.i = or i64 %i32.0112.i.i, 1
  %arrayidx.i72.i.i.1 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i
  %58 = load i32, i32* %arrayidx.i72.i.i.1, align 4, !tbaa !59
  store i32 %add.i.i.i, i32* %arrayidx.i72.i.i.1, align 4, !tbaa !59
  %add.i.i.i.1 = add i32 %58, %add.i.i.i
  %inc42.i.i.1 = or i64 %i32.0112.i.i, 2
  %arrayidx.i72.i.i.2 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i.1
  %59 = load i32, i32* %arrayidx.i72.i.i.2, align 4, !tbaa !59
  store i32 %add.i.i.i.1, i32* %arrayidx.i72.i.i.2, align 4, !tbaa !59
  %add.i.i.i.2 = add i32 %59, %add.i.i.i.1
  %inc42.i.i.2 = or i64 %i32.0112.i.i, 3
  %arrayidx.i72.i.i.3 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i.2
  %60 = load i32, i32* %arrayidx.i72.i.i.3, align 4, !tbaa !59
  store i32 %add.i.i.i.2, i32* %arrayidx.i72.i.i.3, align 4, !tbaa !59
  %add.i.i.i.3 = add i32 %60, %add.i.i.i.2
  %inc42.i.i.3 = or i64 %i32.0112.i.i, 4
  %arrayidx.i72.i.i.4 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i.3
  %61 = load i32, i32* %arrayidx.i72.i.i.4, align 4, !tbaa !59
  store i32 %add.i.i.i.3, i32* %arrayidx.i72.i.i.4, align 4, !tbaa !59
  %add.i.i.i.4 = add i32 %61, %add.i.i.i.3
  %inc42.i.i.4 = or i64 %i32.0112.i.i, 5
  %arrayidx.i72.i.i.5 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i.4
  %62 = load i32, i32* %arrayidx.i72.i.i.5, align 4, !tbaa !59
  store i32 %add.i.i.i.4, i32* %arrayidx.i72.i.i.5, align 4, !tbaa !59
  %add.i.i.i.5 = add i32 %62, %add.i.i.i.4
  %inc42.i.i.5 = or i64 %i32.0112.i.i, 6
  %arrayidx.i72.i.i.6 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i.5
  %63 = load i32, i32* %arrayidx.i72.i.i.6, align 4, !tbaa !59
  store i32 %add.i.i.i.5, i32* %arrayidx.i72.i.i.6, align 4, !tbaa !59
  %add.i.i.i.6 = add i32 %63, %add.i.i.i.5
  %inc42.i.i.6 = or i64 %i32.0112.i.i, 7
  %arrayidx.i72.i.i.7 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %inc42.i.i.6
  %64 = load i32, i32* %arrayidx.i72.i.i.7, align 4, !tbaa !59
  store i32 %add.i.i.i.6, i32* %arrayidx.i72.i.i.7, align 4, !tbaa !59
  %add.i.i.i.7 = add i32 %64, %add.i.i.i.6
  %inc42.i.i.7 = add nuw nsw i64 %i32.0112.i.i, 8
  %niter183.nsub.7 = add i64 %niter183, -8
  %niter183.ncmp.7 = icmp eq i64 %niter183.nsub.7, 0
  br i1 %niter183.ncmp.7, label %if.end41.loopexit.unr-lcssa, label %for.body36.i.i

if.end41.loopexit.unr-lcssa:                      ; preds = %for.body36.i.i, %for.body36.i.i.preheader
  %i32.0112.i.i.unr = phi i64 [ 0, %for.body36.i.i.preheader ], [ %inc42.i.i.7, %for.body36.i.i ]
  %r.3111.i.i.unr = phi i32 [ 0, %for.body36.i.i.preheader ], [ %add.i.i.i.7, %for.body36.i.i ]
  %lcmp.mod181 = icmp eq i64 %xtraiter179, 0
  br i1 %lcmp.mod181, label %if.end41, label %for.body36.i.i.epil.preheader

for.body36.i.i.epil.preheader:                    ; preds = %if.end41.loopexit.unr-lcssa
  br label %for.body36.i.i.epil

for.body36.i.i.epil:                              ; preds = %for.body36.i.i.epil.preheader, %for.body36.i.i.epil
  %i32.0112.i.i.epil = phi i64 [ %inc42.i.i.epil, %for.body36.i.i.epil ], [ %i32.0112.i.i.unr, %for.body36.i.i.epil.preheader ]
  %r.3111.i.i.epil = phi i32 [ %add.i.i.i.epil, %for.body36.i.i.epil ], [ %r.3111.i.i.unr, %for.body36.i.i.epil.preheader ]
  %epil.iter180 = phi i64 [ %epil.iter180.sub, %for.body36.i.i.epil ], [ %xtraiter179, %for.body36.i.i.epil.preheader ]
  %arrayidx.i72.i.i.epil = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %i32.0112.i.i.epil
  %65 = load i32, i32* %arrayidx.i72.i.i.epil, align 4, !tbaa !59
  store i32 %r.3111.i.i.epil, i32* %arrayidx.i72.i.i.epil, align 4, !tbaa !59
  %add.i.i.i.epil = add i32 %65, %r.3111.i.i.epil
  %inc42.i.i.epil = add nuw nsw i64 %i32.0112.i.i.epil, 1
  %epil.iter180.sub = add nsw i64 %epil.iter180, -1
  %epil.iter180.cmp = icmp eq i64 %epil.iter180.sub, 0
  br i1 %epil.iter180.cmp, label %if.end41, label %for.body36.i.i.epil, !llvm.loop !338

if.end41:                                         ; preds = %for.body36.i.i.epil, %if.end41.loopexit.unr-lcssa, %if.else, %if.then32
  %66 = bitcast %struct.blockTrans.54* %ref.tmp42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %66) #2
  %A.i = getelementptr inbounds %struct.blockTrans.54, %struct.blockTrans.54* %ref.tmp42, i64 0, i32 0
  store %"struct.std::pair.51"* %B, %"struct.std::pair.51"** %A.i, align 8, !tbaa !339
  %B.i = getelementptr inbounds %struct.blockTrans.54, %struct.blockTrans.54* %ref.tmp42, i64 0, i32 1
  store %"struct.std::pair.51"* %A, %"struct.std::pair.51"** %B.i, align 8, !tbaa !341
  %OA.i = getelementptr inbounds %struct.blockTrans.54, %struct.blockTrans.54* %ref.tmp42, i64 0, i32 2
  store i32* %42, i32** %OA.i, align 8, !tbaa !342
  %OB.i = getelementptr inbounds %struct.blockTrans.54, %struct.blockTrans.54* %ref.tmp42, i64 0, i32 3
  store i32* %41, i32** %OB.i, align 8, !tbaa !343
  %L.i = getelementptr inbounds %struct.blockTrans.54, %struct.blockTrans.54* %ref.tmp42, i64 0, i32 4
  store i32* %40, i32** %L.i, align 8, !tbaa !344
  call void @_ZN10blockTransISt4pairIiP6vertexI8_point3dIdELi10EEEjE6transREjjjjjj(%struct.blockTrans.54* nonnull %ref.tmp42, i32 0, i32 %conv30, i32 %conv31, i32 0, i32 %conv31, i32 %conv30) #2
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %66) #2
  br i1 %cmp74.i, label %for.body.preheader, label %cleanup

for.body.preheader:                               ; preds = %if.end41
  %67 = add i64 %m, -1
  %xtraiter174 = and i64 %m, 7
  %68 = icmp ult i64 %67, 7
  br i1 %68, label %cleanup.loopexit163.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter177 = sub i64 %m, %xtraiter174
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.preheader.new
  %j.0154 = phi i64 [ 0, %for.body.preheader.new ], [ %inc50.7, %for.body ]
  %niter178 = phi i64 [ %unroll_iter177, %for.body.preheader.new ], [ %niter178.nsub.7, %for.body ]
  %mul46 = mul nsw i64 %j.0154, %.sroa.speculated135
  %arrayidx47 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46
  %69 = load i32, i32* %arrayidx47, align 4, !tbaa !59
  %arrayidx49 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %j.0154
  store i32 %69, i32* %arrayidx49, align 4, !tbaa !59
  %inc50 = or i64 %j.0154, 1
  %mul46.1 = mul nsw i64 %inc50, %.sroa.speculated135
  %arrayidx47.1 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.1
  %70 = load i32, i32* %arrayidx47.1, align 4, !tbaa !59
  %arrayidx49.1 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50
  store i32 %70, i32* %arrayidx49.1, align 4, !tbaa !59
  %inc50.1 = or i64 %j.0154, 2
  %mul46.2 = mul nsw i64 %inc50.1, %.sroa.speculated135
  %arrayidx47.2 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.2
  %71 = load i32, i32* %arrayidx47.2, align 4, !tbaa !59
  %arrayidx49.2 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50.1
  store i32 %71, i32* %arrayidx49.2, align 4, !tbaa !59
  %inc50.2 = or i64 %j.0154, 3
  %mul46.3 = mul nsw i64 %inc50.2, %.sroa.speculated135
  %arrayidx47.3 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.3
  %72 = load i32, i32* %arrayidx47.3, align 4, !tbaa !59
  %arrayidx49.3 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50.2
  store i32 %72, i32* %arrayidx49.3, align 4, !tbaa !59
  %inc50.3 = or i64 %j.0154, 4
  %mul46.4 = mul nsw i64 %inc50.3, %.sroa.speculated135
  %arrayidx47.4 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.4
  %73 = load i32, i32* %arrayidx47.4, align 4, !tbaa !59
  %arrayidx49.4 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50.3
  store i32 %73, i32* %arrayidx49.4, align 4, !tbaa !59
  %inc50.4 = or i64 %j.0154, 5
  %mul46.5 = mul nsw i64 %inc50.4, %.sroa.speculated135
  %arrayidx47.5 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.5
  %74 = load i32, i32* %arrayidx47.5, align 4, !tbaa !59
  %arrayidx49.5 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50.4
  store i32 %74, i32* %arrayidx49.5, align 4, !tbaa !59
  %inc50.5 = or i64 %j.0154, 6
  %mul46.6 = mul nsw i64 %inc50.5, %.sroa.speculated135
  %arrayidx47.6 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.6
  %75 = load i32, i32* %arrayidx47.6, align 4, !tbaa !59
  %arrayidx49.6 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50.5
  store i32 %75, i32* %arrayidx49.6, align 4, !tbaa !59
  %inc50.6 = or i64 %j.0154, 7
  %mul46.7 = mul nsw i64 %inc50.6, %.sroa.speculated135
  %arrayidx47.7 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.7
  %76 = load i32, i32* %arrayidx47.7, align 4, !tbaa !59
  %arrayidx49.7 = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %inc50.6
  store i32 %76, i32* %arrayidx49.7, align 4, !tbaa !59
  %inc50.7 = add nuw nsw i64 %j.0154, 8
  %niter178.nsub.7 = add i64 %niter178, -8
  %niter178.ncmp.7 = icmp eq i64 %niter178.nsub.7, 0
  br i1 %niter178.ncmp.7, label %cleanup.loopexit163.unr-lcssa, label %for.body

cleanup.loopexit.unr-lcssa:                       ; preds = %for.body.i, %for.body.i.preheader
  %i.018.i.unr = phi i64 [ 0, %for.body.i.preheader ], [ %inc.i.3, %for.body.i ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %cleanup, label %for.body.i.epil.preheader

for.body.i.epil.preheader:                        ; preds = %cleanup.loopexit.unr-lcssa
  br label %for.body.i.epil

for.body.i.epil:                                  ; preds = %for.body.i.epil.preheader, %for.body.i.epil
  %i.018.i.epil = phi i64 [ %inc.i.epil, %for.body.i.epil ], [ %i.018.i.unr, %for.body.i.epil.preheader ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body.i.epil ], [ %xtraiter, %for.body.i.epil.preheader ]
  %first.i.i.epil = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B, i64 %i.018.i.epil, i32 0
  %77 = load i32, i32* %first.i.i.epil, align 8, !tbaa !325
  %first2.i.i.epil = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %A, i64 %i.018.i.epil, i32 0
  store i32 %77, i32* %first2.i.i.epil, align 8, !tbaa !325
  %second.i.i.epil = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B, i64 %i.018.i.epil, i32 1
  %78 = bitcast %struct.vertex.44** %second.i.i.epil to i64*
  %79 = load i64, i64* %78, align 8, !tbaa !327
  %second3.i.i.epil = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %A, i64 %i.018.i.epil, i32 1
  %80 = bitcast %struct.vertex.44** %second3.i.i.epil to i64*
  store i64 %79, i64* %80, align 8, !tbaa !327
  %inc.i.epil = add nuw nsw i64 %i.018.i.epil, 1
  %epil.iter.sub = add nsw i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %cleanup, label %for.body.i.epil, !llvm.loop !345

cleanup.loopexit163.unr-lcssa:                    ; preds = %for.body, %for.body.preheader
  %j.0154.unr = phi i64 [ 0, %for.body.preheader ], [ %inc50.7, %for.body ]
  %lcmp.mod176 = icmp eq i64 %xtraiter174, 0
  br i1 %lcmp.mod176, label %cleanup, label %for.body.epil.preheader

for.body.epil.preheader:                          ; preds = %cleanup.loopexit163.unr-lcssa
  br label %for.body.epil

for.body.epil:                                    ; preds = %for.body.epil.preheader, %for.body.epil
  %j.0154.epil = phi i64 [ %inc50.epil, %for.body.epil ], [ %j.0154.unr, %for.body.epil.preheader ]
  %epil.iter175 = phi i64 [ %epil.iter175.sub, %for.body.epil ], [ %xtraiter174, %for.body.epil.preheader ]
  %mul46.epil = mul nsw i64 %j.0154.epil, %.sroa.speculated135
  %arrayidx47.epil = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 %.sroa.speculated135, i64 %mul46.epil
  %81 = load i32, i32* %arrayidx47.epil, align 4, !tbaa !59
  %arrayidx49.epil = getelementptr inbounds [256 x i32], [256 x i32]* %BK, i64 0, i64 %j.0154.epil
  store i32 %81, i32* %arrayidx49.epil, align 4, !tbaa !59
  %inc50.epil = add nuw nsw i64 %j.0154.epil, 1
  %epil.iter175.sub = add nsw i64 %epil.iter175, -1
  %epil.iter175.cmp = icmp eq i64 %epil.iter175.sub, 0
  br i1 %epil.iter175.cmp, label %cleanup, label %for.body.epil, !llvm.loop !346

cleanup:                                          ; preds = %for.body.epil, %for.body.i.epil, %cleanup.loopexit163.unr-lcssa, %cleanup.loopexit.unr-lcssa, %if.end41, %for.cond.cleanup16.i.i
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0_(%"struct.std::pair.51"* %A, %"struct.std::pair.51"* %B, i8* %Tmp, [256 x i32]* %BK, i64 %numBK, i64 %n, i64 %bits) local_unnamed_addr #7 comdat {
entry:
  %0 = tail call i32 @__cilkrts_get_nworkers()
  %__cilkrts_wc8 = shl i32 %0, 3
  %agg.tmp.i = alloca %"struct.intSort::eBits.53", align 8
  %agg.tmp = alloca %"struct.intSort::eBits.53", align 8
  %agg.tmp6 = alloca %"struct.intSort::eBits.53", align 8
  %cmp = icmp eq i64 %n, 0
  br i1 %cmp, label %cleanup.cont, label %if.end

if.end:                                           ; preds = %entry
  %cmp1 = icmp slt i64 %bits, 9
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  %shl = shl i64 1, %bits
  %_mask.i = getelementptr inbounds %"struct.intSort::eBits.53", %"struct.intSort::eBits.53"* %agg.tmp, i64 0, i32 1
  %sh_prom.i = trunc i64 %bits to i32
  %shl.i = shl i32 1, %sh_prom.i
  %sub.i = add nsw i32 %shl.i, -1
  %conv.i = sext i32 %sub.i to i64
  store i64 %conv.i, i64* %_mask.i, align 8, !tbaa !333
  %_offset.i = getelementptr inbounds %"struct.intSort::eBits.53", %"struct.intSort::eBits.53"* %agg.tmp, i64 0, i32 2
  store i64 0, i64* %_offset.i, align 8, !tbaa !336
  call void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_(%"struct.std::pair.51"* %A, %"struct.std::pair.51"* %B, i8* %Tmp, [256 x i32]* %BK, i64 %numBK, i64 %n, i64 %shl, i1 zeroext true, %"struct.intSort::eBits.53"* byval nonnull align 8 %agg.tmp)
  br label %cleanup.cont

if.else:                                          ; preds = %if.end
  %cmp4 = icmp sgt i64 %numBK, 256
  br i1 %cmp4, label %if.then5, label %while.body.lr.ph.i

if.then5:                                         ; preds = %if.else
  %sub = add nsw i64 %bits, -8
  %_mask.i90 = getelementptr inbounds %"struct.intSort::eBits.53", %"struct.intSort::eBits.53"* %agg.tmp6, i64 0, i32 1
  store i64 255, i64* %_mask.i90, align 8, !tbaa !333
  %_offset.i91 = getelementptr inbounds %"struct.intSort::eBits.53", %"struct.intSort::eBits.53"* %agg.tmp6, i64 0, i32 2
  store i64 %sub, i64* %_offset.i91, align 8, !tbaa !336
  call void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_(%"struct.std::pair.51"* %A, %"struct.std::pair.51"* %B, i8* %Tmp, [256 x i32]* %BK, i64 %numBK, i64 %n, i64 256, i1 zeroext true, %"struct.intSort::eBits.53"* byval nonnull align 8 %agg.tmp6)
  %sub9 = add nsw i64 %numBK, -257
  %conv = sitofp i64 %sub9 to float
  %conv10 = sitofp i64 %n to float
  %div = fdiv fast float %conv, %conv10
  %1 = zext i32 %__cilkrts_wc8 to i64
  %2 = add nuw nsw i64 %1, 254
  %3 = udiv i64 %2, %1
  %4 = icmp ult i64 %3, 2048
  %5 = select i1 %4, i64 %3, i64 2048
  call fastcc void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0__pfor.detach.ls(i64 0, i64 255, i64 %5, [256 x i32]* %BK, float %conv10, i64 %n, float %div, %"struct.std::pair.51"* %A, %"struct.std::pair.51"* %B, i8* %Tmp, i64 %sub)
  br label %cleanup.cont

while.body.lr.ph.i:                               ; preds = %if.else
  %6 = getelementptr inbounds %"struct.intSort::eBits.53", %"struct.intSort::eBits.53"* %agg.tmp.i, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6)
  %sub.i92 = add nsw i64 %bits, -1
  %div.i = sdiv i64 %sub.i92, 8
  %add.i = add nsw i64 %div.i, 1
  %div2.i = sdiv i64 %sub.i92, %add.i
  %add3.i = add nsw i64 %div2.i, 1
  %_mask.i.i = getelementptr inbounds %"struct.intSort::eBits.53", %"struct.intSort::eBits.53"* %agg.tmp.i, i64 0, i32 1
  %_offset.i.i = getelementptr inbounds %"struct.intSort::eBits.53", %"struct.intSort::eBits.53"* %agg.tmp.i, i64 0, i32 2
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i, %while.body.lr.ph.i
  %bitOffset.025.i = phi i64 [ 0, %while.body.lr.ph.i ], [ %add8.i, %while.body.i ]
  %rbits.024.i = phi i64 [ %add3.i, %while.body.lr.ph.i ], [ %spec.select.i, %while.body.i ]
  %add4.i = add nsw i64 %rbits.024.i, %bitOffset.025.i
  %cmp5.i = icmp sgt i64 %add4.i, %bits
  %sub6.i = sub nsw i64 %bits, %bitOffset.025.i
  %spec.select.i = select i1 %cmp5.i, i64 %sub6.i, i64 %rbits.024.i
  %sh_prom.i93 = trunc i64 %spec.select.i to i32
  %shl.i94 = shl i32 1, %sh_prom.i93
  %conv.i95 = sext i32 %shl.i94 to i64
  %sub.i.i = add nsw i32 %shl.i94, -1
  %conv.i.i = sext i32 %sub.i.i to i64
  store i64 %conv.i.i, i64* %_mask.i.i, align 8, !tbaa !333
  store i64 %bitOffset.025.i, i64* %_offset.i.i, align 8, !tbaa !336
  call void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0_(%"struct.std::pair.51"* %A, %"struct.std::pair.51"* %B, i8* %Tmp, [256 x i32]* %BK, i64 %numBK, i64 %n, i64 %conv.i95, i1 zeroext false, %"struct.intSort::eBits.53"* byval nonnull align 8 %agg.tmp.i) #2
  %add8.i = add nsw i64 %spec.select.i, %bitOffset.025.i
  %cmp.i = icmp slt i64 %add8.i, %bits
  br i1 %cmp.i, label %while.body.i, label %_ZN7intSort17radixLoopBottomUpISt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllbT0_.exit

_ZN7intSort17radixLoopBottomUpISt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllbT0_.exit: ; preds = %while.body.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6)
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.then5, %if.then2, %_ZN7intSort17radixLoopBottomUpISt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllbT0_.exit, %entry
  ret void
}

; Function Attrs: nounwind stealable uwtable
define linkonce_odr void @_ZN10blockTransISt4pairIiP6vertexI8_point3dIdELi10EEEjE6transREjjjjjj(%struct.blockTrans.54* %this, i32 %rStart, i32 %rCount, i32 %rLength, i32 %cStart, i32 %cCount, i32 %cLength) local_unnamed_addr #15 comdat align 2 {
entry:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %entry
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %entry, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %entry ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %entry ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %9 = or i32 %cCount, %rCount
  %10 = icmp ult i32 %9, 64
  br i1 %10, label %if.then, label %if.else.preheader

if.else.preheader:                                ; preds = %__cilkrts_enter_frame_1.exit
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %13 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %14 = getelementptr inbounds [5 x i8*], [5 x i8*]* %13, i64 0, i64 0
  %15 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %16 = bitcast [5 x i8*]* %13 to i8*
  br label %if.else

if.then:                                          ; preds = %det.cont, %__cilkrts_enter_frame_1.exit
  %cStart.tr.lcssa = phi i32 [ %cStart, %__cilkrts_enter_frame_1.exit ], [ %add34, %det.cont ]
  %cCount.tr.lcssa = phi i32 [ %cCount, %__cilkrts_enter_frame_1.exit ], [ %sub, %det.cont ]
  %add = add i32 %rCount, %rStart
  %cmp3110 = icmp ugt i32 %add, %rStart
  br i1 %cmp3110, label %for.body.lr.ph, label %if.end46

for.body.lr.ph:                                   ; preds = %if.then
  %add5 = add i32 %cCount.tr.lcssa, %cStart.tr.lcssa
  %cmp6108 = icmp ult i32 %cStart.tr.lcssa, %add5
  br i1 %cmp6108, label %for.body.lr.ph.split.us, label %if.end46

for.body.lr.ph.split.us:                          ; preds = %for.body.lr.ph
  %L = getelementptr inbounds %struct.blockTrans.54, %struct.blockTrans.54* %this, i64 0, i32 4
  %OB = getelementptr inbounds %struct.blockTrans.54, %struct.blockTrans.54* %this, i64 0, i32 3
  %B = getelementptr inbounds %struct.blockTrans.54, %struct.blockTrans.54* %this, i64 0, i32 1
  %OA = getelementptr inbounds %struct.blockTrans.54, %struct.blockTrans.54* %this, i64 0, i32 2
  %A = getelementptr inbounds %struct.blockTrans.54, %struct.blockTrans.54* %this, i64 0, i32 0
  %17 = zext i32 %cStart.tr.lcssa to i64
  %18 = load %"struct.std::pair.51"*, %"struct.std::pair.51"** %A, align 8, !tbaa !339
  %19 = load i32*, i32** %OA, align 8, !tbaa !342
  %20 = load %"struct.std::pair.51"*, %"struct.std::pair.51"** %B, align 8, !tbaa !341
  %21 = load i32*, i32** %OB, align 8, !tbaa !343
  %22 = load i32*, i32** %L, align 8, !tbaa !344
  %wide.trip.count = zext i32 %add5 to i64
  br label %for.body.us

for.body.us:                                      ; preds = %for.cond4.for.cond.cleanup7_crit_edge.us, %for.body.lr.ph.split.us
  %i.0111.us = phi i32 [ %rStart, %for.body.lr.ph.split.us ], [ %inc29.us, %for.cond4.for.cond.cleanup7_crit_edge.us ]
  %mul.us = mul i32 %i.0111.us, %rLength
  br label %for.body8.us

for.body8.us:                                     ; preds = %for.cond.cleanup22.us, %for.body.us
  %indvars.iv = phi i64 [ %17, %for.body.us ], [ %indvars.iv.next, %for.cond.cleanup22.us ]
  %23 = trunc i64 %indvars.iv to i32
  %add9.us = add i32 %mul.us, %23
  %idxprom.us = zext i32 %add9.us to i64
  %arrayidx19.us = getelementptr inbounds i32, i32* %22, i64 %idxprom.us
  %24 = load i32, i32* %arrayidx19.us, align 4, !tbaa !59
  %cmp21104.us = icmp eq i32 %24, 0
  br i1 %cmp21104.us, label %for.cond.cleanup22.us, label %for.body23.lr.ph.us

for.cond.cleanup22.us.loopexit.unr-lcssa:         ; preds = %for.body23.us, %for.body23.lr.ph.us
  %pa.0107.us.unr = phi %"struct.std::pair.51"* [ %add.ptr.us, %for.body23.lr.ph.us ], [ %incdec.ptr.us.7, %for.body23.us ]
  %pb.0105.us.unr = phi %"struct.std::pair.51"* [ %add.ptr15.us, %for.body23.lr.ph.us ], [ %incdec.ptr24.us.7, %for.body23.us ]
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod, label %for.cond.cleanup22.us, label %for.body23.us.epil.preheader

for.body23.us.epil.preheader:                     ; preds = %for.cond.cleanup22.us.loopexit.unr-lcssa
  br label %for.body23.us.epil

for.body23.us.epil:                               ; preds = %for.body23.us.epil.preheader, %for.body23.us.epil
  %pa.0107.us.epil = phi %"struct.std::pair.51"* [ %incdec.ptr.us.epil, %for.body23.us.epil ], [ %pa.0107.us.unr, %for.body23.us.epil.preheader ]
  %pb.0105.us.epil = phi %"struct.std::pair.51"* [ %incdec.ptr24.us.epil, %for.body23.us.epil ], [ %pb.0105.us.unr, %for.body23.us.epil.preheader ]
  %epil.iter = phi i32 [ %epil.iter.sub, %for.body23.us.epil ], [ %xtraiter, %for.body23.us.epil.preheader ]
  %incdec.ptr.us.epil = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pa.0107.us.epil, i64 1
  %incdec.ptr24.us.epil = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pb.0105.us.epil, i64 1
  %first.i.us.epil = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pa.0107.us.epil, i64 0, i32 0
  %25 = load i32, i32* %first.i.us.epil, align 8, !tbaa !325
  %first2.i.us.epil = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pb.0105.us.epil, i64 0, i32 0
  store i32 %25, i32* %first2.i.us.epil, align 8, !tbaa !325
  %second.i.us.epil = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pa.0107.us.epil, i64 0, i32 1
  %26 = bitcast %struct.vertex.44** %second.i.us.epil to i64*
  %27 = load i64, i64* %26, align 8, !tbaa !327
  %second3.i.us.epil = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pb.0105.us.epil, i64 0, i32 1
  %28 = bitcast %struct.vertex.44** %second3.i.us.epil to i64*
  store i64 %27, i64* %28, align 8, !tbaa !327
  %epil.iter.sub = add nsw i32 %epil.iter, -1
  %epil.iter.cmp = icmp eq i32 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond.cleanup22.us, label %for.body23.us.epil, !llvm.loop !347

for.cond.cleanup22.us:                            ; preds = %for.body23.us.epil, %for.cond.cleanup22.us.loopexit.unr-lcssa, %for.body8.us
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond119 = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond119, label %for.cond4.for.cond.cleanup7_crit_edge.us, label %for.body8.us

for.body23.us:                                    ; preds = %for.body23.us, %for.body23.lr.ph.us.new
  %pa.0107.us = phi %"struct.std::pair.51"* [ %add.ptr.us, %for.body23.lr.ph.us.new ], [ %incdec.ptr.us.7, %for.body23.us ]
  %pb.0105.us = phi %"struct.std::pair.51"* [ %add.ptr15.us, %for.body23.lr.ph.us.new ], [ %incdec.ptr24.us.7, %for.body23.us ]
  %niter = phi i32 [ %unroll_iter, %for.body23.lr.ph.us.new ], [ %niter.nsub.7, %for.body23.us ]
  %first.i.us = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pa.0107.us, i64 0, i32 0
  %29 = load i32, i32* %first.i.us, align 8, !tbaa !325
  %first2.i.us = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pb.0105.us, i64 0, i32 0
  store i32 %29, i32* %first2.i.us, align 8, !tbaa !325
  %second.i.us = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pa.0107.us, i64 0, i32 1
  %30 = bitcast %struct.vertex.44** %second.i.us to i64*
  %31 = load i64, i64* %30, align 8, !tbaa !327
  %second3.i.us = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pb.0105.us, i64 0, i32 1
  %32 = bitcast %struct.vertex.44** %second3.i.us to i64*
  store i64 %31, i64* %32, align 8, !tbaa !327
  %first.i.us.1 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pa.0107.us, i64 1, i32 0
  %33 = load i32, i32* %first.i.us.1, align 8, !tbaa !325
  %first2.i.us.1 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pb.0105.us, i64 1, i32 0
  store i32 %33, i32* %first2.i.us.1, align 8, !tbaa !325
  %second.i.us.1 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pa.0107.us, i64 1, i32 1
  %34 = bitcast %struct.vertex.44** %second.i.us.1 to i64*
  %35 = load i64, i64* %34, align 8, !tbaa !327
  %second3.i.us.1 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pb.0105.us, i64 1, i32 1
  %36 = bitcast %struct.vertex.44** %second3.i.us.1 to i64*
  store i64 %35, i64* %36, align 8, !tbaa !327
  %first.i.us.2 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pa.0107.us, i64 2, i32 0
  %37 = load i32, i32* %first.i.us.2, align 8, !tbaa !325
  %first2.i.us.2 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pb.0105.us, i64 2, i32 0
  store i32 %37, i32* %first2.i.us.2, align 8, !tbaa !325
  %second.i.us.2 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pa.0107.us, i64 2, i32 1
  %38 = bitcast %struct.vertex.44** %second.i.us.2 to i64*
  %39 = load i64, i64* %38, align 8, !tbaa !327
  %second3.i.us.2 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pb.0105.us, i64 2, i32 1
  %40 = bitcast %struct.vertex.44** %second3.i.us.2 to i64*
  store i64 %39, i64* %40, align 8, !tbaa !327
  %first.i.us.3 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pa.0107.us, i64 3, i32 0
  %41 = load i32, i32* %first.i.us.3, align 8, !tbaa !325
  %first2.i.us.3 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pb.0105.us, i64 3, i32 0
  store i32 %41, i32* %first2.i.us.3, align 8, !tbaa !325
  %second.i.us.3 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pa.0107.us, i64 3, i32 1
  %42 = bitcast %struct.vertex.44** %second.i.us.3 to i64*
  %43 = load i64, i64* %42, align 8, !tbaa !327
  %second3.i.us.3 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pb.0105.us, i64 3, i32 1
  %44 = bitcast %struct.vertex.44** %second3.i.us.3 to i64*
  store i64 %43, i64* %44, align 8, !tbaa !327
  %first.i.us.4 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pa.0107.us, i64 4, i32 0
  %45 = load i32, i32* %first.i.us.4, align 8, !tbaa !325
  %first2.i.us.4 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pb.0105.us, i64 4, i32 0
  store i32 %45, i32* %first2.i.us.4, align 8, !tbaa !325
  %second.i.us.4 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pa.0107.us, i64 4, i32 1
  %46 = bitcast %struct.vertex.44** %second.i.us.4 to i64*
  %47 = load i64, i64* %46, align 8, !tbaa !327
  %second3.i.us.4 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pb.0105.us, i64 4, i32 1
  %48 = bitcast %struct.vertex.44** %second3.i.us.4 to i64*
  store i64 %47, i64* %48, align 8, !tbaa !327
  %first.i.us.5 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pa.0107.us, i64 5, i32 0
  %49 = load i32, i32* %first.i.us.5, align 8, !tbaa !325
  %first2.i.us.5 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pb.0105.us, i64 5, i32 0
  store i32 %49, i32* %first2.i.us.5, align 8, !tbaa !325
  %second.i.us.5 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pa.0107.us, i64 5, i32 1
  %50 = bitcast %struct.vertex.44** %second.i.us.5 to i64*
  %51 = load i64, i64* %50, align 8, !tbaa !327
  %second3.i.us.5 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pb.0105.us, i64 5, i32 1
  %52 = bitcast %struct.vertex.44** %second3.i.us.5 to i64*
  store i64 %51, i64* %52, align 8, !tbaa !327
  %first.i.us.6 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pa.0107.us, i64 6, i32 0
  %53 = load i32, i32* %first.i.us.6, align 8, !tbaa !325
  %first2.i.us.6 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pb.0105.us, i64 6, i32 0
  store i32 %53, i32* %first2.i.us.6, align 8, !tbaa !325
  %second.i.us.6 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pa.0107.us, i64 6, i32 1
  %54 = bitcast %struct.vertex.44** %second.i.us.6 to i64*
  %55 = load i64, i64* %54, align 8, !tbaa !327
  %second3.i.us.6 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pb.0105.us, i64 6, i32 1
  %56 = bitcast %struct.vertex.44** %second3.i.us.6 to i64*
  store i64 %55, i64* %56, align 8, !tbaa !327
  %incdec.ptr.us.7 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pa.0107.us, i64 8
  %incdec.ptr24.us.7 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pb.0105.us, i64 8
  %first.i.us.7 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pa.0107.us, i64 7, i32 0
  %57 = load i32, i32* %first.i.us.7, align 8, !tbaa !325
  %first2.i.us.7 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pb.0105.us, i64 7, i32 0
  store i32 %57, i32* %first2.i.us.7, align 8, !tbaa !325
  %second.i.us.7 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pa.0107.us, i64 7, i32 1
  %58 = bitcast %struct.vertex.44** %second.i.us.7 to i64*
  %59 = load i64, i64* %58, align 8, !tbaa !327
  %second3.i.us.7 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %pb.0105.us, i64 7, i32 1
  %60 = bitcast %struct.vertex.44** %second3.i.us.7 to i64*
  store i64 %59, i64* %60, align 8, !tbaa !327
  %niter.nsub.7 = add i32 %niter, -8
  %niter.ncmp.7 = icmp eq i32 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %for.cond.cleanup22.us.loopexit.unr-lcssa, label %for.body23.us

for.body23.lr.ph.us:                              ; preds = %for.body8.us
  %mul10.us = mul i32 %23, %cLength
  %add11.us = add i32 %mul10.us, %i.0111.us
  %idxprom12.us = zext i32 %add11.us to i64
  %arrayidx13.us = getelementptr inbounds i32, i32* %21, i64 %idxprom12.us
  %61 = load i32, i32* %arrayidx13.us, align 4, !tbaa !59
  %idx.ext14.us = zext i32 %61 to i64
  %add.ptr15.us = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %20, i64 %idx.ext14.us
  %arrayidx.us = getelementptr inbounds i32, i32* %19, i64 %idxprom.us
  %62 = load i32, i32* %arrayidx.us, align 4, !tbaa !59
  %idx.ext.us = zext i32 %62 to i64
  %add.ptr.us = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %18, i64 %idx.ext.us
  %63 = add i32 %24, -1
  %xtraiter = and i32 %24, 7
  %64 = icmp ult i32 %63, 7
  br i1 %64, label %for.cond.cleanup22.us.loopexit.unr-lcssa, label %for.body23.lr.ph.us.new

for.body23.lr.ph.us.new:                          ; preds = %for.body23.lr.ph.us
  %unroll_iter = sub i32 %24, %xtraiter
  br label %for.body23.us

for.cond4.for.cond.cleanup7_crit_edge.us:         ; preds = %for.cond.cleanup22.us
  %inc29.us = add nuw i32 %i.0111.us, 1
  %exitcond120 = icmp eq i32 %inc29.us, %add
  br i1 %exitcond120, label %if.end46, label %for.body.us

if.else:                                          ; preds = %if.else.preheader, %det.cont
  %cCount.tr114 = phi i32 [ %sub, %det.cont ], [ %cCount, %if.else.preheader ]
  %cStart.tr113 = phi i32 [ %add34, %det.cont ], [ %cStart, %if.else.preheader ]
  %cmp31 = icmp ugt i32 %cCount.tr114, %rCount
  br i1 %cmp31, label %if.then32, label %if.else36

if.then32:                                        ; preds = %if.else
  %div = lshr i32 %cCount.tr114, 1
  %sub = sub i32 %cCount.tr114, %div
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %11, i16* nonnull %12) #2
  %65 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %65, i8** %14, align 8
  %66 = call i8* @llvm.stacksave()
  store volatile i8* %66, i8** %15, align 8
  %67 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %16) #23
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %if.then32.split, label %det.cont

if.then32.split:                                  ; preds = %if.then32
  call fastcc void @_ZN10blockTransISt4pairIiP6vertexI8_point3dIdELi10EEEjE6transREjjjjjj_det.achd.cilk(%struct.blockTrans.54* %this, i32 %rStart, i32 %rCount, i32 %rLength, i32 %cStart.tr113, i32 %div, i32 %cLength)
  br label %det.cont

det.cont:                                         ; preds = %if.then32.split, %if.then32
  %add34 = add i32 %div, %cStart.tr113
  %69 = or i32 %sub, %rCount
  %70 = icmp ult i32 %69, 64
  br i1 %70, label %if.then, label %if.else

if.else36:                                        ; preds = %if.else
  %div38 = lshr i32 %rCount, 1
  %sub41 = sub i32 %rCount, %div38
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %11, i16* nonnull %12) #2
  %71 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %71, i8** %14, align 8
  %72 = call i8* @llvm.stacksave()
  store volatile i8* %72, i8** %15, align 8
  %73 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %16) #23
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %if.else36.split, label %det.cont43

if.else36.split:                                  ; preds = %if.else36
  call fastcc void @_ZN10blockTransISt4pairIiP6vertexI8_point3dIdELi10EEEjE6transREjjjjjj_det.achd42.cilk(%struct.blockTrans.54* %this, i32 %rStart, i32 %div38, i32 %rLength, i32 %cStart.tr113, i32 %cCount.tr114, i32 %cLength)
  br label %det.cont43

det.cont43:                                       ; preds = %if.else36.split, %if.else36
  %add44 = add i32 %div38, %rStart
  tail call void @_ZN10blockTransISt4pairIiP6vertexI8_point3dIdELi10EEEjE6transREjjjjjj(%struct.blockTrans.54* %this, i32 %add44, i32 %sub41, i32 %rLength, i32 %cStart.tr113, i32 %cCount.tr114, i32 %cLength)
  %75 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %76 = load atomic i32, i32* %75 acquire, align 8
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %det.cont43
  %79 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %11, i16* nonnull %12) #2
  store volatile i8* %71, i8** %14, align 8
  %80 = call i8* @llvm.stacksave() #2
  store volatile i8* %80, i8** %15, align 8
  %81 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %16) #24
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %det.cont43, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %83 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %84 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %83, i64 0, i32 12, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, 1
  store i64 %86, i64* %84, align 8
  br label %if.end46

if.end46:                                         ; preds = %for.cond4.for.cond.cleanup7_crit_edge.us, %__cilk_sync_nothrow.exit, %for.body.lr.ph, %if.then
  %87 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %88 = load atomic i32, i32* %87 acquire, align 8
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %__cilk_sync_nothrow.exit134, label %cilk.sync.savestate.i132

cilk.sync.savestate.i132:                         ; preds = %if.end46
  %91 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %92 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %93 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %92, i16* nonnull %93) #2
  %94 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %95 = call i8* @llvm.frameaddress(i32 0) #2
  %96 = getelementptr inbounds [5 x i8*], [5 x i8*]* %94, i64 0, i64 0
  store volatile i8* %95, i8** %96, align 8
  %97 = call i8* @llvm.stacksave() #2
  %98 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %97, i8** %98, align 8
  %99 = bitcast [5 x i8*]* %94 to i8*
  %100 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %99) #24
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %cilk.sync.runtimecall.i133, label %__cilk_sync_nothrow.exit134

cilk.sync.runtimecall.i133:                       ; preds = %cilk.sync.savestate.i132
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit134

__cilk_sync_nothrow.exit134:                      ; preds = %if.end46, %cilk.sync.savestate.i132, %cilk.sync.runtimecall.i133
  %102 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %103 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %102, i64 0, i32 12, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = add i64 %104, 1
  store i64 %105, i64* %103, align 8
  %106 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %107 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %106, i64 0, i32 9
  %110 = bitcast %struct.__cilkrts_stack_frame** %109 to i64*
  store atomic i64 %108, i64* %110 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %111 = load atomic i32, i32* %87 acquire, align 8
  %112 = icmp eq i32 %111, 16777216
  br i1 %112, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit134
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit134, %body.i
  ret void
}

; Function Attrs: nounwind stealable uwtable
define linkonce_odr void @_Z9quickSortISt4pairIiP6vertexI8_point3dIdELi10EEEN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.51"* %A, i64 %n) local_unnamed_addr #15 comdat {
entry:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %entry
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %entry, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %entry ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %entry ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %cmp21 = icmp slt i64 %n, 256
  br i1 %cmp21, label %if.then, label %if.else.preheader

if.else.preheader:                                ; preds = %__cilkrts_enter_frame_1.exit
  %9 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %12 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 0
  %13 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %14 = bitcast [5 x i8*]* %11 to i8*
  br label %if.else

if.then:                                          ; preds = %det.cont, %__cilkrts_enter_frame_1.exit
  %A.tr.lcssa = phi %"struct.std::pair.51"* [ %A, %__cilkrts_enter_frame_1.exit ], [ %42, %det.cont ]
  %n.tr.lcssa = phi i64 [ %n, %__cilkrts_enter_frame_1.exit ], [ %sub.ptr.div7, %det.cont ]
  %15 = bitcast %"struct.std::pair.51"* %A.tr.lcssa to %"struct.std::pair.6"*
  tail call void @_Z15quickSortSerialISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.6"* %15, i64 %n.tr.lcssa) #2
  %16 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %17 = load atomic i32, i32* %16 acquire, align 8
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %if.then
  %20 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %21 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  %23 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %24 = call i8* @llvm.frameaddress(i32 0) #2
  %25 = getelementptr inbounds [5 x i8*], [5 x i8*]* %23, i64 0, i64 0
  store volatile i8* %24, i8** %25, align 8
  %26 = call i8* @llvm.stacksave() #2
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %26, i8** %27, align 8
  %28 = bitcast [5 x i8*]* %23 to i8*
  %29 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #24
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %if.then, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %31 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %32 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %31, i64 0, i32 12, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %32, align 8
  %35 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %36 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %35, i64 0, i32 9
  %39 = bitcast %struct.__cilkrts_stack_frame** %38 to i64*
  store atomic i64 %37, i64* %39 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %40 = load atomic i32, i32* %16 acquire, align 8
  %41 = icmp eq i32 %40, 16777216
  br i1 %41, label %__cilk_parent_epilogue.exit, label %body.i

if.else:                                          ; preds = %if.else.preheader, %det.cont
  %n.tr23 = phi i64 [ %sub.ptr.div7, %det.cont ], [ %n, %if.else.preheader ]
  %A.tr22 = phi %"struct.std::pair.51"* [ %42, %det.cont ], [ %A, %if.else.preheader ]
  %call = tail call { %"struct.std::pair.51"*, %"struct.std::pair.51"* } bitcast ({ %"struct.std::pair.23"*, %"struct.std::pair.23"* } (%"struct.std::pair.23"*, i64)* @_Z5splitISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElES0_IPT_SF_ESF_T1_T0_ to { %"struct.std::pair.51"*, %"struct.std::pair.51"* } (%"struct.std::pair.51"*, i64)*)(%"struct.std::pair.51"* %A.tr22, i64 %n.tr23) #2
  %42 = extractvalue { %"struct.std::pair.51"*, %"struct.std::pair.51"* } %call, 1
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %9, i16* nonnull %10) #2
  %43 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %43, i8** %12, align 8
  %44 = call i8* @llvm.stacksave()
  store volatile i8* %44, i8** %13, align 8
  %45 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %14) #23
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %if.else.split, label %det.cont

if.else.split:                                    ; preds = %if.else
  call fastcc void @_Z9quickSortISt4pairIiP6vertexI8_point3dIdELi10EEEN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0__det.achd.cilk({ %"struct.std::pair.51"*, %"struct.std::pair.51"* } %call, %"struct.std::pair.51"* %A.tr22)
  br label %det.cont

det.cont:                                         ; preds = %if.else.split, %if.else
  %add.ptr = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %A.tr22, i64 %n.tr23
  %sub.ptr.lhs.cast4 = ptrtoint %"struct.std::pair.51"* %add.ptr to i64
  %sub.ptr.rhs.cast5 = ptrtoint %"struct.std::pair.51"* %42 to i64
  %sub.ptr.sub6 = sub i64 %sub.ptr.lhs.cast4, %sub.ptr.rhs.cast5
  %sub.ptr.div7 = ashr exact i64 %sub.ptr.sub6, 4
  %cmp = icmp slt i64 %sub.ptr.sub6, 4096
  br i1 %cmp, label %if.then, label %if.else

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void
}

; Function Attrs: nounwind stealable uwtable
define linkonce_odr void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT_(%class.gTreeNode.46* %this, i32 %s, %struct.vertex.44** %f.coerce) local_unnamed_addr #15 comdat align 2 {
entry:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %entry
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %entry, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %entry ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %entry ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %vertices.i = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 5
  %9 = load %struct.vertex.44**, %struct.vertex.44*** %vertices.i, align 8, !tbaa !302
  %cmp.i = icmp eq %struct.vertex.44** %9, null
  br i1 %cmp.i, label %if.else, label %if.then

if.then:                                          ; preds = %__cilkrts_enter_frame_1.exit
  %count = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 3
  %10 = load i32, i32* %count, align 4, !tbaa !285
  %cmp35 = icmp sgt i32 %10, 0
  br i1 %cmp35, label %for.body.lr.ph, label %if.end

for.body.lr.ph:                                   ; preds = %if.then
  %11 = sext i32 %s to i64
  %12 = sext i32 %10 to i64
  %13 = bitcast %struct.vertex.44** %9 to i64*
  %14 = load i64, i64* %13, align 8, !tbaa !53
  %arrayidx.i39 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %f.coerce, i64 %11
  %15 = bitcast %struct.vertex.44** %arrayidx.i39 to i64*
  store i64 %14, i64* %15, align 8, !tbaa !53
  %cmp40 = icmp eq i32 %10, 1
  br i1 %cmp40, label %if.end, label %for.body.for.body_crit_edge.preheader

for.body.for.body_crit_edge.preheader:            ; preds = %for.body.lr.ph
  br label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body.for.body_crit_edge.preheader, %for.body.for.body_crit_edge
  %indvars.iv.next41 = phi i64 [ %indvars.iv.next, %for.body.for.body_crit_edge ], [ 1, %for.body.for.body_crit_edge.preheader ]
  %.pre = load %struct.vertex.44**, %struct.vertex.44*** %vertices.i, align 8, !tbaa !302
  %arrayidx = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %.pre, i64 %indvars.iv.next41
  %16 = bitcast %struct.vertex.44** %arrayidx to i64*
  %17 = load i64, i64* %16, align 8, !tbaa !53
  %18 = add nsw i64 %indvars.iv.next41, %11
  %arrayidx.i = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %f.coerce, i64 %18
  %19 = bitcast %struct.vertex.44** %arrayidx.i to i64*
  store i64 %17, i64* %19, align 8, !tbaa !53
  %indvars.iv.next = add nuw nsw i64 %indvars.iv.next41, 1
  %cmp = icmp slt i64 %indvars.iv.next, %12
  br i1 %cmp, label %for.body.for.body_crit_edge, label %if.end

if.else:                                          ; preds = %__cilkrts_enter_frame_1.exit
  %arrayidx9 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 4, i64 0
  %20 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx9, align 8, !tbaa !53
  %21 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  %23 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %24 = call i8* @llvm.frameaddress(i32 0)
  %25 = getelementptr inbounds [5 x i8*], [5 x i8*]* %23, i64 0, i64 0
  store volatile i8* %24, i8** %25, align 8
  %26 = call i8* @llvm.stacksave()
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %26, i8** %27, align 8
  %28 = bitcast [5 x i8*]* %23 to i8*
  %29 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #23
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %if.else.split, label %det.cont

if.else.split:                                    ; preds = %if.else
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.1.cilk(%class.gTreeNode.46* align 1 %20, i32 %s, %struct.vertex.44** align 1 %f.coerce)
  br label %det.cont

det.cont:                                         ; preds = %if.else.split, %if.else
  %31 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx9, align 8, !tbaa !53
  %count14 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %31, i64 0, i32 3
  %32 = load i32, i32* %count14, align 4, !tbaa !285
  %add15 = add nsw i32 %32, %s
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %34 = load atomic i32, i32* %33 acquire, align 8
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %det.cont
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %38 = call i8* @llvm.stacksave() #2
  store volatile i8* %38, i8** %27, align 8
  %39 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #24
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %det.cont, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 12, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %42, align 8
  %arrayidx9.1 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 4, i64 1
  %45 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx9.1, align 8, !tbaa !53
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %46 = call i8* @llvm.stacksave()
  store volatile i8* %46, i8** %27, align 8
  %47 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #23
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %for.inc16.split, label %det.cont.1

for.inc16.split:                                  ; preds = %__cilk_sync_nothrow.exit
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.1.cilk(%class.gTreeNode.46* %45, i32 %add15, %struct.vertex.44** %f.coerce)
  br label %det.cont.1

if.end:                                           ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph, %__cilk_sync_nothrow.exit59, %if.then
  %49 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %50 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %49, i64 0, i32 9
  %53 = bitcast %struct.__cilkrts_stack_frame** %52 to i64*
  store atomic i64 %51, i64* %53 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %54 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %55 = load atomic i32, i32* %54 acquire, align 8
  %56 = icmp eq i32 %55, 16777216
  br i1 %56, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.end
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.end, %body.i
  ret void

det.cont.1:                                       ; preds = %for.inc16.split, %__cilk_sync_nothrow.exit
  %57 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx9.1, align 8, !tbaa !53
  %count14.1 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %57, i64 0, i32 3
  %58 = load i32, i32* %count14.1, align 4, !tbaa !285
  %add15.1 = add nsw i32 %58, %add15
  %59 = load atomic i32, i32* %33 acquire, align 8
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %__cilk_sync_nothrow.exit44, label %cilk.sync.savestate.i42

cilk.sync.savestate.i42:                          ; preds = %det.cont.1
  %62 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %63 = call i8* @llvm.stacksave() #2
  store volatile i8* %63, i8** %27, align 8
  %64 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #24
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %cilk.sync.runtimecall.i43, label %__cilk_sync_nothrow.exit44

cilk.sync.runtimecall.i43:                        ; preds = %cilk.sync.savestate.i42
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit44

__cilk_sync_nothrow.exit44:                       ; preds = %det.cont.1, %cilk.sync.savestate.i42, %cilk.sync.runtimecall.i43
  %66 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %67 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %66, i64 0, i32 12, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  store i64 %69, i64* %67, align 8
  %arrayidx9.2 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 4, i64 2
  %70 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx9.2, align 8, !tbaa !53
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %71 = call i8* @llvm.stacksave()
  store volatile i8* %71, i8** %27, align 8
  %72 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #23
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %for.inc16.1.split, label %det.cont.2

for.inc16.1.split:                                ; preds = %__cilk_sync_nothrow.exit44
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.1.cilk(%class.gTreeNode.46* align 1 %70, i32 %add15.1, %struct.vertex.44** align 1 %f.coerce)
  br label %det.cont.2

det.cont.2:                                       ; preds = %for.inc16.1.split, %__cilk_sync_nothrow.exit44
  %74 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx9.2, align 8, !tbaa !53
  %count14.2 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %74, i64 0, i32 3
  %75 = load i32, i32* %count14.2, align 4, !tbaa !285
  %add15.2 = add nsw i32 %75, %add15.1
  %76 = load atomic i32, i32* %33 acquire, align 8
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %__cilk_sync_nothrow.exit47, label %cilk.sync.savestate.i45

cilk.sync.savestate.i45:                          ; preds = %det.cont.2
  %79 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %80 = call i8* @llvm.stacksave() #2
  store volatile i8* %80, i8** %27, align 8
  %81 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #24
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %cilk.sync.runtimecall.i46, label %__cilk_sync_nothrow.exit47

cilk.sync.runtimecall.i46:                        ; preds = %cilk.sync.savestate.i45
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit47

__cilk_sync_nothrow.exit47:                       ; preds = %det.cont.2, %cilk.sync.savestate.i45, %cilk.sync.runtimecall.i46
  %83 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %84 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %83, i64 0, i32 12, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, 1
  store i64 %86, i64* %84, align 8
  %arrayidx9.3 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 4, i64 3
  %87 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx9.3, align 8, !tbaa !53
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %88 = call i8* @llvm.stacksave()
  store volatile i8* %88, i8** %27, align 8
  %89 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #23
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %for.inc16.2.split, label %det.cont.3

for.inc16.2.split:                                ; preds = %__cilk_sync_nothrow.exit47
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.1.cilk(%class.gTreeNode.46* align 1 %87, i32 %add15.2, %struct.vertex.44** align 1 %f.coerce)
  br label %det.cont.3

det.cont.3:                                       ; preds = %for.inc16.2.split, %__cilk_sync_nothrow.exit47
  %91 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx9.3, align 8, !tbaa !53
  %count14.3 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %91, i64 0, i32 3
  %92 = load i32, i32* %count14.3, align 4, !tbaa !285
  %add15.3 = add nsw i32 %92, %add15.2
  %93 = load atomic i32, i32* %33 acquire, align 8
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %__cilk_sync_nothrow.exit50, label %cilk.sync.savestate.i48

cilk.sync.savestate.i48:                          ; preds = %det.cont.3
  %96 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %97 = call i8* @llvm.stacksave() #2
  store volatile i8* %97, i8** %27, align 8
  %98 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #24
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %cilk.sync.runtimecall.i49, label %__cilk_sync_nothrow.exit50

cilk.sync.runtimecall.i49:                        ; preds = %cilk.sync.savestate.i48
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit50

__cilk_sync_nothrow.exit50:                       ; preds = %det.cont.3, %cilk.sync.savestate.i48, %cilk.sync.runtimecall.i49
  %100 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %101 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %100, i64 0, i32 12, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = add i64 %102, 1
  store i64 %103, i64* %101, align 8
  %arrayidx9.4 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 4, i64 4
  %104 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx9.4, align 8, !tbaa !53
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %105 = call i8* @llvm.stacksave()
  store volatile i8* %105, i8** %27, align 8
  %106 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #23
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %for.inc16.3.split, label %det.cont.4

for.inc16.3.split:                                ; preds = %__cilk_sync_nothrow.exit50
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.1.cilk(%class.gTreeNode.46* align 1 %104, i32 %add15.3, %struct.vertex.44** align 1 %f.coerce)
  br label %det.cont.4

det.cont.4:                                       ; preds = %for.inc16.3.split, %__cilk_sync_nothrow.exit50
  %108 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx9.4, align 8, !tbaa !53
  %count14.4 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %108, i64 0, i32 3
  %109 = load i32, i32* %count14.4, align 4, !tbaa !285
  %add15.4 = add nsw i32 %109, %add15.3
  %110 = load atomic i32, i32* %33 acquire, align 8
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %__cilk_sync_nothrow.exit53, label %cilk.sync.savestate.i51

cilk.sync.savestate.i51:                          ; preds = %det.cont.4
  %113 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %114 = call i8* @llvm.stacksave() #2
  store volatile i8* %114, i8** %27, align 8
  %115 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #24
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %cilk.sync.runtimecall.i52, label %__cilk_sync_nothrow.exit53

cilk.sync.runtimecall.i52:                        ; preds = %cilk.sync.savestate.i51
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit53

__cilk_sync_nothrow.exit53:                       ; preds = %det.cont.4, %cilk.sync.savestate.i51, %cilk.sync.runtimecall.i52
  %117 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %118 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %117, i64 0, i32 12, i32 0
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 1
  store i64 %120, i64* %118, align 8
  %arrayidx9.5 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 4, i64 5
  %121 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx9.5, align 8, !tbaa !53
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %122 = call i8* @llvm.stacksave()
  store volatile i8* %122, i8** %27, align 8
  %123 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #23
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %for.inc16.4.split, label %det.cont.5

for.inc16.4.split:                                ; preds = %__cilk_sync_nothrow.exit53
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.1.cilk(%class.gTreeNode.46* align 1 %121, i32 %add15.4, %struct.vertex.44** align 1 %f.coerce)
  br label %det.cont.5

det.cont.5:                                       ; preds = %for.inc16.4.split, %__cilk_sync_nothrow.exit53
  %125 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx9.5, align 8, !tbaa !53
  %count14.5 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %125, i64 0, i32 3
  %126 = load i32, i32* %count14.5, align 4, !tbaa !285
  %add15.5 = add nsw i32 %126, %add15.4
  %127 = load atomic i32, i32* %33 acquire, align 8
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %__cilk_sync_nothrow.exit56, label %cilk.sync.savestate.i54

cilk.sync.savestate.i54:                          ; preds = %det.cont.5
  %130 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %131 = call i8* @llvm.stacksave() #2
  store volatile i8* %131, i8** %27, align 8
  %132 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #24
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %cilk.sync.runtimecall.i55, label %__cilk_sync_nothrow.exit56

cilk.sync.runtimecall.i55:                        ; preds = %cilk.sync.savestate.i54
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit56

__cilk_sync_nothrow.exit56:                       ; preds = %det.cont.5, %cilk.sync.savestate.i54, %cilk.sync.runtimecall.i55
  %134 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %135 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %134, i64 0, i32 12, i32 0
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %136, 1
  store i64 %137, i64* %135, align 8
  %arrayidx9.6 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 4, i64 6
  %138 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx9.6, align 8, !tbaa !53
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %139 = call i8* @llvm.stacksave()
  store volatile i8* %139, i8** %27, align 8
  %140 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #23
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %for.inc16.5.split, label %det.cont.6

for.inc16.5.split:                                ; preds = %__cilk_sync_nothrow.exit56
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.6.cilk(%class.gTreeNode.46* %138, i32 %add15.5, %struct.vertex.44** %f.coerce)
  br label %det.cont.6

det.cont.6:                                       ; preds = %for.inc16.5.split, %__cilk_sync_nothrow.exit56
  %142 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx9.6, align 8, !tbaa !53
  %count14.6 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %142, i64 0, i32 3
  %143 = load i32, i32* %count14.6, align 4, !tbaa !285
  %add15.6 = add nsw i32 %143, %add15.5
  %144 = load atomic i32, i32* %33 acquire, align 8
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %__cilk_sync_nothrow.exit59, label %cilk.sync.savestate.i57

cilk.sync.savestate.i57:                          ; preds = %det.cont.6
  %147 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %21, i16* nonnull %22) #2
  store volatile i8* %24, i8** %25, align 8
  %148 = call i8* @llvm.stacksave() #2
  store volatile i8* %148, i8** %27, align 8
  %149 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %28) #24
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %cilk.sync.runtimecall.i58, label %__cilk_sync_nothrow.exit59

cilk.sync.runtimecall.i58:                        ; preds = %cilk.sync.savestate.i57
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit59

__cilk_sync_nothrow.exit59:                       ; preds = %det.cont.6, %cilk.sync.savestate.i57, %cilk.sync.runtimecall.i58
  %151 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %152 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %151, i64 0, i32 12, i32 0
  %153 = load i64, i64* %152, align 8
  %154 = add i64 %153, 1
  store i64 %154, i64* %152, align 8
  %arrayidx9.7 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 4, i64 7
  %155 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx9.7, align 8, !tbaa !53
  tail call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT_(%class.gTreeNode.46* %155, i32 %add15.6, %struct.vertex.44** %f.coerce)
  br label %if.end
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNN10nearestNghEP9gTreeNodeIS2_7_vect3dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %this, %class.gTreeNode.46* %T) local_unnamed_addr #7 comdat align 2 {
entry:
  %vertices.i = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %T, i64 0, i32 5
  %0 = load %struct.vertex.44**, %struct.vertex.44*** %vertices.i, align 8, !tbaa !302
  %cmp.i = icmp eq %struct.vertex.44** %0, null
  br i1 %cmp.i, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %count = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %T, i64 0, i32 3
  %1 = load i32, i32* %count, align 4, !tbaa !285
  %cmp46 = icmp sgt i32 %1, 0
  br i1 %cmp46, label %for.body.lr.ph, label %if.end22

for.body.lr.ph:                                   ; preds = %if.then
  %ps = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %this, i64 0, i32 0
  %arrayidx.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %this, i64 0, i32 2, i64 0
  %arrayidx3.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %this, i64 0, i32 1, i64 0
  %k.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %this, i64 0, i32 4
  %2 = sext i32 %1 to i64
  br label %for.body

for.body:                                         ; preds = %if.end.for.body_crit_edge, %for.body.lr.ph
  %3 = phi %struct.vertex.44** [ %0, %for.body.lr.ph ], [ %.pre, %if.end.for.body_crit_edge ]
  %indvars.iv49 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next50, %if.end.for.body_crit_edge ]
  %arrayidx = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %3, i64 %indvars.iv49
  %4 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx, align 8, !tbaa !53
  %5 = load %struct.vertex.44*, %struct.vertex.44** %ps, align 8, !tbaa !291
  %cmp2 = icmp eq %struct.vertex.44* %4, %5
  br i1 %cmp2, label %if.end, label %if.then3

if.then3:                                         ; preds = %for.body
  %opt.sroa.0.0..sroa_idx.i = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %4, i64 0, i32 1, i32 0
  %opt.sroa.0.0.copyload.i = load double, double* %opt.sroa.0.0..sroa_idx.i, align 8
  %opt.sroa.4.0..sroa_idx55.i = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %4, i64 0, i32 1, i32 1
  %6 = bitcast double* %opt.sroa.4.0..sroa_idx55.i to <2 x double>*
  %7 = load <2 x double>, <2 x double>* %6, align 8
  %x.i.i = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %5, i64 0, i32 1, i32 0
  %8 = load double, double* %x.i.i, align 8, !tbaa !6, !noalias !348
  %sub.i.i = fsub fast double %8, %opt.sroa.0.0.copyload.i
  %y.i.i = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %5, i64 0, i32 1, i32 1
  %9 = bitcast double* %y.i.i to <2 x double>*
  %10 = load <2 x double>, <2 x double>* %9, align 8, !tbaa !18, !noalias !348
  %11 = fsub fast <2 x double> %10, %7
  %mul.i.i = fmul fast double %sub.i.i, %sub.i.i
  %12 = fmul fast <2 x double> %11, %11
  %13 = extractelement <2 x double> %12, i32 0
  %add.i.i = fadd fast double %13, %mul.i.i
  %14 = extractelement <2 x double> %12, i32 1
  %add7.i.i = fadd fast double %add.i.i, %14
  %15 = tail call fast double @llvm.sqrt.f64(double %add7.i.i) #2
  %16 = load double, double* %arrayidx.i, align 8, !tbaa !18
  %cmp.i39 = fcmp fast olt double %15, %16
  br i1 %cmp.i39, label %if.then.i, label %if.end

if.then.i:                                        ; preds = %if.then3
  store %struct.vertex.44* %4, %struct.vertex.44** %arrayidx3.i, align 8, !tbaa !53
  store double %15, double* %arrayidx.i, align 8, !tbaa !18
  %17 = load i32, i32* %k.i, align 4, !tbaa !288
  %cmp659.i = icmp sgt i32 %17, 1
  br i1 %cmp659.i, label %land.rhs.lr.ph.i, label %if.end

land.rhs.lr.ph.i:                                 ; preds = %if.then.i
  %18 = sext i32 %17 to i64
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %for.body.i, %land.rhs.lr.ph.i
  %19 = phi double [ %15, %land.rhs.lr.ph.i ], [ %29, %for.body.i ]
  %indvars.iv.i = phi i64 [ 1, %land.rhs.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %20 = add nsw i64 %indvars.iv.i, -1
  %arrayidx11.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %this, i64 0, i32 2, i64 %indvars.iv.i
  %21 = load double, double* %arrayidx11.i, align 8, !tbaa !18
  %cmp12.i = fcmp fast olt double %19, %21
  br i1 %cmp12.i, label %for.body.i, label %if.end

for.body.i:                                       ; preds = %land.rhs.i
  %arrayidx8.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %this, i64 0, i32 2, i64 %20
  %22 = bitcast double* %arrayidx8.i to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !18
  %24 = bitcast double* %arrayidx11.i to i64*
  store double %21, double* %arrayidx8.i, align 8, !tbaa !18
  store i64 %23, i64* %24, align 8, !tbaa !18
  %arrayidx23.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %this, i64 0, i32 1, i64 %20
  %arrayidx26.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %this, i64 0, i32 1, i64 %indvars.iv.i
  %25 = bitcast %struct.vertex.44** %arrayidx23.i to i64*
  %26 = load i64, i64* %25, align 8, !tbaa !53
  %27 = bitcast %struct.vertex.44** %arrayidx26.i to i64*
  %28 = load i64, i64* %27, align 8, !tbaa !53
  store i64 %28, i64* %25, align 8, !tbaa !53
  store i64 %26, i64* %27, align 8, !tbaa !53
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %cmp6.i = icmp slt i64 %indvars.iv.next.i, %18
  %29 = bitcast i64 %23 to double
  br i1 %cmp6.i, label %land.rhs.i, label %if.end

if.end:                                           ; preds = %for.body.i, %land.rhs.i, %if.then.i, %if.then3, %for.body
  %indvars.iv.next50 = add nuw nsw i64 %indvars.iv49, 1
  %cmp = icmp slt i64 %indvars.iv.next50, %2
  br i1 %cmp, label %if.end.for.body_crit_edge, label %if.end22

if.end.for.body_crit_edge:                        ; preds = %if.end
  %.pre = load %struct.vertex.44**, %struct.vertex.44*** %vertices.i, align 8, !tbaa !302
  br label %for.body

if.else:                                          ; preds = %entry
  %ps5 = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %this, i64 0, i32 0
  %30 = load %struct.vertex.44*, %struct.vertex.44** %ps5, align 8, !tbaa !291
  %agg.tmp.sroa.0.0..sroa_idx.i = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %T, i64 0, i32 0, i32 0
  %agg.tmp.sroa.0.0.copyload.i = load double, double* %agg.tmp.sroa.0.0..sroa_idx.i, align 8
  %agg.tmp.sroa.2.0..sroa_idx8.i = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %T, i64 0, i32 0, i32 1
  %agg.tmp.sroa.2.0.copyload.i = load double, double* %agg.tmp.sroa.2.0..sroa_idx8.i, align 8
  %agg.tmp.sroa.3.0..sroa_idx9.i = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %T, i64 0, i32 0, i32 2
  %agg.tmp.sroa.3.0.copyload.i = load double, double* %agg.tmp.sroa.3.0..sroa_idx9.i, align 8
  %x.i.i40 = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %30, i64 0, i32 1, i32 0
  %31 = load double, double* %x.i.i40, align 8, !tbaa !6
  %cmp.i.i = fcmp fast ogt double %31, %agg.tmp.sroa.0.0.copyload.i
  %index.0.i.i = zext i1 %cmp.i.i to i32
  %y.i.i41 = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %30, i64 0, i32 1, i32 1
  %32 = load double, double* %y.i.i41, align 8, !tbaa !11
  %cmp4.i.i = fcmp fast ogt double %32, %agg.tmp.sroa.2.0.copyload.i
  %add6.i.i = or i32 %index.0.i.i, 2
  %index.1.i.i = select i1 %cmp4.i.i, i32 %add6.i.i, i32 %index.0.i.i
  %z.i.i42 = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %30, i64 0, i32 1, i32 2
  %33 = load double, double* %z.i.i42, align 8, !tbaa !12
  %cmp9.i.i = fcmp fast ogt double %33, %agg.tmp.sroa.3.0.copyload.i
  %add11.i.i = or i32 %index.1.i.i, 4
  %index.2.i.i = select i1 %cmp9.i.i, i32 %add11.i.i, i32 %index.1.i.i
  %34 = zext i32 %index.2.i.i to i64
  %arrayidx8 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %T, i64 0, i32 4, i64 %34
  %35 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx8, align 8, !tbaa !53
  tail call void @_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNN10nearestNghEP9gTreeNodeIS2_7_vect3dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %this, %class.gTreeNode.46* %35)
  %quads = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %this, i64 0, i32 3
  %36 = load i32, i32* %quads, align 8, !tbaa !290
  %cmp1044 = icmp sgt i32 %36, 0
  br i1 %cmp1044, label %for.body12.preheader, label %if.end22

for.body12.preheader:                             ; preds = %if.else
  br label %for.body12

for.body12:                                       ; preds = %for.body12.preheader, %for.inc19
  %37 = phi i32 [ %39, %for.inc19 ], [ %36, %for.body12.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc19 ], [ 0, %for.body12.preheader ]
  %cmp13 = icmp eq i64 %indvars.iv, %34
  br i1 %cmp13, label %for.inc19, label %if.then14

if.then14:                                        ; preds = %for.body12
  %arrayidx17 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %T, i64 0, i32 4, i64 %indvars.iv
  %38 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx17, align 8, !tbaa !53
  tail call void @_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNN14nearestNghTrimEP9gTreeNodeIS2_7_vect3dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* nonnull %this, %class.gTreeNode.46* %38)
  %.pre51 = load i32, i32* %quads, align 8, !tbaa !290
  br label %for.inc19

for.inc19:                                        ; preds = %for.body12, %if.then14
  %39 = phi i32 [ %37, %for.body12 ], [ %.pre51, %if.then14 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %40 = sext i32 %39 to i64
  %cmp10 = icmp slt i64 %indvars.iv.next, %40
  br i1 %cmp10, label %for.body12, label %if.end22

if.end22:                                         ; preds = %if.end, %for.inc19, %if.then, %if.else
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNN14nearestNghTrimEP9gTreeNodeIS2_7_vect3dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %this, %class.gTreeNode.46* %T) local_unnamed_addr #7 comdat align 2 {
entry:
  %ps = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %this, i64 0, i32 0
  %0 = load %struct.vertex.44*, %struct.vertex.44** %ps, align 8, !tbaa !291
  %agg.tmp.sroa.0.0..sroa_idx = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %0, i64 0, i32 1, i32 0
  %agg.tmp.sroa.0.0.copyload = load double, double* %agg.tmp.sroa.0.0..sroa_idx, align 8
  %agg.tmp.sroa.2.0..sroa_idx34 = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %0, i64 0, i32 1, i32 1
  %1 = bitcast double* %agg.tmp.sroa.2.0..sroa_idx34 to <2 x double>*
  %2 = load <2 x double>, <2 x double>* %1, align 8
  %size = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %T, i64 0, i32 1
  %3 = load double, double* %size, align 8, !tbaa !296
  %div = fmul fast double %3, 5.000000e-01
  %arrayidx = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %this, i64 0, i32 2, i64 0
  %4 = load double, double* %arrayidx, align 8, !tbaa !18
  %add = fadd fast double %div, %4
  %x.i = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %T, i64 0, i32 0, i32 0
  %5 = load double, double* %x.i, align 8, !tbaa !6
  %sub.i = fsub fast double %5, %add
  %cmp.i = fcmp fast ogt double %sub.i, %agg.tmp.sroa.0.0.copyload
  %add.i = fadd fast double %5, %add
  %cmp5.i = fcmp fast olt double %add.i, %agg.tmp.sroa.0.0.copyload
  %or.cond.i = or i1 %cmp.i, %cmp5.i
  br i1 %or.cond.i, label %if.end14, label %lor.lhs.false6.i

lor.lhs.false6.i:                                 ; preds = %entry
  %y.i = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %T, i64 0, i32 0, i32 1
  %6 = load double, double* %y.i, align 8, !tbaa !11
  %sub7.i = fsub fast double %6, %add
  %7 = extractelement <2 x double> %2, i32 0
  %cmp9.i = fcmp fast ogt double %sub7.i, %7
  %add12.i = fadd fast double %6, %add
  %cmp14.i = fcmp fast olt double %add12.i, %7
  %or.cond28.i = or i1 %cmp9.i, %cmp14.i
  br i1 %or.cond28.i, label %if.end14, label %lor.lhs.false15.i

lor.lhs.false15.i:                                ; preds = %lor.lhs.false6.i
  %z.i = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %T, i64 0, i32 0, i32 2
  %8 = load double, double* %z.i, align 8, !tbaa !12
  %sub16.i = fsub fast double %8, %add
  %9 = extractelement <2 x double> %2, i32 1
  %cmp18.i = fcmp fast ogt double %sub16.i, %9
  %add20.i = fadd fast double %8, %add
  %cmp22.i = fcmp fast olt double %add20.i, %9
  %or.cond = or i1 %cmp18.i, %cmp22.i
  br i1 %or.cond, label %if.end14, label %if.then

if.then:                                          ; preds = %lor.lhs.false15.i
  %vertices.i = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %T, i64 0, i32 5
  %10 = load %struct.vertex.44**, %struct.vertex.44*** %vertices.i, align 8, !tbaa !302
  %cmp.i27 = icmp eq %struct.vertex.44** %10, null
  br i1 %cmp.i27, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.then
  %count = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %T, i64 0, i32 3
  %11 = load i32, i32* %count, align 4, !tbaa !285
  %cmp39 = icmp sgt i32 %11, 0
  br i1 %cmp39, label %for.body.lr.ph, label %if.end14

for.body.lr.ph:                                   ; preds = %if.then3
  %arrayidx3.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %this, i64 0, i32 1, i64 0
  %k.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %this, i64 0, i32 4
  %12 = sext i32 %11 to i64
  br label %for.body

for.body:                                         ; preds = %_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNN6updateEPS3_.exit.for.body_crit_edge, %for.body.lr.ph
  %13 = phi double [ %4, %for.body.lr.ph ], [ %.pre48, %_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNN6updateEPS3_.exit.for.body_crit_edge ]
  %14 = phi double [ %agg.tmp.sroa.0.0.copyload, %for.body.lr.ph ], [ %.pre45, %_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNN6updateEPS3_.exit.for.body_crit_edge ]
  %15 = phi %struct.vertex.44** [ %10, %for.body.lr.ph ], [ %.pre, %_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNN6updateEPS3_.exit.for.body_crit_edge ]
  %indvars.iv42 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next43, %_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNN6updateEPS3_.exit.for.body_crit_edge ]
  %16 = phi <2 x double> [ %2, %for.body.lr.ph ], [ %39, %_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNN6updateEPS3_.exit.for.body_crit_edge ]
  %arrayidx4 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %15, i64 %indvars.iv42
  %17 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx4, align 8, !tbaa !53
  %opt.sroa.0.0..sroa_idx.i = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %17, i64 0, i32 1, i32 0
  %opt.sroa.0.0.copyload.i = load double, double* %opt.sroa.0.0..sroa_idx.i, align 8
  %opt.sroa.4.0..sroa_idx55.i = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %17, i64 0, i32 1, i32 1
  %18 = bitcast double* %opt.sroa.4.0..sroa_idx55.i to <2 x double>*
  %19 = load <2 x double>, <2 x double>* %18, align 8
  %sub.i.i = fsub fast double %14, %opt.sroa.0.0.copyload.i
  %20 = fsub fast <2 x double> %16, %19
  %mul.i.i = fmul fast double %sub.i.i, %sub.i.i
  %21 = fmul fast <2 x double> %20, %20
  %22 = extractelement <2 x double> %21, i32 0
  %add.i.i = fadd fast double %22, %mul.i.i
  %23 = extractelement <2 x double> %21, i32 1
  %add7.i.i = fadd fast double %add.i.i, %23
  %24 = tail call fast double @llvm.sqrt.f64(double %add7.i.i) #2
  %cmp.i28 = fcmp fast olt double %24, %13
  br i1 %cmp.i28, label %if.then.i, label %_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNN6updateEPS3_.exit

if.then.i:                                        ; preds = %for.body
  store %struct.vertex.44* %17, %struct.vertex.44** %arrayidx3.i, align 8, !tbaa !53
  store double %24, double* %arrayidx, align 8, !tbaa !18
  %25 = load i32, i32* %k.i, align 4, !tbaa !288
  %cmp659.i = icmp sgt i32 %25, 1
  br i1 %cmp659.i, label %land.rhs.lr.ph.i, label %_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNN6updateEPS3_.exit

land.rhs.lr.ph.i:                                 ; preds = %if.then.i
  %26 = sext i32 %25 to i64
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %for.body.i, %land.rhs.lr.ph.i
  %27 = phi double [ %24, %land.rhs.lr.ph.i ], [ %37, %for.body.i ]
  %indvars.iv.i = phi i64 [ 1, %land.rhs.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %28 = add nsw i64 %indvars.iv.i, -1
  %arrayidx11.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %this, i64 0, i32 2, i64 %indvars.iv.i
  %29 = load double, double* %arrayidx11.i, align 8, !tbaa !18
  %cmp12.i = fcmp fast olt double %27, %29
  br i1 %cmp12.i, label %for.body.i, label %_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNN6updateEPS3_.exit

for.body.i:                                       ; preds = %land.rhs.i
  %arrayidx8.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %this, i64 0, i32 2, i64 %28
  %30 = bitcast double* %arrayidx8.i to i64*
  %31 = load i64, i64* %30, align 8, !tbaa !18
  %32 = bitcast double* %arrayidx11.i to i64*
  store double %29, double* %arrayidx8.i, align 8, !tbaa !18
  store i64 %31, i64* %32, align 8, !tbaa !18
  %arrayidx23.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %this, i64 0, i32 1, i64 %28
  %arrayidx26.i = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %this, i64 0, i32 1, i64 %indvars.iv.i
  %33 = bitcast %struct.vertex.44** %arrayidx23.i to i64*
  %34 = load i64, i64* %33, align 8, !tbaa !53
  %35 = bitcast %struct.vertex.44** %arrayidx26.i to i64*
  %36 = load i64, i64* %35, align 8, !tbaa !53
  store i64 %36, i64* %33, align 8, !tbaa !53
  store i64 %34, i64* %35, align 8, !tbaa !53
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %cmp6.i = icmp slt i64 %indvars.iv.next.i, %26
  %37 = bitcast i64 %31 to double
  br i1 %cmp6.i, label %land.rhs.i, label %_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNN6updateEPS3_.exit

_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNN6updateEPS3_.exit: ; preds = %land.rhs.i, %for.body.i, %for.body, %if.then.i
  %indvars.iv.next43 = add nuw nsw i64 %indvars.iv42, 1
  %cmp = icmp slt i64 %indvars.iv.next43, %12
  br i1 %cmp, label %_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNN6updateEPS3_.exit.for.body_crit_edge, label %if.end14

_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNN6updateEPS3_.exit.for.body_crit_edge: ; preds = %_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNN6updateEPS3_.exit
  %.pre = load %struct.vertex.44**, %struct.vertex.44*** %vertices.i, align 8, !tbaa !302
  %.pre44 = load %struct.vertex.44*, %struct.vertex.44** %ps, align 8, !tbaa !291
  %x.i.i.phi.trans.insert = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %.pre44, i64 0, i32 1, i32 0
  %.pre45 = load double, double* %x.i.i.phi.trans.insert, align 8, !tbaa !6, !noalias !351
  %y.i.i.phi.trans.insert = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %.pre44, i64 0, i32 1, i32 1
  %38 = bitcast double* %y.i.i.phi.trans.insert to <2 x double>*
  %39 = load <2 x double>, <2 x double>* %38, align 8, !tbaa !18, !noalias !351
  %.pre48 = load double, double* %arrayidx, align 8, !tbaa !18
  br label %for.body

if.else:                                          ; preds = %if.then
  %quads = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* %this, i64 0, i32 3
  %40 = load i32, i32* %quads, align 8, !tbaa !290
  %cmp637 = icmp sgt i32 %40, 0
  br i1 %cmp637, label %for.body8.preheader, label %if.end14

for.body8.preheader:                              ; preds = %if.else
  br label %for.body8

for.body8:                                        ; preds = %for.body8.preheader, %for.body8
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body8 ], [ 0, %for.body8.preheader ]
  %arrayidx10 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %T, i64 0, i32 4, i64 %indvars.iv
  %41 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx10, align 8, !tbaa !53
  tail call void @_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNN14nearestNghTrimEP9gTreeNodeIS2_7_vect3dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point3d<double>, 10>, 10>::kNN"* nonnull %this, %class.gTreeNode.46* %41)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %42 = load i32, i32* %quads, align 8, !tbaa !290
  %43 = sext i32 %42 to i64
  %cmp6 = icmp slt i64 %indvars.iv.next, %43
  br i1 %cmp6, label %for.body8, label %if.end14

if.end14:                                         ; preds = %_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNN6updateEPS3_.exit, %for.body8, %if.then3, %if.else, %entry, %lor.lhs.false6.i, %lor.lhs.false15.i
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE3delEv(%class.gTreeNode.46* %this) local_unnamed_addr #7 comdat align 2 {
entry:
  %vertices.i = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 5
  %0 = load %struct.vertex.44**, %struct.vertex.44*** %vertices.i, align 8, !tbaa !302
  %cmp.i = icmp eq %struct.vertex.44** %0, null
  br i1 %cmp.i, label %if.else, label %if.end

if.else:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 4, i64 0
  %1 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx, align 8, !tbaa !53
  tail call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE3delEv(%class.gTreeNode.46* %1)
  %arrayidx.1 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 4, i64 1
  %2 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx.1, align 8, !tbaa !53
  tail call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE3delEv(%class.gTreeNode.46* %2)
  %arrayidx.2 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 4, i64 2
  %3 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx.2, align 8, !tbaa !53
  tail call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE3delEv(%class.gTreeNode.46* %3)
  %arrayidx.3 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 4, i64 3
  %4 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx.3, align 8, !tbaa !53
  tail call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE3delEv(%class.gTreeNode.46* %4)
  %arrayidx.4 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 4, i64 4
  %5 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx.4, align 8, !tbaa !53
  tail call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE3delEv(%class.gTreeNode.46* %5)
  %arrayidx.5 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 4, i64 5
  %6 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx.5, align 8, !tbaa !53
  tail call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE3delEv(%class.gTreeNode.46* %6)
  %arrayidx.6 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 4, i64 6
  %7 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx.6, align 8, !tbaa !53
  tail call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE3delEv(%class.gTreeNode.46* %7)
  %arrayidx.7 = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 4, i64 7
  %8 = load %class.gTreeNode.46*, %class.gTreeNode.46** %arrayidx.7, align 8, !tbaa !53
  tail call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE3delEv(%class.gTreeNode.46* %8)
  br label %if.end

if.end:                                           ; preds = %if.else, %entry
  %nodeMemory = getelementptr inbounds %class.gTreeNode.46, %class.gTreeNode.46* %this, i64 0, i32 6
  %9 = load %class.gTreeNode.46*, %class.gTreeNode.46** %nodeMemory, align 8, !tbaa !298
  %cmp3 = icmp eq %class.gTreeNode.46* %9, null
  br i1 %cmp3, label %if.end6, label %if.then4

if.then4:                                         ; preds = %if.end
  %10 = bitcast %class.gTreeNode.46* %9 to i8*
  tail call void @free(i8* %10) #2
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @_GLOBAL__sub_I_neighborsTime.C() #7 section ".text.startup" {
entry:
  %__dnew.i.i.i.i.i2 = alloca i64, align 8
  %__dnew.i.i.i.i.i = alloca i64, align 8
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit) #2
  %0 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #2
  %call.i = tail call i32 @mallopt(i32 -4, i32 0) #2
  %call.i1 = tail call i32 @mallopt(i32 -1, i32 -1) #2
  store double 0.000000e+00, double* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 0), align 8, !tbaa !71
  store double 0.000000e+00, double* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 2), align 8, !tbaa !354
  store i8 0, i8* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 3), align 8, !tbaa !63
  store i64 0, i64* bitcast (%struct.timezone* getelementptr inbounds (%struct.timer, %struct.timer* @_ZL3_tm, i64 0, i32 5) to i64*), align 4
  store %union.anon.1* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN7benchIO11intHeaderIOB5cxx11E, i64 0, i32 2), %union.anon.1** bitcast (%"class.std::__cxx11::basic_string"* @_ZN7benchIO11intHeaderIOB5cxx11E to %union.anon.1**), align 8, !tbaa !47
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%union.anon.1* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN7benchIO11intHeaderIOB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i64 11, i32 1, i1 false) #2
  store i64 11, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN7benchIO11intHeaderIOB5cxx11E, i64 0, i32 1), align 8, !tbaa !52
  store i8 0, i8* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN7benchIO11intHeaderIOB5cxx11E, i64 0, i32 2, i32 1, i64 3), align 1, !tbaa !22
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN7benchIO11intHeaderIOB5cxx11E to i8*), i8* nonnull @__dso_handle) #2
  store %union.anon.1* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN7benchIO13HeaderPoint2dB5cxx11E, i64 0, i32 2), %union.anon.1** bitcast (%"class.std::__cxx11::basic_string"* @_ZN7benchIO13HeaderPoint2dB5cxx11E to %union.anon.1**), align 8, !tbaa !47
  %2 = bitcast i64* %__dnew.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #2
  store i64 20, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !49
  %call5.i.i.i.i.i = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull @_ZN7benchIO13HeaderPoint2dB5cxx11E, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i.i, i64 0) #2
  store i8* %call5.i.i.i.i.i, i8** getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN7benchIO13HeaderPoint2dB5cxx11E, i64 0, i32 0, i32 0), align 8, !tbaa !50
  %3 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !49
  store i64 %3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN7benchIO13HeaderPoint2dB5cxx11E, i64 0, i32 2, i32 0), align 8, !tbaa !22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call5.i.i.i.i.i, i8* nonnull getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i64 20, i32 1, i1 false) #2
  store i64 %3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN7benchIO13HeaderPoint2dB5cxx11E, i64 0, i32 1), align 8, !tbaa !52
  %4 = load i8*, i8** getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN7benchIO13HeaderPoint2dB5cxx11E, i64 0, i32 0, i32 0), align 8, !tbaa !50
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds i8, i8* %4, i64 %3
  store i8 0, i8* %arrayidx.i.i.i.i.i.i, align 1, !tbaa !22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #2
  %5 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN7benchIO13HeaderPoint2dB5cxx11E to i8*), i8* nonnull @__dso_handle) #2
  store %union.anon.1* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN7benchIO13HeaderPoint3dB5cxx11E, i64 0, i32 2), %union.anon.1** bitcast (%"class.std::__cxx11::basic_string"* @_ZN7benchIO13HeaderPoint3dB5cxx11E to %union.anon.1**), align 8, !tbaa !47
  %6 = bitcast i64* %__dnew.i.i.i.i.i2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #2
  store i64 20, i64* %__dnew.i.i.i.i.i2, align 8, !tbaa !49
  %call5.i.i.i.i.i3 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull @_ZN7benchIO13HeaderPoint3dB5cxx11E, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i.i2, i64 0) #2
  store i8* %call5.i.i.i.i.i3, i8** getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN7benchIO13HeaderPoint3dB5cxx11E, i64 0, i32 0, i32 0), align 8, !tbaa !50
  %7 = load i64, i64* %__dnew.i.i.i.i.i2, align 8, !tbaa !49
  store i64 %7, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN7benchIO13HeaderPoint3dB5cxx11E, i64 0, i32 2, i32 0), align 8, !tbaa !22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call5.i.i.i.i.i3, i8* nonnull getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0), i64 20, i32 1, i1 false) #2
  store i64 %7, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN7benchIO13HeaderPoint3dB5cxx11E, i64 0, i32 1), align 8, !tbaa !52
  %8 = load i8*, i8** getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN7benchIO13HeaderPoint3dB5cxx11E, i64 0, i32 0, i32 0), align 8, !tbaa !50
  %arrayidx.i.i.i.i.i.i4 = getelementptr inbounds i8, i8* %8, i64 %7
  store i8 0, i8* %arrayidx.i.i.i.i.i.i4, align 1, !tbaa !22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #2
  %9 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN7benchIO13HeaderPoint3dB5cxx11E to i8*), i8* nonnull @__dso_handle) #2
  store %union.anon.1* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN7benchIO15HeaderTrianglesB5cxx11E, i64 0, i32 2), %union.anon.1** bitcast (%"class.std::__cxx11::basic_string"* @_ZN7benchIO15HeaderTrianglesB5cxx11E to %union.anon.1**), align 8, !tbaa !47
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%union.anon.1* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN7benchIO15HeaderTrianglesB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0), i64 14, i32 1, i1 false) #2
  store i64 14, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN7benchIO15HeaderTrianglesB5cxx11E, i64 0, i32 1), align 8, !tbaa !52
  store i8 0, i8* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN7benchIO15HeaderTrianglesB5cxx11E, i64 0, i32 2, i32 1, i64 6), align 2, !tbaa !22
  %10 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN7benchIO15HeaderTrianglesB5cxx11E to i8*), i8* nonnull @__dso_handle) #2
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @__cilkrts_get_nworkers() local_unnamed_addr #17

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7benchIO13stringToWordsEPcl_pfor.detach.ls(i64 %__begin.0114.start.ls, i64 %end.ls, i64 %.ls, i8* nocapture align 1 %Str.ls) unnamed_addr #15 {
pfor.detach.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount1 = sub i64 %end.ls, %__begin.0114.start.ls
  %9 = icmp ugt i64 %itercount1, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin.0114.ls.ph = phi i64 [ %__begin.0114.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount3 = phi i64 [ %itercount1, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin.0114.ls.dac2 = phi i64 [ %__begin.0114.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount3, 1
  %miditer = add nuw nsw i64 %__begin.0114.ls.dac2, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split4, label %.split.split

.split4:                                          ; preds = %16
  call fastcc void @_ZN7benchIO13stringToWordsEPcl_pfor.detach.ls_.split.cilk(i64 %__begin.0114.ls.dac2, i64 %miditer, i64 %.ls, i8* %Str.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split4, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.loopexit.ls:                    ; preds = %pfor.inc.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %pfor.inc.ls
  %__begin.0114.ls = phi i64 [ %inc.ls, %pfor.inc.ls ], [ %__begin.0114.ls.ph, %pfor.detach.ls.preheader ]
  %arrayidx.ls = getelementptr inbounds i8, i8* %Str.ls, i64 %__begin.0114.ls
  %48 = load i8, i8* %arrayidx.ls, align 1, !tbaa !22
  %conv.i.ls = sext i8 %48 to i32
  switch i32 %conv.i.ls, label %pfor.inc.ls [
    i32 13, label %if.then.ls
    i32 9, label %if.then.ls
    i32 10, label %if.then.ls
    i32 0, label %if.then.ls
    i32 32, label %if.then.ls
  ]

if.then.ls:                                       ; preds = %pfor.detach.ls, %pfor.detach.ls, %pfor.detach.ls, %pfor.detach.ls, %pfor.detach.ls
  store i8 0, i8* %arrayidx.ls, align 1, !tbaa !22
  br label %pfor.inc.ls

pfor.inc.ls:                                      ; preds = %pfor.detach.ls, %if.then.ls
  %49 = icmp ult i64 %__begin.0114.ls, %end.ls
  %inc.ls = add nuw nsw i64 %__begin.0114.ls, 1
  br i1 %49, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7benchIO13stringToWordsEPcl_pfor.detach19.ls(i64 %__begin10.0112.start.ls, i64 %end.ls, i64 %.ls, i8* nocapture readonly align 1 %Str.ls, i8* nocapture align 1 %call5.ls) unnamed_addr #15 {
pfor.detach19.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach19.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach19.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach19.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach19.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount2 = sub i64 %end.ls, %__begin10.0112.start.ls
  %9 = icmp ugt i64 %itercount2, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach19.ls.preheader

pfor.detach19.ls.preheader:                       ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin10.0112.ls.ph = phi i64 [ %__begin10.0112.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach19.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount4 = phi i64 [ %itercount2, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin10.0112.ls.dac3 = phi i64 [ %__begin10.0112.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount4, 1
  %miditer = add nuw nsw i64 %__begin10.0112.ls.dac3, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split5, label %.split.split

.split5:                                          ; preds = %16
  call fastcc void @_ZN7benchIO13stringToWordsEPcl_pfor.detach19.ls_.split.cilk(i64 %__begin10.0112.ls.dac3, i64 %miditer, i64 %.ls, i8* %Str.ls, i8* %call5.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split5, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach19.ls.preheader

pfor.cond.cleanup18.loopexit.ls:                  ; preds = %land.end.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup18.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup18.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach19.ls:                                 ; preds = %pfor.detach19.ls.preheader, %land.end.ls
  %__begin10.0112.ls = phi i64 [ %add21.ls, %land.end.ls ], [ %__begin10.0112.ls.ph, %pfor.detach19.ls.preheader ]
  %add21.ls = add nuw nsw i64 %__begin10.0112.ls, 1
  %arrayidx25.ls = getelementptr inbounds i8, i8* %Str.ls, i64 %add21.ls
  %48 = load i8, i8* %arrayidx25.ls, align 1, !tbaa !22
  %tobool26.ls = icmp eq i8 %48, 0
  br i1 %tobool26.ls, label %land.end.ls, label %land.rhs.ls

land.rhs.ls:                                      ; preds = %pfor.detach19.ls
  %arrayidx28.ls = getelementptr inbounds i8, i8* %Str.ls, i64 %__begin10.0112.ls
  %49 = load i8, i8* %arrayidx28.ls, align 1, !tbaa !22
  %tobool29.ls = icmp eq i8 %49, 0
  br label %land.end.ls

land.end.ls:                                      ; preds = %land.rhs.ls, %pfor.detach19.ls
  %50 = phi i1 [ false, %pfor.detach19.ls ], [ %tobool29.ls, %land.rhs.ls ]
  %arrayidx30.ls = getelementptr inbounds i8, i8* %call5.ls, i64 %add21.ls
  %frombool31.ls = zext i1 %50 to i8
  store i8 %frombool31.ls, i8* %arrayidx30.ls, align 1, !tbaa !23
  %51 = icmp ult i64 %__begin10.0112.ls, %end.ls
  br i1 %51, label %pfor.detach19.ls, label %pfor.cond.cleanup18.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7benchIO13stringToWordsEPcl_pfor.detach52.ls(i64 %__begin43.0110.start.ls, i64 %end.ls, i64 %.ls, i64* nocapture readonly align 1 %.ls1, i8* align 1 %Str.ls, i8** nocapture align 1 %.ls2) unnamed_addr #15 {
pfor.detach52.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach52.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach52.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach52.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach52.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount4 = sub i64 %end.ls, %__begin43.0110.start.ls
  %9 = icmp ugt i64 %itercount4, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach52.preheader.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount6 = phi i64 [ %itercount4, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin43.0110.ls.dac5 = phi i64 [ %__begin43.0110.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount6, 1
  %miditer = add nuw nsw i64 %__begin43.0110.ls.dac5, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split7, label %.split.split

.split7:                                          ; preds = %16
  call fastcc void @_ZN7benchIO13stringToWordsEPcl_pfor.detach52.ls_.split.cilk(i64 %__begin43.0110.ls.dac5, i64 %miditer, i64 %.ls, i64* %.ls1, i8* %Str.ls, i8** %.ls2)
  br label %.split.split

.split.split:                                     ; preds = %.split7, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach52.preheader.ls.split._crit_edge

pfor.detach52.preheader.ls.split._crit_edge:      ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin43.0110.ls.dac.lcssa = phi i64 [ %__begin43.0110.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  %22 = icmp ugt i64 %__begin43.0110.ls.dac.lcssa, %end.ls
  %umax = select i1 %22, i64 %__begin43.0110.ls.dac.lcssa, i64 %end.ls
  %23 = add i64 %umax, 1
  %24 = sub i64 %23, %__begin43.0110.ls.dac.lcssa
  %min.iters.check = icmp ult i64 %24, 16
  br i1 %min.iters.check, label %pfor.detach52.ls.preheader, label %vector.ph

pfor.detach52.ls.preheader:                       ; preds = %middle.block, %pfor.detach52.preheader.ls.split._crit_edge
  %__begin43.0110.ls.ph = phi i64 [ %__begin43.0110.ls.dac.lcssa, %pfor.detach52.preheader.ls.split._crit_edge ], [ %ind.end, %middle.block ]
  br label %pfor.detach52.ls

vector.ph:                                        ; preds = %pfor.detach52.preheader.ls.split._crit_edge
  %n.vec = and i64 %24, -16
  %ind.end = add i64 %__begin43.0110.ls.dac.lcssa, %n.vec
  %25 = add i64 %n.vec, -16
  %26 = lshr exact i64 %25, 4
  %27 = add nuw nsw i64 %26, 1
  %xtraiter = and i64 %27, 3
  %28 = icmp ult i64 %25, 48
  br i1 %28, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nsw i64 %27, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.3, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.3, %vector.body ]
  %29 = add i64 %__begin43.0110.ls.dac.lcssa, %index
  %30 = getelementptr inbounds i64, i64* %.ls1, i64 %29
  %31 = bitcast i64* %30 to <4 x i64>*
  %wide.load = load <4 x i64>, <4 x i64>* %31, align 8, !tbaa !49
  %32 = getelementptr i64, i64* %30, i64 4
  %33 = bitcast i64* %32 to <4 x i64>*
  %wide.load4 = load <4 x i64>, <4 x i64>* %33, align 8, !tbaa !49
  %34 = getelementptr i64, i64* %30, i64 8
  %35 = bitcast i64* %34 to <4 x i64>*
  %wide.load5 = load <4 x i64>, <4 x i64>* %35, align 8, !tbaa !49
  %36 = getelementptr i64, i64* %30, i64 12
  %37 = bitcast i64* %36 to <4 x i64>*
  %wide.load6 = load <4 x i64>, <4 x i64>* %37, align 8, !tbaa !49
  %38 = getelementptr inbounds i8, i8* %Str.ls, <4 x i64> %wide.load
  %39 = getelementptr inbounds i8, i8* %Str.ls, <4 x i64> %wide.load4
  %40 = getelementptr inbounds i8, i8* %Str.ls, <4 x i64> %wide.load5
  %41 = getelementptr inbounds i8, i8* %Str.ls, <4 x i64> %wide.load6
  %42 = getelementptr inbounds i8*, i8** %.ls2, i64 %29
  %43 = bitcast i8** %42 to <4 x i8*>*
  store <4 x i8*> %38, <4 x i8*>* %43, align 8, !tbaa !53
  %44 = getelementptr i8*, i8** %42, i64 4
  %45 = bitcast i8** %44 to <4 x i8*>*
  store <4 x i8*> %39, <4 x i8*>* %45, align 8, !tbaa !53
  %46 = getelementptr i8*, i8** %42, i64 8
  %47 = bitcast i8** %46 to <4 x i8*>*
  store <4 x i8*> %40, <4 x i8*>* %47, align 8, !tbaa !53
  %48 = getelementptr i8*, i8** %42, i64 12
  %49 = bitcast i8** %48 to <4 x i8*>*
  store <4 x i8*> %41, <4 x i8*>* %49, align 8, !tbaa !53
  %index.next = or i64 %index, 16
  %50 = add i64 %__begin43.0110.ls.dac.lcssa, %index.next
  %51 = getelementptr inbounds i64, i64* %.ls1, i64 %50
  %52 = bitcast i64* %51 to <4 x i64>*
  %wide.load.1 = load <4 x i64>, <4 x i64>* %52, align 8, !tbaa !49
  %53 = getelementptr i64, i64* %51, i64 4
  %54 = bitcast i64* %53 to <4 x i64>*
  %wide.load4.1 = load <4 x i64>, <4 x i64>* %54, align 8, !tbaa !49
  %55 = getelementptr i64, i64* %51, i64 8
  %56 = bitcast i64* %55 to <4 x i64>*
  %wide.load5.1 = load <4 x i64>, <4 x i64>* %56, align 8, !tbaa !49
  %57 = getelementptr i64, i64* %51, i64 12
  %58 = bitcast i64* %57 to <4 x i64>*
  %wide.load6.1 = load <4 x i64>, <4 x i64>* %58, align 8, !tbaa !49
  %59 = getelementptr inbounds i8, i8* %Str.ls, <4 x i64> %wide.load.1
  %60 = getelementptr inbounds i8, i8* %Str.ls, <4 x i64> %wide.load4.1
  %61 = getelementptr inbounds i8, i8* %Str.ls, <4 x i64> %wide.load5.1
  %62 = getelementptr inbounds i8, i8* %Str.ls, <4 x i64> %wide.load6.1
  %63 = getelementptr inbounds i8*, i8** %.ls2, i64 %50
  %64 = bitcast i8** %63 to <4 x i8*>*
  store <4 x i8*> %59, <4 x i8*>* %64, align 8, !tbaa !53
  %65 = getelementptr i8*, i8** %63, i64 4
  %66 = bitcast i8** %65 to <4 x i8*>*
  store <4 x i8*> %60, <4 x i8*>* %66, align 8, !tbaa !53
  %67 = getelementptr i8*, i8** %63, i64 8
  %68 = bitcast i8** %67 to <4 x i8*>*
  store <4 x i8*> %61, <4 x i8*>* %68, align 8, !tbaa !53
  %69 = getelementptr i8*, i8** %63, i64 12
  %70 = bitcast i8** %69 to <4 x i8*>*
  store <4 x i8*> %62, <4 x i8*>* %70, align 8, !tbaa !53
  %index.next.1 = or i64 %index, 32
  %71 = add i64 %__begin43.0110.ls.dac.lcssa, %index.next.1
  %72 = getelementptr inbounds i64, i64* %.ls1, i64 %71
  %73 = bitcast i64* %72 to <4 x i64>*
  %wide.load.2 = load <4 x i64>, <4 x i64>* %73, align 8, !tbaa !49
  %74 = getelementptr i64, i64* %72, i64 4
  %75 = bitcast i64* %74 to <4 x i64>*
  %wide.load4.2 = load <4 x i64>, <4 x i64>* %75, align 8, !tbaa !49
  %76 = getelementptr i64, i64* %72, i64 8
  %77 = bitcast i64* %76 to <4 x i64>*
  %wide.load5.2 = load <4 x i64>, <4 x i64>* %77, align 8, !tbaa !49
  %78 = getelementptr i64, i64* %72, i64 12
  %79 = bitcast i64* %78 to <4 x i64>*
  %wide.load6.2 = load <4 x i64>, <4 x i64>* %79, align 8, !tbaa !49
  %80 = getelementptr inbounds i8, i8* %Str.ls, <4 x i64> %wide.load.2
  %81 = getelementptr inbounds i8, i8* %Str.ls, <4 x i64> %wide.load4.2
  %82 = getelementptr inbounds i8, i8* %Str.ls, <4 x i64> %wide.load5.2
  %83 = getelementptr inbounds i8, i8* %Str.ls, <4 x i64> %wide.load6.2
  %84 = getelementptr inbounds i8*, i8** %.ls2, i64 %71
  %85 = bitcast i8** %84 to <4 x i8*>*
  store <4 x i8*> %80, <4 x i8*>* %85, align 8, !tbaa !53
  %86 = getelementptr i8*, i8** %84, i64 4
  %87 = bitcast i8** %86 to <4 x i8*>*
  store <4 x i8*> %81, <4 x i8*>* %87, align 8, !tbaa !53
  %88 = getelementptr i8*, i8** %84, i64 8
  %89 = bitcast i8** %88 to <4 x i8*>*
  store <4 x i8*> %82, <4 x i8*>* %89, align 8, !tbaa !53
  %90 = getelementptr i8*, i8** %84, i64 12
  %91 = bitcast i8** %90 to <4 x i8*>*
  store <4 x i8*> %83, <4 x i8*>* %91, align 8, !tbaa !53
  %index.next.2 = or i64 %index, 48
  %92 = add i64 %__begin43.0110.ls.dac.lcssa, %index.next.2
  %93 = getelementptr inbounds i64, i64* %.ls1, i64 %92
  %94 = bitcast i64* %93 to <4 x i64>*
  %wide.load.3 = load <4 x i64>, <4 x i64>* %94, align 8, !tbaa !49
  %95 = getelementptr i64, i64* %93, i64 4
  %96 = bitcast i64* %95 to <4 x i64>*
  %wide.load4.3 = load <4 x i64>, <4 x i64>* %96, align 8, !tbaa !49
  %97 = getelementptr i64, i64* %93, i64 8
  %98 = bitcast i64* %97 to <4 x i64>*
  %wide.load5.3 = load <4 x i64>, <4 x i64>* %98, align 8, !tbaa !49
  %99 = getelementptr i64, i64* %93, i64 12
  %100 = bitcast i64* %99 to <4 x i64>*
  %wide.load6.3 = load <4 x i64>, <4 x i64>* %100, align 8, !tbaa !49
  %101 = getelementptr inbounds i8, i8* %Str.ls, <4 x i64> %wide.load.3
  %102 = getelementptr inbounds i8, i8* %Str.ls, <4 x i64> %wide.load4.3
  %103 = getelementptr inbounds i8, i8* %Str.ls, <4 x i64> %wide.load5.3
  %104 = getelementptr inbounds i8, i8* %Str.ls, <4 x i64> %wide.load6.3
  %105 = getelementptr inbounds i8*, i8** %.ls2, i64 %92
  %106 = bitcast i8** %105 to <4 x i8*>*
  store <4 x i8*> %101, <4 x i8*>* %106, align 8, !tbaa !53
  %107 = getelementptr i8*, i8** %105, i64 4
  %108 = bitcast i8** %107 to <4 x i8*>*
  store <4 x i8*> %102, <4 x i8*>* %108, align 8, !tbaa !53
  %109 = getelementptr i8*, i8** %105, i64 8
  %110 = bitcast i8** %109 to <4 x i8*>*
  store <4 x i8*> %103, <4 x i8*>* %110, align 8, !tbaa !53
  %111 = getelementptr i8*, i8** %105, i64 12
  %112 = bitcast i8** %111 to <4 x i8*>*
  store <4 x i8*> %104, <4 x i8*>* %112, align 8, !tbaa !53
  %index.next.3 = add i64 %index, 64
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !355

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.3, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil.preheader

vector.body.epil.preheader:                       ; preds = %middle.block.unr-lcssa
  br label %vector.body.epil

vector.body.epil:                                 ; preds = %vector.body.epil, %vector.body.epil.preheader
  %index.epil = phi i64 [ %index.unr, %vector.body.epil.preheader ], [ %index.next.epil, %vector.body.epil ]
  %epil.iter = phi i64 [ %xtraiter, %vector.body.epil.preheader ], [ %epil.iter.sub, %vector.body.epil ]
  %113 = add i64 %__begin43.0110.ls.dac.lcssa, %index.epil
  %114 = getelementptr inbounds i64, i64* %.ls1, i64 %113
  %115 = bitcast i64* %114 to <4 x i64>*
  %wide.load.epil = load <4 x i64>, <4 x i64>* %115, align 8, !tbaa !49
  %116 = getelementptr i64, i64* %114, i64 4
  %117 = bitcast i64* %116 to <4 x i64>*
  %wide.load4.epil = load <4 x i64>, <4 x i64>* %117, align 8, !tbaa !49
  %118 = getelementptr i64, i64* %114, i64 8
  %119 = bitcast i64* %118 to <4 x i64>*
  %wide.load5.epil = load <4 x i64>, <4 x i64>* %119, align 8, !tbaa !49
  %120 = getelementptr i64, i64* %114, i64 12
  %121 = bitcast i64* %120 to <4 x i64>*
  %wide.load6.epil = load <4 x i64>, <4 x i64>* %121, align 8, !tbaa !49
  %122 = getelementptr inbounds i8, i8* %Str.ls, <4 x i64> %wide.load.epil
  %123 = getelementptr inbounds i8, i8* %Str.ls, <4 x i64> %wide.load4.epil
  %124 = getelementptr inbounds i8, i8* %Str.ls, <4 x i64> %wide.load5.epil
  %125 = getelementptr inbounds i8, i8* %Str.ls, <4 x i64> %wide.load6.epil
  %126 = getelementptr inbounds i8*, i8** %.ls2, i64 %113
  %127 = bitcast i8** %126 to <4 x i8*>*
  store <4 x i8*> %122, <4 x i8*>* %127, align 8, !tbaa !53
  %128 = getelementptr i8*, i8** %126, i64 4
  %129 = bitcast i8** %128 to <4 x i8*>*
  store <4 x i8*> %123, <4 x i8*>* %129, align 8, !tbaa !53
  %130 = getelementptr i8*, i8** %126, i64 8
  %131 = bitcast i8** %130 to <4 x i8*>*
  store <4 x i8*> %124, <4 x i8*>* %131, align 8, !tbaa !53
  %132 = getelementptr i8*, i8** %126, i64 12
  %133 = bitcast i8** %132 to <4 x i8*>*
  store <4 x i8*> %125, <4 x i8*>* %133, align 8, !tbaa !53
  %index.next.epil = add i64 %index.epil, 16
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block, label %vector.body.epil, !llvm.loop !356

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %24, %n.vec
  br i1 %cmp.n, label %pfor.cond.cleanup51.loopexit.ls, label %pfor.detach52.ls.preheader

pfor.cond.cleanup51.loopexit.ls:                  ; preds = %pfor.detach52.ls, %middle.block
  %134 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %135 = load atomic i32, i32* %134 acquire, align 8
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup51.loopexit.ls
  %138 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %139 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %140 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %139, i16* nonnull %140) #2
  %141 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %142 = call i8* @llvm.frameaddress(i32 0) #2
  %143 = getelementptr inbounds [5 x i8*], [5 x i8*]* %141, i64 0, i64 0
  store volatile i8* %142, i8** %143, align 8
  %144 = call i8* @llvm.stacksave() #2
  %145 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %144, i8** %145, align 8
  %146 = bitcast [5 x i8*]* %141 to i8*
  %147 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %146) #24
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup51.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %149 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %150 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %149, i64 0, i32 12, i32 0
  %151 = load i64, i64* %150, align 8
  %152 = add i64 %151, 1
  store i64 %152, i64* %150, align 8
  %153 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %154 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %153, i64 0, i32 9
  %157 = bitcast %struct.__cilkrts_stack_frame** %156 to i64*
  store atomic i64 %155, i64* %157 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %158 = load atomic i32, i32* %134 acquire, align 8
  %159 = icmp eq i32 %158, 16777216
  br i1 %159, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach52.ls:                                 ; preds = %pfor.detach52.ls.preheader, %pfor.detach52.ls
  %__begin43.0110.ls = phi i64 [ %inc61.ls, %pfor.detach52.ls ], [ %__begin43.0110.ls.ph, %pfor.detach52.ls.preheader ]
  %arrayidx57.ls = getelementptr inbounds i64, i64* %.ls1, i64 %__begin43.0110.ls
  %160 = load i64, i64* %arrayidx57.ls, align 8, !tbaa !49
  %add.ptr.ls = getelementptr inbounds i8, i8* %Str.ls, i64 %160
  %arrayidx58.ls = getelementptr inbounds i8*, i8** %.ls2, i64 %__begin43.0110.ls
  store i8* %add.ptr.ls, i8** %arrayidx58.ls, align 8, !tbaa !53
  %161 = icmp ult i64 %__begin43.0110.ls, %end.ls
  %inc61.ls = add nuw nsw i64 %__begin43.0110.ls, 1
  br i1 %161, label %pfor.detach52.ls, label %pfor.cond.cleanup51.loopexit.ls, !llvm.loop !357
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7benchIO18readStringFromFileEPc_pfor.detach.ls(i64 %__begin.038.start.ls, i64 %end.ls, i64 %.ls, i8* nocapture align 1 %call12.ls) unnamed_addr #15 {
pfor.detach.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount1 = sub i64 %end.ls, %__begin.038.start.ls
  %9 = icmp ugt i64 %itercount1, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.lr.ph.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount3 = phi i64 [ %itercount1, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin.038.ls.dac2 = phi i64 [ %__begin.038.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount3, 1
  %miditer = add nuw nsw i64 %__begin.038.ls.dac2, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split4, label %.split.split

.split4:                                          ; preds = %16
  call fastcc void @_ZN7benchIO18readStringFromFileEPc_pfor.detach.ls_.split.cilk(i64 %__begin.038.ls.dac2, i64 %miditer, i64 %.ls, i8* %call12.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split4, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.lr.ph.ls.split._crit_edge

pfor.detach.lr.ph.ls.split._crit_edge:            ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin.038.ls.dac.lcssa = phi i64 [ %__begin.038.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  %scevgep = getelementptr i8, i8* %call12.ls, i64 %__begin.038.ls.dac.lcssa
  %22 = icmp ugt i64 %__begin.038.ls.dac.lcssa, %end.ls
  %umax = select i1 %22, i64 %__begin.038.ls.dac.lcssa, i64 %end.ls
  %23 = add i64 %umax, 1
  %24 = sub i64 %23, %__begin.038.ls.dac.lcssa
  call void @llvm.memset.p0i8.i64(i8* %scevgep, i8 0, i64 %24, i32 1, i1 false)
  %25 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %26 = load atomic i32, i32* %25 acquire, align 8
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.detach.lr.ph.ls.split._crit_edge
  %29 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %30 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %31 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %30, i16* nonnull %31) #2
  %32 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %33 = call i8* @llvm.frameaddress(i32 0) #2
  %34 = getelementptr inbounds [5 x i8*], [5 x i8*]* %32, i64 0, i64 0
  store volatile i8* %33, i8** %34, align 8
  %35 = call i8* @llvm.stacksave() #2
  %36 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %35, i8** %36, align 8
  %37 = bitcast [5 x i8*]* %32 to i8*
  %38 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %37) #24
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.detach.lr.ph.ls.split._crit_edge, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %40 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %41 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %40, i64 0, i32 12, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %41, align 8
  %44 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %45 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %44, i64 0, i32 9
  %48 = bitcast %struct.__cilkrts_stack_frame** %47 to i64*
  store atomic i64 %46, i64* %48 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %49 = load atomic i32, i32* %25 acquire, align 8
  %50 = icmp eq i32 %49, 16777216
  br i1 %50, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7benchIO18readPointsFromFileI8_point2dIdEEE4_seqIT_EPc_pfor.detach.i.ls(i64 %__begin.065.i.start.ls, i64 %end.ls, i64 %.ls, i8** nocapture readonly align 1 %add.ptr.ls, double* nocapture align 1 %.ls1) unnamed_addr #15 {
pfor.detach.i.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.i.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.i.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.i.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.i.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount3 = sub i64 %end.ls, %__begin.065.i.start.ls
  %9 = icmp ugt i64 %itercount3, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.i.ls.preheader

pfor.detach.i.ls.preheader:                       ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin.065.i.ls.ph = phi i64 [ %__begin.065.i.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.i.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount5 = phi i64 [ %itercount3, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin.065.i.ls.dac4 = phi i64 [ %__begin.065.i.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount5, 1
  %miditer = add nuw nsw i64 %__begin.065.i.ls.dac4, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split6, label %.split.split

.split6:                                          ; preds = %16
  call fastcc void @_ZN7benchIO18readPointsFromFileI8_point2dIdEEE4_seqIT_EPc_pfor.detach.i.ls_.split.cilk(i64 %__begin.065.i.ls.dac4, i64 %miditer, i64 %.ls, i8** %add.ptr.ls, double* %.ls1)
  br label %.split.split

.split.split:                                     ; preds = %.split6, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.i.ls.preheader

pfor.cond.cleanup.i.loopexit.ls:                  ; preds = %pfor.detach.i.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.i.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.i.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.i.ls:                                 ; preds = %pfor.detach.i.ls.preheader, %pfor.detach.i.ls
  %__begin.065.i.ls = phi i64 [ %inc.i.ls, %pfor.detach.i.ls ], [ %__begin.065.i.ls.ph, %pfor.detach.i.ls.preheader ]
  %arrayidx.i.ls = getelementptr inbounds i8*, i8** %add.ptr.ls, i64 %__begin.065.i.ls
  %48 = load i8*, i8** %arrayidx.i.ls, align 8, !tbaa !53
  %call.i.i20.ls = tail call fast double @strtod(i8* nocapture nonnull %48, i8** null) #2
  %arrayidx8.i.ls = getelementptr inbounds double, double* %.ls1, i64 %__begin.065.i.ls
  store double %call.i.i20.ls, double* %arrayidx8.i.ls, align 8, !tbaa !18
  %49 = icmp ult i64 %__begin.065.i.ls, %end.ls
  %inc.i.ls = add nuw nsw i64 %__begin.065.i.ls, 1
  br i1 %49, label %pfor.detach.i.ls, label %pfor.cond.cleanup.i.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7benchIO18readPointsFromFileI8_point2dIdEEE4_seqIT_EPc_pfor.detach21.i.ls(i64 %__begin11.063.i.start.ls, i64 %end.ls, i64 %.ls, double* nocapture readonly align 1 %.ls1, %class._point2d* nocapture align 1 %.ls2) unnamed_addr #15 {
pfor.detach21.i.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach21.i.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach21.i.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach21.i.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach21.i.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount4 = sub i64 %end.ls, %__begin11.063.i.start.ls
  %9 = icmp ugt i64 %itercount4, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach21.i.ls.preheader

pfor.detach21.i.ls.preheader:                     ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin11.063.i.ls.ph = phi i64 [ %__begin11.063.i.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach21.i.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount6 = phi i64 [ %itercount4, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin11.063.i.ls.dac5 = phi i64 [ %__begin11.063.i.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount6, 1
  %miditer = add nuw nsw i64 %__begin11.063.i.ls.dac5, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split7, label %.split.split

.split7:                                          ; preds = %16
  call fastcc void @_ZN7benchIO18readPointsFromFileI8_point2dIdEEE4_seqIT_EPc_pfor.detach21.i.ls_.split.cilk(i64 %__begin11.063.i.ls.dac5, i64 %miditer, i64 %.ls, double* %.ls1, %class._point2d* %.ls2)
  br label %.split.split

.split.split:                                     ; preds = %.split7, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach21.i.ls.preheader

pfor.cond.cleanup20.i.loopexit.ls:                ; preds = %pfor.detach21.i.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup20.i.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup20.i.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach21.i.ls:                               ; preds = %pfor.detach21.i.ls.preheader, %pfor.detach21.i.ls
  %__begin11.063.i.ls = phi i64 [ %inc32.i.ls, %pfor.detach21.i.ls ], [ %__begin11.063.i.ls.ph, %pfor.detach21.i.ls.preheader ]
  %mul28.i.ls = shl nuw nsw i64 %__begin11.063.i.ls, 1
  %add.ptr.i.ls = getelementptr inbounds double, double* %.ls1, i64 %mul28.i.ls
  %48 = bitcast double* %add.ptr.i.ls to <2 x i64>*
  %49 = load <2 x i64>, <2 x i64>* %48, align 8, !tbaa !18
  %arrayidx29.i.ls = getelementptr inbounds %class._point2d, %class._point2d* %.ls2, i64 %__begin11.063.i.ls
  %50 = bitcast %class._point2d* %arrayidx29.i.ls to <2 x i64>*
  store <2 x i64> %49, <2 x i64>* %50, align 8
  %51 = icmp ult i64 %__begin11.063.i.ls, %end.ls
  %inc32.i.ls = add nuw nsw i64 %__begin11.063.i.ls, 1
  br i1 %51, label %pfor.detach21.i.ls, label %pfor.cond.cleanup20.i.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_Z13timeNeighborsILi1E8_point2dIdEEvPT0_iiiPc_pfor.detach.ls(i64 %indvars.iv138.start.ls, i64 %end.ls, i64 %.ls, %struct.vertex* align 1 %.ls1, %class._point2d* nocapture readonly align 1 %pts.ls, %struct.vertex** nocapture align 1 %.ls2) unnamed_addr #15 {
pfor.detach.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount4 = sub i64 %end.ls, %indvars.iv138.start.ls
  %9 = icmp ugt i64 %itercount4, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv138.ls.ph = phi i64 [ %indvars.iv138.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount6 = phi i64 [ %itercount4, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv138.ls.dac5 = phi i64 [ %indvars.iv138.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount6, 1
  %miditer = add nuw nsw i64 %indvars.iv138.ls.dac5, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split7, label %.split.split

.split7:                                          ; preds = %16
  call fastcc void @_Z13timeNeighborsILi1E8_point2dIdEEvPT0_iiiPc_pfor.detach.ls_.split.cilk(i64 %indvars.iv138.ls.dac5, i64 %miditer, i64 %.ls, %struct.vertex* %.ls1, %class._point2d* %pts.ls, %struct.vertex** %.ls2)
  br label %.split.split

.split.split:                                     ; preds = %.split7, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.loopexit.ls:                    ; preds = %pfor.detach.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %pfor.detach.ls
  %indvars.iv138.ls = phi i64 [ %indvars.iv.next139.ls, %pfor.detach.ls ], [ %indvars.iv138.ls.ph, %pfor.detach.ls.preheader ]
  %arrayidx8.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %.ls1, i64 %indvars.iv138.ls
  %agg.tmp.sroa.0.0..sroa_idx.ls = getelementptr inbounds %class._point2d, %class._point2d* %pts.ls, i64 %indvars.iv138.ls, i32 0
  %48 = bitcast double* %agg.tmp.sroa.0.0..sroa_idx.ls to <2 x i64>*
  %49 = load <2 x i64>, <2 x i64>* %48, align 8
  %identifier.i.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %arrayidx8.ls, i64 0, i32 0
  %50 = trunc i64 %indvars.iv138.ls to i32
  store i32 %50, i32* %identifier.i.ls, align 8, !tbaa !358
  %p.sroa.0.0..sroa_idx.i.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %.ls1, i64 %indvars.iv138.ls, i32 1, i32 0
  %51 = bitcast double* %p.sroa.0.0..sroa_idx.i.ls to <2 x i64>*
  store <2 x i64> %49, <2 x i64>* %51, align 8
  %arrayidx12.ls = getelementptr inbounds %struct.vertex*, %struct.vertex** %.ls2, i64 %indvars.iv138.ls
  store %struct.vertex* %arrayidx8.ls, %struct.vertex** %arrayidx12.ls, align 8, !tbaa !53
  %52 = icmp ult i64 %indvars.iv138.ls, %end.ls
  %indvars.iv.next139.ls = add nuw nsw i64 %indvars.iv138.ls, 1
  br i1 %52, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_Z13timeNeighborsILi1E8_point2dIdEEvPT0_iiiPc_pfor.detach33.us.ls(i64 %indvars.iv132.start.ls, i64 %end.ls, i64 %.ls, %struct.vertex** nocapture readonly align 1 %.ls1, i1 %.ls2, i64 %unroll_iter.ls, i32* nocapture align 1 %.ls3, i1 %lcmp.mod.ls, i64 %xtraiter.ls) unnamed_addr #15 {
pfor.detach33.lr.ph.split.us.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach33.lr.ph.split.us.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach33.lr.ph.split.us.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach33.lr.ph.split.us.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach33.lr.ph.split.us.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount5 = sub i64 %end.ls, %indvars.iv132.start.ls
  %9 = icmp ugt i64 %itercount5, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach33.lr.ph.split.us.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount7 = phi i64 [ %itercount5, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv132.ls.dac6 = phi i64 [ %indvars.iv132.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount7, 1
  %miditer = add nuw nsw i64 %indvars.iv132.ls.dac6, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split8, label %.split.split

.split8:                                          ; preds = %16
  call fastcc void @_Z13timeNeighborsILi1E8_point2dIdEEvPT0_iiiPc_pfor.detach33.us.ls_.split.cilk(i64 %indvars.iv132.ls.dac6, i64 %miditer, i64 %.ls, %struct.vertex** %.ls1, i1 %.ls2, i64 %unroll_iter.ls, i32* %.ls3, i1 %lcmp.mod.ls, i64 %xtraiter.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split8, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach33.lr.ph.split.us.ls.split._crit_edge

pfor.detach33.lr.ph.split.us.ls.split._crit_edge: ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv132.ls.dac.lcssa = phi i64 [ %indvars.iv132.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br i1 %.ls2, label %pfor.detach33.us.ls.us.preheader, label %pfor.detach33.us.ls.preheader

pfor.detach33.us.ls.preheader:                    ; preds = %pfor.detach33.lr.ph.split.us.ls.split._crit_edge
  br label %pfor.detach33.us.ls

pfor.detach33.us.ls.us.preheader:                 ; preds = %pfor.detach33.lr.ph.split.us.ls.split._crit_edge
  br label %pfor.detach33.us.ls.us

pfor.detach33.us.ls.us:                           ; preds = %pfor.detach33.us.ls.us.preheader, %pfor.inc55.us.ls.us
  %indvars.iv132.ls.us = phi i64 [ %indvars.iv.next133.ls.us, %pfor.inc55.us.ls.us ], [ %indvars.iv132.ls.dac.lcssa, %pfor.detach33.us.ls.us.preheader ]
  %arrayidx44.us.ls.us = getelementptr inbounds %struct.vertex*, %struct.vertex** %.ls1, i64 %indvars.iv132.ls.us
  %22 = load %struct.vertex*, %struct.vertex** %arrayidx44.us.ls.us, align 8, !tbaa !53
  br i1 %lcmp.mod.ls, label %pfor.inc55.us.ls.us, label %for.body42.us.epil.ls.us.preheader

for.body42.us.epil.ls.us.preheader:               ; preds = %pfor.detach33.us.ls.us
  br label %for.body42.us.epil.ls.us

for.body42.us.epil.ls.us:                         ; preds = %for.body42.us.epil.ls.us.preheader, %for.body42.us.epil.ls.us
  %indvars.iv.epil.ls.us = phi i64 [ %indvars.iv.next.epil.ls.us, %for.body42.us.epil.ls.us ], [ 0, %for.body42.us.epil.ls.us.preheader ]
  %epil.iter.ls.us = phi i64 [ %epil.iter.sub.ls.us, %for.body42.us.epil.ls.us ], [ %xtraiter.ls, %for.body42.us.epil.ls.us.preheader ]
  %arrayidx46.us.epil.ls.us = getelementptr inbounds %struct.vertex, %struct.vertex* %22, i64 0, i32 2, i64 %indvars.iv.epil.ls.us
  %23 = load %struct.vertex*, %struct.vertex** %arrayidx46.us.epil.ls.us, align 8, !tbaa !53
  %identifier.us.epil.ls.us = getelementptr inbounds %struct.vertex, %struct.vertex* %23, i64 0, i32 0
  %24 = load i32, i32* %identifier.us.epil.ls.us, align 8, !tbaa !358
  %25 = add nuw nsw i64 %indvars.iv.epil.ls.us, %indvars.iv132.ls.us
  %arrayidx50.us.epil.ls.us = getelementptr inbounds i32, i32* %.ls3, i64 %25
  store i32 %24, i32* %arrayidx50.us.epil.ls.us, align 4, !tbaa !59
  %indvars.iv.next.epil.ls.us = add nuw nsw i64 %indvars.iv.epil.ls.us, 1
  %epil.iter.sub.ls.us = add nsw i64 %epil.iter.ls.us, -1
  %epil.iter.cmp.ls.us = icmp eq i64 %epil.iter.sub.ls.us, 0
  br i1 %epil.iter.cmp.ls.us, label %pfor.inc55.us.ls.us, label %for.body42.us.epil.ls.us, !llvm.loop !360

pfor.inc55.us.ls.us:                              ; preds = %for.body42.us.epil.ls.us, %pfor.detach33.us.ls.us
  %26 = icmp ult i64 %indvars.iv132.ls.us, %end.ls
  %indvars.iv.next133.ls.us = add nuw nsw i64 %indvars.iv132.ls.us, 1
  br i1 %26, label %pfor.detach33.us.ls.us, label %pfor.cond.cleanup32.loopexit.ls

pfor.cond.cleanup32.loopexit.ls:                  ; preds = %pfor.inc55.us.ls, %pfor.inc55.us.ls.us
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %28 = load atomic i32, i32* %27 acquire, align 8
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup32.loopexit.ls
  %31 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %32 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %32, i16* nonnull %33) #2
  %34 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %35 = call i8* @llvm.frameaddress(i32 0) #2
  %36 = getelementptr inbounds [5 x i8*], [5 x i8*]* %34, i64 0, i64 0
  store volatile i8* %35, i8** %36, align 8
  %37 = call i8* @llvm.stacksave() #2
  %38 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %37, i8** %38, align 8
  %39 = bitcast [5 x i8*]* %34 to i8*
  %40 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %39) #24
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup32.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %42 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %43 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %42, i64 0, i32 12, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %43, align 8
  %46 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %47 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %46, i64 0, i32 9
  %50 = bitcast %struct.__cilkrts_stack_frame** %49 to i64*
  store atomic i64 %48, i64* %50 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %51 = load atomic i32, i32* %27 acquire, align 8
  %52 = icmp eq i32 %51, 16777216
  br i1 %52, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach33.us.ls:                              ; preds = %pfor.detach33.us.ls.preheader, %pfor.inc55.us.ls
  %indvars.iv132.ls = phi i64 [ %indvars.iv.next133.ls, %pfor.inc55.us.ls ], [ %indvars.iv132.ls.dac.lcssa, %pfor.detach33.us.ls.preheader ]
  %arrayidx44.us.ls = getelementptr inbounds %struct.vertex*, %struct.vertex** %.ls1, i64 %indvars.iv132.ls
  %53 = load %struct.vertex*, %struct.vertex** %arrayidx44.us.ls, align 8, !tbaa !53
  br label %for.body42.us.ls

for.body42.us.ls:                                 ; preds = %for.body42.us.ls, %pfor.detach33.us.ls
  %indvars.iv.ls = phi i64 [ 0, %pfor.detach33.us.ls ], [ %indvars.iv.next.7.ls, %for.body42.us.ls ]
  %niter.ls = phi i64 [ %unroll_iter.ls, %pfor.detach33.us.ls ], [ %niter.nsub.7.ls, %for.body42.us.ls ]
  %arrayidx46.us.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %53, i64 0, i32 2, i64 %indvars.iv.ls
  %54 = load %struct.vertex*, %struct.vertex** %arrayidx46.us.ls, align 8, !tbaa !53
  %identifier.us.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %54, i64 0, i32 0
  %55 = load i32, i32* %identifier.us.ls, align 8, !tbaa !358
  %56 = add nuw nsw i64 %indvars.iv.ls, %indvars.iv132.ls
  %arrayidx50.us.ls = getelementptr inbounds i32, i32* %.ls3, i64 %56
  store i32 %55, i32* %arrayidx50.us.ls, align 4, !tbaa !59
  %indvars.iv.next.ls = or i64 %indvars.iv.ls, 1
  %arrayidx46.us.1.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %53, i64 0, i32 2, i64 %indvars.iv.next.ls
  %57 = load %struct.vertex*, %struct.vertex** %arrayidx46.us.1.ls, align 8, !tbaa !53
  %identifier.us.1.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %57, i64 0, i32 0
  %58 = load i32, i32* %identifier.us.1.ls, align 8, !tbaa !358
  %59 = add nuw nsw i64 %indvars.iv.next.ls, %indvars.iv132.ls
  %arrayidx50.us.1.ls = getelementptr inbounds i32, i32* %.ls3, i64 %59
  store i32 %58, i32* %arrayidx50.us.1.ls, align 4, !tbaa !59
  %indvars.iv.next.1.ls = or i64 %indvars.iv.ls, 2
  %arrayidx46.us.2.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %53, i64 0, i32 2, i64 %indvars.iv.next.1.ls
  %60 = load %struct.vertex*, %struct.vertex** %arrayidx46.us.2.ls, align 8, !tbaa !53
  %identifier.us.2.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %60, i64 0, i32 0
  %61 = load i32, i32* %identifier.us.2.ls, align 8, !tbaa !358
  %62 = add nuw nsw i64 %indvars.iv.next.1.ls, %indvars.iv132.ls
  %arrayidx50.us.2.ls = getelementptr inbounds i32, i32* %.ls3, i64 %62
  store i32 %61, i32* %arrayidx50.us.2.ls, align 4, !tbaa !59
  %indvars.iv.next.2.ls = or i64 %indvars.iv.ls, 3
  %arrayidx46.us.3.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %53, i64 0, i32 2, i64 %indvars.iv.next.2.ls
  %63 = load %struct.vertex*, %struct.vertex** %arrayidx46.us.3.ls, align 8, !tbaa !53
  %identifier.us.3.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %63, i64 0, i32 0
  %64 = load i32, i32* %identifier.us.3.ls, align 8, !tbaa !358
  %65 = add nuw nsw i64 %indvars.iv.next.2.ls, %indvars.iv132.ls
  %arrayidx50.us.3.ls = getelementptr inbounds i32, i32* %.ls3, i64 %65
  store i32 %64, i32* %arrayidx50.us.3.ls, align 4, !tbaa !59
  %indvars.iv.next.3.ls = or i64 %indvars.iv.ls, 4
  %arrayidx46.us.4.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %53, i64 0, i32 2, i64 %indvars.iv.next.3.ls
  %66 = load %struct.vertex*, %struct.vertex** %arrayidx46.us.4.ls, align 8, !tbaa !53
  %identifier.us.4.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %66, i64 0, i32 0
  %67 = load i32, i32* %identifier.us.4.ls, align 8, !tbaa !358
  %68 = add nuw nsw i64 %indvars.iv.next.3.ls, %indvars.iv132.ls
  %arrayidx50.us.4.ls = getelementptr inbounds i32, i32* %.ls3, i64 %68
  store i32 %67, i32* %arrayidx50.us.4.ls, align 4, !tbaa !59
  %indvars.iv.next.4.ls = or i64 %indvars.iv.ls, 5
  %arrayidx46.us.5.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %53, i64 0, i32 2, i64 %indvars.iv.next.4.ls
  %69 = load %struct.vertex*, %struct.vertex** %arrayidx46.us.5.ls, align 8, !tbaa !53
  %identifier.us.5.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %69, i64 0, i32 0
  %70 = load i32, i32* %identifier.us.5.ls, align 8, !tbaa !358
  %71 = add nuw nsw i64 %indvars.iv.next.4.ls, %indvars.iv132.ls
  %arrayidx50.us.5.ls = getelementptr inbounds i32, i32* %.ls3, i64 %71
  store i32 %70, i32* %arrayidx50.us.5.ls, align 4, !tbaa !59
  %indvars.iv.next.5.ls = or i64 %indvars.iv.ls, 6
  %arrayidx46.us.6.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %53, i64 0, i32 2, i64 %indvars.iv.next.5.ls
  %72 = load %struct.vertex*, %struct.vertex** %arrayidx46.us.6.ls, align 8, !tbaa !53
  %identifier.us.6.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %72, i64 0, i32 0
  %73 = load i32, i32* %identifier.us.6.ls, align 8, !tbaa !358
  %74 = add nuw nsw i64 %indvars.iv.next.5.ls, %indvars.iv132.ls
  %arrayidx50.us.6.ls = getelementptr inbounds i32, i32* %.ls3, i64 %74
  store i32 %73, i32* %arrayidx50.us.6.ls, align 4, !tbaa !59
  %indvars.iv.next.6.ls = or i64 %indvars.iv.ls, 7
  %arrayidx46.us.7.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %53, i64 0, i32 2, i64 %indvars.iv.next.6.ls
  %75 = load %struct.vertex*, %struct.vertex** %arrayidx46.us.7.ls, align 8, !tbaa !53
  %identifier.us.7.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %75, i64 0, i32 0
  %76 = load i32, i32* %identifier.us.7.ls, align 8, !tbaa !358
  %77 = add nuw nsw i64 %indvars.iv.next.6.ls, %indvars.iv132.ls
  %arrayidx50.us.7.ls = getelementptr inbounds i32, i32* %.ls3, i64 %77
  store i32 %76, i32* %arrayidx50.us.7.ls, align 4, !tbaa !59
  %indvars.iv.next.7.ls = add nuw nsw i64 %indvars.iv.ls, 8
  %niter.nsub.7.ls = add i64 %niter.ls, -8
  %niter.ncmp.7.ls = icmp eq i64 %niter.nsub.7.ls, 0
  br i1 %niter.ncmp.7.ls, label %for.cond39.for.cond.cleanup41_crit_edge.us.unr-lcssa.ls, label %for.body42.us.ls

for.cond39.for.cond.cleanup41_crit_edge.us.unr-lcssa.ls: ; preds = %for.body42.us.ls
  br i1 %lcmp.mod.ls, label %pfor.inc55.us.ls, label %for.body42.us.epil.ls.preheader

for.body42.us.epil.ls.preheader:                  ; preds = %for.cond39.for.cond.cleanup41_crit_edge.us.unr-lcssa.ls
  br label %for.body42.us.epil.ls

for.body42.us.epil.ls:                            ; preds = %for.body42.us.epil.ls.preheader, %for.body42.us.epil.ls
  %indvars.iv.epil.ls = phi i64 [ %indvars.iv.next.epil.ls, %for.body42.us.epil.ls ], [ %indvars.iv.next.7.ls, %for.body42.us.epil.ls.preheader ]
  %epil.iter.ls = phi i64 [ %epil.iter.sub.ls, %for.body42.us.epil.ls ], [ %xtraiter.ls, %for.body42.us.epil.ls.preheader ]
  %arrayidx46.us.epil.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %53, i64 0, i32 2, i64 %indvars.iv.epil.ls
  %78 = load %struct.vertex*, %struct.vertex** %arrayidx46.us.epil.ls, align 8, !tbaa !53
  %identifier.us.epil.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %78, i64 0, i32 0
  %79 = load i32, i32* %identifier.us.epil.ls, align 8, !tbaa !358
  %80 = add nuw nsw i64 %indvars.iv.epil.ls, %indvars.iv132.ls
  %arrayidx50.us.epil.ls = getelementptr inbounds i32, i32* %.ls3, i64 %80
  store i32 %79, i32* %arrayidx50.us.epil.ls, align 4, !tbaa !59
  %indvars.iv.next.epil.ls = add nuw nsw i64 %indvars.iv.epil.ls, 1
  %epil.iter.sub.ls = add nsw i64 %epil.iter.ls, -1
  %epil.iter.cmp.ls = icmp eq i64 %epil.iter.sub.ls, 0
  br i1 %epil.iter.cmp.ls, label %pfor.inc55.us.ls, label %for.body42.us.epil.ls, !llvm.loop !360

pfor.inc55.us.ls:                                 ; preds = %for.body42.us.epil.ls, %for.cond39.for.cond.cleanup41_crit_edge.us.unr-lcssa.ls
  %81 = icmp ult i64 %indvars.iv132.ls, %end.ls
  %indvars.iv.next133.ls = add nuw nsw i64 %indvars.iv132.ls, 1
  br i1 %81, label %pfor.detach33.us.ls, label %pfor.cond.cleanup32.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_Z13timeNeighborsILi10E8_point2dIdEEvPT0_iiiPc_pfor.detach.ls(i64 %indvars.iv136.start.ls, i64 %end.ls, i64 %.ls, %struct.vertex.16* align 1 %.ls1, %class._point2d* nocapture readonly align 1 %pts.ls, %struct.vertex.16** nocapture align 1 %.ls2) unnamed_addr #15 {
pfor.detach.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount4 = sub i64 %end.ls, %indvars.iv136.start.ls
  %9 = icmp ugt i64 %itercount4, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv136.ls.ph = phi i64 [ %indvars.iv136.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount6 = phi i64 [ %itercount4, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv136.ls.dac5 = phi i64 [ %indvars.iv136.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount6, 1
  %miditer = add nuw nsw i64 %indvars.iv136.ls.dac5, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split7, label %.split.split

.split7:                                          ; preds = %16
  call fastcc void @_Z13timeNeighborsILi10E8_point2dIdEEvPT0_iiiPc_pfor.detach.ls_.split.cilk(i64 %indvars.iv136.ls.dac5, i64 %miditer, i64 %.ls, %struct.vertex.16* %.ls1, %class._point2d* %pts.ls, %struct.vertex.16** %.ls2)
  br label %.split.split

.split.split:                                     ; preds = %.split7, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.loopexit.ls:                    ; preds = %pfor.detach.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %pfor.detach.ls
  %indvars.iv136.ls = phi i64 [ %indvars.iv.next137.ls, %pfor.detach.ls ], [ %indvars.iv136.ls.ph, %pfor.detach.ls.preheader ]
  %arrayidx8.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %.ls1, i64 %indvars.iv136.ls
  %agg.tmp.sroa.0.0..sroa_idx.ls = getelementptr inbounds %class._point2d, %class._point2d* %pts.ls, i64 %indvars.iv136.ls, i32 0
  %48 = bitcast double* %agg.tmp.sroa.0.0..sroa_idx.ls to <2 x i64>*
  %49 = load <2 x i64>, <2 x i64>* %48, align 8
  %identifier.i.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %arrayidx8.ls, i64 0, i32 0
  %50 = trunc i64 %indvars.iv136.ls to i32
  store i32 %50, i32* %identifier.i.ls, align 8, !tbaa !361
  %p.sroa.0.0..sroa_idx.i.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %.ls1, i64 %indvars.iv136.ls, i32 1, i32 0
  %51 = bitcast double* %p.sroa.0.0..sroa_idx.i.ls to <2 x i64>*
  store <2 x i64> %49, <2 x i64>* %51, align 8
  %arrayidx12.ls = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %.ls2, i64 %indvars.iv136.ls
  store %struct.vertex.16* %arrayidx8.ls, %struct.vertex.16** %arrayidx12.ls, align 8, !tbaa !53
  %52 = icmp ult i64 %indvars.iv136.ls, %end.ls
  %indvars.iv.next137.ls = add nuw nsw i64 %indvars.iv136.ls, 1
  br i1 %52, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_Z13timeNeighborsILi10E8_point2dIdEEvPT0_iiiPc_pfor.detach33.us.ls(i64 %indvars.iv130.start.ls, i64 %end.ls, i64 %.ls, %struct.vertex.16** nocapture readonly align 1 %.ls1, i1 %.ls2, i64 %unroll_iter.ls, i32* nocapture align 1 %.ls3, i1 %lcmp.mod.ls, i64 %xtraiter.ls) unnamed_addr #15 {
pfor.detach33.lr.ph.split.us.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach33.lr.ph.split.us.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach33.lr.ph.split.us.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach33.lr.ph.split.us.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach33.lr.ph.split.us.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount5 = sub i64 %end.ls, %indvars.iv130.start.ls
  %9 = icmp ugt i64 %itercount5, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach33.lr.ph.split.us.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount7 = phi i64 [ %itercount5, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv130.ls.dac6 = phi i64 [ %indvars.iv130.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount7, 1
  %miditer = add nuw nsw i64 %indvars.iv130.ls.dac6, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split8, label %.split.split

.split8:                                          ; preds = %16
  call fastcc void @_Z13timeNeighborsILi10E8_point2dIdEEvPT0_iiiPc_pfor.detach33.us.ls_.split.cilk(i64 %indvars.iv130.ls.dac6, i64 %miditer, i64 %.ls, %struct.vertex.16** %.ls1, i1 %.ls2, i64 %unroll_iter.ls, i32* %.ls3, i1 %lcmp.mod.ls, i64 %xtraiter.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split8, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach33.lr.ph.split.us.ls.split._crit_edge

pfor.detach33.lr.ph.split.us.ls.split._crit_edge: ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv130.ls.dac.lcssa = phi i64 [ %indvars.iv130.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br i1 %.ls2, label %pfor.detach33.us.ls.us.preheader, label %pfor.detach33.us.ls.preheader

pfor.detach33.us.ls.preheader:                    ; preds = %pfor.detach33.lr.ph.split.us.ls.split._crit_edge
  br label %pfor.detach33.us.ls

pfor.detach33.us.ls.us.preheader:                 ; preds = %pfor.detach33.lr.ph.split.us.ls.split._crit_edge
  br label %pfor.detach33.us.ls.us

pfor.detach33.us.ls.us:                           ; preds = %pfor.detach33.us.ls.us.preheader, %pfor.inc55.us.ls.us
  %indvars.iv130.ls.us = phi i64 [ %indvars.iv.next131.ls.us, %pfor.inc55.us.ls.us ], [ %indvars.iv130.ls.dac.lcssa, %pfor.detach33.us.ls.us.preheader ]
  %arrayidx44.us.ls.us = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %.ls1, i64 %indvars.iv130.ls.us
  %22 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx44.us.ls.us, align 8, !tbaa !53
  %mul47.us.ls.us = mul i64 %indvars.iv130.ls.us, 10
  %23 = and i64 %mul47.us.ls.us, 4294967294
  br i1 %lcmp.mod.ls, label %pfor.inc55.us.ls.us, label %for.body42.us.epil.ls.us.preheader

for.body42.us.epil.ls.us.preheader:               ; preds = %pfor.detach33.us.ls.us
  br label %for.body42.us.epil.ls.us

for.body42.us.epil.ls.us:                         ; preds = %for.body42.us.epil.ls.us.preheader, %for.body42.us.epil.ls.us
  %indvars.iv.epil.ls.us = phi i64 [ %indvars.iv.next.epil.ls.us, %for.body42.us.epil.ls.us ], [ 0, %for.body42.us.epil.ls.us.preheader ]
  %epil.iter.ls.us = phi i64 [ %epil.iter.sub.ls.us, %for.body42.us.epil.ls.us ], [ %xtraiter.ls, %for.body42.us.epil.ls.us.preheader ]
  %arrayidx46.us.epil.ls.us = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %22, i64 0, i32 2, i64 %indvars.iv.epil.ls.us
  %24 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx46.us.epil.ls.us, align 8, !tbaa !53
  %identifier.us.epil.ls.us = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %24, i64 0, i32 0
  %25 = load i32, i32* %identifier.us.epil.ls.us, align 8, !tbaa !361
  %26 = add nuw nsw i64 %indvars.iv.epil.ls.us, %23
  %arrayidx50.us.epil.ls.us = getelementptr inbounds i32, i32* %.ls3, i64 %26
  store i32 %25, i32* %arrayidx50.us.epil.ls.us, align 4, !tbaa !59
  %indvars.iv.next.epil.ls.us = add nuw nsw i64 %indvars.iv.epil.ls.us, 1
  %epil.iter.sub.ls.us = add nsw i64 %epil.iter.ls.us, -1
  %epil.iter.cmp.ls.us = icmp eq i64 %epil.iter.sub.ls.us, 0
  br i1 %epil.iter.cmp.ls.us, label %pfor.inc55.us.ls.us, label %for.body42.us.epil.ls.us, !llvm.loop !363

pfor.inc55.us.ls.us:                              ; preds = %for.body42.us.epil.ls.us, %pfor.detach33.us.ls.us
  %27 = icmp ult i64 %indvars.iv130.ls.us, %end.ls
  %indvars.iv.next131.ls.us = add nuw nsw i64 %indvars.iv130.ls.us, 1
  br i1 %27, label %pfor.detach33.us.ls.us, label %pfor.cond.cleanup32.loopexit.ls

pfor.cond.cleanup32.loopexit.ls:                  ; preds = %pfor.inc55.us.ls, %pfor.inc55.us.ls.us
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %29 = load atomic i32, i32* %28 acquire, align 8
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup32.loopexit.ls
  %32 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %34 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %33, i16* nonnull %34) #2
  %35 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %36 = call i8* @llvm.frameaddress(i32 0) #2
  %37 = getelementptr inbounds [5 x i8*], [5 x i8*]* %35, i64 0, i64 0
  store volatile i8* %36, i8** %37, align 8
  %38 = call i8* @llvm.stacksave() #2
  %39 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %38, i8** %39, align 8
  %40 = bitcast [5 x i8*]* %35 to i8*
  %41 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %40) #24
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup32.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %43 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %43, i64 0, i32 12, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %44, align 8
  %47 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %48 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %47, i64 0, i32 9
  %51 = bitcast %struct.__cilkrts_stack_frame** %50 to i64*
  store atomic i64 %49, i64* %51 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %52 = load atomic i32, i32* %28 acquire, align 8
  %53 = icmp eq i32 %52, 16777216
  br i1 %53, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach33.us.ls:                              ; preds = %pfor.detach33.us.ls.preheader, %pfor.inc55.us.ls
  %indvars.iv130.ls = phi i64 [ %indvars.iv.next131.ls, %pfor.inc55.us.ls ], [ %indvars.iv130.ls.dac.lcssa, %pfor.detach33.us.ls.preheader ]
  %arrayidx44.us.ls = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %.ls1, i64 %indvars.iv130.ls
  %54 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx44.us.ls, align 8, !tbaa !53
  %mul47.us.ls = mul i64 %indvars.iv130.ls, 10
  %55 = and i64 %mul47.us.ls, 4294967294
  br label %for.body42.us.ls

for.body42.us.ls:                                 ; preds = %for.body42.us.ls, %pfor.detach33.us.ls
  %indvars.iv.ls = phi i64 [ 0, %pfor.detach33.us.ls ], [ %indvars.iv.next.7.ls, %for.body42.us.ls ]
  %niter.ls = phi i64 [ %unroll_iter.ls, %pfor.detach33.us.ls ], [ %niter.nsub.7.ls, %for.body42.us.ls ]
  %arrayidx46.us.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %54, i64 0, i32 2, i64 %indvars.iv.ls
  %56 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx46.us.ls, align 8, !tbaa !53
  %identifier.us.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %56, i64 0, i32 0
  %57 = load i32, i32* %identifier.us.ls, align 8, !tbaa !361
  %58 = add nuw nsw i64 %indvars.iv.ls, %55
  %arrayidx50.us.ls = getelementptr inbounds i32, i32* %.ls3, i64 %58
  store i32 %57, i32* %arrayidx50.us.ls, align 4, !tbaa !59
  %indvars.iv.next.ls = or i64 %indvars.iv.ls, 1
  %arrayidx46.us.1.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %54, i64 0, i32 2, i64 %indvars.iv.next.ls
  %59 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx46.us.1.ls, align 8, !tbaa !53
  %identifier.us.1.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %59, i64 0, i32 0
  %60 = load i32, i32* %identifier.us.1.ls, align 8, !tbaa !361
  %61 = add nuw nsw i64 %indvars.iv.next.ls, %55
  %arrayidx50.us.1.ls = getelementptr inbounds i32, i32* %.ls3, i64 %61
  store i32 %60, i32* %arrayidx50.us.1.ls, align 4, !tbaa !59
  %indvars.iv.next.1.ls = or i64 %indvars.iv.ls, 2
  %arrayidx46.us.2.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %54, i64 0, i32 2, i64 %indvars.iv.next.1.ls
  %62 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx46.us.2.ls, align 8, !tbaa !53
  %identifier.us.2.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %62, i64 0, i32 0
  %63 = load i32, i32* %identifier.us.2.ls, align 8, !tbaa !361
  %64 = add nuw nsw i64 %indvars.iv.next.1.ls, %55
  %arrayidx50.us.2.ls = getelementptr inbounds i32, i32* %.ls3, i64 %64
  store i32 %63, i32* %arrayidx50.us.2.ls, align 4, !tbaa !59
  %indvars.iv.next.2.ls = or i64 %indvars.iv.ls, 3
  %arrayidx46.us.3.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %54, i64 0, i32 2, i64 %indvars.iv.next.2.ls
  %65 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx46.us.3.ls, align 8, !tbaa !53
  %identifier.us.3.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %65, i64 0, i32 0
  %66 = load i32, i32* %identifier.us.3.ls, align 8, !tbaa !361
  %67 = add nuw nsw i64 %indvars.iv.next.2.ls, %55
  %arrayidx50.us.3.ls = getelementptr inbounds i32, i32* %.ls3, i64 %67
  store i32 %66, i32* %arrayidx50.us.3.ls, align 4, !tbaa !59
  %indvars.iv.next.3.ls = or i64 %indvars.iv.ls, 4
  %arrayidx46.us.4.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %54, i64 0, i32 2, i64 %indvars.iv.next.3.ls
  %68 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx46.us.4.ls, align 8, !tbaa !53
  %identifier.us.4.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %68, i64 0, i32 0
  %69 = load i32, i32* %identifier.us.4.ls, align 8, !tbaa !361
  %70 = add nuw nsw i64 %indvars.iv.next.3.ls, %55
  %arrayidx50.us.4.ls = getelementptr inbounds i32, i32* %.ls3, i64 %70
  store i32 %69, i32* %arrayidx50.us.4.ls, align 4, !tbaa !59
  %indvars.iv.next.4.ls = or i64 %indvars.iv.ls, 5
  %arrayidx46.us.5.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %54, i64 0, i32 2, i64 %indvars.iv.next.4.ls
  %71 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx46.us.5.ls, align 8, !tbaa !53
  %identifier.us.5.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %71, i64 0, i32 0
  %72 = load i32, i32* %identifier.us.5.ls, align 8, !tbaa !361
  %73 = add nuw nsw i64 %indvars.iv.next.4.ls, %55
  %arrayidx50.us.5.ls = getelementptr inbounds i32, i32* %.ls3, i64 %73
  store i32 %72, i32* %arrayidx50.us.5.ls, align 4, !tbaa !59
  %indvars.iv.next.5.ls = or i64 %indvars.iv.ls, 6
  %arrayidx46.us.6.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %54, i64 0, i32 2, i64 %indvars.iv.next.5.ls
  %74 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx46.us.6.ls, align 8, !tbaa !53
  %identifier.us.6.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %74, i64 0, i32 0
  %75 = load i32, i32* %identifier.us.6.ls, align 8, !tbaa !361
  %76 = add nuw nsw i64 %indvars.iv.next.5.ls, %55
  %arrayidx50.us.6.ls = getelementptr inbounds i32, i32* %.ls3, i64 %76
  store i32 %75, i32* %arrayidx50.us.6.ls, align 4, !tbaa !59
  %indvars.iv.next.6.ls = or i64 %indvars.iv.ls, 7
  %arrayidx46.us.7.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %54, i64 0, i32 2, i64 %indvars.iv.next.6.ls
  %77 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx46.us.7.ls, align 8, !tbaa !53
  %identifier.us.7.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %77, i64 0, i32 0
  %78 = load i32, i32* %identifier.us.7.ls, align 8, !tbaa !361
  %79 = add nuw nsw i64 %indvars.iv.next.6.ls, %55
  %arrayidx50.us.7.ls = getelementptr inbounds i32, i32* %.ls3, i64 %79
  store i32 %78, i32* %arrayidx50.us.7.ls, align 4, !tbaa !59
  %indvars.iv.next.7.ls = add nuw nsw i64 %indvars.iv.ls, 8
  %niter.nsub.7.ls = add i64 %niter.ls, -8
  %niter.ncmp.7.ls = icmp eq i64 %niter.nsub.7.ls, 0
  br i1 %niter.ncmp.7.ls, label %for.cond39.for.cond.cleanup41_crit_edge.us.unr-lcssa.ls, label %for.body42.us.ls

for.cond39.for.cond.cleanup41_crit_edge.us.unr-lcssa.ls: ; preds = %for.body42.us.ls
  br i1 %lcmp.mod.ls, label %pfor.inc55.us.ls, label %for.body42.us.epil.ls.preheader

for.body42.us.epil.ls.preheader:                  ; preds = %for.cond39.for.cond.cleanup41_crit_edge.us.unr-lcssa.ls
  br label %for.body42.us.epil.ls

for.body42.us.epil.ls:                            ; preds = %for.body42.us.epil.ls.preheader, %for.body42.us.epil.ls
  %indvars.iv.epil.ls = phi i64 [ %indvars.iv.next.epil.ls, %for.body42.us.epil.ls ], [ %indvars.iv.next.7.ls, %for.body42.us.epil.ls.preheader ]
  %epil.iter.ls = phi i64 [ %epil.iter.sub.ls, %for.body42.us.epil.ls ], [ %xtraiter.ls, %for.body42.us.epil.ls.preheader ]
  %arrayidx46.us.epil.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %54, i64 0, i32 2, i64 %indvars.iv.epil.ls
  %80 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx46.us.epil.ls, align 8, !tbaa !53
  %identifier.us.epil.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %80, i64 0, i32 0
  %81 = load i32, i32* %identifier.us.epil.ls, align 8, !tbaa !361
  %82 = add nuw nsw i64 %indvars.iv.epil.ls, %55
  %arrayidx50.us.epil.ls = getelementptr inbounds i32, i32* %.ls3, i64 %82
  store i32 %81, i32* %arrayidx50.us.epil.ls, align 4, !tbaa !59
  %indvars.iv.next.epil.ls = add nuw nsw i64 %indvars.iv.epil.ls, 1
  %epil.iter.sub.ls = add nsw i64 %epil.iter.ls, -1
  %epil.iter.cmp.ls = icmp eq i64 %epil.iter.sub.ls, 0
  br i1 %epil.iter.cmp.ls, label %pfor.inc55.us.ls, label %for.body42.us.epil.ls, !llvm.loop !363

pfor.inc55.us.ls:                                 ; preds = %for.body42.us.epil.ls, %for.cond39.for.cond.cleanup41_crit_edge.us.unr-lcssa.ls
  %83 = icmp ult i64 %indvars.iv130.ls, %end.ls
  %indvars.iv.next131.ls = add nuw nsw i64 %indvars.iv130.ls, 1
  br i1 %83, label %pfor.detach33.us.ls, label %pfor.cond.cleanup32.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7benchIO18readPointsFromFileI8_point3dIdEEE4_seqIT_EPc_pfor.detach.i.ls(i64 %__begin.068.i.start.ls, i64 %end.ls, i64 %.ls, i8** nocapture readonly align 1 %add.ptr.ls, double* nocapture align 1 %.ls1) unnamed_addr #15 {
pfor.detach.i.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.i.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.i.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.i.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.i.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount3 = sub i64 %end.ls, %__begin.068.i.start.ls
  %9 = icmp ugt i64 %itercount3, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.i.ls.preheader

pfor.detach.i.ls.preheader:                       ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin.068.i.ls.ph = phi i64 [ %__begin.068.i.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.i.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount5 = phi i64 [ %itercount3, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin.068.i.ls.dac4 = phi i64 [ %__begin.068.i.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount5, 1
  %miditer = add nuw nsw i64 %__begin.068.i.ls.dac4, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split6, label %.split.split

.split6:                                          ; preds = %16
  call fastcc void @_ZN7benchIO18readPointsFromFileI8_point3dIdEEE4_seqIT_EPc_pfor.detach.i.ls_.split.cilk(i64 %__begin.068.i.ls.dac4, i64 %miditer, i64 %.ls, i8** %add.ptr.ls, double* %.ls1)
  br label %.split.split

.split.split:                                     ; preds = %.split6, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.i.ls.preheader

pfor.cond.cleanup.i.loopexit.ls:                  ; preds = %pfor.detach.i.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.i.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.i.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.i.ls:                                 ; preds = %pfor.detach.i.ls.preheader, %pfor.detach.i.ls
  %__begin.068.i.ls = phi i64 [ %inc.i.ls, %pfor.detach.i.ls ], [ %__begin.068.i.ls.ph, %pfor.detach.i.ls.preheader ]
  %arrayidx.i.ls = getelementptr inbounds i8*, i8** %add.ptr.ls, i64 %__begin.068.i.ls
  %48 = load i8*, i8** %arrayidx.i.ls, align 8, !tbaa !53
  %call.i.i20.ls = tail call fast double @strtod(i8* nocapture nonnull %48, i8** null) #2
  %arrayidx8.i.ls = getelementptr inbounds double, double* %.ls1, i64 %__begin.068.i.ls
  store double %call.i.i20.ls, double* %arrayidx8.i.ls, align 8, !tbaa !18
  %49 = icmp ult i64 %__begin.068.i.ls, %end.ls
  %inc.i.ls = add nuw nsw i64 %__begin.068.i.ls, 1
  br i1 %49, label %pfor.detach.i.ls, label %pfor.cond.cleanup.i.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7benchIO18readPointsFromFileI8_point3dIdEEE4_seqIT_EPc_pfor.detach21.i.ls(i64 %__begin11.066.i.start.ls, i64 %end.ls, i64 %.ls, double* nocapture readonly align 1 %.ls1, %class._point3d* nocapture align 1 %.ls2) unnamed_addr #15 {
pfor.detach21.i.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach21.i.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach21.i.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach21.i.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach21.i.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount4 = sub i64 %end.ls, %__begin11.066.i.start.ls
  %9 = icmp ugt i64 %itercount4, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach21.i.ls.preheader

pfor.detach21.i.ls.preheader:                     ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin11.066.i.ls.ph = phi i64 [ %__begin11.066.i.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach21.i.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount6 = phi i64 [ %itercount4, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin11.066.i.ls.dac5 = phi i64 [ %__begin11.066.i.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount6, 1
  %miditer = add nuw nsw i64 %__begin11.066.i.ls.dac5, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split7, label %.split.split

.split7:                                          ; preds = %16
  call fastcc void @_ZN7benchIO18readPointsFromFileI8_point3dIdEEE4_seqIT_EPc_pfor.detach21.i.ls_.split.cilk(i64 %__begin11.066.i.ls.dac5, i64 %miditer, i64 %.ls, double* %.ls1, %class._point3d* %.ls2)
  br label %.split.split

.split.split:                                     ; preds = %.split7, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach21.i.ls.preheader

pfor.cond.cleanup20.i.loopexit.ls:                ; preds = %pfor.detach21.i.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup20.i.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup20.i.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach21.i.ls:                               ; preds = %pfor.detach21.i.ls.preheader, %pfor.detach21.i.ls
  %__begin11.066.i.ls = phi i64 [ %inc32.i.ls, %pfor.detach21.i.ls ], [ %__begin11.066.i.ls.ph, %pfor.detach21.i.ls.preheader ]
  %mul28.i.ls = mul nuw nsw i64 %__begin11.066.i.ls, 3
  %add.ptr.i.ls = getelementptr inbounds double, double* %.ls1, i64 %mul28.i.ls
  %48 = bitcast double* %add.ptr.i.ls to <2 x i64>*
  %49 = load <2 x i64>, <2 x i64>* %48, align 8, !tbaa !18
  %arrayidx3.i.i.ls = getelementptr inbounds double, double* %add.ptr.i.ls, i64 2
  %50 = bitcast double* %arrayidx3.i.i.ls to i64*
  %51 = load i64, i64* %50, align 8, !tbaa !18
  %arrayidx29.i.ls = getelementptr inbounds %class._point3d, %class._point3d* %.ls2, i64 %__begin11.066.i.ls
  %52 = bitcast %class._point3d* %arrayidx29.i.ls to <2 x i64>*
  store <2 x i64> %49, <2 x i64>* %52, align 8
  %ref.tmp.sroa.5.0..sroa_idx62.i.ls = getelementptr inbounds %class._point3d, %class._point3d* %.ls2, i64 %__begin11.066.i.ls, i32 2
  %ref.tmp.sroa.5.0..sroa_cast63.i.ls = bitcast double* %ref.tmp.sroa.5.0..sroa_idx62.i.ls to i64*
  store i64 %51, i64* %ref.tmp.sroa.5.0..sroa_cast63.i.ls, align 8
  %53 = icmp ult i64 %__begin11.066.i.ls, %end.ls
  %inc32.i.ls = add nuw nsw i64 %__begin11.066.i.ls, 1
  br i1 %53, label %pfor.detach21.i.ls, label %pfor.cond.cleanup20.i.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_Z13timeNeighborsILi1E8_point3dIdEEvPT0_iiiPc_pfor.detach.ls(i64 %indvars.iv137.start.ls, i64 %end.ls, i64 %.ls, %struct.vertex.29* align 1 %.ls1, %class._point3d* nocapture readonly align 1 %pts.ls, %struct.vertex.29** nocapture align 1 %.ls2) unnamed_addr #15 {
pfor.detach.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount4 = sub i64 %end.ls, %indvars.iv137.start.ls
  %9 = icmp ugt i64 %itercount4, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv137.ls.ph = phi i64 [ %indvars.iv137.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount6 = phi i64 [ %itercount4, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv137.ls.dac5 = phi i64 [ %indvars.iv137.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount6, 1
  %miditer = add nuw nsw i64 %indvars.iv137.ls.dac5, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split7, label %.split.split

.split7:                                          ; preds = %16
  call fastcc void @_Z13timeNeighborsILi1E8_point3dIdEEvPT0_iiiPc_pfor.detach.ls_.split.cilk(i64 %indvars.iv137.ls.dac5, i64 %miditer, i64 %.ls, %struct.vertex.29* %.ls1, %class._point3d* %pts.ls, %struct.vertex.29** %.ls2)
  br label %.split.split

.split.split:                                     ; preds = %.split7, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.loopexit.ls:                    ; preds = %pfor.detach.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %pfor.detach.ls
  %indvars.iv137.ls = phi i64 [ %indvars.iv.next138.ls, %pfor.detach.ls ], [ %indvars.iv137.ls.ph, %pfor.detach.ls.preheader ]
  %arrayidx8.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %.ls1, i64 %indvars.iv137.ls
  %arrayidx10.ls = getelementptr inbounds %class._point3d, %class._point3d* %pts.ls, i64 %indvars.iv137.ls
  %48 = bitcast %class._point3d* %arrayidx10.ls to i8*
  %identifier.i.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %arrayidx8.ls, i64 0, i32 0
  %49 = trunc i64 %indvars.iv137.ls to i32
  store i32 %49, i32* %identifier.i.ls, align 8, !tbaa !364
  %pt.i.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %.ls1, i64 %indvars.iv137.ls, i32 1
  %50 = bitcast %class._point3d* %pt.i.ls to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %50, i8* %48, i64 24, i32 8, i1 false)
  %arrayidx12.ls = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %.ls2, i64 %indvars.iv137.ls
  store %struct.vertex.29* %arrayidx8.ls, %struct.vertex.29** %arrayidx12.ls, align 8, !tbaa !53
  %51 = icmp ult i64 %indvars.iv137.ls, %end.ls
  %indvars.iv.next138.ls = add nuw nsw i64 %indvars.iv137.ls, 1
  br i1 %51, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_Z13timeNeighborsILi1E8_point3dIdEEvPT0_iiiPc_pfor.detach33.us.ls(i64 %indvars.iv131.start.ls, i64 %end.ls, i64 %.ls, %struct.vertex.29** nocapture readonly align 1 %.ls1, i1 %.ls2, i64 %unroll_iter.ls, i32* nocapture align 1 %.ls3, i1 %lcmp.mod.ls, i64 %xtraiter.ls) unnamed_addr #15 {
pfor.detach33.lr.ph.split.us.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach33.lr.ph.split.us.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach33.lr.ph.split.us.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach33.lr.ph.split.us.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach33.lr.ph.split.us.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount5 = sub i64 %end.ls, %indvars.iv131.start.ls
  %9 = icmp ugt i64 %itercount5, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach33.lr.ph.split.us.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount7 = phi i64 [ %itercount5, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv131.ls.dac6 = phi i64 [ %indvars.iv131.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount7, 1
  %miditer = add nuw nsw i64 %indvars.iv131.ls.dac6, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split8, label %.split.split

.split8:                                          ; preds = %16
  call fastcc void @_Z13timeNeighborsILi1E8_point3dIdEEvPT0_iiiPc_pfor.detach33.us.ls_.split.cilk(i64 %indvars.iv131.ls.dac6, i64 %miditer, i64 %.ls, %struct.vertex.29** %.ls1, i1 %.ls2, i64 %unroll_iter.ls, i32* %.ls3, i1 %lcmp.mod.ls, i64 %xtraiter.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split8, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach33.lr.ph.split.us.ls.split._crit_edge

pfor.detach33.lr.ph.split.us.ls.split._crit_edge: ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv131.ls.dac.lcssa = phi i64 [ %indvars.iv131.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br i1 %.ls2, label %pfor.detach33.us.ls.us.preheader, label %pfor.detach33.us.ls.preheader

pfor.detach33.us.ls.preheader:                    ; preds = %pfor.detach33.lr.ph.split.us.ls.split._crit_edge
  br label %pfor.detach33.us.ls

pfor.detach33.us.ls.us.preheader:                 ; preds = %pfor.detach33.lr.ph.split.us.ls.split._crit_edge
  br label %pfor.detach33.us.ls.us

pfor.detach33.us.ls.us:                           ; preds = %pfor.detach33.us.ls.us.preheader, %pfor.inc55.us.ls.us
  %indvars.iv131.ls.us = phi i64 [ %indvars.iv.next132.ls.us, %pfor.inc55.us.ls.us ], [ %indvars.iv131.ls.dac.lcssa, %pfor.detach33.us.ls.us.preheader ]
  %arrayidx44.us.ls.us = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %.ls1, i64 %indvars.iv131.ls.us
  %22 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx44.us.ls.us, align 8, !tbaa !53
  br i1 %lcmp.mod.ls, label %pfor.inc55.us.ls.us, label %for.body42.us.epil.ls.us.preheader

for.body42.us.epil.ls.us.preheader:               ; preds = %pfor.detach33.us.ls.us
  br label %for.body42.us.epil.ls.us

for.body42.us.epil.ls.us:                         ; preds = %for.body42.us.epil.ls.us.preheader, %for.body42.us.epil.ls.us
  %indvars.iv.epil.ls.us = phi i64 [ %indvars.iv.next.epil.ls.us, %for.body42.us.epil.ls.us ], [ 0, %for.body42.us.epil.ls.us.preheader ]
  %epil.iter.ls.us = phi i64 [ %epil.iter.sub.ls.us, %for.body42.us.epil.ls.us ], [ %xtraiter.ls, %for.body42.us.epil.ls.us.preheader ]
  %arrayidx46.us.epil.ls.us = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %22, i64 0, i32 2, i64 %indvars.iv.epil.ls.us
  %23 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx46.us.epil.ls.us, align 8, !tbaa !53
  %identifier.us.epil.ls.us = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %23, i64 0, i32 0
  %24 = load i32, i32* %identifier.us.epil.ls.us, align 8, !tbaa !364
  %25 = add nuw nsw i64 %indvars.iv.epil.ls.us, %indvars.iv131.ls.us
  %arrayidx50.us.epil.ls.us = getelementptr inbounds i32, i32* %.ls3, i64 %25
  store i32 %24, i32* %arrayidx50.us.epil.ls.us, align 4, !tbaa !59
  %indvars.iv.next.epil.ls.us = add nuw nsw i64 %indvars.iv.epil.ls.us, 1
  %epil.iter.sub.ls.us = add nsw i64 %epil.iter.ls.us, -1
  %epil.iter.cmp.ls.us = icmp eq i64 %epil.iter.sub.ls.us, 0
  br i1 %epil.iter.cmp.ls.us, label %pfor.inc55.us.ls.us, label %for.body42.us.epil.ls.us, !llvm.loop !366

pfor.inc55.us.ls.us:                              ; preds = %for.body42.us.epil.ls.us, %pfor.detach33.us.ls.us
  %26 = icmp ult i64 %indvars.iv131.ls.us, %end.ls
  %indvars.iv.next132.ls.us = add nuw nsw i64 %indvars.iv131.ls.us, 1
  br i1 %26, label %pfor.detach33.us.ls.us, label %pfor.cond.cleanup32.loopexit.ls

pfor.cond.cleanup32.loopexit.ls:                  ; preds = %pfor.inc55.us.ls, %pfor.inc55.us.ls.us
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %28 = load atomic i32, i32* %27 acquire, align 8
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup32.loopexit.ls
  %31 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %32 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %32, i16* nonnull %33) #2
  %34 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %35 = call i8* @llvm.frameaddress(i32 0) #2
  %36 = getelementptr inbounds [5 x i8*], [5 x i8*]* %34, i64 0, i64 0
  store volatile i8* %35, i8** %36, align 8
  %37 = call i8* @llvm.stacksave() #2
  %38 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %37, i8** %38, align 8
  %39 = bitcast [5 x i8*]* %34 to i8*
  %40 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %39) #24
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup32.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %42 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %43 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %42, i64 0, i32 12, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %43, align 8
  %46 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %47 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %46, i64 0, i32 9
  %50 = bitcast %struct.__cilkrts_stack_frame** %49 to i64*
  store atomic i64 %48, i64* %50 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %51 = load atomic i32, i32* %27 acquire, align 8
  %52 = icmp eq i32 %51, 16777216
  br i1 %52, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach33.us.ls:                              ; preds = %pfor.detach33.us.ls.preheader, %pfor.inc55.us.ls
  %indvars.iv131.ls = phi i64 [ %indvars.iv.next132.ls, %pfor.inc55.us.ls ], [ %indvars.iv131.ls.dac.lcssa, %pfor.detach33.us.ls.preheader ]
  %arrayidx44.us.ls = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %.ls1, i64 %indvars.iv131.ls
  %53 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx44.us.ls, align 8, !tbaa !53
  br label %for.body42.us.ls

for.body42.us.ls:                                 ; preds = %for.body42.us.ls, %pfor.detach33.us.ls
  %indvars.iv.ls = phi i64 [ 0, %pfor.detach33.us.ls ], [ %indvars.iv.next.7.ls, %for.body42.us.ls ]
  %niter.ls = phi i64 [ %unroll_iter.ls, %pfor.detach33.us.ls ], [ %niter.nsub.7.ls, %for.body42.us.ls ]
  %arrayidx46.us.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %53, i64 0, i32 2, i64 %indvars.iv.ls
  %54 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx46.us.ls, align 8, !tbaa !53
  %identifier.us.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %54, i64 0, i32 0
  %55 = load i32, i32* %identifier.us.ls, align 8, !tbaa !364
  %56 = add nuw nsw i64 %indvars.iv.ls, %indvars.iv131.ls
  %arrayidx50.us.ls = getelementptr inbounds i32, i32* %.ls3, i64 %56
  store i32 %55, i32* %arrayidx50.us.ls, align 4, !tbaa !59
  %indvars.iv.next.ls = or i64 %indvars.iv.ls, 1
  %arrayidx46.us.1.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %53, i64 0, i32 2, i64 %indvars.iv.next.ls
  %57 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx46.us.1.ls, align 8, !tbaa !53
  %identifier.us.1.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %57, i64 0, i32 0
  %58 = load i32, i32* %identifier.us.1.ls, align 8, !tbaa !364
  %59 = add nuw nsw i64 %indvars.iv.next.ls, %indvars.iv131.ls
  %arrayidx50.us.1.ls = getelementptr inbounds i32, i32* %.ls3, i64 %59
  store i32 %58, i32* %arrayidx50.us.1.ls, align 4, !tbaa !59
  %indvars.iv.next.1.ls = or i64 %indvars.iv.ls, 2
  %arrayidx46.us.2.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %53, i64 0, i32 2, i64 %indvars.iv.next.1.ls
  %60 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx46.us.2.ls, align 8, !tbaa !53
  %identifier.us.2.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %60, i64 0, i32 0
  %61 = load i32, i32* %identifier.us.2.ls, align 8, !tbaa !364
  %62 = add nuw nsw i64 %indvars.iv.next.1.ls, %indvars.iv131.ls
  %arrayidx50.us.2.ls = getelementptr inbounds i32, i32* %.ls3, i64 %62
  store i32 %61, i32* %arrayidx50.us.2.ls, align 4, !tbaa !59
  %indvars.iv.next.2.ls = or i64 %indvars.iv.ls, 3
  %arrayidx46.us.3.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %53, i64 0, i32 2, i64 %indvars.iv.next.2.ls
  %63 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx46.us.3.ls, align 8, !tbaa !53
  %identifier.us.3.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %63, i64 0, i32 0
  %64 = load i32, i32* %identifier.us.3.ls, align 8, !tbaa !364
  %65 = add nuw nsw i64 %indvars.iv.next.2.ls, %indvars.iv131.ls
  %arrayidx50.us.3.ls = getelementptr inbounds i32, i32* %.ls3, i64 %65
  store i32 %64, i32* %arrayidx50.us.3.ls, align 4, !tbaa !59
  %indvars.iv.next.3.ls = or i64 %indvars.iv.ls, 4
  %arrayidx46.us.4.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %53, i64 0, i32 2, i64 %indvars.iv.next.3.ls
  %66 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx46.us.4.ls, align 8, !tbaa !53
  %identifier.us.4.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %66, i64 0, i32 0
  %67 = load i32, i32* %identifier.us.4.ls, align 8, !tbaa !364
  %68 = add nuw nsw i64 %indvars.iv.next.3.ls, %indvars.iv131.ls
  %arrayidx50.us.4.ls = getelementptr inbounds i32, i32* %.ls3, i64 %68
  store i32 %67, i32* %arrayidx50.us.4.ls, align 4, !tbaa !59
  %indvars.iv.next.4.ls = or i64 %indvars.iv.ls, 5
  %arrayidx46.us.5.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %53, i64 0, i32 2, i64 %indvars.iv.next.4.ls
  %69 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx46.us.5.ls, align 8, !tbaa !53
  %identifier.us.5.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %69, i64 0, i32 0
  %70 = load i32, i32* %identifier.us.5.ls, align 8, !tbaa !364
  %71 = add nuw nsw i64 %indvars.iv.next.4.ls, %indvars.iv131.ls
  %arrayidx50.us.5.ls = getelementptr inbounds i32, i32* %.ls3, i64 %71
  store i32 %70, i32* %arrayidx50.us.5.ls, align 4, !tbaa !59
  %indvars.iv.next.5.ls = or i64 %indvars.iv.ls, 6
  %arrayidx46.us.6.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %53, i64 0, i32 2, i64 %indvars.iv.next.5.ls
  %72 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx46.us.6.ls, align 8, !tbaa !53
  %identifier.us.6.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %72, i64 0, i32 0
  %73 = load i32, i32* %identifier.us.6.ls, align 8, !tbaa !364
  %74 = add nuw nsw i64 %indvars.iv.next.5.ls, %indvars.iv131.ls
  %arrayidx50.us.6.ls = getelementptr inbounds i32, i32* %.ls3, i64 %74
  store i32 %73, i32* %arrayidx50.us.6.ls, align 4, !tbaa !59
  %indvars.iv.next.6.ls = or i64 %indvars.iv.ls, 7
  %arrayidx46.us.7.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %53, i64 0, i32 2, i64 %indvars.iv.next.6.ls
  %75 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx46.us.7.ls, align 8, !tbaa !53
  %identifier.us.7.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %75, i64 0, i32 0
  %76 = load i32, i32* %identifier.us.7.ls, align 8, !tbaa !364
  %77 = add nuw nsw i64 %indvars.iv.next.6.ls, %indvars.iv131.ls
  %arrayidx50.us.7.ls = getelementptr inbounds i32, i32* %.ls3, i64 %77
  store i32 %76, i32* %arrayidx50.us.7.ls, align 4, !tbaa !59
  %indvars.iv.next.7.ls = add nuw nsw i64 %indvars.iv.ls, 8
  %niter.nsub.7.ls = add i64 %niter.ls, -8
  %niter.ncmp.7.ls = icmp eq i64 %niter.nsub.7.ls, 0
  br i1 %niter.ncmp.7.ls, label %for.cond39.for.cond.cleanup41_crit_edge.us.unr-lcssa.ls, label %for.body42.us.ls

for.cond39.for.cond.cleanup41_crit_edge.us.unr-lcssa.ls: ; preds = %for.body42.us.ls
  br i1 %lcmp.mod.ls, label %pfor.inc55.us.ls, label %for.body42.us.epil.ls.preheader

for.body42.us.epil.ls.preheader:                  ; preds = %for.cond39.for.cond.cleanup41_crit_edge.us.unr-lcssa.ls
  br label %for.body42.us.epil.ls

for.body42.us.epil.ls:                            ; preds = %for.body42.us.epil.ls.preheader, %for.body42.us.epil.ls
  %indvars.iv.epil.ls = phi i64 [ %indvars.iv.next.epil.ls, %for.body42.us.epil.ls ], [ %indvars.iv.next.7.ls, %for.body42.us.epil.ls.preheader ]
  %epil.iter.ls = phi i64 [ %epil.iter.sub.ls, %for.body42.us.epil.ls ], [ %xtraiter.ls, %for.body42.us.epil.ls.preheader ]
  %arrayidx46.us.epil.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %53, i64 0, i32 2, i64 %indvars.iv.epil.ls
  %78 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx46.us.epil.ls, align 8, !tbaa !53
  %identifier.us.epil.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %78, i64 0, i32 0
  %79 = load i32, i32* %identifier.us.epil.ls, align 8, !tbaa !364
  %80 = add nuw nsw i64 %indvars.iv.epil.ls, %indvars.iv131.ls
  %arrayidx50.us.epil.ls = getelementptr inbounds i32, i32* %.ls3, i64 %80
  store i32 %79, i32* %arrayidx50.us.epil.ls, align 4, !tbaa !59
  %indvars.iv.next.epil.ls = add nuw nsw i64 %indvars.iv.epil.ls, 1
  %epil.iter.sub.ls = add nsw i64 %epil.iter.ls, -1
  %epil.iter.cmp.ls = icmp eq i64 %epil.iter.sub.ls, 0
  br i1 %epil.iter.cmp.ls, label %pfor.inc55.us.ls, label %for.body42.us.epil.ls, !llvm.loop !366

pfor.inc55.us.ls:                                 ; preds = %for.body42.us.epil.ls, %for.cond39.for.cond.cleanup41_crit_edge.us.unr-lcssa.ls
  %81 = icmp ult i64 %indvars.iv131.ls, %end.ls
  %indvars.iv.next132.ls = add nuw nsw i64 %indvars.iv131.ls, 1
  br i1 %81, label %pfor.detach33.us.ls, label %pfor.cond.cleanup32.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_Z13timeNeighborsILi10E8_point3dIdEEvPT0_iiiPc_pfor.detach.ls(i64 %indvars.iv135.start.ls, i64 %end.ls, i64 %.ls, %struct.vertex.44* align 1 %.ls1, %class._point3d* nocapture readonly align 1 %pts.ls, %struct.vertex.44** nocapture align 1 %.ls2) unnamed_addr #15 {
pfor.detach.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount4 = sub i64 %end.ls, %indvars.iv135.start.ls
  %9 = icmp ugt i64 %itercount4, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv135.ls.ph = phi i64 [ %indvars.iv135.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount6 = phi i64 [ %itercount4, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv135.ls.dac5 = phi i64 [ %indvars.iv135.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount6, 1
  %miditer = add nuw nsw i64 %indvars.iv135.ls.dac5, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split7, label %.split.split

.split7:                                          ; preds = %16
  call fastcc void @_Z13timeNeighborsILi10E8_point3dIdEEvPT0_iiiPc_pfor.detach.ls_.split.cilk(i64 %indvars.iv135.ls.dac5, i64 %miditer, i64 %.ls, %struct.vertex.44* %.ls1, %class._point3d* %pts.ls, %struct.vertex.44** %.ls2)
  br label %.split.split

.split.split:                                     ; preds = %.split7, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.loopexit.ls:                    ; preds = %pfor.detach.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %pfor.detach.ls
  %indvars.iv135.ls = phi i64 [ %indvars.iv.next136.ls, %pfor.detach.ls ], [ %indvars.iv135.ls.ph, %pfor.detach.ls.preheader ]
  %arrayidx8.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %.ls1, i64 %indvars.iv135.ls
  %arrayidx10.ls = getelementptr inbounds %class._point3d, %class._point3d* %pts.ls, i64 %indvars.iv135.ls
  %48 = bitcast %class._point3d* %arrayidx10.ls to i8*
  %identifier.i.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %arrayidx8.ls, i64 0, i32 0
  %49 = trunc i64 %indvars.iv135.ls to i32
  store i32 %49, i32* %identifier.i.ls, align 8, !tbaa !367
  %pt.i.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %.ls1, i64 %indvars.iv135.ls, i32 1
  %50 = bitcast %class._point3d* %pt.i.ls to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %50, i8* %48, i64 24, i32 8, i1 false)
  %arrayidx12.ls = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %.ls2, i64 %indvars.iv135.ls
  store %struct.vertex.44* %arrayidx8.ls, %struct.vertex.44** %arrayidx12.ls, align 8, !tbaa !53
  %51 = icmp ult i64 %indvars.iv135.ls, %end.ls
  %indvars.iv.next136.ls = add nuw nsw i64 %indvars.iv135.ls, 1
  br i1 %51, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_Z13timeNeighborsILi10E8_point3dIdEEvPT0_iiiPc_pfor.detach33.us.ls(i64 %indvars.iv129.start.ls, i64 %end.ls, i64 %.ls, %struct.vertex.44** nocapture readonly align 1 %.ls1, i1 %.ls2, i64 %unroll_iter.ls, i32* nocapture align 1 %.ls3, i1 %lcmp.mod.ls, i64 %xtraiter.ls) unnamed_addr #15 {
pfor.detach33.lr.ph.split.us.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach33.lr.ph.split.us.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach33.lr.ph.split.us.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach33.lr.ph.split.us.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach33.lr.ph.split.us.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount5 = sub i64 %end.ls, %indvars.iv129.start.ls
  %9 = icmp ugt i64 %itercount5, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach33.lr.ph.split.us.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount7 = phi i64 [ %itercount5, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv129.ls.dac6 = phi i64 [ %indvars.iv129.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount7, 1
  %miditer = add nuw nsw i64 %indvars.iv129.ls.dac6, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split8, label %.split.split

.split8:                                          ; preds = %16
  call fastcc void @_Z13timeNeighborsILi10E8_point3dIdEEvPT0_iiiPc_pfor.detach33.us.ls_.split.cilk(i64 %indvars.iv129.ls.dac6, i64 %miditer, i64 %.ls, %struct.vertex.44** %.ls1, i1 %.ls2, i64 %unroll_iter.ls, i32* %.ls3, i1 %lcmp.mod.ls, i64 %xtraiter.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split8, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach33.lr.ph.split.us.ls.split._crit_edge

pfor.detach33.lr.ph.split.us.ls.split._crit_edge: ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv129.ls.dac.lcssa = phi i64 [ %indvars.iv129.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br i1 %.ls2, label %pfor.detach33.us.ls.us.preheader, label %pfor.detach33.us.ls.preheader

pfor.detach33.us.ls.preheader:                    ; preds = %pfor.detach33.lr.ph.split.us.ls.split._crit_edge
  br label %pfor.detach33.us.ls

pfor.detach33.us.ls.us.preheader:                 ; preds = %pfor.detach33.lr.ph.split.us.ls.split._crit_edge
  br label %pfor.detach33.us.ls.us

pfor.detach33.us.ls.us:                           ; preds = %pfor.detach33.us.ls.us.preheader, %pfor.inc55.us.ls.us
  %indvars.iv129.ls.us = phi i64 [ %indvars.iv.next130.ls.us, %pfor.inc55.us.ls.us ], [ %indvars.iv129.ls.dac.lcssa, %pfor.detach33.us.ls.us.preheader ]
  %arrayidx44.us.ls.us = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %.ls1, i64 %indvars.iv129.ls.us
  %22 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx44.us.ls.us, align 8, !tbaa !53
  %mul47.us.ls.us = mul i64 %indvars.iv129.ls.us, 10
  %23 = and i64 %mul47.us.ls.us, 4294967294
  br i1 %lcmp.mod.ls, label %pfor.inc55.us.ls.us, label %for.body42.us.epil.ls.us.preheader

for.body42.us.epil.ls.us.preheader:               ; preds = %pfor.detach33.us.ls.us
  br label %for.body42.us.epil.ls.us

for.body42.us.epil.ls.us:                         ; preds = %for.body42.us.epil.ls.us.preheader, %for.body42.us.epil.ls.us
  %indvars.iv.epil.ls.us = phi i64 [ %indvars.iv.next.epil.ls.us, %for.body42.us.epil.ls.us ], [ 0, %for.body42.us.epil.ls.us.preheader ]
  %epil.iter.ls.us = phi i64 [ %epil.iter.sub.ls.us, %for.body42.us.epil.ls.us ], [ %xtraiter.ls, %for.body42.us.epil.ls.us.preheader ]
  %arrayidx46.us.epil.ls.us = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %22, i64 0, i32 2, i64 %indvars.iv.epil.ls.us
  %24 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx46.us.epil.ls.us, align 8, !tbaa !53
  %identifier.us.epil.ls.us = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %24, i64 0, i32 0
  %25 = load i32, i32* %identifier.us.epil.ls.us, align 8, !tbaa !367
  %26 = add nuw nsw i64 %indvars.iv.epil.ls.us, %23
  %arrayidx50.us.epil.ls.us = getelementptr inbounds i32, i32* %.ls3, i64 %26
  store i32 %25, i32* %arrayidx50.us.epil.ls.us, align 4, !tbaa !59
  %indvars.iv.next.epil.ls.us = add nuw nsw i64 %indvars.iv.epil.ls.us, 1
  %epil.iter.sub.ls.us = add nsw i64 %epil.iter.ls.us, -1
  %epil.iter.cmp.ls.us = icmp eq i64 %epil.iter.sub.ls.us, 0
  br i1 %epil.iter.cmp.ls.us, label %pfor.inc55.us.ls.us, label %for.body42.us.epil.ls.us, !llvm.loop !369

pfor.inc55.us.ls.us:                              ; preds = %for.body42.us.epil.ls.us, %pfor.detach33.us.ls.us
  %27 = icmp ult i64 %indvars.iv129.ls.us, %end.ls
  %indvars.iv.next130.ls.us = add nuw nsw i64 %indvars.iv129.ls.us, 1
  br i1 %27, label %pfor.detach33.us.ls.us, label %pfor.cond.cleanup32.loopexit.ls

pfor.cond.cleanup32.loopexit.ls:                  ; preds = %pfor.inc55.us.ls, %pfor.inc55.us.ls.us
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %29 = load atomic i32, i32* %28 acquire, align 8
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup32.loopexit.ls
  %32 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %34 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %33, i16* nonnull %34) #2
  %35 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %36 = call i8* @llvm.frameaddress(i32 0) #2
  %37 = getelementptr inbounds [5 x i8*], [5 x i8*]* %35, i64 0, i64 0
  store volatile i8* %36, i8** %37, align 8
  %38 = call i8* @llvm.stacksave() #2
  %39 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %38, i8** %39, align 8
  %40 = bitcast [5 x i8*]* %35 to i8*
  %41 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %40) #24
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup32.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %43 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %43, i64 0, i32 12, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %44, align 8
  %47 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %48 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %47, i64 0, i32 9
  %51 = bitcast %struct.__cilkrts_stack_frame** %50 to i64*
  store atomic i64 %49, i64* %51 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %52 = load atomic i32, i32* %28 acquire, align 8
  %53 = icmp eq i32 %52, 16777216
  br i1 %53, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach33.us.ls:                              ; preds = %pfor.detach33.us.ls.preheader, %pfor.inc55.us.ls
  %indvars.iv129.ls = phi i64 [ %indvars.iv.next130.ls, %pfor.inc55.us.ls ], [ %indvars.iv129.ls.dac.lcssa, %pfor.detach33.us.ls.preheader ]
  %arrayidx44.us.ls = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %.ls1, i64 %indvars.iv129.ls
  %54 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx44.us.ls, align 8, !tbaa !53
  %mul47.us.ls = mul i64 %indvars.iv129.ls, 10
  %55 = and i64 %mul47.us.ls, 4294967294
  br label %for.body42.us.ls

for.body42.us.ls:                                 ; preds = %for.body42.us.ls, %pfor.detach33.us.ls
  %indvars.iv.ls = phi i64 [ 0, %pfor.detach33.us.ls ], [ %indvars.iv.next.7.ls, %for.body42.us.ls ]
  %niter.ls = phi i64 [ %unroll_iter.ls, %pfor.detach33.us.ls ], [ %niter.nsub.7.ls, %for.body42.us.ls ]
  %arrayidx46.us.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %54, i64 0, i32 2, i64 %indvars.iv.ls
  %56 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx46.us.ls, align 8, !tbaa !53
  %identifier.us.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %56, i64 0, i32 0
  %57 = load i32, i32* %identifier.us.ls, align 8, !tbaa !367
  %58 = add nuw nsw i64 %indvars.iv.ls, %55
  %arrayidx50.us.ls = getelementptr inbounds i32, i32* %.ls3, i64 %58
  store i32 %57, i32* %arrayidx50.us.ls, align 4, !tbaa !59
  %indvars.iv.next.ls = or i64 %indvars.iv.ls, 1
  %arrayidx46.us.1.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %54, i64 0, i32 2, i64 %indvars.iv.next.ls
  %59 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx46.us.1.ls, align 8, !tbaa !53
  %identifier.us.1.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %59, i64 0, i32 0
  %60 = load i32, i32* %identifier.us.1.ls, align 8, !tbaa !367
  %61 = add nuw nsw i64 %indvars.iv.next.ls, %55
  %arrayidx50.us.1.ls = getelementptr inbounds i32, i32* %.ls3, i64 %61
  store i32 %60, i32* %arrayidx50.us.1.ls, align 4, !tbaa !59
  %indvars.iv.next.1.ls = or i64 %indvars.iv.ls, 2
  %arrayidx46.us.2.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %54, i64 0, i32 2, i64 %indvars.iv.next.1.ls
  %62 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx46.us.2.ls, align 8, !tbaa !53
  %identifier.us.2.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %62, i64 0, i32 0
  %63 = load i32, i32* %identifier.us.2.ls, align 8, !tbaa !367
  %64 = add nuw nsw i64 %indvars.iv.next.1.ls, %55
  %arrayidx50.us.2.ls = getelementptr inbounds i32, i32* %.ls3, i64 %64
  store i32 %63, i32* %arrayidx50.us.2.ls, align 4, !tbaa !59
  %indvars.iv.next.2.ls = or i64 %indvars.iv.ls, 3
  %arrayidx46.us.3.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %54, i64 0, i32 2, i64 %indvars.iv.next.2.ls
  %65 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx46.us.3.ls, align 8, !tbaa !53
  %identifier.us.3.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %65, i64 0, i32 0
  %66 = load i32, i32* %identifier.us.3.ls, align 8, !tbaa !367
  %67 = add nuw nsw i64 %indvars.iv.next.2.ls, %55
  %arrayidx50.us.3.ls = getelementptr inbounds i32, i32* %.ls3, i64 %67
  store i32 %66, i32* %arrayidx50.us.3.ls, align 4, !tbaa !59
  %indvars.iv.next.3.ls = or i64 %indvars.iv.ls, 4
  %arrayidx46.us.4.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %54, i64 0, i32 2, i64 %indvars.iv.next.3.ls
  %68 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx46.us.4.ls, align 8, !tbaa !53
  %identifier.us.4.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %68, i64 0, i32 0
  %69 = load i32, i32* %identifier.us.4.ls, align 8, !tbaa !367
  %70 = add nuw nsw i64 %indvars.iv.next.3.ls, %55
  %arrayidx50.us.4.ls = getelementptr inbounds i32, i32* %.ls3, i64 %70
  store i32 %69, i32* %arrayidx50.us.4.ls, align 4, !tbaa !59
  %indvars.iv.next.4.ls = or i64 %indvars.iv.ls, 5
  %arrayidx46.us.5.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %54, i64 0, i32 2, i64 %indvars.iv.next.4.ls
  %71 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx46.us.5.ls, align 8, !tbaa !53
  %identifier.us.5.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %71, i64 0, i32 0
  %72 = load i32, i32* %identifier.us.5.ls, align 8, !tbaa !367
  %73 = add nuw nsw i64 %indvars.iv.next.4.ls, %55
  %arrayidx50.us.5.ls = getelementptr inbounds i32, i32* %.ls3, i64 %73
  store i32 %72, i32* %arrayidx50.us.5.ls, align 4, !tbaa !59
  %indvars.iv.next.5.ls = or i64 %indvars.iv.ls, 6
  %arrayidx46.us.6.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %54, i64 0, i32 2, i64 %indvars.iv.next.5.ls
  %74 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx46.us.6.ls, align 8, !tbaa !53
  %identifier.us.6.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %74, i64 0, i32 0
  %75 = load i32, i32* %identifier.us.6.ls, align 8, !tbaa !367
  %76 = add nuw nsw i64 %indvars.iv.next.5.ls, %55
  %arrayidx50.us.6.ls = getelementptr inbounds i32, i32* %.ls3, i64 %76
  store i32 %75, i32* %arrayidx50.us.6.ls, align 4, !tbaa !59
  %indvars.iv.next.6.ls = or i64 %indvars.iv.ls, 7
  %arrayidx46.us.7.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %54, i64 0, i32 2, i64 %indvars.iv.next.6.ls
  %77 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx46.us.7.ls, align 8, !tbaa !53
  %identifier.us.7.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %77, i64 0, i32 0
  %78 = load i32, i32* %identifier.us.7.ls, align 8, !tbaa !367
  %79 = add nuw nsw i64 %indvars.iv.next.6.ls, %55
  %arrayidx50.us.7.ls = getelementptr inbounds i32, i32* %.ls3, i64 %79
  store i32 %78, i32* %arrayidx50.us.7.ls, align 4, !tbaa !59
  %indvars.iv.next.7.ls = add nuw nsw i64 %indvars.iv.ls, 8
  %niter.nsub.7.ls = add i64 %niter.ls, -8
  %niter.ncmp.7.ls = icmp eq i64 %niter.nsub.7.ls, 0
  br i1 %niter.ncmp.7.ls, label %for.cond39.for.cond.cleanup41_crit_edge.us.unr-lcssa.ls, label %for.body42.us.ls

for.cond39.for.cond.cleanup41_crit_edge.us.unr-lcssa.ls: ; preds = %for.body42.us.ls
  br i1 %lcmp.mod.ls, label %pfor.inc55.us.ls, label %for.body42.us.epil.ls.preheader

for.body42.us.epil.ls.preheader:                  ; preds = %for.cond39.for.cond.cleanup41_crit_edge.us.unr-lcssa.ls
  br label %for.body42.us.epil.ls

for.body42.us.epil.ls:                            ; preds = %for.body42.us.epil.ls.preheader, %for.body42.us.epil.ls
  %indvars.iv.epil.ls = phi i64 [ %indvars.iv.next.epil.ls, %for.body42.us.epil.ls ], [ %indvars.iv.next.7.ls, %for.body42.us.epil.ls.preheader ]
  %epil.iter.ls = phi i64 [ %epil.iter.sub.ls, %for.body42.us.epil.ls ], [ %xtraiter.ls, %for.body42.us.epil.ls.preheader ]
  %arrayidx46.us.epil.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %54, i64 0, i32 2, i64 %indvars.iv.epil.ls
  %80 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx46.us.epil.ls, align 8, !tbaa !53
  %identifier.us.epil.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %80, i64 0, i32 0
  %81 = load i32, i32* %identifier.us.epil.ls, align 8, !tbaa !367
  %82 = add nuw nsw i64 %indvars.iv.epil.ls, %55
  %arrayidx50.us.epil.ls = getelementptr inbounds i32, i32* %.ls3, i64 %82
  store i32 %81, i32* %arrayidx50.us.epil.ls, align 4, !tbaa !59
  %indvars.iv.next.epil.ls = add nuw nsw i64 %indvars.iv.epil.ls, 1
  %epil.iter.sub.ls = add nsw i64 %epil.iter.ls, -1
  %epil.iter.cmp.ls = icmp eq i64 %epil.iter.sub.ls, 0
  br i1 %epil.iter.cmp.ls, label %pfor.inc55.us.ls, label %for.body42.us.epil.ls, !llvm.loop !369

pfor.inc55.us.ls:                                 ; preds = %for.body42.us.epil.ls, %for.cond39.for.cond.cleanup41_crit_edge.us.unr-lcssa.ls
  %83 = icmp ult i64 %indvars.iv129.ls, %end.ls
  %indvars.iv.next130.ls = add nuw nsw i64 %indvars.iv129.ls, 1
  br i1 %83, label %pfor.detach33.us.ls, label %pfor.cond.cleanup32.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN8sequence4packIllN5utils9identityFIlEEEE4_seqIT_EPS5_PbT0_S9_T1__pfor.detach.ls(i64 %__begin.0220.start.ls, i64 %end.ls, i64 %.ls, i64 %.ls1, i64 %.ls2, i64 %.ls3, i64 %s.ls, i64 %e.ls, i8* align 1 %Fl.ls, i64* nocapture align 1 %.ls4) unnamed_addr #15 {
pfor.detach.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount13 = sub i64 %end.ls, %__begin.0220.start.ls
  %9 = icmp ugt i64 %itercount13, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin.0220.ls.ph = phi i64 [ %__begin.0220.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount15 = phi i64 [ %itercount13, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin.0220.ls.dac14 = phi i64 [ %__begin.0220.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount15, 1
  %miditer = add nuw nsw i64 %__begin.0220.ls.dac14, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split16, label %.split.split

.split16:                                         ; preds = %16
  call fastcc void @_ZN8sequence4packIllN5utils9identityFIlEEEE4_seqIT_EPS5_PbT0_S9_T1__pfor.detach.ls_.split.cilk(i64 %__begin.0220.ls.dac14, i64 %miditer, i64 %.ls, i64 %.ls1, i64 %.ls2, i64 %.ls3, i64 %s.ls, i64 %e.ls, i8* %Fl.ls, i64* %.ls4)
  br label %.split.split

.split.split:                                     ; preds = %.split16, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.ls:                             ; preds = %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.ls
  %__begin.0220.ls = phi i64 [ %inc.ls, %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.ls ], [ %__begin.0220.ls.ph, %pfor.detach.ls.preheader ]
  %48 = mul nsw i64 %__begin.0220.ls, -2048
  %49 = add i64 %48, %.ls1
  %50 = add i64 %48, %.ls2
  %51 = icmp sgt i64 %50, %.ls3
  %smax460.ls = select i1 %51, i64 %50, i64 %.ls3
  %52 = sub i64 %49, %smax460.ls
  %53 = add i64 %52, -16
  %54 = lshr i64 %53, 4
  %55 = add nuw nsw i64 %54, 1
  %mul15.ls = shl nsw i64 %__begin.0220.ls, 11
  %add16.ls = add nsw i64 %mul15.ls, %s.ls
  %add18.ls = add nsw i64 %add16.ls, 2048
  %cmp.i120.ls = icmp sgt i64 %add18.ls, %e.ls
  %.sroa.speculated207.ls = select i1 %cmp.i120.ls, i64 %e.ls, i64 %add18.ls
  %add.ptr.ls = getelementptr inbounds i8, i8* %Fl.ls, i64 %add16.ls
  %sub20.ls = sub nsw i64 %.sroa.speculated207.ls, %add16.ls
  %cmp.i192.ls = icmp sgt i64 %sub20.ls, 127
  %and.i.ls = and i64 %sub20.ls, 511
  %cmp1.i.ls = icmp eq i64 %and.i.ls, 0
  %or.cond.i.ls = and i1 %cmp.i192.ls, %cmp1.i.ls
  br i1 %or.cond.i.ls, label %land.lhs.true2.i.ls, label %if.else.i.ls

if.else.i.ls:                                     ; preds = %pfor.detach.ls
  %cmp2766.i.ls = icmp sgt i64 %sub20.ls, 0
  br i1 %cmp2766.i.ls, label %for.body29.lr.ph.i.ls, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.ls

land.lhs.true2.i.ls:                              ; preds = %pfor.detach.ls
  %56 = ptrtoint i8* %add.ptr.ls to i64
  %and3.i.ls = and i64 %56, 3
  %cmp4.i.ls = icmp eq i64 %and3.i.ls, 0
  br i1 %cmp4.i.ls, label %if.then.i193.ls, label %for.body29.lr.ph.i.ls

for.body29.lr.ph.i.ls:                            ; preds = %land.lhs.true2.i.ls, %if.else.i.ls
  %min.iters.check.ls = icmp ult i64 %52, 16
  br i1 %min.iters.check.ls, label %for.body29.i.ls.preheader, label %vector.ph250.ls

vector.ph250.ls:                                  ; preds = %for.body29.lr.ph.i.ls
  %n.vec.ls = and i64 %52, -16
  %xtraiter461.ls = and i64 %55, 3
  %57 = icmp ult i64 %53, 48
  br i1 %57, label %middle.block248.unr-lcssa.ls, label %vector.ph250.new.ls

vector.ph250.new.ls:                              ; preds = %vector.ph250.ls
  %unroll_iter468.ls = sub nsw i64 %55, %xtraiter461.ls
  br label %vector.body247.ls

vector.body247.ls:                                ; preds = %vector.body247.ls, %vector.ph250.new.ls
  %index251.ls = phi i64 [ 0, %vector.ph250.new.ls ], [ %index.next252.3.ls, %vector.body247.ls ]
  %vec.phi261.ls = phi <4 x i64> [ zeroinitializer, %vector.ph250.new.ls ], [ %118, %vector.body247.ls ]
  %vec.phi262.ls = phi <4 x i64> [ zeroinitializer, %vector.ph250.new.ls ], [ %119, %vector.body247.ls ]
  %vec.phi263.ls = phi <4 x i64> [ zeroinitializer, %vector.ph250.new.ls ], [ %120, %vector.body247.ls ]
  %vec.phi264.ls = phi <4 x i64> [ zeroinitializer, %vector.ph250.new.ls ], [ %121, %vector.body247.ls ]
  %niter469.ls = phi i64 [ %unroll_iter468.ls, %vector.ph250.new.ls ], [ %niter469.nsub.3.ls, %vector.body247.ls ]
  %58 = getelementptr inbounds i8, i8* %add.ptr.ls, i64 %index251.ls
  %59 = bitcast i8* %58 to <4 x i8>*
  %wide.load265.ls = load <4 x i8>, <4 x i8>* %59, align 1, !tbaa !23
  %60 = getelementptr i8, i8* %58, i64 4
  %61 = bitcast i8* %60 to <4 x i8>*
  %wide.load266.ls = load <4 x i8>, <4 x i8>* %61, align 1, !tbaa !23
  %62 = getelementptr i8, i8* %58, i64 8
  %63 = bitcast i8* %62 to <4 x i8>*
  %wide.load267.ls = load <4 x i8>, <4 x i8>* %63, align 1, !tbaa !23
  %64 = getelementptr i8, i8* %58, i64 12
  %65 = bitcast i8* %64 to <4 x i8>*
  %wide.load268.ls = load <4 x i8>, <4 x i8>* %65, align 1, !tbaa !23
  %66 = zext <4 x i8> %wide.load265.ls to <4 x i64>
  %67 = zext <4 x i8> %wide.load266.ls to <4 x i64>
  %68 = zext <4 x i8> %wide.load267.ls to <4 x i64>
  %69 = zext <4 x i8> %wide.load268.ls to <4 x i64>
  %70 = add nuw nsw <4 x i64> %vec.phi261.ls, %66
  %71 = add nuw nsw <4 x i64> %vec.phi262.ls, %67
  %72 = add nuw nsw <4 x i64> %vec.phi263.ls, %68
  %73 = add nuw nsw <4 x i64> %vec.phi264.ls, %69
  %index.next252.ls = or i64 %index251.ls, 16
  %74 = getelementptr inbounds i8, i8* %add.ptr.ls, i64 %index.next252.ls
  %75 = bitcast i8* %74 to <4 x i8>*
  %wide.load265.1.ls = load <4 x i8>, <4 x i8>* %75, align 1, !tbaa !23
  %76 = getelementptr i8, i8* %74, i64 4
  %77 = bitcast i8* %76 to <4 x i8>*
  %wide.load266.1.ls = load <4 x i8>, <4 x i8>* %77, align 1, !tbaa !23
  %78 = getelementptr i8, i8* %74, i64 8
  %79 = bitcast i8* %78 to <4 x i8>*
  %wide.load267.1.ls = load <4 x i8>, <4 x i8>* %79, align 1, !tbaa !23
  %80 = getelementptr i8, i8* %74, i64 12
  %81 = bitcast i8* %80 to <4 x i8>*
  %wide.load268.1.ls = load <4 x i8>, <4 x i8>* %81, align 1, !tbaa !23
  %82 = zext <4 x i8> %wide.load265.1.ls to <4 x i64>
  %83 = zext <4 x i8> %wide.load266.1.ls to <4 x i64>
  %84 = zext <4 x i8> %wide.load267.1.ls to <4 x i64>
  %85 = zext <4 x i8> %wide.load268.1.ls to <4 x i64>
  %86 = add nuw nsw <4 x i64> %70, %82
  %87 = add nuw nsw <4 x i64> %71, %83
  %88 = add nuw nsw <4 x i64> %72, %84
  %89 = add nuw nsw <4 x i64> %73, %85
  %index.next252.1.ls = or i64 %index251.ls, 32
  %90 = getelementptr inbounds i8, i8* %add.ptr.ls, i64 %index.next252.1.ls
  %91 = bitcast i8* %90 to <4 x i8>*
  %wide.load265.2.ls = load <4 x i8>, <4 x i8>* %91, align 1, !tbaa !23
  %92 = getelementptr i8, i8* %90, i64 4
  %93 = bitcast i8* %92 to <4 x i8>*
  %wide.load266.2.ls = load <4 x i8>, <4 x i8>* %93, align 1, !tbaa !23
  %94 = getelementptr i8, i8* %90, i64 8
  %95 = bitcast i8* %94 to <4 x i8>*
  %wide.load267.2.ls = load <4 x i8>, <4 x i8>* %95, align 1, !tbaa !23
  %96 = getelementptr i8, i8* %90, i64 12
  %97 = bitcast i8* %96 to <4 x i8>*
  %wide.load268.2.ls = load <4 x i8>, <4 x i8>* %97, align 1, !tbaa !23
  %98 = zext <4 x i8> %wide.load265.2.ls to <4 x i64>
  %99 = zext <4 x i8> %wide.load266.2.ls to <4 x i64>
  %100 = zext <4 x i8> %wide.load267.2.ls to <4 x i64>
  %101 = zext <4 x i8> %wide.load268.2.ls to <4 x i64>
  %102 = add nuw nsw <4 x i64> %86, %98
  %103 = add nuw nsw <4 x i64> %87, %99
  %104 = add nuw nsw <4 x i64> %88, %100
  %105 = add nuw nsw <4 x i64> %89, %101
  %index.next252.2.ls = or i64 %index251.ls, 48
  %106 = getelementptr inbounds i8, i8* %add.ptr.ls, i64 %index.next252.2.ls
  %107 = bitcast i8* %106 to <4 x i8>*
  %wide.load265.3.ls = load <4 x i8>, <4 x i8>* %107, align 1, !tbaa !23
  %108 = getelementptr i8, i8* %106, i64 4
  %109 = bitcast i8* %108 to <4 x i8>*
  %wide.load266.3.ls = load <4 x i8>, <4 x i8>* %109, align 1, !tbaa !23
  %110 = getelementptr i8, i8* %106, i64 8
  %111 = bitcast i8* %110 to <4 x i8>*
  %wide.load267.3.ls = load <4 x i8>, <4 x i8>* %111, align 1, !tbaa !23
  %112 = getelementptr i8, i8* %106, i64 12
  %113 = bitcast i8* %112 to <4 x i8>*
  %wide.load268.3.ls = load <4 x i8>, <4 x i8>* %113, align 1, !tbaa !23
  %114 = zext <4 x i8> %wide.load265.3.ls to <4 x i64>
  %115 = zext <4 x i8> %wide.load266.3.ls to <4 x i64>
  %116 = zext <4 x i8> %wide.load267.3.ls to <4 x i64>
  %117 = zext <4 x i8> %wide.load268.3.ls to <4 x i64>
  %118 = add nuw nsw <4 x i64> %102, %114
  %119 = add nuw nsw <4 x i64> %103, %115
  %120 = add nuw nsw <4 x i64> %104, %116
  %121 = add nuw nsw <4 x i64> %105, %117
  %index.next252.3.ls = add i64 %index251.ls, 64
  %niter469.nsub.3.ls = add i64 %niter469.ls, -4
  %niter469.ncmp.3.ls = icmp eq i64 %niter469.nsub.3.ls, 0
  br i1 %niter469.ncmp.3.ls, label %middle.block248.unr-lcssa.ls, label %vector.body247.ls, !llvm.loop !370

middle.block248.unr-lcssa.ls:                     ; preds = %vector.body247.ls, %vector.ph250.ls
  %.lcssa429.ph.ls = phi <4 x i64> [ undef, %vector.ph250.ls ], [ %118, %vector.body247.ls ]
  %.lcssa428.ph.ls = phi <4 x i64> [ undef, %vector.ph250.ls ], [ %119, %vector.body247.ls ]
  %.lcssa427.ph.ls = phi <4 x i64> [ undef, %vector.ph250.ls ], [ %120, %vector.body247.ls ]
  %.lcssa426.ph.ls = phi <4 x i64> [ undef, %vector.ph250.ls ], [ %121, %vector.body247.ls ]
  %index251.unr.ls = phi i64 [ 0, %vector.ph250.ls ], [ %index.next252.3.ls, %vector.body247.ls ]
  %vec.phi261.unr.ls = phi <4 x i64> [ zeroinitializer, %vector.ph250.ls ], [ %118, %vector.body247.ls ]
  %vec.phi262.unr.ls = phi <4 x i64> [ zeroinitializer, %vector.ph250.ls ], [ %119, %vector.body247.ls ]
  %vec.phi263.unr.ls = phi <4 x i64> [ zeroinitializer, %vector.ph250.ls ], [ %120, %vector.body247.ls ]
  %vec.phi264.unr.ls = phi <4 x i64> [ zeroinitializer, %vector.ph250.ls ], [ %121, %vector.body247.ls ]
  %lcmp.mod463.ls = icmp eq i64 %xtraiter461.ls, 0
  br i1 %lcmp.mod463.ls, label %middle.block248.ls, label %vector.body247.epil.ls.preheader

vector.body247.epil.ls.preheader:                 ; preds = %middle.block248.unr-lcssa.ls
  br label %vector.body247.epil.ls

vector.body247.epil.ls:                           ; preds = %vector.body247.epil.ls.preheader, %vector.body247.epil.ls
  %index251.epil.ls = phi i64 [ %index.next252.epil.ls, %vector.body247.epil.ls ], [ %index251.unr.ls, %vector.body247.epil.ls.preheader ]
  %vec.phi261.epil.ls = phi <4 x i64> [ %134, %vector.body247.epil.ls ], [ %vec.phi261.unr.ls, %vector.body247.epil.ls.preheader ]
  %vec.phi262.epil.ls = phi <4 x i64> [ %135, %vector.body247.epil.ls ], [ %vec.phi262.unr.ls, %vector.body247.epil.ls.preheader ]
  %vec.phi263.epil.ls = phi <4 x i64> [ %136, %vector.body247.epil.ls ], [ %vec.phi263.unr.ls, %vector.body247.epil.ls.preheader ]
  %vec.phi264.epil.ls = phi <4 x i64> [ %137, %vector.body247.epil.ls ], [ %vec.phi264.unr.ls, %vector.body247.epil.ls.preheader ]
  %epil.iter462.ls = phi i64 [ %epil.iter462.sub.ls, %vector.body247.epil.ls ], [ %xtraiter461.ls, %vector.body247.epil.ls.preheader ]
  %122 = getelementptr inbounds i8, i8* %add.ptr.ls, i64 %index251.epil.ls
  %123 = bitcast i8* %122 to <4 x i8>*
  %wide.load265.epil.ls = load <4 x i8>, <4 x i8>* %123, align 1, !tbaa !23
  %124 = getelementptr i8, i8* %122, i64 4
  %125 = bitcast i8* %124 to <4 x i8>*
  %wide.load266.epil.ls = load <4 x i8>, <4 x i8>* %125, align 1, !tbaa !23
  %126 = getelementptr i8, i8* %122, i64 8
  %127 = bitcast i8* %126 to <4 x i8>*
  %wide.load267.epil.ls = load <4 x i8>, <4 x i8>* %127, align 1, !tbaa !23
  %128 = getelementptr i8, i8* %122, i64 12
  %129 = bitcast i8* %128 to <4 x i8>*
  %wide.load268.epil.ls = load <4 x i8>, <4 x i8>* %129, align 1, !tbaa !23
  %130 = zext <4 x i8> %wide.load265.epil.ls to <4 x i64>
  %131 = zext <4 x i8> %wide.load266.epil.ls to <4 x i64>
  %132 = zext <4 x i8> %wide.load267.epil.ls to <4 x i64>
  %133 = zext <4 x i8> %wide.load268.epil.ls to <4 x i64>
  %134 = add nuw nsw <4 x i64> %vec.phi261.epil.ls, %130
  %135 = add nuw nsw <4 x i64> %vec.phi262.epil.ls, %131
  %136 = add nuw nsw <4 x i64> %vec.phi263.epil.ls, %132
  %137 = add nuw nsw <4 x i64> %vec.phi264.epil.ls, %133
  %index.next252.epil.ls = add i64 %index251.epil.ls, 16
  %epil.iter462.sub.ls = add nsw i64 %epil.iter462.ls, -1
  %epil.iter462.cmp.ls = icmp eq i64 %epil.iter462.sub.ls, 0
  br i1 %epil.iter462.cmp.ls, label %middle.block248.ls, label %vector.body247.epil.ls, !llvm.loop !371

middle.block248.ls:                               ; preds = %vector.body247.epil.ls, %middle.block248.unr-lcssa.ls
  %.lcssa429.ls = phi <4 x i64> [ %.lcssa429.ph.ls, %middle.block248.unr-lcssa.ls ], [ %134, %vector.body247.epil.ls ]
  %.lcssa428.ls = phi <4 x i64> [ %.lcssa428.ph.ls, %middle.block248.unr-lcssa.ls ], [ %135, %vector.body247.epil.ls ]
  %.lcssa427.ls = phi <4 x i64> [ %.lcssa427.ph.ls, %middle.block248.unr-lcssa.ls ], [ %136, %vector.body247.epil.ls ]
  %.lcssa426.ls = phi <4 x i64> [ %.lcssa426.ph.ls, %middle.block248.unr-lcssa.ls ], [ %137, %vector.body247.epil.ls ]
  %bin.rdx269.ls = add nuw <4 x i64> %.lcssa428.ls, %.lcssa429.ls
  %bin.rdx270.ls = add <4 x i64> %bin.rdx269.ls, %.lcssa427.ls
  %bin.rdx271.ls = add <4 x i64> %bin.rdx270.ls, %.lcssa426.ls
  %rdx.shuf272.ls = shufflevector <4 x i64> %bin.rdx271.ls, <4 x i64> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %bin.rdx273.ls = add <4 x i64> %rdx.shuf272.ls, %bin.rdx271.ls
  %rdx.shuf274.ls = shufflevector <4 x i64> %bin.rdx273.ls, <4 x i64> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %bin.rdx275.ls = add <4 x i64> %rdx.shuf274.ls, %bin.rdx273.ls
  %138 = extractelement <4 x i64> %bin.rdx275.ls, i32 0
  %cmp.n254.ls = icmp eq i64 %52, %n.vec.ls
  br i1 %cmp.n254.ls, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.ls, label %for.body29.i.ls.preheader

for.body29.i.ls.preheader:                        ; preds = %middle.block248.ls, %for.body29.lr.ph.i.ls
  %j25.068.i.ls.ph = phi i64 [ %n.vec.ls, %middle.block248.ls ], [ 0, %for.body29.lr.ph.i.ls ]
  %r.167.i.ls.ph = phi i64 [ %138, %middle.block248.ls ], [ 0, %for.body29.lr.ph.i.ls ]
  br label %for.body29.i.ls

for.body29.i.ls:                                  ; preds = %for.body29.i.ls.preheader, %for.body29.i.ls
  %j25.068.i.ls = phi i64 [ %inc34.i.ls, %for.body29.i.ls ], [ %j25.068.i.ls.ph, %for.body29.i.ls.preheader ]
  %r.167.i.ls = phi i64 [ %add32.i.ls, %for.body29.i.ls ], [ %r.167.i.ls.ph, %for.body29.i.ls.preheader ]
  %arrayidx30.i.ls = getelementptr inbounds i8, i8* %add.ptr.ls, i64 %j25.068.i.ls
  %139 = load i8, i8* %arrayidx30.i.ls, align 1, !tbaa !23, !range !70
  %140 = zext i8 %139 to i64
  %add32.i.ls = add nuw nsw i64 %r.167.i.ls, %140
  %inc34.i.ls = add nuw nsw i64 %j25.068.i.ls, 1
  %exitcond73.i.ls = icmp eq i64 %inc34.i.ls, %sub20.ls
  br i1 %exitcond73.i.ls, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.ls, label %for.body29.i.ls, !llvm.loop !372

if.then.i193.ls:                                  ; preds = %land.lhs.true2.i.ls
  %shr75.i.ls = lshr i64 %sub20.ls, 9
  %cmp562.i.ls = icmp sgt i64 %sub20.ls, 511
  br i1 %cmp562.i.ls, label %for.body.lr.ph.i194.ls, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.ls

for.body.lr.ph.i194.ls:                           ; preds = %if.then.i193.ls
  %141 = bitcast i8* %add.ptr.ls to i32*
  br label %vector.ph.ls

vector.ph.ls:                                     ; preds = %vector.ph.ls, %for.body.lr.ph.i194.ls
  %indvars.iv71.i.ls = phi i64 [ 0, %for.body.lr.ph.i194.ls ], [ %indvars.iv.next72.i.ls, %vector.ph.ls ]
  %IFl.064.i.ls = phi i32* [ %141, %for.body.lr.ph.i194.ls ], [ %add.ptr.i196.ls, %vector.ph.ls ]
  %r.063.i.ls = phi i64 [ 0, %for.body.lr.ph.i194.ls ], [ %add21.i.ls, %vector.ph.ls ]
  %142 = bitcast i32* %IFl.064.i.ls to <8 x i32>*
  %wide.load.ls = load <8 x i32>, <8 x i32>* %142, align 4, !tbaa !59
  %143 = getelementptr i32, i32* %IFl.064.i.ls, i64 8
  %144 = bitcast i32* %143 to <8 x i32>*
  %wide.load237.ls = load <8 x i32>, <8 x i32>* %144, align 4, !tbaa !59
  %145 = getelementptr i32, i32* %IFl.064.i.ls, i64 16
  %146 = bitcast i32* %145 to <8 x i32>*
  %wide.load238.ls = load <8 x i32>, <8 x i32>* %146, align 4, !tbaa !59
  %147 = getelementptr i32, i32* %IFl.064.i.ls, i64 24
  %148 = bitcast i32* %147 to <8 x i32>*
  %wide.load239.ls = load <8 x i32>, <8 x i32>* %148, align 4, !tbaa !59
  %149 = getelementptr inbounds i32, i32* %IFl.064.i.ls, i64 32
  %150 = bitcast i32* %149 to <8 x i32>*
  %wide.load.1.ls = load <8 x i32>, <8 x i32>* %150, align 4, !tbaa !59
  %151 = getelementptr i32, i32* %IFl.064.i.ls, i64 40
  %152 = bitcast i32* %151 to <8 x i32>*
  %wide.load237.1.ls = load <8 x i32>, <8 x i32>* %152, align 4, !tbaa !59
  %153 = getelementptr i32, i32* %IFl.064.i.ls, i64 48
  %154 = bitcast i32* %153 to <8 x i32>*
  %wide.load238.1.ls = load <8 x i32>, <8 x i32>* %154, align 4, !tbaa !59
  %155 = getelementptr i32, i32* %IFl.064.i.ls, i64 56
  %156 = bitcast i32* %155 to <8 x i32>*
  %wide.load239.1.ls = load <8 x i32>, <8 x i32>* %156, align 4, !tbaa !59
  %157 = getelementptr inbounds i32, i32* %IFl.064.i.ls, i64 64
  %158 = bitcast i32* %157 to <8 x i32>*
  %wide.load.2.ls = load <8 x i32>, <8 x i32>* %158, align 4, !tbaa !59
  %159 = getelementptr i32, i32* %IFl.064.i.ls, i64 72
  %160 = bitcast i32* %159 to <8 x i32>*
  %wide.load237.2.ls = load <8 x i32>, <8 x i32>* %160, align 4, !tbaa !59
  %161 = getelementptr i32, i32* %IFl.064.i.ls, i64 80
  %162 = bitcast i32* %161 to <8 x i32>*
  %wide.load238.2.ls = load <8 x i32>, <8 x i32>* %162, align 4, !tbaa !59
  %163 = getelementptr i32, i32* %IFl.064.i.ls, i64 88
  %164 = bitcast i32* %163 to <8 x i32>*
  %wide.load239.2.ls = load <8 x i32>, <8 x i32>* %164, align 4, !tbaa !59
  %165 = getelementptr inbounds i32, i32* %IFl.064.i.ls, i64 96
  %166 = bitcast i32* %165 to <8 x i32>*
  %wide.load.3.ls = load <8 x i32>, <8 x i32>* %166, align 4, !tbaa !59
  %167 = getelementptr i32, i32* %IFl.064.i.ls, i64 104
  %168 = bitcast i32* %167 to <8 x i32>*
  %wide.load237.3.ls = load <8 x i32>, <8 x i32>* %168, align 4, !tbaa !59
  %169 = getelementptr i32, i32* %IFl.064.i.ls, i64 112
  %170 = bitcast i32* %169 to <8 x i32>*
  %wide.load238.3.ls = load <8 x i32>, <8 x i32>* %170, align 4, !tbaa !59
  %171 = getelementptr i32, i32* %IFl.064.i.ls, i64 120
  %172 = bitcast i32* %171 to <8 x i32>*
  %wide.load239.3.ls = load <8 x i32>, <8 x i32>* %172, align 4, !tbaa !59
  %173 = add <8 x i32> %wide.load237.ls, %wide.load.ls
  %174 = add <8 x i32> %173, %wide.load238.ls
  %175 = add <8 x i32> %174, %wide.load239.ls
  %176 = add <8 x i32> %175, %wide.load.1.ls
  %177 = add <8 x i32> %176, %wide.load237.1.ls
  %178 = add <8 x i32> %177, %wide.load238.1.ls
  %bin.rdx.ls = add <8 x i32> %178, %wide.load239.1.ls
  %179 = add <8 x i32> %bin.rdx.ls, %wide.load.2.ls
  %180 = add <8 x i32> %179, %wide.load237.2.ls
  %181 = add <8 x i32> %180, %wide.load238.2.ls
  %bin.rdx240.ls = add <8 x i32> %181, %wide.load239.2.ls
  %182 = add <8 x i32> %bin.rdx240.ls, %wide.load.3.ls
  %183 = add <8 x i32> %182, %wide.load237.3.ls
  %184 = add <8 x i32> %183, %wide.load238.3.ls
  %bin.rdx241.ls = add <8 x i32> %184, %wide.load239.3.ls
  %rdx.shuf.ls = shufflevector <8 x i32> %bin.rdx241.ls, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx242.ls = add <8 x i32> %rdx.shuf.ls, %bin.rdx241.ls
  %rdx.shuf243.ls = shufflevector <8 x i32> %bin.rdx242.ls, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx244.ls = add <8 x i32> %rdx.shuf243.ls, %bin.rdx242.ls
  %rdx.shuf245.ls = shufflevector <8 x i32> %bin.rdx244.ls, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx246.ls = add <8 x i32> %rdx.shuf245.ls, %bin.rdx244.ls
  %185 = extractelement <8 x i32> %bin.rdx246.ls, i32 0
  %and10.i.ls = and i32 %185, 255
  %186 = lshr i32 %185, 8
  %and12.i.ls = and i32 %186, 255
  %187 = lshr i32 %185, 16
  %and15.i.ls = and i32 %187, 255
  %188 = lshr i32 %185, 24
  %add13.i.ls = add nuw nsw i32 %188, %and10.i.ls
  %add16.i.ls = add nuw nsw i32 %add13.i.ls, %and12.i.ls
  %add19.i.ls = add nuw nsw i32 %add16.i.ls, %and15.i.ls
  %189 = zext i32 %add19.i.ls to i64
  %add21.i.ls = add nuw nsw i64 %r.063.i.ls, %189
  %add.ptr.i196.ls = getelementptr inbounds i32, i32* %IFl.064.i.ls, i64 128
  %indvars.iv.next72.i.ls = add nuw nsw i64 %indvars.iv71.i.ls, 1
  %cmp5.i.ls = icmp ugt i64 %shr75.i.ls, %indvars.iv.next72.i.ls
  br i1 %cmp5.i.ls, label %vector.ph.ls, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.ls

_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.ls:  ; preds = %for.body29.i.ls, %vector.ph.ls, %if.then.i193.ls, %middle.block248.ls, %if.else.i.ls
  %r.2.i.ls = phi i64 [ 0, %if.then.i193.ls ], [ 0, %if.else.i.ls ], [ %138, %middle.block248.ls ], [ %add21.i.ls, %vector.ph.ls ], [ %add32.i.ls, %for.body29.i.ls ]
  %arrayidx.ls = getelementptr inbounds i64, i64* %.ls4, i64 %__begin.0220.ls
  store i64 %r.2.i.ls, i64* %arrayidx.ls, align 8, !tbaa !49
  %190 = icmp ult i64 %__begin.0220.ls, %end.ls
  %inc.ls = add nuw nsw i64 %__begin.0220.ls, 1
  br i1 %190, label %pfor.detach.ls, label %pfor.cond.cleanup.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN8sequence4packIllN5utils9identityFIlEEEE4_seqIT_EPS5_PbT0_S9_T1__pfor.detach47.ls(i64 %__begin38.0218.start.ls, i64 %end.ls, i64 %.ls, i8* align 1 %Fl.ls, i64 %s.ls, i64 %e.ls, i64* nocapture readonly align 1 %.ls1, i64* align 1 %Out.addr.0.ls, i64 %.ls2, i64 %.ls3, i64 %.ls4, i64 %.ls5) unnamed_addr #15 {
pfor.detach47.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach47.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach47.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach47.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach47.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount14 = sub i64 %end.ls, %__begin38.0218.start.ls
  %9 = icmp ugt i64 %itercount14, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach47.ls.preheader

pfor.detach47.ls.preheader:                       ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin38.0218.ls.ph = phi i64 [ %__begin38.0218.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach47.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount16 = phi i64 [ %itercount14, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin38.0218.ls.dac15 = phi i64 [ %__begin38.0218.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount16, 1
  %miditer = add nuw nsw i64 %__begin38.0218.ls.dac15, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split17, label %.split.split

.split17:                                         ; preds = %16
  call fastcc void @_ZN8sequence4packIllN5utils9identityFIlEEEE4_seqIT_EPS5_PbT0_S9_T1__pfor.detach47.ls_.split.cilk(i64 %__begin38.0218.ls.dac15, i64 %miditer, i64 %.ls, i8* %Fl.ls, i64 %s.ls, i64 %e.ls, i64* %.ls1, i64* %Out.addr.0.ls, i64 %.ls2, i64 %.ls3, i64 %.ls4, i64 %.ls5)
  br label %.split.split

.split.split:                                     ; preds = %.split17, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach47.ls.preheader

pfor.cond.cleanup46.loopexit.ls:                  ; preds = %pfor.inc65.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup46.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup46.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach47.ls:                                 ; preds = %pfor.detach47.ls.preheader, %pfor.inc65.ls
  %__begin38.0218.ls = phi i64 [ %inc66.ls, %pfor.inc65.ls ], [ %__begin38.0218.ls.ph, %pfor.detach47.ls.preheader ]
  %48 = mul nsw i64 %__begin38.0218.ls, -2048
  %49 = add i64 %48, %.ls2
  %50 = add i64 %48, %.ls3
  %51 = icmp sgt i64 %50, %.ls4
  %smax454.ls = select i1 %51, i64 %50, i64 %.ls4
  %52 = sub i64 %49, %smax454.ls
  %53 = add i64 %48, %.ls5
  %54 = sub i64 %53, %smax454.ls
  %55 = add i64 %52, -16
  %56 = lshr i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %mul54.ls = shl nsw i64 %__begin38.0218.ls, 11
  %add55.ls = add nsw i64 %mul54.ls, %s.ls
  %add58.ls = add nsw i64 %add55.ls, 2048
  %cmp.i200.ls = icmp sgt i64 %add58.ls, %e.ls
  %.sroa.speculated.ls = select i1 %cmp.i200.ls, i64 %e.ls, i64 %add58.ls
  %arrayidx60.ls = getelementptr inbounds i64, i64* %.ls1, i64 %__begin38.0218.ls
  %58 = load i64, i64* %arrayidx60.ls, align 8, !tbaa !49
  %add.ptr61.ls = getelementptr inbounds i64, i64* %Out.addr.0.ls, i64 %58
  %cmp.i121.ls = icmp eq i64* %add.ptr61.ls, null
  br i1 %cmp.i121.ls, label %if.then.i128.ls, label %if.end.i174.ls

if.then.i128.ls:                                  ; preds = %pfor.detach47.ls
  %add.ptr.i122.ls = getelementptr inbounds i8, i8* %Fl.ls, i64 %add55.ls
  %sub.i123.ls = sub nsw i64 %.sroa.speculated.ls, %add55.ls
  %cmp.i.i124.ls = icmp sgt i64 %sub.i123.ls, 127
  %and.i.i125.ls = and i64 %sub.i123.ls, 511
  %cmp1.i.i126.ls = icmp eq i64 %and.i.i125.ls, 0
  %or.cond.i.i127.ls = and i1 %cmp.i.i124.ls, %cmp1.i.i126.ls
  br i1 %or.cond.i.i127.ls, label %land.lhs.true2.i.i131.ls, label %if.else.i.i159.ls

if.else.i.i159.ls:                                ; preds = %if.then.i128.ls
  %cmp2766.i.i158.ls = icmp sgt i64 %sub.i123.ls, 0
  br i1 %cmp2766.i.i158.ls, label %for.body29.lr.ph.i.i160.ls, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i171.ls

land.lhs.true2.i.i131.ls:                         ; preds = %if.then.i128.ls
  %59 = ptrtoint i8* %add.ptr.i122.ls to i64
  %and3.i.i129.ls = and i64 %59, 3
  %cmp4.i.i130.ls = icmp eq i64 %and3.i.i129.ls, 0
  br i1 %cmp4.i.i130.ls, label %if.then.i.i134.ls, label %for.body29.lr.ph.i.i160.ls

for.body29.lr.ph.i.i160.ls:                       ; preds = %land.lhs.true2.i.i131.ls, %if.else.i.i159.ls
  %min.iters.check313.ls = icmp ult i64 %52, 16
  br i1 %min.iters.check313.ls, label %for.body29.i.i167.ls.preheader, label %vector.ph314.ls

vector.ph314.ls:                                  ; preds = %for.body29.lr.ph.i.i160.ls
  %n.vec316.ls = and i64 %52, -16
  %xtraiter445.ls = and i64 %57, 3
  %60 = icmp ult i64 %55, 48
  br i1 %60, label %middle.block310.unr-lcssa.ls, label %vector.ph314.new.ls

vector.ph314.new.ls:                              ; preds = %vector.ph314.ls
  %unroll_iter452.ls = sub nsw i64 %57, %xtraiter445.ls
  br label %vector.body309.ls

vector.body309.ls:                                ; preds = %vector.body309.ls, %vector.ph314.new.ls
  %index317.ls = phi i64 [ 0, %vector.ph314.new.ls ], [ %index.next318.3.ls, %vector.body309.ls ]
  %vec.phi327.ls = phi <4 x i64> [ zeroinitializer, %vector.ph314.new.ls ], [ %121, %vector.body309.ls ]
  %vec.phi328.ls = phi <4 x i64> [ zeroinitializer, %vector.ph314.new.ls ], [ %122, %vector.body309.ls ]
  %vec.phi329.ls = phi <4 x i64> [ zeroinitializer, %vector.ph314.new.ls ], [ %123, %vector.body309.ls ]
  %vec.phi330.ls = phi <4 x i64> [ zeroinitializer, %vector.ph314.new.ls ], [ %124, %vector.body309.ls ]
  %niter453.ls = phi i64 [ %unroll_iter452.ls, %vector.ph314.new.ls ], [ %niter453.nsub.3.ls, %vector.body309.ls ]
  %61 = getelementptr inbounds i8, i8* %add.ptr.i122.ls, i64 %index317.ls
  %62 = bitcast i8* %61 to <4 x i8>*
  %wide.load331.ls = load <4 x i8>, <4 x i8>* %62, align 1, !tbaa !23
  %63 = getelementptr i8, i8* %61, i64 4
  %64 = bitcast i8* %63 to <4 x i8>*
  %wide.load332.ls = load <4 x i8>, <4 x i8>* %64, align 1, !tbaa !23
  %65 = getelementptr i8, i8* %61, i64 8
  %66 = bitcast i8* %65 to <4 x i8>*
  %wide.load333.ls = load <4 x i8>, <4 x i8>* %66, align 1, !tbaa !23
  %67 = getelementptr i8, i8* %61, i64 12
  %68 = bitcast i8* %67 to <4 x i8>*
  %wide.load334.ls = load <4 x i8>, <4 x i8>* %68, align 1, !tbaa !23
  %69 = zext <4 x i8> %wide.load331.ls to <4 x i64>
  %70 = zext <4 x i8> %wide.load332.ls to <4 x i64>
  %71 = zext <4 x i8> %wide.load333.ls to <4 x i64>
  %72 = zext <4 x i8> %wide.load334.ls to <4 x i64>
  %73 = add nuw nsw <4 x i64> %vec.phi327.ls, %69
  %74 = add nuw nsw <4 x i64> %vec.phi328.ls, %70
  %75 = add nuw nsw <4 x i64> %vec.phi329.ls, %71
  %76 = add nuw nsw <4 x i64> %vec.phi330.ls, %72
  %index.next318.ls = or i64 %index317.ls, 16
  %77 = getelementptr inbounds i8, i8* %add.ptr.i122.ls, i64 %index.next318.ls
  %78 = bitcast i8* %77 to <4 x i8>*
  %wide.load331.1.ls = load <4 x i8>, <4 x i8>* %78, align 1, !tbaa !23
  %79 = getelementptr i8, i8* %77, i64 4
  %80 = bitcast i8* %79 to <4 x i8>*
  %wide.load332.1.ls = load <4 x i8>, <4 x i8>* %80, align 1, !tbaa !23
  %81 = getelementptr i8, i8* %77, i64 8
  %82 = bitcast i8* %81 to <4 x i8>*
  %wide.load333.1.ls = load <4 x i8>, <4 x i8>* %82, align 1, !tbaa !23
  %83 = getelementptr i8, i8* %77, i64 12
  %84 = bitcast i8* %83 to <4 x i8>*
  %wide.load334.1.ls = load <4 x i8>, <4 x i8>* %84, align 1, !tbaa !23
  %85 = zext <4 x i8> %wide.load331.1.ls to <4 x i64>
  %86 = zext <4 x i8> %wide.load332.1.ls to <4 x i64>
  %87 = zext <4 x i8> %wide.load333.1.ls to <4 x i64>
  %88 = zext <4 x i8> %wide.load334.1.ls to <4 x i64>
  %89 = add nuw nsw <4 x i64> %73, %85
  %90 = add nuw nsw <4 x i64> %74, %86
  %91 = add nuw nsw <4 x i64> %75, %87
  %92 = add nuw nsw <4 x i64> %76, %88
  %index.next318.1.ls = or i64 %index317.ls, 32
  %93 = getelementptr inbounds i8, i8* %add.ptr.i122.ls, i64 %index.next318.1.ls
  %94 = bitcast i8* %93 to <4 x i8>*
  %wide.load331.2.ls = load <4 x i8>, <4 x i8>* %94, align 1, !tbaa !23
  %95 = getelementptr i8, i8* %93, i64 4
  %96 = bitcast i8* %95 to <4 x i8>*
  %wide.load332.2.ls = load <4 x i8>, <4 x i8>* %96, align 1, !tbaa !23
  %97 = getelementptr i8, i8* %93, i64 8
  %98 = bitcast i8* %97 to <4 x i8>*
  %wide.load333.2.ls = load <4 x i8>, <4 x i8>* %98, align 1, !tbaa !23
  %99 = getelementptr i8, i8* %93, i64 12
  %100 = bitcast i8* %99 to <4 x i8>*
  %wide.load334.2.ls = load <4 x i8>, <4 x i8>* %100, align 1, !tbaa !23
  %101 = zext <4 x i8> %wide.load331.2.ls to <4 x i64>
  %102 = zext <4 x i8> %wide.load332.2.ls to <4 x i64>
  %103 = zext <4 x i8> %wide.load333.2.ls to <4 x i64>
  %104 = zext <4 x i8> %wide.load334.2.ls to <4 x i64>
  %105 = add nuw nsw <4 x i64> %89, %101
  %106 = add nuw nsw <4 x i64> %90, %102
  %107 = add nuw nsw <4 x i64> %91, %103
  %108 = add nuw nsw <4 x i64> %92, %104
  %index.next318.2.ls = or i64 %index317.ls, 48
  %109 = getelementptr inbounds i8, i8* %add.ptr.i122.ls, i64 %index.next318.2.ls
  %110 = bitcast i8* %109 to <4 x i8>*
  %wide.load331.3.ls = load <4 x i8>, <4 x i8>* %110, align 1, !tbaa !23
  %111 = getelementptr i8, i8* %109, i64 4
  %112 = bitcast i8* %111 to <4 x i8>*
  %wide.load332.3.ls = load <4 x i8>, <4 x i8>* %112, align 1, !tbaa !23
  %113 = getelementptr i8, i8* %109, i64 8
  %114 = bitcast i8* %113 to <4 x i8>*
  %wide.load333.3.ls = load <4 x i8>, <4 x i8>* %114, align 1, !tbaa !23
  %115 = getelementptr i8, i8* %109, i64 12
  %116 = bitcast i8* %115 to <4 x i8>*
  %wide.load334.3.ls = load <4 x i8>, <4 x i8>* %116, align 1, !tbaa !23
  %117 = zext <4 x i8> %wide.load331.3.ls to <4 x i64>
  %118 = zext <4 x i8> %wide.load332.3.ls to <4 x i64>
  %119 = zext <4 x i8> %wide.load333.3.ls to <4 x i64>
  %120 = zext <4 x i8> %wide.load334.3.ls to <4 x i64>
  %121 = add nuw nsw <4 x i64> %105, %117
  %122 = add nuw nsw <4 x i64> %106, %118
  %123 = add nuw nsw <4 x i64> %107, %119
  %124 = add nuw nsw <4 x i64> %108, %120
  %index.next318.3.ls = add i64 %index317.ls, 64
  %niter453.nsub.3.ls = add i64 %niter453.ls, -4
  %niter453.ncmp.3.ls = icmp eq i64 %niter453.nsub.3.ls, 0
  br i1 %niter453.ncmp.3.ls, label %middle.block310.unr-lcssa.ls, label %vector.body309.ls, !llvm.loop !373

middle.block310.unr-lcssa.ls:                     ; preds = %vector.body309.ls, %vector.ph314.ls
  %.lcssa421.ph.ls = phi <4 x i64> [ undef, %vector.ph314.ls ], [ %121, %vector.body309.ls ]
  %.lcssa420.ph.ls = phi <4 x i64> [ undef, %vector.ph314.ls ], [ %122, %vector.body309.ls ]
  %.lcssa419.ph.ls = phi <4 x i64> [ undef, %vector.ph314.ls ], [ %123, %vector.body309.ls ]
  %.lcssa418.ph.ls = phi <4 x i64> [ undef, %vector.ph314.ls ], [ %124, %vector.body309.ls ]
  %index317.unr.ls = phi i64 [ 0, %vector.ph314.ls ], [ %index.next318.3.ls, %vector.body309.ls ]
  %vec.phi327.unr.ls = phi <4 x i64> [ zeroinitializer, %vector.ph314.ls ], [ %121, %vector.body309.ls ]
  %vec.phi328.unr.ls = phi <4 x i64> [ zeroinitializer, %vector.ph314.ls ], [ %122, %vector.body309.ls ]
  %vec.phi329.unr.ls = phi <4 x i64> [ zeroinitializer, %vector.ph314.ls ], [ %123, %vector.body309.ls ]
  %vec.phi330.unr.ls = phi <4 x i64> [ zeroinitializer, %vector.ph314.ls ], [ %124, %vector.body309.ls ]
  %lcmp.mod447.ls = icmp eq i64 %xtraiter445.ls, 0
  br i1 %lcmp.mod447.ls, label %middle.block310.ls, label %vector.body309.epil.ls.preheader

vector.body309.epil.ls.preheader:                 ; preds = %middle.block310.unr-lcssa.ls
  br label %vector.body309.epil.ls

vector.body309.epil.ls:                           ; preds = %vector.body309.epil.ls.preheader, %vector.body309.epil.ls
  %index317.epil.ls = phi i64 [ %index.next318.epil.ls, %vector.body309.epil.ls ], [ %index317.unr.ls, %vector.body309.epil.ls.preheader ]
  %vec.phi327.epil.ls = phi <4 x i64> [ %137, %vector.body309.epil.ls ], [ %vec.phi327.unr.ls, %vector.body309.epil.ls.preheader ]
  %vec.phi328.epil.ls = phi <4 x i64> [ %138, %vector.body309.epil.ls ], [ %vec.phi328.unr.ls, %vector.body309.epil.ls.preheader ]
  %vec.phi329.epil.ls = phi <4 x i64> [ %139, %vector.body309.epil.ls ], [ %vec.phi329.unr.ls, %vector.body309.epil.ls.preheader ]
  %vec.phi330.epil.ls = phi <4 x i64> [ %140, %vector.body309.epil.ls ], [ %vec.phi330.unr.ls, %vector.body309.epil.ls.preheader ]
  %epil.iter446.ls = phi i64 [ %epil.iter446.sub.ls, %vector.body309.epil.ls ], [ %xtraiter445.ls, %vector.body309.epil.ls.preheader ]
  %125 = getelementptr inbounds i8, i8* %add.ptr.i122.ls, i64 %index317.epil.ls
  %126 = bitcast i8* %125 to <4 x i8>*
  %wide.load331.epil.ls = load <4 x i8>, <4 x i8>* %126, align 1, !tbaa !23
  %127 = getelementptr i8, i8* %125, i64 4
  %128 = bitcast i8* %127 to <4 x i8>*
  %wide.load332.epil.ls = load <4 x i8>, <4 x i8>* %128, align 1, !tbaa !23
  %129 = getelementptr i8, i8* %125, i64 8
  %130 = bitcast i8* %129 to <4 x i8>*
  %wide.load333.epil.ls = load <4 x i8>, <4 x i8>* %130, align 1, !tbaa !23
  %131 = getelementptr i8, i8* %125, i64 12
  %132 = bitcast i8* %131 to <4 x i8>*
  %wide.load334.epil.ls = load <4 x i8>, <4 x i8>* %132, align 1, !tbaa !23
  %133 = zext <4 x i8> %wide.load331.epil.ls to <4 x i64>
  %134 = zext <4 x i8> %wide.load332.epil.ls to <4 x i64>
  %135 = zext <4 x i8> %wide.load333.epil.ls to <4 x i64>
  %136 = zext <4 x i8> %wide.load334.epil.ls to <4 x i64>
  %137 = add nuw nsw <4 x i64> %vec.phi327.epil.ls, %133
  %138 = add nuw nsw <4 x i64> %vec.phi328.epil.ls, %134
  %139 = add nuw nsw <4 x i64> %vec.phi329.epil.ls, %135
  %140 = add nuw nsw <4 x i64> %vec.phi330.epil.ls, %136
  %index.next318.epil.ls = add i64 %index317.epil.ls, 16
  %epil.iter446.sub.ls = add nsw i64 %epil.iter446.ls, -1
  %epil.iter446.cmp.ls = icmp eq i64 %epil.iter446.sub.ls, 0
  br i1 %epil.iter446.cmp.ls, label %middle.block310.ls, label %vector.body309.epil.ls, !llvm.loop !374

middle.block310.ls:                               ; preds = %vector.body309.epil.ls, %middle.block310.unr-lcssa.ls
  %.lcssa421.ls = phi <4 x i64> [ %.lcssa421.ph.ls, %middle.block310.unr-lcssa.ls ], [ %137, %vector.body309.epil.ls ]
  %.lcssa420.ls = phi <4 x i64> [ %.lcssa420.ph.ls, %middle.block310.unr-lcssa.ls ], [ %138, %vector.body309.epil.ls ]
  %.lcssa419.ls = phi <4 x i64> [ %.lcssa419.ph.ls, %middle.block310.unr-lcssa.ls ], [ %139, %vector.body309.epil.ls ]
  %.lcssa418.ls = phi <4 x i64> [ %.lcssa418.ph.ls, %middle.block310.unr-lcssa.ls ], [ %140, %vector.body309.epil.ls ]
  %bin.rdx335.ls = add nuw <4 x i64> %.lcssa420.ls, %.lcssa421.ls
  %bin.rdx336.ls = add <4 x i64> %bin.rdx335.ls, %.lcssa419.ls
  %bin.rdx337.ls = add <4 x i64> %bin.rdx336.ls, %.lcssa418.ls
  %rdx.shuf338.ls = shufflevector <4 x i64> %bin.rdx337.ls, <4 x i64> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %bin.rdx339.ls = add <4 x i64> %rdx.shuf338.ls, %bin.rdx337.ls
  %rdx.shuf340.ls = shufflevector <4 x i64> %bin.rdx339.ls, <4 x i64> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %bin.rdx341.ls = add <4 x i64> %rdx.shuf340.ls, %bin.rdx339.ls
  %141 = extractelement <4 x i64> %bin.rdx341.ls, i32 0
  %cmp.n320.ls = icmp eq i64 %52, %n.vec316.ls
  br i1 %cmp.n320.ls, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i171.ls, label %for.body29.i.i167.ls.preheader

for.body29.i.i167.ls.preheader:                   ; preds = %middle.block310.ls, %for.body29.lr.ph.i.i160.ls
  %j25.068.i.i161.ls.ph = phi i64 [ %n.vec316.ls, %middle.block310.ls ], [ 0, %for.body29.lr.ph.i.i160.ls ]
  %r.167.i.i162.ls.ph = phi i64 [ %141, %middle.block310.ls ], [ 0, %for.body29.lr.ph.i.i160.ls ]
  br label %for.body29.i.i167.ls

for.body29.i.i167.ls:                             ; preds = %for.body29.i.i167.ls.preheader, %for.body29.i.i167.ls
  %j25.068.i.i161.ls = phi i64 [ %inc34.i.i165.ls, %for.body29.i.i167.ls ], [ %j25.068.i.i161.ls.ph, %for.body29.i.i167.ls.preheader ]
  %r.167.i.i162.ls = phi i64 [ %add32.i.i164.ls, %for.body29.i.i167.ls ], [ %r.167.i.i162.ls.ph, %for.body29.i.i167.ls.preheader ]
  %arrayidx30.i.i163.ls = getelementptr inbounds i8, i8* %add.ptr.i122.ls, i64 %j25.068.i.i161.ls
  %142 = load i8, i8* %arrayidx30.i.i163.ls, align 1, !tbaa !23, !range !70
  %143 = zext i8 %142 to i64
  %add32.i.i164.ls = add nuw nsw i64 %r.167.i.i162.ls, %143
  %inc34.i.i165.ls = add nuw nsw i64 %j25.068.i.i161.ls, 1
  %exitcond73.i.i166.ls = icmp eq i64 %inc34.i.i165.ls, %sub.i123.ls
  br i1 %exitcond73.i.i166.ls, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i171.ls, label %for.body29.i.i167.ls, !llvm.loop !375

if.then.i.i134.ls:                                ; preds = %land.lhs.true2.i.i131.ls
  %shr75.i.i132.ls = lshr i64 %sub.i123.ls, 9
  %cmp562.i.i133.ls = icmp sgt i64 %sub.i123.ls, 511
  br i1 %cmp562.i.i133.ls, label %for.body.lr.ph.i.i135.ls, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i171.ls

for.body.lr.ph.i.i135.ls:                         ; preds = %if.then.i.i134.ls
  %144 = bitcast i8* %add.ptr.i122.ls to i32*
  br label %vector.ph280.ls

vector.ph280.ls:                                  ; preds = %vector.ph280.ls, %for.body.lr.ph.i.i135.ls
  %indvars.iv71.i.i136.ls = phi i64 [ 0, %for.body.lr.ph.i.i135.ls ], [ %indvars.iv.next72.i.i148.ls, %vector.ph280.ls ]
  %IFl.064.i.i137.ls = phi i32* [ %144, %for.body.lr.ph.i.i135.ls ], [ %add.ptr.i.i147.ls, %vector.ph280.ls ]
  %r.063.i.i138.ls = phi i64 [ 0, %for.body.lr.ph.i.i135.ls ], [ %add21.i.i146.ls, %vector.ph280.ls ]
  %145 = bitcast i32* %IFl.064.i.i137.ls to <8 x i32>*
  %wide.load295.ls = load <8 x i32>, <8 x i32>* %145, align 4, !tbaa !59
  %146 = getelementptr i32, i32* %IFl.064.i.i137.ls, i64 8
  %147 = bitcast i32* %146 to <8 x i32>*
  %wide.load296.ls = load <8 x i32>, <8 x i32>* %147, align 4, !tbaa !59
  %148 = getelementptr i32, i32* %IFl.064.i.i137.ls, i64 16
  %149 = bitcast i32* %148 to <8 x i32>*
  %wide.load297.ls = load <8 x i32>, <8 x i32>* %149, align 4, !tbaa !59
  %150 = getelementptr i32, i32* %IFl.064.i.i137.ls, i64 24
  %151 = bitcast i32* %150 to <8 x i32>*
  %wide.load298.ls = load <8 x i32>, <8 x i32>* %151, align 4, !tbaa !59
  %152 = getelementptr inbounds i32, i32* %IFl.064.i.i137.ls, i64 32
  %153 = bitcast i32* %152 to <8 x i32>*
  %wide.load295.1.ls = load <8 x i32>, <8 x i32>* %153, align 4, !tbaa !59
  %154 = getelementptr i32, i32* %IFl.064.i.i137.ls, i64 40
  %155 = bitcast i32* %154 to <8 x i32>*
  %wide.load296.1.ls = load <8 x i32>, <8 x i32>* %155, align 4, !tbaa !59
  %156 = getelementptr i32, i32* %IFl.064.i.i137.ls, i64 48
  %157 = bitcast i32* %156 to <8 x i32>*
  %wide.load297.1.ls = load <8 x i32>, <8 x i32>* %157, align 4, !tbaa !59
  %158 = getelementptr i32, i32* %IFl.064.i.i137.ls, i64 56
  %159 = bitcast i32* %158 to <8 x i32>*
  %wide.load298.1.ls = load <8 x i32>, <8 x i32>* %159, align 4, !tbaa !59
  %160 = getelementptr inbounds i32, i32* %IFl.064.i.i137.ls, i64 64
  %161 = bitcast i32* %160 to <8 x i32>*
  %wide.load295.2.ls = load <8 x i32>, <8 x i32>* %161, align 4, !tbaa !59
  %162 = getelementptr i32, i32* %IFl.064.i.i137.ls, i64 72
  %163 = bitcast i32* %162 to <8 x i32>*
  %wide.load296.2.ls = load <8 x i32>, <8 x i32>* %163, align 4, !tbaa !59
  %164 = getelementptr i32, i32* %IFl.064.i.i137.ls, i64 80
  %165 = bitcast i32* %164 to <8 x i32>*
  %wide.load297.2.ls = load <8 x i32>, <8 x i32>* %165, align 4, !tbaa !59
  %166 = getelementptr i32, i32* %IFl.064.i.i137.ls, i64 88
  %167 = bitcast i32* %166 to <8 x i32>*
  %wide.load298.2.ls = load <8 x i32>, <8 x i32>* %167, align 4, !tbaa !59
  %168 = getelementptr inbounds i32, i32* %IFl.064.i.i137.ls, i64 96
  %169 = bitcast i32* %168 to <8 x i32>*
  %wide.load295.3.ls = load <8 x i32>, <8 x i32>* %169, align 4, !tbaa !59
  %170 = getelementptr i32, i32* %IFl.064.i.i137.ls, i64 104
  %171 = bitcast i32* %170 to <8 x i32>*
  %wide.load296.3.ls = load <8 x i32>, <8 x i32>* %171, align 4, !tbaa !59
  %172 = getelementptr i32, i32* %IFl.064.i.i137.ls, i64 112
  %173 = bitcast i32* %172 to <8 x i32>*
  %wide.load297.3.ls = load <8 x i32>, <8 x i32>* %173, align 4, !tbaa !59
  %174 = getelementptr i32, i32* %IFl.064.i.i137.ls, i64 120
  %175 = bitcast i32* %174 to <8 x i32>*
  %wide.load298.3.ls = load <8 x i32>, <8 x i32>* %175, align 4, !tbaa !59
  %176 = add <8 x i32> %wide.load296.ls, %wide.load295.ls
  %177 = add <8 x i32> %176, %wide.load297.ls
  %178 = add <8 x i32> %177, %wide.load298.ls
  %179 = add <8 x i32> %178, %wide.load295.1.ls
  %180 = add <8 x i32> %179, %wide.load296.1.ls
  %181 = add <8 x i32> %180, %wide.load297.1.ls
  %bin.rdx299.ls = add <8 x i32> %181, %wide.load298.1.ls
  %182 = add <8 x i32> %bin.rdx299.ls, %wide.load295.2.ls
  %183 = add <8 x i32> %182, %wide.load296.2.ls
  %184 = add <8 x i32> %183, %wide.load297.2.ls
  %bin.rdx300.ls = add <8 x i32> %184, %wide.load298.2.ls
  %185 = add <8 x i32> %bin.rdx300.ls, %wide.load295.3.ls
  %186 = add <8 x i32> %185, %wide.load296.3.ls
  %187 = add <8 x i32> %186, %wide.load297.3.ls
  %bin.rdx301.ls = add <8 x i32> %187, %wide.load298.3.ls
  %rdx.shuf302.ls = shufflevector <8 x i32> %bin.rdx301.ls, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx303.ls = add <8 x i32> %rdx.shuf302.ls, %bin.rdx301.ls
  %rdx.shuf304.ls = shufflevector <8 x i32> %bin.rdx303.ls, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx305.ls = add <8 x i32> %rdx.shuf304.ls, %bin.rdx303.ls
  %rdx.shuf306.ls = shufflevector <8 x i32> %bin.rdx305.ls, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx307.ls = add <8 x i32> %rdx.shuf306.ls, %bin.rdx305.ls
  %188 = extractelement <8 x i32> %bin.rdx307.ls, i32 0
  %and10.i.i140.ls = and i32 %188, 255
  %189 = lshr i32 %188, 8
  %and12.i.i141.ls = and i32 %189, 255
  %190 = lshr i32 %188, 16
  %and15.i.i142.ls = and i32 %190, 255
  %191 = lshr i32 %188, 24
  %add13.i.i143.ls = add nuw nsw i32 %191, %and10.i.i140.ls
  %add16.i.i144.ls = add nuw nsw i32 %add13.i.i143.ls, %and12.i.i141.ls
  %add19.i.i145.ls = add nuw nsw i32 %add16.i.i144.ls, %and15.i.i142.ls
  %192 = zext i32 %add19.i.i145.ls to i64
  %add21.i.i146.ls = add nuw nsw i64 %r.063.i.i138.ls, %192
  %add.ptr.i.i147.ls = getelementptr inbounds i32, i32* %IFl.064.i.i137.ls, i64 128
  %indvars.iv.next72.i.i148.ls = add nuw nsw i64 %indvars.iv71.i.i136.ls, 1
  %cmp5.i.i149.ls = icmp ugt i64 %shr75.i.i132.ls, %indvars.iv.next72.i.i148.ls
  br i1 %cmp5.i.i149.ls, label %vector.ph280.ls, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i171.ls

_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i171.ls: ; preds = %for.body29.i.i167.ls, %vector.ph280.ls, %if.then.i.i134.ls, %middle.block310.ls, %if.else.i.i159.ls
  %r.2.i.i168.ls = phi i64 [ 0, %if.then.i.i134.ls ], [ 0, %if.else.i.i159.ls ], [ %141, %middle.block310.ls ], [ %add21.i.i146.ls, %vector.ph280.ls ], [ %add32.i.i164.ls, %for.body29.i.i167.ls ]
  %mul.i169.ls = shl i64 %r.2.i.i168.ls, 3
  %call1.i170.ls = tail call noalias i8* @malloc(i64 %mul.i169.ls) #2
  %193 = bitcast i8* %call1.i170.ls to i64*
  br label %if.end.i174.ls

if.end.i174.ls:                                   ; preds = %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i171.ls, %pfor.detach47.ls
  %Out.addr.0.i172.ls = phi i64* [ %193, %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i171.ls ], [ %add.ptr61.ls, %pfor.detach47.ls ]
  %cmp220.i173.ls = icmp sgt i64 %.sroa.speculated.ls, %add55.ls
  br i1 %cmp220.i173.ls, label %for.body.i183.preheader.ls, label %pfor.inc65.ls

for.body.i183.preheader.ls:                       ; preds = %if.end.i174.ls
  %xtraiter455.ls = and i64 %52, 3
  %194 = icmp ult i64 %54, 3
  br i1 %194, label %_ZN8sequence10packSerialIllN5utils9identityFIlEEEE4_seqIT_EPS5_PbT0_S9_T1_.exit191.loopexit.unr-lcssa.ls, label %for.body.i183.preheader.new.ls

for.body.i183.preheader.new.ls:                   ; preds = %for.body.i183.preheader.ls
  %unroll_iter458.ls = sub i64 %52, %xtraiter455.ls
  br label %for.body.i183.ls

for.body.i183.ls:                                 ; preds = %for.inc.i190.3.ls, %for.body.i183.preheader.new.ls
  %k.022.i179.ls = phi i64 [ 0, %for.body.i183.preheader.new.ls ], [ %k.1.i187.3.ls, %for.inc.i190.3.ls ]
  %storemerge21.i180.ls = phi i64 [ %add55.ls, %for.body.i183.preheader.new.ls ], [ %inc7.i188.3.ls, %for.inc.i190.3.ls ]
  %niter459.ls = phi i64 [ %unroll_iter458.ls, %for.body.i183.preheader.new.ls ], [ %niter459.nsub.3.ls, %for.inc.i190.3.ls ]
  %arrayidx.i181.ls = getelementptr inbounds i8, i8* %Fl.ls, i64 %storemerge21.i180.ls
  %195 = load i8, i8* %arrayidx.i181.ls, align 1, !tbaa !23, !range !70
  %tobool.i182.ls = icmp eq i8 %195, 0
  br i1 %tobool.i182.ls, label %for.inc.i190.ls, label %if.then3.i186.ls

if.then3.i186.ls:                                 ; preds = %for.body.i183.ls
  %inc.i184.ls = add nsw i64 %k.022.i179.ls, 1
  %arrayidx5.i185.ls = getelementptr inbounds i64, i64* %Out.addr.0.i172.ls, i64 %k.022.i179.ls
  store i64 %storemerge21.i180.ls, i64* %arrayidx5.i185.ls, align 8, !tbaa !49
  br label %for.inc.i190.ls

for.inc.i190.ls:                                  ; preds = %if.then3.i186.ls, %for.body.i183.ls
  %k.1.i187.ls = phi i64 [ %inc.i184.ls, %if.then3.i186.ls ], [ %k.022.i179.ls, %for.body.i183.ls ]
  %inc7.i188.ls = add nsw i64 %storemerge21.i180.ls, 1
  %arrayidx.i181.1.ls = getelementptr inbounds i8, i8* %Fl.ls, i64 %inc7.i188.ls
  %196 = load i8, i8* %arrayidx.i181.1.ls, align 1, !tbaa !23, !range !70
  %tobool.i182.1.ls = icmp eq i8 %196, 0
  br i1 %tobool.i182.1.ls, label %for.inc.i190.1.ls, label %if.then3.i186.1.ls

if.then3.i186.1.ls:                               ; preds = %for.inc.i190.ls
  %inc.i184.1.ls = add nsw i64 %k.1.i187.ls, 1
  %arrayidx5.i185.1.ls = getelementptr inbounds i64, i64* %Out.addr.0.i172.ls, i64 %k.1.i187.ls
  store i64 %inc7.i188.ls, i64* %arrayidx5.i185.1.ls, align 8, !tbaa !49
  br label %for.inc.i190.1.ls

for.inc.i190.1.ls:                                ; preds = %if.then3.i186.1.ls, %for.inc.i190.ls
  %k.1.i187.1.ls = phi i64 [ %inc.i184.1.ls, %if.then3.i186.1.ls ], [ %k.1.i187.ls, %for.inc.i190.ls ]
  %inc7.i188.1.ls = add nsw i64 %storemerge21.i180.ls, 2
  %arrayidx.i181.2.ls = getelementptr inbounds i8, i8* %Fl.ls, i64 %inc7.i188.1.ls
  %197 = load i8, i8* %arrayidx.i181.2.ls, align 1, !tbaa !23, !range !70
  %tobool.i182.2.ls = icmp eq i8 %197, 0
  br i1 %tobool.i182.2.ls, label %for.inc.i190.2.ls, label %if.then3.i186.2.ls

if.then3.i186.2.ls:                               ; preds = %for.inc.i190.1.ls
  %inc.i184.2.ls = add nsw i64 %k.1.i187.1.ls, 1
  %arrayidx5.i185.2.ls = getelementptr inbounds i64, i64* %Out.addr.0.i172.ls, i64 %k.1.i187.1.ls
  store i64 %inc7.i188.1.ls, i64* %arrayidx5.i185.2.ls, align 8, !tbaa !49
  br label %for.inc.i190.2.ls

for.inc.i190.2.ls:                                ; preds = %if.then3.i186.2.ls, %for.inc.i190.1.ls
  %k.1.i187.2.ls = phi i64 [ %inc.i184.2.ls, %if.then3.i186.2.ls ], [ %k.1.i187.1.ls, %for.inc.i190.1.ls ]
  %inc7.i188.2.ls = add nsw i64 %storemerge21.i180.ls, 3
  %arrayidx.i181.3.ls = getelementptr inbounds i8, i8* %Fl.ls, i64 %inc7.i188.2.ls
  %198 = load i8, i8* %arrayidx.i181.3.ls, align 1, !tbaa !23, !range !70
  %tobool.i182.3.ls = icmp eq i8 %198, 0
  br i1 %tobool.i182.3.ls, label %for.inc.i190.3.ls, label %if.then3.i186.3.ls

if.then3.i186.3.ls:                               ; preds = %for.inc.i190.2.ls
  %inc.i184.3.ls = add nsw i64 %k.1.i187.2.ls, 1
  %arrayidx5.i185.3.ls = getelementptr inbounds i64, i64* %Out.addr.0.i172.ls, i64 %k.1.i187.2.ls
  store i64 %inc7.i188.2.ls, i64* %arrayidx5.i185.3.ls, align 8, !tbaa !49
  br label %for.inc.i190.3.ls

for.inc.i190.3.ls:                                ; preds = %if.then3.i186.3.ls, %for.inc.i190.2.ls
  %k.1.i187.3.ls = phi i64 [ %inc.i184.3.ls, %if.then3.i186.3.ls ], [ %k.1.i187.2.ls, %for.inc.i190.2.ls ]
  %inc7.i188.3.ls = add nsw i64 %storemerge21.i180.ls, 4
  %niter459.nsub.3.ls = add i64 %niter459.ls, -4
  %niter459.ncmp.3.ls = icmp eq i64 %niter459.nsub.3.ls, 0
  br i1 %niter459.ncmp.3.ls, label %_ZN8sequence10packSerialIllN5utils9identityFIlEEEE4_seqIT_EPS5_PbT0_S9_T1_.exit191.loopexit.unr-lcssa.ls, label %for.body.i183.ls

_ZN8sequence10packSerialIllN5utils9identityFIlEEEE4_seqIT_EPS5_PbT0_S9_T1_.exit191.loopexit.unr-lcssa.ls: ; preds = %for.inc.i190.3.ls, %for.body.i183.preheader.ls
  %k.022.i179.unr.ls = phi i64 [ 0, %for.body.i183.preheader.ls ], [ %k.1.i187.3.ls, %for.inc.i190.3.ls ]
  %storemerge21.i180.unr.ls = phi i64 [ %add55.ls, %for.body.i183.preheader.ls ], [ %inc7.i188.3.ls, %for.inc.i190.3.ls ]
  %lcmp.mod457.ls = icmp eq i64 %xtraiter455.ls, 0
  br i1 %lcmp.mod457.ls, label %pfor.inc65.ls, label %for.body.i183.epil.ls.preheader

for.body.i183.epil.ls.preheader:                  ; preds = %_ZN8sequence10packSerialIllN5utils9identityFIlEEEE4_seqIT_EPS5_PbT0_S9_T1_.exit191.loopexit.unr-lcssa.ls
  br label %for.body.i183.epil.ls

for.body.i183.epil.ls:                            ; preds = %for.body.i183.epil.ls.preheader, %for.inc.i190.epil.ls
  %k.022.i179.epil.ls = phi i64 [ %k.1.i187.epil.ls, %for.inc.i190.epil.ls ], [ %k.022.i179.unr.ls, %for.body.i183.epil.ls.preheader ]
  %storemerge21.i180.epil.ls = phi i64 [ %inc7.i188.epil.ls, %for.inc.i190.epil.ls ], [ %storemerge21.i180.unr.ls, %for.body.i183.epil.ls.preheader ]
  %epil.iter456.ls = phi i64 [ %epil.iter456.sub.ls, %for.inc.i190.epil.ls ], [ %xtraiter455.ls, %for.body.i183.epil.ls.preheader ]
  %arrayidx.i181.epil.ls = getelementptr inbounds i8, i8* %Fl.ls, i64 %storemerge21.i180.epil.ls
  %199 = load i8, i8* %arrayidx.i181.epil.ls, align 1, !tbaa !23, !range !70
  %tobool.i182.epil.ls = icmp eq i8 %199, 0
  br i1 %tobool.i182.epil.ls, label %for.inc.i190.epil.ls, label %if.then3.i186.epil.ls

if.then3.i186.epil.ls:                            ; preds = %for.body.i183.epil.ls
  %inc.i184.epil.ls = add nsw i64 %k.022.i179.epil.ls, 1
  %arrayidx5.i185.epil.ls = getelementptr inbounds i64, i64* %Out.addr.0.i172.ls, i64 %k.022.i179.epil.ls
  store i64 %storemerge21.i180.epil.ls, i64* %arrayidx5.i185.epil.ls, align 8, !tbaa !49
  br label %for.inc.i190.epil.ls

for.inc.i190.epil.ls:                             ; preds = %if.then3.i186.epil.ls, %for.body.i183.epil.ls
  %k.1.i187.epil.ls = phi i64 [ %inc.i184.epil.ls, %if.then3.i186.epil.ls ], [ %k.022.i179.epil.ls, %for.body.i183.epil.ls ]
  %inc7.i188.epil.ls = add nsw i64 %storemerge21.i180.epil.ls, 1
  %epil.iter456.sub.ls = add nsw i64 %epil.iter456.ls, -1
  %epil.iter456.cmp.ls = icmp eq i64 %epil.iter456.sub.ls, 0
  br i1 %epil.iter456.cmp.ls, label %pfor.inc65.ls, label %for.body.i183.epil.ls, !llvm.loop !376

pfor.inc65.ls:                                    ; preds = %for.inc.i190.epil.ls, %if.end.i174.ls, %_ZN8sequence10packSerialIllN5utils9identityFIlEEEE4_seqIT_EPS5_PbT0_S9_T1_.exit191.loopexit.unr-lcssa.ls
  %200 = icmp ult i64 %__begin38.0218.ls, %end.ls
  %inc66.ls = add nuw nsw i64 %__begin38.0218.ls, 1
  br i1 %200, label %pfor.detach47.ls, label %pfor.cond.cleanup46.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN8sequence4scanIllN5utils4addFIlEENS_4getAIllEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach.ls(i64 %__begin.0208.start.ls, i64 %end.ls, i64 %.ls, i64 %.ls1, i64 %.ls2, i64 %.ls3, i64 %s.ls, i64 %e.ls, i64* nocapture readonly align 1 %g.coerce.ls, i64* nocapture align 1 %.ls4) unnamed_addr #15 {
pfor.detach.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount12 = sub i64 %end.ls, %__begin.0208.start.ls
  %9 = icmp ugt i64 %itercount12, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin.0208.ls.ph = phi i64 [ %__begin.0208.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount14 = phi i64 [ %itercount12, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin.0208.ls.dac13 = phi i64 [ %__begin.0208.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount14, 1
  %miditer = add nuw nsw i64 %__begin.0208.ls.dac13, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split15, label %.split.split

.split15:                                         ; preds = %16
  call fastcc void @_ZN8sequence4scanIllN5utils4addFIlEENS_4getAIllEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach.ls_.split.cilk(i64 %__begin.0208.ls.dac13, i64 %miditer, i64 %.ls, i64 %.ls1, i64 %.ls2, i64 %.ls3, i64 %s.ls, i64 %e.ls, i64* %g.coerce.ls, i64* %.ls4)
  br label %.split.split

.split.split:                                     ; preds = %.split15, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.ls:                             ; preds = %_ZN8sequence12reduceSerialIllN5utils4addFIlEENS_4getAIllEEEET_T0_S7_T1_T2_.exit.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %_ZN8sequence12reduceSerialIllN5utils4addFIlEENS_4getAIllEEEET_T0_S7_T1_T2_.exit.ls
  %__begin.0208.ls = phi i64 [ %inc.ls, %_ZN8sequence12reduceSerialIllN5utils4addFIlEENS_4getAIllEEEET_T0_S7_T1_T2_.exit.ls ], [ %__begin.0208.ls.ph, %pfor.detach.ls.preheader ]
  %48 = mul nsw i64 %__begin.0208.ls, -1024
  %49 = add i64 %48, %.ls1
  %50 = add i64 %48, %.ls2
  %51 = icmp sgt i64 %50, %.ls3
  %smax276.ls = select i1 %51, i64 %50, i64 %.ls3
  %52 = sub i64 %49, %smax276.ls
  %53 = add i64 %52, -16
  %54 = lshr i64 %53, 4
  %55 = add nuw nsw i64 %54, 1
  %mul22.ls = shl nsw i64 %__begin.0208.ls, 10
  %add23.ls = add nsw i64 %mul22.ls, %s.ls
  %add25.ls = add nsw i64 %add23.ls, 1024
  %cmp.i131.ls = icmp sgt i64 %add25.ls, %e.ls
  %.sroa.speculated192.ls = select i1 %cmp.i131.ls, i64 %e.ls, i64 %add25.ls
  %arrayidx.i.i182.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %add23.ls
  %56 = load i64, i64* %arrayidx.i.i182.ls, align 8, !tbaa !49
  %j.013.i.ls = add nsw i64 %add23.ls, 1
  %cmp14.i.ls = icmp slt i64 %j.013.i.ls, %.sroa.speculated192.ls
  br i1 %cmp14.i.ls, label %for.body.lr.ph.i183.ls, label %_ZN8sequence12reduceSerialIllN5utils4addFIlEENS_4getAIllEEEET_T0_S7_T1_T2_.exit.ls

for.body.lr.ph.i183.ls:                           ; preds = %pfor.detach.ls
  %min.iters.check.ls = icmp ult i64 %52, 16
  br i1 %min.iters.check.ls, label %for.body.i186.ls.preheader, label %vector.ph.ls

vector.ph.ls:                                     ; preds = %for.body.lr.ph.i183.ls
  %n.vec.ls = and i64 %52, -16
  %ind.end.ls = add i64 %n.vec.ls, %j.013.i.ls
  %57 = insertelement <4 x i64> <i64 undef, i64 0, i64 0, i64 0>, i64 %56, i32 0
  %xtraiter277.ls = and i64 %55, 3
  %58 = icmp ult i64 %53, 48
  br i1 %58, label %middle.block.unr-lcssa.ls, label %vector.ph.new.ls

vector.ph.new.ls:                                 ; preds = %vector.ph.ls
  %unroll_iter.ls = sub nsw i64 %55, %xtraiter277.ls
  br label %vector.body.ls

vector.body.ls:                                   ; preds = %vector.body.ls, %vector.ph.new.ls
  %index.ls = phi i64 [ 0, %vector.ph.new.ls ], [ %index.next.3.ls, %vector.body.ls ]
  %vec.phi.ls = phi <4 x i64> [ %57, %vector.ph.new.ls ], [ %107, %vector.body.ls ]
  %vec.phi231.ls = phi <4 x i64> [ zeroinitializer, %vector.ph.new.ls ], [ %108, %vector.body.ls ]
  %vec.phi232.ls = phi <4 x i64> [ zeroinitializer, %vector.ph.new.ls ], [ %109, %vector.body.ls ]
  %vec.phi233.ls = phi <4 x i64> [ zeroinitializer, %vector.ph.new.ls ], [ %110, %vector.body.ls ]
  %niter.ls = phi i64 [ %unroll_iter.ls, %vector.ph.new.ls ], [ %niter.nsub.3.ls, %vector.body.ls ]
  %59 = add i64 %index.ls, %j.013.i.ls
  %60 = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %59
  %61 = bitcast i64* %60 to <4 x i64>*
  %wide.load.ls = load <4 x i64>, <4 x i64>* %61, align 8, !tbaa !49
  %62 = getelementptr i64, i64* %60, i64 4
  %63 = bitcast i64* %62 to <4 x i64>*
  %wide.load234.ls = load <4 x i64>, <4 x i64>* %63, align 8, !tbaa !49
  %64 = getelementptr i64, i64* %60, i64 8
  %65 = bitcast i64* %64 to <4 x i64>*
  %wide.load235.ls = load <4 x i64>, <4 x i64>* %65, align 8, !tbaa !49
  %66 = getelementptr i64, i64* %60, i64 12
  %67 = bitcast i64* %66 to <4 x i64>*
  %wide.load236.ls = load <4 x i64>, <4 x i64>* %67, align 8, !tbaa !49
  %68 = add nsw <4 x i64> %wide.load.ls, %vec.phi.ls
  %69 = add nsw <4 x i64> %wide.load234.ls, %vec.phi231.ls
  %70 = add nsw <4 x i64> %wide.load235.ls, %vec.phi232.ls
  %71 = add nsw <4 x i64> %wide.load236.ls, %vec.phi233.ls
  %index.next.ls = or i64 %index.ls, 16
  %72 = add i64 %index.next.ls, %j.013.i.ls
  %73 = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %72
  %74 = bitcast i64* %73 to <4 x i64>*
  %wide.load.1.ls = load <4 x i64>, <4 x i64>* %74, align 8, !tbaa !49
  %75 = getelementptr i64, i64* %73, i64 4
  %76 = bitcast i64* %75 to <4 x i64>*
  %wide.load234.1.ls = load <4 x i64>, <4 x i64>* %76, align 8, !tbaa !49
  %77 = getelementptr i64, i64* %73, i64 8
  %78 = bitcast i64* %77 to <4 x i64>*
  %wide.load235.1.ls = load <4 x i64>, <4 x i64>* %78, align 8, !tbaa !49
  %79 = getelementptr i64, i64* %73, i64 12
  %80 = bitcast i64* %79 to <4 x i64>*
  %wide.load236.1.ls = load <4 x i64>, <4 x i64>* %80, align 8, !tbaa !49
  %81 = add nsw <4 x i64> %68, %wide.load.1.ls
  %82 = add nsw <4 x i64> %69, %wide.load234.1.ls
  %83 = add nsw <4 x i64> %70, %wide.load235.1.ls
  %84 = add nsw <4 x i64> %71, %wide.load236.1.ls
  %index.next.1.ls = or i64 %index.ls, 32
  %85 = add i64 %index.next.1.ls, %j.013.i.ls
  %86 = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %85
  %87 = bitcast i64* %86 to <4 x i64>*
  %wide.load.2.ls = load <4 x i64>, <4 x i64>* %87, align 8, !tbaa !49
  %88 = getelementptr i64, i64* %86, i64 4
  %89 = bitcast i64* %88 to <4 x i64>*
  %wide.load234.2.ls = load <4 x i64>, <4 x i64>* %89, align 8, !tbaa !49
  %90 = getelementptr i64, i64* %86, i64 8
  %91 = bitcast i64* %90 to <4 x i64>*
  %wide.load235.2.ls = load <4 x i64>, <4 x i64>* %91, align 8, !tbaa !49
  %92 = getelementptr i64, i64* %86, i64 12
  %93 = bitcast i64* %92 to <4 x i64>*
  %wide.load236.2.ls = load <4 x i64>, <4 x i64>* %93, align 8, !tbaa !49
  %94 = add nsw <4 x i64> %81, %wide.load.2.ls
  %95 = add nsw <4 x i64> %82, %wide.load234.2.ls
  %96 = add nsw <4 x i64> %83, %wide.load235.2.ls
  %97 = add nsw <4 x i64> %84, %wide.load236.2.ls
  %index.next.2.ls = or i64 %index.ls, 48
  %98 = add i64 %index.next.2.ls, %j.013.i.ls
  %99 = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %98
  %100 = bitcast i64* %99 to <4 x i64>*
  %wide.load.3.ls = load <4 x i64>, <4 x i64>* %100, align 8, !tbaa !49
  %101 = getelementptr i64, i64* %99, i64 4
  %102 = bitcast i64* %101 to <4 x i64>*
  %wide.load234.3.ls = load <4 x i64>, <4 x i64>* %102, align 8, !tbaa !49
  %103 = getelementptr i64, i64* %99, i64 8
  %104 = bitcast i64* %103 to <4 x i64>*
  %wide.load235.3.ls = load <4 x i64>, <4 x i64>* %104, align 8, !tbaa !49
  %105 = getelementptr i64, i64* %99, i64 12
  %106 = bitcast i64* %105 to <4 x i64>*
  %wide.load236.3.ls = load <4 x i64>, <4 x i64>* %106, align 8, !tbaa !49
  %107 = add nsw <4 x i64> %94, %wide.load.3.ls
  %108 = add nsw <4 x i64> %95, %wide.load234.3.ls
  %109 = add nsw <4 x i64> %96, %wide.load235.3.ls
  %110 = add nsw <4 x i64> %97, %wide.load236.3.ls
  %index.next.3.ls = add i64 %index.ls, 64
  %niter.nsub.3.ls = add i64 %niter.ls, -4
  %niter.ncmp.3.ls = icmp eq i64 %niter.nsub.3.ls, 0
  br i1 %niter.ncmp.3.ls, label %middle.block.unr-lcssa.ls, label %vector.body.ls, !llvm.loop !377

middle.block.unr-lcssa.ls:                        ; preds = %vector.body.ls, %vector.ph.ls
  %.lcssa250.ph.ls = phi <4 x i64> [ undef, %vector.ph.ls ], [ %107, %vector.body.ls ]
  %.lcssa249.ph.ls = phi <4 x i64> [ undef, %vector.ph.ls ], [ %108, %vector.body.ls ]
  %.lcssa248.ph.ls = phi <4 x i64> [ undef, %vector.ph.ls ], [ %109, %vector.body.ls ]
  %.lcssa.ph.ls = phi <4 x i64> [ undef, %vector.ph.ls ], [ %110, %vector.body.ls ]
  %index.unr.ls = phi i64 [ 0, %vector.ph.ls ], [ %index.next.3.ls, %vector.body.ls ]
  %vec.phi.unr.ls = phi <4 x i64> [ %57, %vector.ph.ls ], [ %107, %vector.body.ls ]
  %vec.phi231.unr.ls = phi <4 x i64> [ zeroinitializer, %vector.ph.ls ], [ %108, %vector.body.ls ]
  %vec.phi232.unr.ls = phi <4 x i64> [ zeroinitializer, %vector.ph.ls ], [ %109, %vector.body.ls ]
  %vec.phi233.unr.ls = phi <4 x i64> [ zeroinitializer, %vector.ph.ls ], [ %110, %vector.body.ls ]
  %lcmp.mod278.ls = icmp eq i64 %xtraiter277.ls, 0
  br i1 %lcmp.mod278.ls, label %middle.block.ls, label %vector.body.epil.ls.preheader

vector.body.epil.ls.preheader:                    ; preds = %middle.block.unr-lcssa.ls
  br label %vector.body.epil.ls

vector.body.epil.ls:                              ; preds = %vector.body.epil.ls.preheader, %vector.body.epil.ls
  %index.epil.ls = phi i64 [ %index.next.epil.ls, %vector.body.epil.ls ], [ %index.unr.ls, %vector.body.epil.ls.preheader ]
  %vec.phi.epil.ls = phi <4 x i64> [ %120, %vector.body.epil.ls ], [ %vec.phi.unr.ls, %vector.body.epil.ls.preheader ]
  %vec.phi231.epil.ls = phi <4 x i64> [ %121, %vector.body.epil.ls ], [ %vec.phi231.unr.ls, %vector.body.epil.ls.preheader ]
  %vec.phi232.epil.ls = phi <4 x i64> [ %122, %vector.body.epil.ls ], [ %vec.phi232.unr.ls, %vector.body.epil.ls.preheader ]
  %vec.phi233.epil.ls = phi <4 x i64> [ %123, %vector.body.epil.ls ], [ %vec.phi233.unr.ls, %vector.body.epil.ls.preheader ]
  %epil.iter.ls = phi i64 [ %epil.iter.sub.ls, %vector.body.epil.ls ], [ %xtraiter277.ls, %vector.body.epil.ls.preheader ]
  %111 = add i64 %index.epil.ls, %j.013.i.ls
  %112 = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %111
  %113 = bitcast i64* %112 to <4 x i64>*
  %wide.load.epil.ls = load <4 x i64>, <4 x i64>* %113, align 8, !tbaa !49
  %114 = getelementptr i64, i64* %112, i64 4
  %115 = bitcast i64* %114 to <4 x i64>*
  %wide.load234.epil.ls = load <4 x i64>, <4 x i64>* %115, align 8, !tbaa !49
  %116 = getelementptr i64, i64* %112, i64 8
  %117 = bitcast i64* %116 to <4 x i64>*
  %wide.load235.epil.ls = load <4 x i64>, <4 x i64>* %117, align 8, !tbaa !49
  %118 = getelementptr i64, i64* %112, i64 12
  %119 = bitcast i64* %118 to <4 x i64>*
  %wide.load236.epil.ls = load <4 x i64>, <4 x i64>* %119, align 8, !tbaa !49
  %120 = add nsw <4 x i64> %wide.load.epil.ls, %vec.phi.epil.ls
  %121 = add nsw <4 x i64> %wide.load234.epil.ls, %vec.phi231.epil.ls
  %122 = add nsw <4 x i64> %wide.load235.epil.ls, %vec.phi232.epil.ls
  %123 = add nsw <4 x i64> %wide.load236.epil.ls, %vec.phi233.epil.ls
  %index.next.epil.ls = add i64 %index.epil.ls, 16
  %epil.iter.sub.ls = add nsw i64 %epil.iter.ls, -1
  %epil.iter.cmp.ls = icmp eq i64 %epil.iter.sub.ls, 0
  br i1 %epil.iter.cmp.ls, label %middle.block.ls, label %vector.body.epil.ls, !llvm.loop !378

middle.block.ls:                                  ; preds = %vector.body.epil.ls, %middle.block.unr-lcssa.ls
  %.lcssa250.ls = phi <4 x i64> [ %.lcssa250.ph.ls, %middle.block.unr-lcssa.ls ], [ %120, %vector.body.epil.ls ]
  %.lcssa249.ls = phi <4 x i64> [ %.lcssa249.ph.ls, %middle.block.unr-lcssa.ls ], [ %121, %vector.body.epil.ls ]
  %.lcssa248.ls = phi <4 x i64> [ %.lcssa248.ph.ls, %middle.block.unr-lcssa.ls ], [ %122, %vector.body.epil.ls ]
  %.lcssa.ls = phi <4 x i64> [ %.lcssa.ph.ls, %middle.block.unr-lcssa.ls ], [ %123, %vector.body.epil.ls ]
  %bin.rdx.ls = add <4 x i64> %.lcssa249.ls, %.lcssa250.ls
  %bin.rdx237.ls = add <4 x i64> %bin.rdx.ls, %.lcssa248.ls
  %bin.rdx238.ls = add <4 x i64> %bin.rdx237.ls, %.lcssa.ls
  %rdx.shuf.ls = shufflevector <4 x i64> %bin.rdx238.ls, <4 x i64> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %bin.rdx239.ls = add <4 x i64> %rdx.shuf.ls, %bin.rdx238.ls
  %rdx.shuf240.ls = shufflevector <4 x i64> %bin.rdx239.ls, <4 x i64> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %bin.rdx241.ls = add <4 x i64> %rdx.shuf240.ls, %bin.rdx239.ls
  %124 = extractelement <4 x i64> %bin.rdx241.ls, i32 0
  %cmp.n.ls = icmp eq i64 %52, %n.vec.ls
  br i1 %cmp.n.ls, label %_ZN8sequence12reduceSerialIllN5utils4addFIlEENS_4getAIllEEEET_T0_S7_T1_T2_.exit.ls, label %for.body.i186.ls.preheader

for.body.i186.ls.preheader:                       ; preds = %middle.block.ls, %for.body.lr.ph.i183.ls
  %j.016.i.ls.ph = phi i64 [ %ind.end.ls, %middle.block.ls ], [ %j.013.i.ls, %for.body.lr.ph.i183.ls ]
  %r.015.i.ls.ph = phi i64 [ %124, %middle.block.ls ], [ %56, %for.body.lr.ph.i183.ls ]
  br label %for.body.i186.ls

for.body.i186.ls:                                 ; preds = %for.body.i186.ls.preheader, %for.body.i186.ls
  %j.016.i.ls = phi i64 [ %j.0.i.ls, %for.body.i186.ls ], [ %j.016.i.ls.ph, %for.body.i186.ls.preheader ]
  %r.015.i.ls = phi i64 [ %add.i.i184.ls, %for.body.i186.ls ], [ %r.015.i.ls.ph, %for.body.i186.ls.preheader ]
  %arrayidx.i8.i.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %j.016.i.ls
  %125 = load i64, i64* %arrayidx.i8.i.ls, align 8, !tbaa !49
  %add.i.i184.ls = add nsw i64 %125, %r.015.i.ls
  %j.0.i.ls = add nsw i64 %j.016.i.ls, 1
  %exitcond.i185.ls = icmp eq i64 %j.0.i.ls, %.sroa.speculated192.ls
  br i1 %exitcond.i185.ls, label %_ZN8sequence12reduceSerialIllN5utils4addFIlEENS_4getAIllEEEET_T0_S7_T1_T2_.exit.ls, label %for.body.i186.ls, !llvm.loop !379

_ZN8sequence12reduceSerialIllN5utils4addFIlEENS_4getAIllEEEET_T0_S7_T1_T2_.exit.ls: ; preds = %for.body.i186.ls, %middle.block.ls, %pfor.detach.ls
  %r.0.lcssa.i.ls = phi i64 [ %56, %pfor.detach.ls ], [ %124, %middle.block.ls ], [ %add.i.i184.ls, %for.body.i186.ls ]
  %arrayidx.ls = getelementptr inbounds i64, i64* %.ls4, i64 %__begin.0208.ls
  store i64 %r.0.lcssa.i.ls, i64* %arrayidx.ls, align 8, !tbaa !49
  %126 = icmp ult i64 %__begin.0208.ls, %end.ls
  %inc.ls = add nuw nsw i64 %__begin.0208.ls, 1
  br i1 %126, label %pfor.detach.ls, label %pfor.cond.cleanup.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN8sequence4scanIllN5utils4addFIlEENS_4getAIllEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.ls(i64 %__begin46.0206.start.ls, i64 %end.ls, i64 %.ls, i64 %.ls1, i64 %.ls2, i64 %.ls3, i64 %.ls4, i64 %s.ls, i64 %e.ls, i64* nocapture readonly align 1 %.ls5, i1 zeroext %back.ls, i64* nocapture readonly align 1 %g.coerce.ls, i64* nocapture align 1 %Out.ls) unnamed_addr #15 {
pfor.detach55.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach55.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach55.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach55.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach55.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount12 = sub i64 %end.ls, %__begin46.0206.start.ls
  %9 = icmp ugt i64 %itercount12, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach55.ls.preheader

pfor.detach55.ls.preheader:                       ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin46.0206.ls.ph = phi i64 [ %__begin46.0206.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach55.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount14 = phi i64 [ %itercount12, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin46.0206.ls.dac13 = phi i64 [ %__begin46.0206.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount14, 1
  %miditer = add nuw nsw i64 %__begin46.0206.ls.dac13, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split15, label %.split.split

.split15:                                         ; preds = %16
  call fastcc void @_ZN8sequence4scanIllN5utils4addFIlEENS_4getAIllEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.ls_.split.cilk(i64 %__begin46.0206.ls.dac13, i64 %miditer, i64 %.ls, i64 %.ls1, i64 %.ls2, i64 %.ls3, i64 %.ls4, i64 %s.ls, i64 %e.ls, i64* %.ls5, i1 %back.ls, i64* %g.coerce.ls, i64* %Out.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split15, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach55.ls.preheader

pfor.cond.cleanup54.loopexit296.ls:               ; preds = %pfor.inc76.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup54.loopexit296.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup54.loopexit296.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach55.ls:                                 ; preds = %pfor.detach55.ls.preheader, %pfor.inc76.ls
  %__begin46.0206.ls = phi i64 [ %inc77.ls, %pfor.inc76.ls ], [ %__begin46.0206.ls.ph, %pfor.detach55.ls.preheader ]
  %48 = mul nsw i64 %__begin46.0206.ls, -1024
  %49 = add i64 %48, %.ls1
  %50 = icmp sgt i64 %49, %.ls2
  %smax272.ls = select i1 %50, i64 %49, i64 %.ls2
  %51 = sub i64 %.ls3, %smax272.ls
  %52 = add i64 %48, %.ls4
  %53 = sub i64 %52, %smax272.ls
  %mul62.ls = shl nsw i64 %__begin46.0206.ls, 10
  %add63.ls = add nsw i64 %mul62.ls, %s.ls
  %add66.ls = add nsw i64 %add63.ls, 1024
  %cmp.i132.ls = icmp sgt i64 %add66.ls, %e.ls
  %.sroa.speculated.ls = select i1 %cmp.i132.ls, i64 %e.ls, i64 %add66.ls
  %arrayidx70.ls = getelementptr inbounds i64, i64* %.ls5, i64 %__begin46.0206.ls
  %54 = load i64, i64* %arrayidx70.ls, align 8, !tbaa !49
  br i1 %back.ls, label %if.then18.i159.ls, label %if.else31.i170.ls

if.else31.i170.ls:                                ; preds = %pfor.detach55.ls
  %cmp34110.i169.ls = icmp slt i64 %add63.ls, %.sroa.speculated.ls
  br i1 %cmp34110.i169.ls, label %for.body36.i179.preheader.ls, label %pfor.inc76.ls

for.body36.i179.preheader.ls:                     ; preds = %if.else31.i170.ls
  %xtraiter269.ls = and i64 %51, 7
  %lcmp.mod270.ls = icmp eq i64 %xtraiter269.ls, 0
  br i1 %lcmp.mod270.ls, label %for.body36.i179.prol.loopexit.ls, label %for.body36.i179.prol.ls.preheader

for.body36.i179.prol.ls.preheader:                ; preds = %for.body36.i179.preheader.ls
  br label %for.body36.i179.prol.ls

for.body36.i179.prol.ls:                          ; preds = %for.body36.i179.prol.ls.preheader, %for.body36.i179.prol.ls
  %i32.0112.i172.prol.ls = phi i64 [ %inc42.i177.prol.ls, %for.body36.i179.prol.ls ], [ %add63.ls, %for.body36.i179.prol.ls.preheader ]
  %r.3111.i173.prol.ls = phi i64 [ %add.i.i176.prol.ls, %for.body36.i179.prol.ls ], [ %54, %for.body36.i179.prol.ls.preheader ]
  %prol.iter271.ls = phi i64 [ %prol.iter271.sub.ls, %for.body36.i179.prol.ls ], [ %xtraiter269.ls, %for.body36.i179.prol.ls.preheader ]
  %arrayidx.i72.i174.prol.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %i32.0112.i172.prol.ls
  %55 = load i64, i64* %arrayidx.i72.i174.prol.ls, align 8, !tbaa !49
  %arrayidx39.i175.prol.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %i32.0112.i172.prol.ls
  store i64 %r.3111.i173.prol.ls, i64* %arrayidx39.i175.prol.ls, align 8, !tbaa !49
  %add.i.i176.prol.ls = add nsw i64 %55, %r.3111.i173.prol.ls
  %inc42.i177.prol.ls = add nsw i64 %i32.0112.i172.prol.ls, 1
  %prol.iter271.sub.ls = add nsw i64 %prol.iter271.ls, -1
  %prol.iter271.cmp.ls = icmp eq i64 %prol.iter271.sub.ls, 0
  br i1 %prol.iter271.cmp.ls, label %for.body36.i179.prol.loopexit.ls, label %for.body36.i179.prol.ls, !llvm.loop !380

for.body36.i179.prol.loopexit.ls:                 ; preds = %for.body36.i179.prol.ls, %for.body36.i179.preheader.ls
  %i32.0112.i172.unr.ls = phi i64 [ %add63.ls, %for.body36.i179.preheader.ls ], [ %inc42.i177.prol.ls, %for.body36.i179.prol.ls ]
  %r.3111.i173.unr.ls = phi i64 [ %54, %for.body36.i179.preheader.ls ], [ %add.i.i176.prol.ls, %for.body36.i179.prol.ls ]
  %56 = icmp ult i64 %53, 7
  br i1 %56, label %pfor.inc76.ls, label %for.body36.i179.ls.preheader

for.body36.i179.ls.preheader:                     ; preds = %for.body36.i179.prol.loopexit.ls
  br label %for.body36.i179.ls

for.body36.i179.ls:                               ; preds = %for.body36.i179.ls.preheader, %for.body36.i179.ls
  %i32.0112.i172.ls = phi i64 [ %inc42.i177.7.ls, %for.body36.i179.ls ], [ %i32.0112.i172.unr.ls, %for.body36.i179.ls.preheader ]
  %r.3111.i173.ls = phi i64 [ %add.i.i176.7.ls, %for.body36.i179.ls ], [ %r.3111.i173.unr.ls, %for.body36.i179.ls.preheader ]
  %arrayidx.i72.i174.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %i32.0112.i172.ls
  %57 = load i64, i64* %arrayidx.i72.i174.ls, align 8, !tbaa !49
  %arrayidx39.i175.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %i32.0112.i172.ls
  store i64 %r.3111.i173.ls, i64* %arrayidx39.i175.ls, align 8, !tbaa !49
  %add.i.i176.ls = add nsw i64 %57, %r.3111.i173.ls
  %inc42.i177.ls = add nsw i64 %i32.0112.i172.ls, 1
  %arrayidx.i72.i174.1.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %inc42.i177.ls
  %58 = load i64, i64* %arrayidx.i72.i174.1.ls, align 8, !tbaa !49
  %arrayidx39.i175.1.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %inc42.i177.ls
  store i64 %add.i.i176.ls, i64* %arrayidx39.i175.1.ls, align 8, !tbaa !49
  %add.i.i176.1.ls = add nsw i64 %58, %add.i.i176.ls
  %inc42.i177.1.ls = add nsw i64 %i32.0112.i172.ls, 2
  %arrayidx.i72.i174.2.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %inc42.i177.1.ls
  %59 = load i64, i64* %arrayidx.i72.i174.2.ls, align 8, !tbaa !49
  %arrayidx39.i175.2.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %inc42.i177.1.ls
  store i64 %add.i.i176.1.ls, i64* %arrayidx39.i175.2.ls, align 8, !tbaa !49
  %add.i.i176.2.ls = add nsw i64 %59, %add.i.i176.1.ls
  %inc42.i177.2.ls = add nsw i64 %i32.0112.i172.ls, 3
  %arrayidx.i72.i174.3.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %inc42.i177.2.ls
  %60 = load i64, i64* %arrayidx.i72.i174.3.ls, align 8, !tbaa !49
  %arrayidx39.i175.3.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %inc42.i177.2.ls
  store i64 %add.i.i176.2.ls, i64* %arrayidx39.i175.3.ls, align 8, !tbaa !49
  %add.i.i176.3.ls = add nsw i64 %60, %add.i.i176.2.ls
  %inc42.i177.3.ls = add nsw i64 %i32.0112.i172.ls, 4
  %arrayidx.i72.i174.4.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %inc42.i177.3.ls
  %61 = load i64, i64* %arrayidx.i72.i174.4.ls, align 8, !tbaa !49
  %arrayidx39.i175.4.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %inc42.i177.3.ls
  store i64 %add.i.i176.3.ls, i64* %arrayidx39.i175.4.ls, align 8, !tbaa !49
  %add.i.i176.4.ls = add nsw i64 %61, %add.i.i176.3.ls
  %inc42.i177.4.ls = add nsw i64 %i32.0112.i172.ls, 5
  %arrayidx.i72.i174.5.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %inc42.i177.4.ls
  %62 = load i64, i64* %arrayidx.i72.i174.5.ls, align 8, !tbaa !49
  %arrayidx39.i175.5.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %inc42.i177.4.ls
  store i64 %add.i.i176.4.ls, i64* %arrayidx39.i175.5.ls, align 8, !tbaa !49
  %add.i.i176.5.ls = add nsw i64 %62, %add.i.i176.4.ls
  %inc42.i177.5.ls = add nsw i64 %i32.0112.i172.ls, 6
  %arrayidx.i72.i174.6.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %inc42.i177.5.ls
  %63 = load i64, i64* %arrayidx.i72.i174.6.ls, align 8, !tbaa !49
  %arrayidx39.i175.6.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %inc42.i177.5.ls
  store i64 %add.i.i176.5.ls, i64* %arrayidx39.i175.6.ls, align 8, !tbaa !49
  %add.i.i176.6.ls = add nsw i64 %63, %add.i.i176.5.ls
  %inc42.i177.6.ls = add nsw i64 %i32.0112.i172.ls, 7
  %arrayidx.i72.i174.7.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %inc42.i177.6.ls
  %64 = load i64, i64* %arrayidx.i72.i174.7.ls, align 8, !tbaa !49
  %arrayidx39.i175.7.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %inc42.i177.6.ls
  store i64 %add.i.i176.6.ls, i64* %arrayidx39.i175.7.ls, align 8, !tbaa !49
  %add.i.i176.7.ls = add nsw i64 %64, %add.i.i176.6.ls
  %inc42.i177.7.ls = add nsw i64 %i32.0112.i172.ls, 8
  %exitcond117.i178.7.ls = icmp eq i64 %inc42.i177.7.ls, %.sroa.speculated.ls
  br i1 %exitcond117.i178.7.ls, label %pfor.inc76.ls, label %for.body36.i179.ls

if.then18.i159.ls:                                ; preds = %pfor.detach55.ls
  %cmp22106.i158.ls = icmp sgt i64 %.sroa.speculated.ls, %add63.ls
  br i1 %cmp22106.i158.ls, label %for.body24.i168.preheader.ls, label %pfor.inc76.ls

for.body24.i168.preheader.ls:                     ; preds = %if.then18.i159.ls
  %xtraiter273.ls = and i64 %51, 7
  %lcmp.mod274.ls = icmp eq i64 %xtraiter273.ls, 0
  br i1 %lcmp.mod274.ls, label %for.body24.i168.prol.loopexit.ls, label %for.body24.i168.prol.ls.preheader

for.body24.i168.prol.ls.preheader:                ; preds = %for.body24.i168.preheader.ls
  br label %for.body24.i168.prol.ls

for.body24.i168.prol.ls:                          ; preds = %for.body24.i168.prol.ls.preheader, %for.body24.i168.prol.ls
  %i19.0108.in.i161.prol.ls = phi i64 [ %i19.0108.i163.prol.ls, %for.body24.i168.prol.ls ], [ %.sroa.speculated.ls, %for.body24.i168.prol.ls.preheader ]
  %r.2107.i162.prol.ls = phi i64 [ %add.i73.i166.prol.ls, %for.body24.i168.prol.ls ], [ %54, %for.body24.i168.prol.ls.preheader ]
  %prol.iter275.ls = phi i64 [ %prol.iter275.sub.ls, %for.body24.i168.prol.ls ], [ %xtraiter273.ls, %for.body24.i168.prol.ls.preheader ]
  %i19.0108.i163.prol.ls = add nsw i64 %i19.0108.in.i161.prol.ls, -1
  %arrayidx.i75.i164.prol.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %i19.0108.i163.prol.ls
  %65 = load i64, i64* %arrayidx.i75.i164.prol.ls, align 8, !tbaa !49
  %arrayidx26.i165.prol.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %i19.0108.i163.prol.ls
  store i64 %r.2107.i162.prol.ls, i64* %arrayidx26.i165.prol.ls, align 8, !tbaa !49
  %add.i73.i166.prol.ls = add nsw i64 %65, %r.2107.i162.prol.ls
  %prol.iter275.sub.ls = add nsw i64 %prol.iter275.ls, -1
  %prol.iter275.cmp.ls = icmp eq i64 %prol.iter275.sub.ls, 0
  br i1 %prol.iter275.cmp.ls, label %for.body24.i168.prol.loopexit.ls, label %for.body24.i168.prol.ls, !llvm.loop !381

for.body24.i168.prol.loopexit.ls:                 ; preds = %for.body24.i168.prol.ls, %for.body24.i168.preheader.ls
  %i19.0108.in.i161.unr.ls = phi i64 [ %.sroa.speculated.ls, %for.body24.i168.preheader.ls ], [ %i19.0108.i163.prol.ls, %for.body24.i168.prol.ls ]
  %r.2107.i162.unr.ls = phi i64 [ %54, %for.body24.i168.preheader.ls ], [ %add.i73.i166.prol.ls, %for.body24.i168.prol.ls ]
  %66 = icmp ult i64 %53, 7
  br i1 %66, label %pfor.inc76.ls, label %for.body24.i168.ls.preheader

for.body24.i168.ls.preheader:                     ; preds = %for.body24.i168.prol.loopexit.ls
  br label %for.body24.i168.ls

for.body24.i168.ls:                               ; preds = %for.body24.i168.ls.preheader, %for.body24.i168.ls
  %i19.0108.in.i161.ls = phi i64 [ %i19.0108.i163.7.ls, %for.body24.i168.ls ], [ %i19.0108.in.i161.unr.ls, %for.body24.i168.ls.preheader ]
  %r.2107.i162.ls = phi i64 [ %add.i73.i166.7.ls, %for.body24.i168.ls ], [ %r.2107.i162.unr.ls, %for.body24.i168.ls.preheader ]
  %i19.0108.i163.ls = add nsw i64 %i19.0108.in.i161.ls, -1
  %arrayidx.i75.i164.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %i19.0108.i163.ls
  %67 = load i64, i64* %arrayidx.i75.i164.ls, align 8, !tbaa !49
  %arrayidx26.i165.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %i19.0108.i163.ls
  store i64 %r.2107.i162.ls, i64* %arrayidx26.i165.ls, align 8, !tbaa !49
  %add.i73.i166.ls = add nsw i64 %67, %r.2107.i162.ls
  %i19.0108.i163.1.ls = add nsw i64 %i19.0108.in.i161.ls, -2
  %arrayidx.i75.i164.1.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %i19.0108.i163.1.ls
  %68 = load i64, i64* %arrayidx.i75.i164.1.ls, align 8, !tbaa !49
  %arrayidx26.i165.1.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %i19.0108.i163.1.ls
  store i64 %add.i73.i166.ls, i64* %arrayidx26.i165.1.ls, align 8, !tbaa !49
  %add.i73.i166.1.ls = add nsw i64 %68, %add.i73.i166.ls
  %i19.0108.i163.2.ls = add nsw i64 %i19.0108.in.i161.ls, -3
  %arrayidx.i75.i164.2.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %i19.0108.i163.2.ls
  %69 = load i64, i64* %arrayidx.i75.i164.2.ls, align 8, !tbaa !49
  %arrayidx26.i165.2.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %i19.0108.i163.2.ls
  store i64 %add.i73.i166.1.ls, i64* %arrayidx26.i165.2.ls, align 8, !tbaa !49
  %add.i73.i166.2.ls = add nsw i64 %69, %add.i73.i166.1.ls
  %i19.0108.i163.3.ls = add nsw i64 %i19.0108.in.i161.ls, -4
  %arrayidx.i75.i164.3.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %i19.0108.i163.3.ls
  %70 = load i64, i64* %arrayidx.i75.i164.3.ls, align 8, !tbaa !49
  %arrayidx26.i165.3.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %i19.0108.i163.3.ls
  store i64 %add.i73.i166.2.ls, i64* %arrayidx26.i165.3.ls, align 8, !tbaa !49
  %add.i73.i166.3.ls = add nsw i64 %70, %add.i73.i166.2.ls
  %i19.0108.i163.4.ls = add nsw i64 %i19.0108.in.i161.ls, -5
  %arrayidx.i75.i164.4.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %i19.0108.i163.4.ls
  %71 = load i64, i64* %arrayidx.i75.i164.4.ls, align 8, !tbaa !49
  %arrayidx26.i165.4.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %i19.0108.i163.4.ls
  store i64 %add.i73.i166.3.ls, i64* %arrayidx26.i165.4.ls, align 8, !tbaa !49
  %add.i73.i166.4.ls = add nsw i64 %71, %add.i73.i166.3.ls
  %i19.0108.i163.5.ls = add nsw i64 %i19.0108.in.i161.ls, -6
  %arrayidx.i75.i164.5.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %i19.0108.i163.5.ls
  %72 = load i64, i64* %arrayidx.i75.i164.5.ls, align 8, !tbaa !49
  %arrayidx26.i165.5.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %i19.0108.i163.5.ls
  store i64 %add.i73.i166.4.ls, i64* %arrayidx26.i165.5.ls, align 8, !tbaa !49
  %add.i73.i166.5.ls = add nsw i64 %72, %add.i73.i166.4.ls
  %i19.0108.i163.6.ls = add nsw i64 %i19.0108.in.i161.ls, -7
  %arrayidx.i75.i164.6.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %i19.0108.i163.6.ls
  %73 = load i64, i64* %arrayidx.i75.i164.6.ls, align 8, !tbaa !49
  %arrayidx26.i165.6.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %i19.0108.i163.6.ls
  store i64 %add.i73.i166.5.ls, i64* %arrayidx26.i165.6.ls, align 8, !tbaa !49
  %add.i73.i166.6.ls = add nsw i64 %73, %add.i73.i166.5.ls
  %i19.0108.i163.7.ls = add nsw i64 %i19.0108.in.i161.ls, -8
  %arrayidx.i75.i164.7.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %i19.0108.i163.7.ls
  %74 = load i64, i64* %arrayidx.i75.i164.7.ls, align 8, !tbaa !49
  %arrayidx26.i165.7.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %i19.0108.i163.7.ls
  store i64 %add.i73.i166.6.ls, i64* %arrayidx26.i165.7.ls, align 8, !tbaa !49
  %add.i73.i166.7.ls = add nsw i64 %74, %add.i73.i166.6.ls
  %cmp22.i167.7.ls = icmp sgt i64 %i19.0108.i163.7.ls, %add63.ls
  br i1 %cmp22.i167.7.ls, label %for.body24.i168.ls, label %pfor.inc76.ls

pfor.inc76.ls:                                    ; preds = %for.body36.i179.ls, %for.body24.i168.ls, %if.else31.i170.ls, %for.body36.i179.prol.loopexit.ls, %if.then18.i159.ls, %for.body24.i168.prol.loopexit.ls
  %75 = icmp ult i64 %__begin46.0206.ls, %end.ls
  %inc77.ls = add nuw nsw i64 %__begin46.0206.ls, 1
  br i1 %75, label %pfor.detach55.ls, label %pfor.cond.cleanup54.loopexit296.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN8sequence4scanIllN5utils4addFIlEENS_4getAIllEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.us.ls(i64 %__begin46.0206.us.start.ls, i64 %end.ls, i64 %.ls, i64 %.ls1, i64 %.ls2, i64 %.ls3, i64 %.ls4, i64 %s.ls, i64 %e.ls, i64* nocapture readonly align 1 %.ls5, i1 zeroext %back.ls, i64* nocapture readonly align 1 %g.coerce.ls, i64* nocapture align 1 %Out.ls) unnamed_addr #15 {
pfor.detach55.us.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach55.us.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach55.us.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach55.us.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach55.us.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount12 = sub i64 %end.ls, %__begin46.0206.us.start.ls
  %9 = icmp ugt i64 %itercount12, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach55.us.ls.preheader

pfor.detach55.us.ls.preheader:                    ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin46.0206.us.ls.ph = phi i64 [ %__begin46.0206.us.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach55.us.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount14 = phi i64 [ %itercount12, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin46.0206.us.ls.dac13 = phi i64 [ %__begin46.0206.us.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount14, 1
  %miditer = add nuw nsw i64 %__begin46.0206.us.ls.dac13, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split15, label %.split.split

.split15:                                         ; preds = %16
  call fastcc void @_ZN8sequence4scanIllN5utils4addFIlEENS_4getAIllEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.us.ls_.split.cilk(i64 %__begin46.0206.us.ls.dac13, i64 %miditer, i64 %.ls, i64 %.ls1, i64 %.ls2, i64 %.ls3, i64 %.ls4, i64 %s.ls, i64 %e.ls, i64* %.ls5, i1 %back.ls, i64* %g.coerce.ls, i64* %Out.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split15, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach55.us.ls.preheader

pfor.cond.cleanup54.loopexit.ls:                  ; preds = %pfor.inc76.us.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup54.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup54.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach55.us.ls:                              ; preds = %pfor.detach55.us.ls.preheader, %pfor.inc76.us.ls
  %__begin46.0206.us.ls = phi i64 [ %inc77.us.ls, %pfor.inc76.us.ls ], [ %__begin46.0206.us.ls.ph, %pfor.detach55.us.ls.preheader ]
  %48 = mul nsw i64 %__begin46.0206.us.ls, -1024
  %49 = add i64 %48, %.ls1
  %50 = icmp sgt i64 %49, %.ls2
  %smax264.ls = select i1 %50, i64 %49, i64 %.ls2
  %51 = sub i64 %.ls3, %smax264.ls
  %52 = add i64 %48, %.ls4
  %53 = sub i64 %52, %smax264.ls
  %mul62.us.ls = shl nsw i64 %__begin46.0206.us.ls, 10
  %add63.us.ls = add nsw i64 %mul62.us.ls, %s.ls
  %add66.us.ls = add nsw i64 %add63.us.ls, 1024
  %cmp.i132.us.ls = icmp sgt i64 %add66.us.ls, %e.ls
  %.sroa.speculated.us.ls = select i1 %cmp.i132.us.ls, i64 %e.ls, i64 %add66.us.ls
  %arrayidx70.us.ls = getelementptr inbounds i64, i64* %.ls5, i64 %__begin46.0206.us.ls
  %54 = load i64, i64* %arrayidx70.us.ls, align 8, !tbaa !49
  br i1 %back.ls, label %if.then3.i136.us.ls, label %if.else.i147.us.ls

if.else.i147.us.ls:                               ; preds = %pfor.detach55.us.ls
  %cmp7101.i146.us.ls = icmp slt i64 %add63.us.ls, %.sroa.speculated.us.ls
  br i1 %cmp7101.i146.us.ls, label %for.body9.i156.us.preheader.ls, label %pfor.inc76.us.ls

for.body9.i156.us.preheader.ls:                   ; preds = %if.else.i147.us.ls
  %xtraiter261.ls = and i64 %51, 7
  %lcmp.mod262.ls = icmp eq i64 %xtraiter261.ls, 0
  br i1 %lcmp.mod262.ls, label %for.body9.i156.us.prol.loopexit.ls, label %for.body9.i156.us.prol.ls.preheader

for.body9.i156.us.prol.ls.preheader:              ; preds = %for.body9.i156.us.preheader.ls
  br label %for.body9.i156.us.prol.ls

for.body9.i156.us.prol.ls:                        ; preds = %for.body9.i156.us.prol.ls.preheader, %for.body9.i156.us.prol.ls
  %i5.0103.i149.us.prol.ls = phi i64 [ %inc.i154.us.prol.ls, %for.body9.i156.us.prol.ls ], [ %add63.us.ls, %for.body9.i156.us.prol.ls.preheader ]
  %r.1102.i150.us.prol.ls = phi i64 [ %add.i76.i152.us.prol.ls, %for.body9.i156.us.prol.ls ], [ %54, %for.body9.i156.us.prol.ls.preheader ]
  %prol.iter263.ls = phi i64 [ %prol.iter263.sub.ls, %for.body9.i156.us.prol.ls ], [ %xtraiter261.ls, %for.body9.i156.us.prol.ls.preheader ]
  %arrayidx.i78.i151.us.prol.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %i5.0103.i149.us.prol.ls
  %55 = load i64, i64* %arrayidx.i78.i151.us.prol.ls, align 8, !tbaa !49
  %add.i76.i152.us.prol.ls = add nsw i64 %55, %r.1102.i150.us.prol.ls
  %arrayidx13.i153.us.prol.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %i5.0103.i149.us.prol.ls
  store i64 %add.i76.i152.us.prol.ls, i64* %arrayidx13.i153.us.prol.ls, align 8, !tbaa !49
  %inc.i154.us.prol.ls = add nsw i64 %i5.0103.i149.us.prol.ls, 1
  %prol.iter263.sub.ls = add nsw i64 %prol.iter263.ls, -1
  %prol.iter263.cmp.ls = icmp eq i64 %prol.iter263.sub.ls, 0
  br i1 %prol.iter263.cmp.ls, label %for.body9.i156.us.prol.loopexit.ls, label %for.body9.i156.us.prol.ls, !llvm.loop !382

for.body9.i156.us.prol.loopexit.ls:               ; preds = %for.body9.i156.us.prol.ls, %for.body9.i156.us.preheader.ls
  %i5.0103.i149.us.unr.ls = phi i64 [ %add63.us.ls, %for.body9.i156.us.preheader.ls ], [ %inc.i154.us.prol.ls, %for.body9.i156.us.prol.ls ]
  %r.1102.i150.us.unr.ls = phi i64 [ %54, %for.body9.i156.us.preheader.ls ], [ %add.i76.i152.us.prol.ls, %for.body9.i156.us.prol.ls ]
  %56 = icmp ult i64 %53, 7
  br i1 %56, label %pfor.inc76.us.ls, label %for.body9.i156.us.ls.preheader

for.body9.i156.us.ls.preheader:                   ; preds = %for.body9.i156.us.prol.loopexit.ls
  br label %for.body9.i156.us.ls

for.body9.i156.us.ls:                             ; preds = %for.body9.i156.us.ls.preheader, %for.body9.i156.us.ls
  %i5.0103.i149.us.ls = phi i64 [ %inc.i154.us.7.ls, %for.body9.i156.us.ls ], [ %i5.0103.i149.us.unr.ls, %for.body9.i156.us.ls.preheader ]
  %r.1102.i150.us.ls = phi i64 [ %add.i76.i152.us.7.ls, %for.body9.i156.us.ls ], [ %r.1102.i150.us.unr.ls, %for.body9.i156.us.ls.preheader ]
  %arrayidx.i78.i151.us.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %i5.0103.i149.us.ls
  %57 = load i64, i64* %arrayidx.i78.i151.us.ls, align 8, !tbaa !49
  %add.i76.i152.us.ls = add nsw i64 %57, %r.1102.i150.us.ls
  %arrayidx13.i153.us.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %i5.0103.i149.us.ls
  store i64 %add.i76.i152.us.ls, i64* %arrayidx13.i153.us.ls, align 8, !tbaa !49
  %inc.i154.us.ls = add nsw i64 %i5.0103.i149.us.ls, 1
  %arrayidx.i78.i151.us.1.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %inc.i154.us.ls
  %58 = load i64, i64* %arrayidx.i78.i151.us.1.ls, align 8, !tbaa !49
  %add.i76.i152.us.1.ls = add nsw i64 %58, %add.i76.i152.us.ls
  %arrayidx13.i153.us.1.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %inc.i154.us.ls
  store i64 %add.i76.i152.us.1.ls, i64* %arrayidx13.i153.us.1.ls, align 8, !tbaa !49
  %inc.i154.us.1.ls = add nsw i64 %i5.0103.i149.us.ls, 2
  %arrayidx.i78.i151.us.2.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %inc.i154.us.1.ls
  %59 = load i64, i64* %arrayidx.i78.i151.us.2.ls, align 8, !tbaa !49
  %add.i76.i152.us.2.ls = add nsw i64 %59, %add.i76.i152.us.1.ls
  %arrayidx13.i153.us.2.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %inc.i154.us.1.ls
  store i64 %add.i76.i152.us.2.ls, i64* %arrayidx13.i153.us.2.ls, align 8, !tbaa !49
  %inc.i154.us.2.ls = add nsw i64 %i5.0103.i149.us.ls, 3
  %arrayidx.i78.i151.us.3.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %inc.i154.us.2.ls
  %60 = load i64, i64* %arrayidx.i78.i151.us.3.ls, align 8, !tbaa !49
  %add.i76.i152.us.3.ls = add nsw i64 %60, %add.i76.i152.us.2.ls
  %arrayidx13.i153.us.3.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %inc.i154.us.2.ls
  store i64 %add.i76.i152.us.3.ls, i64* %arrayidx13.i153.us.3.ls, align 8, !tbaa !49
  %inc.i154.us.3.ls = add nsw i64 %i5.0103.i149.us.ls, 4
  %arrayidx.i78.i151.us.4.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %inc.i154.us.3.ls
  %61 = load i64, i64* %arrayidx.i78.i151.us.4.ls, align 8, !tbaa !49
  %add.i76.i152.us.4.ls = add nsw i64 %61, %add.i76.i152.us.3.ls
  %arrayidx13.i153.us.4.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %inc.i154.us.3.ls
  store i64 %add.i76.i152.us.4.ls, i64* %arrayidx13.i153.us.4.ls, align 8, !tbaa !49
  %inc.i154.us.4.ls = add nsw i64 %i5.0103.i149.us.ls, 5
  %arrayidx.i78.i151.us.5.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %inc.i154.us.4.ls
  %62 = load i64, i64* %arrayidx.i78.i151.us.5.ls, align 8, !tbaa !49
  %add.i76.i152.us.5.ls = add nsw i64 %62, %add.i76.i152.us.4.ls
  %arrayidx13.i153.us.5.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %inc.i154.us.4.ls
  store i64 %add.i76.i152.us.5.ls, i64* %arrayidx13.i153.us.5.ls, align 8, !tbaa !49
  %inc.i154.us.5.ls = add nsw i64 %i5.0103.i149.us.ls, 6
  %arrayidx.i78.i151.us.6.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %inc.i154.us.5.ls
  %63 = load i64, i64* %arrayidx.i78.i151.us.6.ls, align 8, !tbaa !49
  %add.i76.i152.us.6.ls = add nsw i64 %63, %add.i76.i152.us.5.ls
  %arrayidx13.i153.us.6.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %inc.i154.us.5.ls
  store i64 %add.i76.i152.us.6.ls, i64* %arrayidx13.i153.us.6.ls, align 8, !tbaa !49
  %inc.i154.us.6.ls = add nsw i64 %i5.0103.i149.us.ls, 7
  %arrayidx.i78.i151.us.7.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %inc.i154.us.6.ls
  %64 = load i64, i64* %arrayidx.i78.i151.us.7.ls, align 8, !tbaa !49
  %add.i76.i152.us.7.ls = add nsw i64 %64, %add.i76.i152.us.6.ls
  %arrayidx13.i153.us.7.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %inc.i154.us.6.ls
  store i64 %add.i76.i152.us.7.ls, i64* %arrayidx13.i153.us.7.ls, align 8, !tbaa !49
  %inc.i154.us.7.ls = add nsw i64 %i5.0103.i149.us.ls, 8
  %exitcond.i155.us.7.ls = icmp eq i64 %inc.i154.us.7.ls, %.sroa.speculated.us.ls
  br i1 %exitcond.i155.us.7.ls, label %pfor.inc76.us.ls, label %for.body9.i156.us.ls

if.then3.i136.us.ls:                              ; preds = %pfor.detach55.us.ls
  %cmp98.i135.us.ls = icmp sgt i64 %.sroa.speculated.us.ls, %add63.us.ls
  br i1 %cmp98.i135.us.ls, label %for.body.i145.us.preheader.ls, label %pfor.inc76.us.ls

for.body.i145.us.preheader.ls:                    ; preds = %if.then3.i136.us.ls
  %xtraiter265.ls = and i64 %51, 7
  %lcmp.mod266.ls = icmp eq i64 %xtraiter265.ls, 0
  br i1 %lcmp.mod266.ls, label %for.body.i145.us.prol.loopexit.ls, label %for.body.i145.us.prol.ls.preheader

for.body.i145.us.prol.ls.preheader:               ; preds = %for.body.i145.us.preheader.ls
  br label %for.body.i145.us.prol.ls

for.body.i145.us.prol.ls:                         ; preds = %for.body.i145.us.prol.ls.preheader, %for.body.i145.us.prol.ls
  %i.0100.in.i138.us.prol.ls = phi i64 [ %i.0100.i140.us.prol.ls, %for.body.i145.us.prol.ls ], [ %.sroa.speculated.us.ls, %for.body.i145.us.prol.ls.preheader ]
  %r.099.i139.us.prol.ls = phi i64 [ %add.i79.i142.us.prol.ls, %for.body.i145.us.prol.ls ], [ %54, %for.body.i145.us.prol.ls.preheader ]
  %prol.iter267.ls = phi i64 [ %prol.iter267.sub.ls, %for.body.i145.us.prol.ls ], [ %xtraiter265.ls, %for.body.i145.us.prol.ls.preheader ]
  %i.0100.i140.us.prol.ls = add nsw i64 %i.0100.in.i138.us.prol.ls, -1
  %arrayidx.i.i141.us.prol.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %i.0100.i140.us.prol.ls
  %65 = load i64, i64* %arrayidx.i.i141.us.prol.ls, align 8, !tbaa !49
  %add.i79.i142.us.prol.ls = add nsw i64 %65, %r.099.i139.us.prol.ls
  %arrayidx.i143.us.prol.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %i.0100.i140.us.prol.ls
  store i64 %add.i79.i142.us.prol.ls, i64* %arrayidx.i143.us.prol.ls, align 8, !tbaa !49
  %prol.iter267.sub.ls = add nsw i64 %prol.iter267.ls, -1
  %prol.iter267.cmp.ls = icmp eq i64 %prol.iter267.sub.ls, 0
  br i1 %prol.iter267.cmp.ls, label %for.body.i145.us.prol.loopexit.ls, label %for.body.i145.us.prol.ls, !llvm.loop !383

for.body.i145.us.prol.loopexit.ls:                ; preds = %for.body.i145.us.prol.ls, %for.body.i145.us.preheader.ls
  %i.0100.in.i138.us.unr.ls = phi i64 [ %.sroa.speculated.us.ls, %for.body.i145.us.preheader.ls ], [ %i.0100.i140.us.prol.ls, %for.body.i145.us.prol.ls ]
  %r.099.i139.us.unr.ls = phi i64 [ %54, %for.body.i145.us.preheader.ls ], [ %add.i79.i142.us.prol.ls, %for.body.i145.us.prol.ls ]
  %66 = icmp ult i64 %53, 7
  br i1 %66, label %pfor.inc76.us.ls, label %for.body.i145.us.ls.preheader

for.body.i145.us.ls.preheader:                    ; preds = %for.body.i145.us.prol.loopexit.ls
  br label %for.body.i145.us.ls

for.body.i145.us.ls:                              ; preds = %for.body.i145.us.ls.preheader, %for.body.i145.us.ls
  %i.0100.in.i138.us.ls = phi i64 [ %i.0100.i140.us.7.ls, %for.body.i145.us.ls ], [ %i.0100.in.i138.us.unr.ls, %for.body.i145.us.ls.preheader ]
  %r.099.i139.us.ls = phi i64 [ %add.i79.i142.us.7.ls, %for.body.i145.us.ls ], [ %r.099.i139.us.unr.ls, %for.body.i145.us.ls.preheader ]
  %i.0100.i140.us.ls = add nsw i64 %i.0100.in.i138.us.ls, -1
  %arrayidx.i.i141.us.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %i.0100.i140.us.ls
  %67 = load i64, i64* %arrayidx.i.i141.us.ls, align 8, !tbaa !49
  %add.i79.i142.us.ls = add nsw i64 %67, %r.099.i139.us.ls
  %arrayidx.i143.us.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %i.0100.i140.us.ls
  store i64 %add.i79.i142.us.ls, i64* %arrayidx.i143.us.ls, align 8, !tbaa !49
  %i.0100.i140.us.1.ls = add nsw i64 %i.0100.in.i138.us.ls, -2
  %arrayidx.i.i141.us.1.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %i.0100.i140.us.1.ls
  %68 = load i64, i64* %arrayidx.i.i141.us.1.ls, align 8, !tbaa !49
  %add.i79.i142.us.1.ls = add nsw i64 %68, %add.i79.i142.us.ls
  %arrayidx.i143.us.1.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %i.0100.i140.us.1.ls
  store i64 %add.i79.i142.us.1.ls, i64* %arrayidx.i143.us.1.ls, align 8, !tbaa !49
  %i.0100.i140.us.2.ls = add nsw i64 %i.0100.in.i138.us.ls, -3
  %arrayidx.i.i141.us.2.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %i.0100.i140.us.2.ls
  %69 = load i64, i64* %arrayidx.i.i141.us.2.ls, align 8, !tbaa !49
  %add.i79.i142.us.2.ls = add nsw i64 %69, %add.i79.i142.us.1.ls
  %arrayidx.i143.us.2.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %i.0100.i140.us.2.ls
  store i64 %add.i79.i142.us.2.ls, i64* %arrayidx.i143.us.2.ls, align 8, !tbaa !49
  %i.0100.i140.us.3.ls = add nsw i64 %i.0100.in.i138.us.ls, -4
  %arrayidx.i.i141.us.3.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %i.0100.i140.us.3.ls
  %70 = load i64, i64* %arrayidx.i.i141.us.3.ls, align 8, !tbaa !49
  %add.i79.i142.us.3.ls = add nsw i64 %70, %add.i79.i142.us.2.ls
  %arrayidx.i143.us.3.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %i.0100.i140.us.3.ls
  store i64 %add.i79.i142.us.3.ls, i64* %arrayidx.i143.us.3.ls, align 8, !tbaa !49
  %i.0100.i140.us.4.ls = add nsw i64 %i.0100.in.i138.us.ls, -5
  %arrayidx.i.i141.us.4.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %i.0100.i140.us.4.ls
  %71 = load i64, i64* %arrayidx.i.i141.us.4.ls, align 8, !tbaa !49
  %add.i79.i142.us.4.ls = add nsw i64 %71, %add.i79.i142.us.3.ls
  %arrayidx.i143.us.4.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %i.0100.i140.us.4.ls
  store i64 %add.i79.i142.us.4.ls, i64* %arrayidx.i143.us.4.ls, align 8, !tbaa !49
  %i.0100.i140.us.5.ls = add nsw i64 %i.0100.in.i138.us.ls, -6
  %arrayidx.i.i141.us.5.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %i.0100.i140.us.5.ls
  %72 = load i64, i64* %arrayidx.i.i141.us.5.ls, align 8, !tbaa !49
  %add.i79.i142.us.5.ls = add nsw i64 %72, %add.i79.i142.us.4.ls
  %arrayidx.i143.us.5.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %i.0100.i140.us.5.ls
  store i64 %add.i79.i142.us.5.ls, i64* %arrayidx.i143.us.5.ls, align 8, !tbaa !49
  %i.0100.i140.us.6.ls = add nsw i64 %i.0100.in.i138.us.ls, -7
  %arrayidx.i.i141.us.6.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %i.0100.i140.us.6.ls
  %73 = load i64, i64* %arrayidx.i.i141.us.6.ls, align 8, !tbaa !49
  %add.i79.i142.us.6.ls = add nsw i64 %73, %add.i79.i142.us.5.ls
  %arrayidx.i143.us.6.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %i.0100.i140.us.6.ls
  store i64 %add.i79.i142.us.6.ls, i64* %arrayidx.i143.us.6.ls, align 8, !tbaa !49
  %i.0100.i140.us.7.ls = add nsw i64 %i.0100.in.i138.us.ls, -8
  %arrayidx.i.i141.us.7.ls = getelementptr inbounds i64, i64* %g.coerce.ls, i64 %i.0100.i140.us.7.ls
  %74 = load i64, i64* %arrayidx.i.i141.us.7.ls, align 8, !tbaa !49
  %add.i79.i142.us.7.ls = add nsw i64 %74, %add.i79.i142.us.6.ls
  %arrayidx.i143.us.7.ls = getelementptr inbounds i64, i64* %Out.ls, i64 %i.0100.i140.us.7.ls
  store i64 %add.i79.i142.us.7.ls, i64* %arrayidx.i143.us.7.ls, align 8, !tbaa !49
  %cmp.i144.us.7.ls = icmp sgt i64 %i.0100.i140.us.7.ls, %add63.us.ls
  br i1 %cmp.i144.us.7.ls, label %for.body.i145.us.ls, label %pfor.inc76.us.ls

pfor.inc76.us.ls:                                 ; preds = %for.body9.i156.us.ls, %for.body.i145.us.ls, %if.else.i147.us.ls, %for.body9.i156.us.prol.loopexit.ls, %if.then3.i136.us.ls, %for.body.i145.us.prol.loopexit.ls
  %75 = icmp ult i64 %__begin46.0206.us.ls, %end.ls
  %inc77.us.ls = add nuw nsw i64 %__begin46.0206.us.ls, 1
  br i1 %75, label %pfor.detach55.us.ls, label %pfor.cond.cleanup54.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_Z3ANNILi1E6vertexI8_point2dIdELi1EEEvPPT0_ii_pfor.detach.ls(i64 %indvars.iv55.start.ls, i64 %.ls, %struct.vertex** nocapture readonly align 1 %.ls1, i32 %k.ls, %class.gTreeNode* align 1 %call.i.ls) unnamed_addr #15 {
pfor.detach.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %nn.i.ls = alloca %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", align 8
  %itercount2 = sub i64 %.ls, %indvars.iv55.start.ls
  %9 = icmp ugt i64 %itercount2, 1
  br i1 %9, label %.lr.ph, label %pfor.detach.preheader.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount4 = phi i64 [ %itercount2, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv55.ls.dac3 = phi i64 [ %indvars.iv55.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount4, 1
  %miditer = add nuw nsw i64 %indvars.iv55.ls.dac3, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split5, label %.split.split

.split5:                                          ; preds = %16
  call fastcc void @_Z3ANNILi1E6vertexI8_point2dIdELi1EEEvPPT0_ii_pfor.detach.ls_.split.cilk(i64 %indvars.iv55.ls.dac3, i64 %miditer, %struct.vertex** %.ls1, i32 %k.ls, %class.gTreeNode* %call.i.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split5, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, 1
  br i1 %21, label %16, label %pfor.detach.preheader.ls.split._crit_edge

pfor.detach.preheader.ls.split._crit_edge:        ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv55.ls.dac.lcssa = phi i64 [ %indvars.iv55.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  %22 = bitcast %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.ls to i8*
  %k.i.i.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.ls, i64 0, i32 4
  %quads.i.i.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.ls, i64 0, i32 3
  %23 = bitcast %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.ls to i64*
  br label %pfor.detach.ls

pfor.cond.cleanup.loopexit86.ls:                  ; preds = %pfor.detach.ls
  %24 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %25 = load atomic i32, i32* %24 acquire, align 8
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit86.ls
  %28 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %30 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %29, i16* nonnull %30) #2
  %31 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %32 = call i8* @llvm.frameaddress(i32 0) #2
  %33 = getelementptr inbounds [5 x i8*], [5 x i8*]* %31, i64 0, i64 0
  store volatile i8* %32, i8** %33, align 8
  %34 = call i8* @llvm.stacksave() #2
  %35 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %34, i8** %35, align 8
  %36 = bitcast [5 x i8*]* %31 to i8*
  %37 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %36) #24
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit86.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %39 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %40 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %39, i64 0, i32 12, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %40, align 8
  %43 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %44 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %43, i64 0, i32 9
  %47 = bitcast %struct.__cilkrts_stack_frame** %46 to i64*
  store atomic i64 %45, i64* %47 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %48 = load atomic i32, i32* %24 acquire, align 8
  %49 = icmp eq i32 %48, 16777216
  br i1 %49, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.preheader.ls.split._crit_edge, %pfor.detach.ls
  %indvars.iv55.ls = phi i64 [ %indvars.iv.next56.ls, %pfor.detach.ls ], [ %indvars.iv55.ls.dac.lcssa, %pfor.detach.preheader.ls.split._crit_edge ]
  %arrayidx.ls = getelementptr inbounds %struct.vertex*, %struct.vertex** %.ls1, i64 %indvars.iv55.ls
  %50 = bitcast %struct.vertex** %arrayidx.ls to i64*
  %51 = load i64, i64* %50, align 8, !tbaa !53
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #2
  store i32 %k.ls, i32* %k.i.i.ls, align 4, !tbaa !153
  store i32 4, i32* %quads.i.i.ls, align 8, !tbaa !154
  store i64 %51, i64* %23, align 8, !tbaa !151
  call void @_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE3kNN10nearestNghEP9gTreeNodeIS2_7_vect2dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* nonnull %nn.i.ls, %class.gTreeNode* %call.i.ls) #2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #2
  %52 = icmp ult i64 %indvars.iv55.ls, %.ls
  %indvars.iv.next56.ls = add nuw nsw i64 %indvars.iv55.ls, 1
  br i1 %52, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit86.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_Z3ANNILi1E6vertexI8_point2dIdELi1EEEvPPT0_ii_pfor.detach.us26.ls(i64 %indvars.iv.start.ls, i64 %.ls, %struct.vertex** nocapture readonly align 1 %.ls1, %class.gTreeNode* align 1 %call.i.ls, i64 %.ls2, i64 %.ls8, i1 %lcmp.mod85.ls, i64 %xtraiter84.ls, i64 %.ls9) unnamed_addr #15 {
pfor.detach.lr.ph.split.split.us.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.split.split.us.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.split.split.us.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.split.split.us.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.split.split.us.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %nn.i.us29.ls = alloca %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", align 8
  %itercount10 = sub i64 %.ls, %indvars.iv.start.ls
  %9 = icmp ugt i64 %itercount10, 1
  br i1 %9, label %.lr.ph, label %pfor.detach.lr.ph.split.split.us.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount12 = phi i64 [ %itercount10, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv.ls.dac11 = phi i64 [ %indvars.iv.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount12, 1
  %miditer = add nuw nsw i64 %indvars.iv.ls.dac11, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split13, label %.split.split

.split13:                                         ; preds = %16
  call fastcc void @_Z3ANNILi1E6vertexI8_point2dIdELi1EEEvPPT0_ii_pfor.detach.us26.ls_.split.cilk(i64 %indvars.iv.ls.dac11, i64 %miditer, %struct.vertex** %.ls1, %class.gTreeNode* %call.i.ls, i64 %.ls2, i64 %.ls8, i1 %lcmp.mod85.ls, i64 %xtraiter84.ls, i64 %.ls9)
  br label %.split.split

.split.split:                                     ; preds = %.split13, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, 1
  br i1 %21, label %16, label %pfor.detach.lr.ph.split.split.us.ls.split._crit_edge

pfor.detach.lr.ph.split.split.us.ls.split._crit_edge: ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv.ls.dac.lcssa = phi i64 [ %indvars.iv.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  %22 = bitcast %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls to i8*
  %k.i.i.us34.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 4
  %quads.i.i.us35.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 3
  %ps.i.i.us36.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 0
  %arrayidx.i.i.us39.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 0
  %arrayidx8.i.i.us40.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 2, i64 0
  %23 = icmp ult i64 %.ls8, 7
  br i1 %lcmp.mod85.ls, label %pfor.detach.us26.ls.us.preheader, label %pfor.detach.lr.ph.split.split.us.ls.split._crit_edge.split

pfor.detach.us26.ls.us.preheader:                 ; preds = %pfor.detach.lr.ph.split.split.us.ls.split._crit_edge
  br label %pfor.detach.us26.ls.us

pfor.detach.us26.ls.us:                           ; preds = %pfor.detach.us26.ls.us.preheader, %_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE8kNearestEPS3_PS5_i.exit.loopexit.us53.ls.us
  %indvars.iv.ls.us = phi i64 [ %indvars.iv.next.ls.us, %_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE8kNearestEPS3_PS5_i.exit.loopexit.us53.ls.us ], [ %indvars.iv.ls.dac.lcssa, %pfor.detach.us26.ls.us.preheader ]
  %arrayidx.us30.ls.us = getelementptr inbounds %struct.vertex*, %struct.vertex** %.ls1, i64 %indvars.iv.ls.us
  %24 = load %struct.vertex*, %struct.vertex** %arrayidx.us30.ls.us, align 8, !tbaa !53
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #2
  %arraydecay.us31.ls.us = getelementptr inbounds %struct.vertex, %struct.vertex* %24, i64 0, i32 2, i64 0
  %result33.i.us32.ls.us = bitcast %struct.vertex** %arraydecay.us31.ls.us to i8*
  store i32 1, i32* %k.i.i.us34.ls, align 4, !tbaa !153
  store i32 4, i32* %quads.i.i.us35.ls, align 8, !tbaa !154
  store %struct.vertex* %24, %struct.vertex** %ps.i.i.us36.ls, align 8, !tbaa !151
  store %struct.vertex* null, %struct.vertex** %arrayidx.i.i.us39.ls, align 8, !tbaa !53
  store double 0x7FEFFFFFFFFFFFFF, double* %arrayidx8.i.i.us40.ls, align 8, !tbaa !18
  call void @_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE3kNN10nearestNghEP9gTreeNodeIS2_7_vect2dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* nonnull %nn.i.us29.ls, %class.gTreeNode* %call.i.ls) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull %result33.i.us32.ls.us, i8 0, i64 %.ls2, i32 8, i1 false) #2
  %25 = load i32, i32* %k.i.i.us34.ls, align 4, !tbaa !153
  br i1 %23, label %_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE8kNearestEPS3_PS5_i.exit.loopexit.us53.ls.us, label %for.body6.i.us41.ls.us.preheader

for.body6.i.us41.ls.us.preheader:                 ; preds = %pfor.detach.us26.ls.us
  br label %for.body6.i.us41.ls.us

for.body6.i.us41.ls.us:                           ; preds = %for.body6.i.us41.ls.us.preheader, %for.body6.i.us41.ls.us
  %indvars.iv.i.us42.ls.us = phi i64 [ %indvars.iv.next.i.us47.7.ls.us, %for.body6.i.us41.ls.us ], [ 0, %for.body6.i.us41.ls.us.preheader ]
  %26 = trunc i64 %indvars.iv.i.us42.ls.us to i32
  %27 = xor i32 %26, -1
  %sub2.i.i.us43.ls.us = add i32 %25, %27
  %idxprom.i.i.us44.ls.us = sext i32 %sub2.i.i.us43.ls.us to i64
  %arrayidx.i23.i.us45.ls.us = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.ls.us
  %28 = bitcast %struct.vertex** %arrayidx.i23.i.us45.ls.us to i64*
  %29 = load i64, i64* %28, align 8, !tbaa !53
  %arrayidx8.i.us46.ls.us = getelementptr inbounds %struct.vertex, %struct.vertex* %24, i64 0, i32 2, i64 %indvars.iv.i.us42.ls.us
  %30 = bitcast %struct.vertex** %arrayidx8.i.us46.ls.us to i64*
  store i64 %29, i64* %30, align 8, !tbaa !53
  %indvars.iv.next.i.us47.ls.us = or i64 %indvars.iv.i.us42.ls.us, 1
  %31 = trunc i64 %indvars.iv.next.i.us47.ls.us to i32
  %32 = xor i32 %31, -1
  %sub2.i.i.us43.1.ls.us = add i32 %25, %32
  %idxprom.i.i.us44.1.ls.us = sext i32 %sub2.i.i.us43.1.ls.us to i64
  %arrayidx.i23.i.us45.1.ls.us = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.1.ls.us
  %33 = bitcast %struct.vertex** %arrayidx.i23.i.us45.1.ls.us to i64*
  %34 = load i64, i64* %33, align 8, !tbaa !53
  %arrayidx8.i.us46.1.ls.us = getelementptr inbounds %struct.vertex, %struct.vertex* %24, i64 0, i32 2, i64 %indvars.iv.next.i.us47.ls.us
  %35 = bitcast %struct.vertex** %arrayidx8.i.us46.1.ls.us to i64*
  store i64 %34, i64* %35, align 8, !tbaa !53
  %indvars.iv.next.i.us47.1.ls.us = or i64 %indvars.iv.i.us42.ls.us, 2
  %36 = trunc i64 %indvars.iv.next.i.us47.1.ls.us to i32
  %37 = xor i32 %36, -1
  %sub2.i.i.us43.2.ls.us = add i32 %25, %37
  %idxprom.i.i.us44.2.ls.us = sext i32 %sub2.i.i.us43.2.ls.us to i64
  %arrayidx.i23.i.us45.2.ls.us = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.2.ls.us
  %38 = bitcast %struct.vertex** %arrayidx.i23.i.us45.2.ls.us to i64*
  %39 = load i64, i64* %38, align 8, !tbaa !53
  %arrayidx8.i.us46.2.ls.us = getelementptr inbounds %struct.vertex, %struct.vertex* %24, i64 0, i32 2, i64 %indvars.iv.next.i.us47.1.ls.us
  %40 = bitcast %struct.vertex** %arrayidx8.i.us46.2.ls.us to i64*
  store i64 %39, i64* %40, align 8, !tbaa !53
  %indvars.iv.next.i.us47.2.ls.us = or i64 %indvars.iv.i.us42.ls.us, 3
  %41 = trunc i64 %indvars.iv.next.i.us47.2.ls.us to i32
  %42 = xor i32 %41, -1
  %sub2.i.i.us43.3.ls.us = add i32 %25, %42
  %idxprom.i.i.us44.3.ls.us = sext i32 %sub2.i.i.us43.3.ls.us to i64
  %arrayidx.i23.i.us45.3.ls.us = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.3.ls.us
  %43 = bitcast %struct.vertex** %arrayidx.i23.i.us45.3.ls.us to i64*
  %44 = load i64, i64* %43, align 8, !tbaa !53
  %arrayidx8.i.us46.3.ls.us = getelementptr inbounds %struct.vertex, %struct.vertex* %24, i64 0, i32 2, i64 %indvars.iv.next.i.us47.2.ls.us
  %45 = bitcast %struct.vertex** %arrayidx8.i.us46.3.ls.us to i64*
  store i64 %44, i64* %45, align 8, !tbaa !53
  %indvars.iv.next.i.us47.3.ls.us = or i64 %indvars.iv.i.us42.ls.us, 4
  %46 = trunc i64 %indvars.iv.next.i.us47.3.ls.us to i32
  %47 = xor i32 %46, -1
  %sub2.i.i.us43.4.ls.us = add i32 %25, %47
  %idxprom.i.i.us44.4.ls.us = sext i32 %sub2.i.i.us43.4.ls.us to i64
  %arrayidx.i23.i.us45.4.ls.us = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.4.ls.us
  %48 = bitcast %struct.vertex** %arrayidx.i23.i.us45.4.ls.us to i64*
  %49 = load i64, i64* %48, align 8, !tbaa !53
  %arrayidx8.i.us46.4.ls.us = getelementptr inbounds %struct.vertex, %struct.vertex* %24, i64 0, i32 2, i64 %indvars.iv.next.i.us47.3.ls.us
  %50 = bitcast %struct.vertex** %arrayidx8.i.us46.4.ls.us to i64*
  store i64 %49, i64* %50, align 8, !tbaa !53
  %indvars.iv.next.i.us47.4.ls.us = or i64 %indvars.iv.i.us42.ls.us, 5
  %51 = trunc i64 %indvars.iv.next.i.us47.4.ls.us to i32
  %52 = xor i32 %51, -1
  %sub2.i.i.us43.5.ls.us = add i32 %25, %52
  %idxprom.i.i.us44.5.ls.us = sext i32 %sub2.i.i.us43.5.ls.us to i64
  %arrayidx.i23.i.us45.5.ls.us = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.5.ls.us
  %53 = bitcast %struct.vertex** %arrayidx.i23.i.us45.5.ls.us to i64*
  %54 = load i64, i64* %53, align 8, !tbaa !53
  %arrayidx8.i.us46.5.ls.us = getelementptr inbounds %struct.vertex, %struct.vertex* %24, i64 0, i32 2, i64 %indvars.iv.next.i.us47.4.ls.us
  %55 = bitcast %struct.vertex** %arrayidx8.i.us46.5.ls.us to i64*
  store i64 %54, i64* %55, align 8, !tbaa !53
  %indvars.iv.next.i.us47.5.ls.us = or i64 %indvars.iv.i.us42.ls.us, 6
  %56 = trunc i64 %indvars.iv.next.i.us47.5.ls.us to i32
  %57 = xor i32 %56, -1
  %sub2.i.i.us43.6.ls.us = add i32 %25, %57
  %idxprom.i.i.us44.6.ls.us = sext i32 %sub2.i.i.us43.6.ls.us to i64
  %arrayidx.i23.i.us45.6.ls.us = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.6.ls.us
  %58 = bitcast %struct.vertex** %arrayidx.i23.i.us45.6.ls.us to i64*
  %59 = load i64, i64* %58, align 8, !tbaa !53
  %arrayidx8.i.us46.6.ls.us = getelementptr inbounds %struct.vertex, %struct.vertex* %24, i64 0, i32 2, i64 %indvars.iv.next.i.us47.5.ls.us
  %60 = bitcast %struct.vertex** %arrayidx8.i.us46.6.ls.us to i64*
  store i64 %59, i64* %60, align 8, !tbaa !53
  %indvars.iv.next.i.us47.6.ls.us = or i64 %indvars.iv.i.us42.ls.us, 7
  %61 = trunc i64 %indvars.iv.next.i.us47.6.ls.us to i32
  %62 = xor i32 %61, -1
  %sub2.i.i.us43.7.ls.us = add i32 %25, %62
  %idxprom.i.i.us44.7.ls.us = sext i32 %sub2.i.i.us43.7.ls.us to i64
  %arrayidx.i23.i.us45.7.ls.us = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.7.ls.us
  %63 = bitcast %struct.vertex** %arrayidx.i23.i.us45.7.ls.us to i64*
  %64 = load i64, i64* %63, align 8, !tbaa !53
  %arrayidx8.i.us46.7.ls.us = getelementptr inbounds %struct.vertex, %struct.vertex* %24, i64 0, i32 2, i64 %indvars.iv.next.i.us47.6.ls.us
  %65 = bitcast %struct.vertex** %arrayidx8.i.us46.7.ls.us to i64*
  store i64 %64, i64* %65, align 8, !tbaa !53
  %indvars.iv.next.i.us47.7.ls.us = add nuw nsw i64 %indvars.iv.i.us42.ls.us, 8
  %exitcond.i.us48.7.ls.us = icmp eq i64 %indvars.iv.next.i.us47.7.ls.us, %.ls9
  br i1 %exitcond.i.us48.7.ls.us, label %_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE8kNearestEPS3_PS5_i.exit.loopexit.us53.ls.us, label %for.body6.i.us41.ls.us, !llvm.loop !384

_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE8kNearestEPS3_PS5_i.exit.loopexit.us53.ls.us: ; preds = %for.body6.i.us41.ls.us, %pfor.detach.us26.ls.us
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #2
  %66 = icmp ult i64 %indvars.iv.ls.us, %.ls
  %indvars.iv.next.ls.us = add nuw nsw i64 %indvars.iv.ls.us, 1
  br i1 %66, label %pfor.detach.us26.ls.us, label %pfor.cond.cleanup.loopexit.ls

pfor.detach.lr.ph.split.split.us.ls.split._crit_edge.split: ; preds = %pfor.detach.lr.ph.split.split.us.ls.split._crit_edge
  %67 = add i64 %xtraiter84.ls, -1
  %68 = shl i64 %xtraiter84.ls, 3
  %69 = add i64 %68, 24
  %70 = sub i64 0, %xtraiter84.ls
  %scevgep5 = getelementptr %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 2, i64 %70
  %min.iters.check = icmp ult i64 %xtraiter84.ls, 16
  %71 = trunc i64 %67 to i32
  %72 = icmp ugt i64 %67, 4294967295
  %n.vec = and i64 %xtraiter84.ls, -16
  %ind.end = sub i64 %xtraiter84.ls, %n.vec
  %cmp.n = icmp eq i64 %n.vec, %xtraiter84.ls
  br label %pfor.detach.us26.ls

pfor.cond.cleanup.loopexit.ls:                    ; preds = %_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE8kNearestEPS3_PS5_i.exit.loopexit.us53.ls, %_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE8kNearestEPS3_PS5_i.exit.loopexit.us53.ls.us
  %73 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %74 = load atomic i32, i32* %73 acquire, align 8
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %77 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %78 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %79 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %78, i16* nonnull %79) #2
  %80 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %81 = call i8* @llvm.frameaddress(i32 0) #2
  %82 = getelementptr inbounds [5 x i8*], [5 x i8*]* %80, i64 0, i64 0
  store volatile i8* %81, i8** %82, align 8
  %83 = call i8* @llvm.stacksave() #2
  %84 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %83, i8** %84, align 8
  %85 = bitcast [5 x i8*]* %80 to i8*
  %86 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %85) #24
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %88 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %89 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %88, i64 0, i32 12, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, 1
  store i64 %91, i64* %89, align 8
  %92 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %93 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %92, i64 0, i32 9
  %96 = bitcast %struct.__cilkrts_stack_frame** %95 to i64*
  store atomic i64 %94, i64* %96 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %97 = load atomic i32, i32* %73 acquire, align 8
  %98 = icmp eq i32 %97, 16777216
  br i1 %98, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.us26.ls:                              ; preds = %pfor.detach.lr.ph.split.split.us.ls.split._crit_edge.split, %_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE8kNearestEPS3_PS5_i.exit.loopexit.us53.ls
  %indvars.iv.ls = phi i64 [ %indvars.iv.next.ls, %_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE8kNearestEPS3_PS5_i.exit.loopexit.us53.ls ], [ %indvars.iv.ls.dac.lcssa, %pfor.detach.lr.ph.split.split.us.ls.split._crit_edge.split ]
  %arrayidx.us30.ls = getelementptr inbounds %struct.vertex*, %struct.vertex** %.ls1, i64 %indvars.iv.ls
  %99 = load %struct.vertex*, %struct.vertex** %arrayidx.us30.ls, align 8, !tbaa !53
  %100 = bitcast %struct.vertex* %99 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #2
  %arraydecay.us31.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %99, i64 0, i32 2, i64 0
  %result33.i.us32.ls = bitcast %struct.vertex** %arraydecay.us31.ls to i8*
  store i32 1, i32* %k.i.i.us34.ls, align 4, !tbaa !153
  store i32 4, i32* %quads.i.i.us35.ls, align 8, !tbaa !154
  store %struct.vertex* %99, %struct.vertex** %ps.i.i.us36.ls, align 8, !tbaa !151
  store %struct.vertex* null, %struct.vertex** %arrayidx.i.i.us39.ls, align 8, !tbaa !53
  store double 0x7FEFFFFFFFFFFFFF, double* %arrayidx8.i.i.us40.ls, align 8, !tbaa !18
  call void @_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE3kNN10nearestNghEP9gTreeNodeIS2_7_vect2dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* nonnull %nn.i.us29.ls, %class.gTreeNode* %call.i.ls) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull %result33.i.us32.ls, i8 0, i64 %.ls2, i32 8, i1 false) #2
  %101 = load i32, i32* %k.i.i.us34.ls, align 4, !tbaa !153
  br i1 %min.iters.check, label %for.body6.i.us41.prol.ls.preheader, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %pfor.detach.us26.ls
  %102 = add i32 %101, -1
  %103 = sub i32 %102, %71
  %104 = icmp sgt i32 %103, %102
  %105 = or i1 %104, %72
  br i1 %105, label %for.body6.i.us41.prol.ls.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %vector.scevcheck
  %scevgep = getelementptr %struct.vertex, %struct.vertex* %99, i64 0, i32 2, i64 0
  %uglygep = getelementptr i8, i8* %100, i64 %69
  %106 = add i32 %101, -1
  %107 = sext i32 %106 to i64
  %scevgep6 = getelementptr double, double* %scevgep5, i64 %107
  %scevgep67 = bitcast double* %scevgep6 to i8*
  %scevgep9 = getelementptr %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 2, i64 %107
  %108 = bitcast double* %scevgep9 to %struct.vertex**
  %bound0 = icmp ult %struct.vertex** %scevgep, %108
  %bound1 = icmp ugt i8* %uglygep, %scevgep67
  %memcheck.conflict = and i1 %bound0, %bound1
  br i1 %memcheck.conflict, label %for.body6.i.us41.prol.ls.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %109 = trunc i64 %index to i32
  %110 = xor i32 %109, -1
  %111 = add i32 %101, %110
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %112
  %114 = getelementptr %struct.vertex*, %struct.vertex** %113, i64 -3
  %115 = bitcast %struct.vertex** %114 to <4 x i64>*
  %wide.load = load <4 x i64>, <4 x i64>* %115, align 8, !tbaa !53, !alias.scope !385
  %reverse = shufflevector <4 x i64> %wide.load, <4 x i64> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %116 = getelementptr %struct.vertex*, %struct.vertex** %113, i64 -7
  %117 = bitcast %struct.vertex** %116 to <4 x i64>*
  %wide.load27 = load <4 x i64>, <4 x i64>* %117, align 8, !tbaa !53, !alias.scope !385
  %reverse28 = shufflevector <4 x i64> %wide.load27, <4 x i64> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %118 = getelementptr %struct.vertex*, %struct.vertex** %113, i64 -11
  %119 = bitcast %struct.vertex** %118 to <4 x i64>*
  %wide.load29 = load <4 x i64>, <4 x i64>* %119, align 8, !tbaa !53, !alias.scope !385
  %reverse30 = shufflevector <4 x i64> %wide.load29, <4 x i64> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %120 = getelementptr %struct.vertex*, %struct.vertex** %113, i64 -15
  %121 = bitcast %struct.vertex** %120 to <4 x i64>*
  %wide.load31 = load <4 x i64>, <4 x i64>* %121, align 8, !tbaa !53, !alias.scope !385
  %reverse32 = shufflevector <4 x i64> %wide.load31, <4 x i64> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %122 = getelementptr inbounds %struct.vertex, %struct.vertex* %99, i64 0, i32 2, i64 %index
  %123 = bitcast %struct.vertex** %122 to <4 x i64>*
  store <4 x i64> %reverse, <4 x i64>* %123, align 8, !tbaa !53, !alias.scope !388, !noalias !385
  %124 = getelementptr %struct.vertex*, %struct.vertex** %122, i64 4
  %125 = bitcast %struct.vertex** %124 to <4 x i64>*
  store <4 x i64> %reverse28, <4 x i64>* %125, align 8, !tbaa !53, !alias.scope !388, !noalias !385
  %126 = getelementptr %struct.vertex*, %struct.vertex** %122, i64 8
  %127 = bitcast %struct.vertex** %126 to <4 x i64>*
  store <4 x i64> %reverse30, <4 x i64>* %127, align 8, !tbaa !53, !alias.scope !388, !noalias !385
  %128 = getelementptr %struct.vertex*, %struct.vertex** %122, i64 12
  %129 = bitcast %struct.vertex** %128 to <4 x i64>*
  store <4 x i64> %reverse32, <4 x i64>* %129, align 8, !tbaa !53, !alias.scope !388, !noalias !385
  %index.next = add i64 %index, 16
  %130 = icmp eq i64 %index.next, %n.vec
  br i1 %130, label %middle.block, label %vector.body, !llvm.loop !390

middle.block:                                     ; preds = %vector.body
  br i1 %cmp.n, label %for.body6.i.us41.prol.loopexit.ls, label %for.body6.i.us41.prol.ls.preheader

for.body6.i.us41.prol.ls.preheader:               ; preds = %middle.block, %vector.memcheck, %vector.scevcheck, %pfor.detach.us26.ls
  %indvars.iv.i.us42.prol.ls.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %vector.scevcheck ], [ 0, %pfor.detach.us26.ls ], [ %n.vec, %middle.block ]
  %prol.iter.ls.ph = phi i64 [ %xtraiter84.ls, %vector.memcheck ], [ %xtraiter84.ls, %vector.scevcheck ], [ %xtraiter84.ls, %pfor.detach.us26.ls ], [ %ind.end, %middle.block ]
  br label %for.body6.i.us41.prol.ls

for.body6.i.us41.prol.ls:                         ; preds = %for.body6.i.us41.prol.ls.preheader, %for.body6.i.us41.prol.ls
  %indvars.iv.i.us42.prol.ls = phi i64 [ %indvars.iv.next.i.us47.prol.ls, %for.body6.i.us41.prol.ls ], [ %indvars.iv.i.us42.prol.ls.ph, %for.body6.i.us41.prol.ls.preheader ]
  %prol.iter.ls = phi i64 [ %prol.iter.sub.ls, %for.body6.i.us41.prol.ls ], [ %prol.iter.ls.ph, %for.body6.i.us41.prol.ls.preheader ]
  %131 = trunc i64 %indvars.iv.i.us42.prol.ls to i32
  %132 = xor i32 %131, -1
  %sub2.i.i.us43.prol.ls = add i32 %101, %132
  %idxprom.i.i.us44.prol.ls = sext i32 %sub2.i.i.us43.prol.ls to i64
  %arrayidx.i23.i.us45.prol.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.prol.ls
  %133 = bitcast %struct.vertex** %arrayidx.i23.i.us45.prol.ls to i64*
  %134 = load i64, i64* %133, align 8, !tbaa !53
  %arrayidx8.i.us46.prol.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %99, i64 0, i32 2, i64 %indvars.iv.i.us42.prol.ls
  %135 = bitcast %struct.vertex** %arrayidx8.i.us46.prol.ls to i64*
  store i64 %134, i64* %135, align 8, !tbaa !53
  %indvars.iv.next.i.us47.prol.ls = add nuw nsw i64 %indvars.iv.i.us42.prol.ls, 1
  %prol.iter.sub.ls = add nsw i64 %prol.iter.ls, -1
  %prol.iter.cmp.ls = icmp eq i64 %prol.iter.sub.ls, 0
  br i1 %prol.iter.cmp.ls, label %for.body6.i.us41.prol.loopexit.ls, label %for.body6.i.us41.prol.ls, !llvm.loop !391

for.body6.i.us41.prol.loopexit.ls:                ; preds = %for.body6.i.us41.prol.ls, %middle.block
  br i1 %23, label %_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE8kNearestEPS3_PS5_i.exit.loopexit.us53.ls, label %for.body6.i.us41.ls.preheader

for.body6.i.us41.ls.preheader:                    ; preds = %for.body6.i.us41.prol.loopexit.ls
  br label %for.body6.i.us41.ls

for.body6.i.us41.ls:                              ; preds = %for.body6.i.us41.ls.preheader, %for.body6.i.us41.ls
  %indvars.iv.i.us42.ls = phi i64 [ %indvars.iv.next.i.us47.7.ls, %for.body6.i.us41.ls ], [ %xtraiter84.ls, %for.body6.i.us41.ls.preheader ]
  %136 = trunc i64 %indvars.iv.i.us42.ls to i32
  %137 = xor i32 %136, -1
  %sub2.i.i.us43.ls = add i32 %101, %137
  %idxprom.i.i.us44.ls = sext i32 %sub2.i.i.us43.ls to i64
  %arrayidx.i23.i.us45.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.ls
  %138 = bitcast %struct.vertex** %arrayidx.i23.i.us45.ls to i64*
  %139 = load i64, i64* %138, align 8, !tbaa !53
  %arrayidx8.i.us46.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %99, i64 0, i32 2, i64 %indvars.iv.i.us42.ls
  %140 = bitcast %struct.vertex** %arrayidx8.i.us46.ls to i64*
  store i64 %139, i64* %140, align 8, !tbaa !53
  %indvars.iv.next.i.us47.ls = add nuw nsw i64 %indvars.iv.i.us42.ls, 1
  %141 = trunc i64 %indvars.iv.next.i.us47.ls to i32
  %142 = xor i32 %141, -1
  %sub2.i.i.us43.1.ls = add i32 %101, %142
  %idxprom.i.i.us44.1.ls = sext i32 %sub2.i.i.us43.1.ls to i64
  %arrayidx.i23.i.us45.1.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.1.ls
  %143 = bitcast %struct.vertex** %arrayidx.i23.i.us45.1.ls to i64*
  %144 = load i64, i64* %143, align 8, !tbaa !53
  %arrayidx8.i.us46.1.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %99, i64 0, i32 2, i64 %indvars.iv.next.i.us47.ls
  %145 = bitcast %struct.vertex** %arrayidx8.i.us46.1.ls to i64*
  store i64 %144, i64* %145, align 8, !tbaa !53
  %indvars.iv.next.i.us47.1.ls = add nsw i64 %indvars.iv.i.us42.ls, 2
  %146 = trunc i64 %indvars.iv.next.i.us47.1.ls to i32
  %147 = xor i32 %146, -1
  %sub2.i.i.us43.2.ls = add i32 %101, %147
  %idxprom.i.i.us44.2.ls = sext i32 %sub2.i.i.us43.2.ls to i64
  %arrayidx.i23.i.us45.2.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.2.ls
  %148 = bitcast %struct.vertex** %arrayidx.i23.i.us45.2.ls to i64*
  %149 = load i64, i64* %148, align 8, !tbaa !53
  %arrayidx8.i.us46.2.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %99, i64 0, i32 2, i64 %indvars.iv.next.i.us47.1.ls
  %150 = bitcast %struct.vertex** %arrayidx8.i.us46.2.ls to i64*
  store i64 %149, i64* %150, align 8, !tbaa !53
  %indvars.iv.next.i.us47.2.ls = add nsw i64 %indvars.iv.i.us42.ls, 3
  %151 = trunc i64 %indvars.iv.next.i.us47.2.ls to i32
  %152 = xor i32 %151, -1
  %sub2.i.i.us43.3.ls = add i32 %101, %152
  %idxprom.i.i.us44.3.ls = sext i32 %sub2.i.i.us43.3.ls to i64
  %arrayidx.i23.i.us45.3.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.3.ls
  %153 = bitcast %struct.vertex** %arrayidx.i23.i.us45.3.ls to i64*
  %154 = load i64, i64* %153, align 8, !tbaa !53
  %arrayidx8.i.us46.3.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %99, i64 0, i32 2, i64 %indvars.iv.next.i.us47.2.ls
  %155 = bitcast %struct.vertex** %arrayidx8.i.us46.3.ls to i64*
  store i64 %154, i64* %155, align 8, !tbaa !53
  %indvars.iv.next.i.us47.3.ls = add nsw i64 %indvars.iv.i.us42.ls, 4
  %156 = trunc i64 %indvars.iv.next.i.us47.3.ls to i32
  %157 = xor i32 %156, -1
  %sub2.i.i.us43.4.ls = add i32 %101, %157
  %idxprom.i.i.us44.4.ls = sext i32 %sub2.i.i.us43.4.ls to i64
  %arrayidx.i23.i.us45.4.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.4.ls
  %158 = bitcast %struct.vertex** %arrayidx.i23.i.us45.4.ls to i64*
  %159 = load i64, i64* %158, align 8, !tbaa !53
  %arrayidx8.i.us46.4.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %99, i64 0, i32 2, i64 %indvars.iv.next.i.us47.3.ls
  %160 = bitcast %struct.vertex** %arrayidx8.i.us46.4.ls to i64*
  store i64 %159, i64* %160, align 8, !tbaa !53
  %indvars.iv.next.i.us47.4.ls = add nsw i64 %indvars.iv.i.us42.ls, 5
  %161 = trunc i64 %indvars.iv.next.i.us47.4.ls to i32
  %162 = xor i32 %161, -1
  %sub2.i.i.us43.5.ls = add i32 %101, %162
  %idxprom.i.i.us44.5.ls = sext i32 %sub2.i.i.us43.5.ls to i64
  %arrayidx.i23.i.us45.5.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.5.ls
  %163 = bitcast %struct.vertex** %arrayidx.i23.i.us45.5.ls to i64*
  %164 = load i64, i64* %163, align 8, !tbaa !53
  %arrayidx8.i.us46.5.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %99, i64 0, i32 2, i64 %indvars.iv.next.i.us47.4.ls
  %165 = bitcast %struct.vertex** %arrayidx8.i.us46.5.ls to i64*
  store i64 %164, i64* %165, align 8, !tbaa !53
  %indvars.iv.next.i.us47.5.ls = add nsw i64 %indvars.iv.i.us42.ls, 6
  %166 = trunc i64 %indvars.iv.next.i.us47.5.ls to i32
  %167 = xor i32 %166, -1
  %sub2.i.i.us43.6.ls = add i32 %101, %167
  %idxprom.i.i.us44.6.ls = sext i32 %sub2.i.i.us43.6.ls to i64
  %arrayidx.i23.i.us45.6.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.6.ls
  %168 = bitcast %struct.vertex** %arrayidx.i23.i.us45.6.ls to i64*
  %169 = load i64, i64* %168, align 8, !tbaa !53
  %arrayidx8.i.us46.6.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %99, i64 0, i32 2, i64 %indvars.iv.next.i.us47.5.ls
  %170 = bitcast %struct.vertex** %arrayidx8.i.us46.6.ls to i64*
  store i64 %169, i64* %170, align 8, !tbaa !53
  %indvars.iv.next.i.us47.6.ls = add nsw i64 %indvars.iv.i.us42.ls, 7
  %171 = trunc i64 %indvars.iv.next.i.us47.6.ls to i32
  %172 = xor i32 %171, -1
  %sub2.i.i.us43.7.ls = add i32 %101, %172
  %idxprom.i.i.us44.7.ls = sext i32 %sub2.i.i.us43.7.ls to i64
  %arrayidx.i23.i.us45.7.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point2d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.7.ls
  %173 = bitcast %struct.vertex** %arrayidx.i23.i.us45.7.ls to i64*
  %174 = load i64, i64* %173, align 8, !tbaa !53
  %arrayidx8.i.us46.7.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %99, i64 0, i32 2, i64 %indvars.iv.next.i.us47.6.ls
  %175 = bitcast %struct.vertex** %arrayidx8.i.us46.7.ls to i64*
  store i64 %174, i64* %175, align 8, !tbaa !53
  %indvars.iv.next.i.us47.7.ls = add nsw i64 %indvars.iv.i.us42.ls, 8
  %exitcond.i.us48.7.ls = icmp eq i64 %indvars.iv.next.i.us47.7.ls, %.ls9
  br i1 %exitcond.i.us48.7.ls, label %_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE8kNearestEPS3_PS5_i.exit.loopexit.us53.ls, label %for.body6.i.us41.ls, !llvm.loop !384

_ZN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE8kNearestEPS3_PS5_i.exit.loopexit.us53.ls: ; preds = %for.body6.i.us41.ls, %for.body6.i.us41.prol.loopexit.ls
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #2
  %176 = icmp ult i64 %indvars.iv.ls, %.ls
  %indvars.iv.next.ls = add nuw nsw i64 %indvars.iv.ls, 1
  br i1 %176, label %pfor.detach.us26.ls, label %pfor.cond.cleanup.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE5gTreeEPPS5_i_pfor.detach.ls(i64 %indvars.iv.start.ls, i64 %end.ls, i64 %.ls, %struct.vertex** nocapture readonly align 1 %vv.ls, %struct.vertex** nocapture align 1 %.ls1) unnamed_addr #15 align 2 {
pfor.detach.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount3 = sub i64 %end.ls, %indvars.iv.start.ls
  %9 = icmp ugt i64 %itercount3, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.lr.ph.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount5 = phi i64 [ %itercount3, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv.ls.dac4 = phi i64 [ %indvars.iv.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount5, 1
  %miditer = add nuw nsw i64 %indvars.iv.ls.dac4, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split6, label %.split.split

.split6:                                          ; preds = %16
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE5gTreeEPPS5_i_pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac4, i64 %miditer, i64 %.ls, %struct.vertex** %vv.ls, %struct.vertex** %.ls1)
  br label %.split.split

.split.split:                                     ; preds = %.split6, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.lr.ph.ls.split._crit_edge

pfor.detach.lr.ph.ls.split._crit_edge:            ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv.ls.dac.lcssa = phi i64 [ %indvars.iv.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  %22 = icmp ugt i64 %indvars.iv.ls.dac.lcssa, %end.ls
  %umax = select i1 %22, i64 %indvars.iv.ls.dac.lcssa, i64 %end.ls
  %23 = add i64 %umax, 1
  %24 = sub i64 %23, %indvars.iv.ls.dac.lcssa
  %min.iters.check = icmp ult i64 %24, 16
  br i1 %min.iters.check, label %pfor.detach.ls.preheader, label %vector.memcheck

pfor.detach.ls.preheader:                         ; preds = %middle.block, %vector.memcheck, %pfor.detach.lr.ph.ls.split._crit_edge
  %indvars.iv.ls.ph = phi i64 [ %indvars.iv.ls.dac.lcssa, %vector.memcheck ], [ %indvars.iv.ls.dac.lcssa, %pfor.detach.lr.ph.ls.split._crit_edge ], [ %ind.end, %middle.block ]
  br label %pfor.detach.ls

vector.memcheck:                                  ; preds = %pfor.detach.lr.ph.ls.split._crit_edge
  %scevgep = getelementptr %struct.vertex*, %struct.vertex** %.ls1, i64 %indvars.iv.ls.dac.lcssa
  %25 = icmp ugt i64 %indvars.iv.ls.dac.lcssa, %end.ls
  %umax3 = select i1 %25, i64 %indvars.iv.ls.dac.lcssa, i64 %end.ls
  %26 = add i64 %umax3, 1
  %scevgep4 = getelementptr %struct.vertex*, %struct.vertex** %.ls1, i64 %26
  %scevgep6 = getelementptr %struct.vertex*, %struct.vertex** %vv.ls, i64 %indvars.iv.ls.dac.lcssa
  %scevgep8 = getelementptr %struct.vertex*, %struct.vertex** %vv.ls, i64 %26
  %bound0 = icmp ult %struct.vertex** %scevgep, %scevgep8
  %bound1 = icmp ult %struct.vertex** %scevgep6, %scevgep4
  %memcheck.conflict = and i1 %bound0, %bound1
  br i1 %memcheck.conflict, label %pfor.detach.ls.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %24, -16
  %ind.end = add i64 %indvars.iv.ls.dac.lcssa, %n.vec
  %27 = add i64 %n.vec, -16
  %28 = lshr exact i64 %27, 4
  %29 = add nuw nsw i64 %28, 1
  %xtraiter = and i64 %29, 3
  %30 = icmp ult i64 %27, 48
  br i1 %30, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nsw i64 %29, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.3, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.3, %vector.body ]
  %31 = add i64 %indvars.iv.ls.dac.lcssa, %index
  %32 = getelementptr inbounds %struct.vertex*, %struct.vertex** %vv.ls, i64 %31
  %33 = bitcast %struct.vertex** %32 to <4 x i64>*
  %wide.load = load <4 x i64>, <4 x i64>* %33, align 8, !tbaa !53, !alias.scope !392
  %34 = getelementptr %struct.vertex*, %struct.vertex** %32, i64 4
  %35 = bitcast %struct.vertex** %34 to <4 x i64>*
  %wide.load13 = load <4 x i64>, <4 x i64>* %35, align 8, !tbaa !53, !alias.scope !392
  %36 = getelementptr %struct.vertex*, %struct.vertex** %32, i64 8
  %37 = bitcast %struct.vertex** %36 to <4 x i64>*
  %wide.load14 = load <4 x i64>, <4 x i64>* %37, align 8, !tbaa !53, !alias.scope !392
  %38 = getelementptr %struct.vertex*, %struct.vertex** %32, i64 12
  %39 = bitcast %struct.vertex** %38 to <4 x i64>*
  %wide.load15 = load <4 x i64>, <4 x i64>* %39, align 8, !tbaa !53, !alias.scope !392
  %40 = getelementptr inbounds %struct.vertex*, %struct.vertex** %.ls1, i64 %31
  %41 = bitcast %struct.vertex** %40 to <4 x i64>*
  store <4 x i64> %wide.load, <4 x i64>* %41, align 8, !tbaa !53, !alias.scope !395, !noalias !392
  %42 = getelementptr %struct.vertex*, %struct.vertex** %40, i64 4
  %43 = bitcast %struct.vertex** %42 to <4 x i64>*
  store <4 x i64> %wide.load13, <4 x i64>* %43, align 8, !tbaa !53, !alias.scope !395, !noalias !392
  %44 = getelementptr %struct.vertex*, %struct.vertex** %40, i64 8
  %45 = bitcast %struct.vertex** %44 to <4 x i64>*
  store <4 x i64> %wide.load14, <4 x i64>* %45, align 8, !tbaa !53, !alias.scope !395, !noalias !392
  %46 = getelementptr %struct.vertex*, %struct.vertex** %40, i64 12
  %47 = bitcast %struct.vertex** %46 to <4 x i64>*
  store <4 x i64> %wide.load15, <4 x i64>* %47, align 8, !tbaa !53, !alias.scope !395, !noalias !392
  %index.next = or i64 %index, 16
  %48 = add i64 %indvars.iv.ls.dac.lcssa, %index.next
  %49 = getelementptr inbounds %struct.vertex*, %struct.vertex** %vv.ls, i64 %48
  %50 = bitcast %struct.vertex** %49 to <4 x i64>*
  %wide.load.1 = load <4 x i64>, <4 x i64>* %50, align 8, !tbaa !53, !alias.scope !392
  %51 = getelementptr %struct.vertex*, %struct.vertex** %49, i64 4
  %52 = bitcast %struct.vertex** %51 to <4 x i64>*
  %wide.load13.1 = load <4 x i64>, <4 x i64>* %52, align 8, !tbaa !53, !alias.scope !392
  %53 = getelementptr %struct.vertex*, %struct.vertex** %49, i64 8
  %54 = bitcast %struct.vertex** %53 to <4 x i64>*
  %wide.load14.1 = load <4 x i64>, <4 x i64>* %54, align 8, !tbaa !53, !alias.scope !392
  %55 = getelementptr %struct.vertex*, %struct.vertex** %49, i64 12
  %56 = bitcast %struct.vertex** %55 to <4 x i64>*
  %wide.load15.1 = load <4 x i64>, <4 x i64>* %56, align 8, !tbaa !53, !alias.scope !392
  %57 = getelementptr inbounds %struct.vertex*, %struct.vertex** %.ls1, i64 %48
  %58 = bitcast %struct.vertex** %57 to <4 x i64>*
  store <4 x i64> %wide.load.1, <4 x i64>* %58, align 8, !tbaa !53, !alias.scope !395, !noalias !392
  %59 = getelementptr %struct.vertex*, %struct.vertex** %57, i64 4
  %60 = bitcast %struct.vertex** %59 to <4 x i64>*
  store <4 x i64> %wide.load13.1, <4 x i64>* %60, align 8, !tbaa !53, !alias.scope !395, !noalias !392
  %61 = getelementptr %struct.vertex*, %struct.vertex** %57, i64 8
  %62 = bitcast %struct.vertex** %61 to <4 x i64>*
  store <4 x i64> %wide.load14.1, <4 x i64>* %62, align 8, !tbaa !53, !alias.scope !395, !noalias !392
  %63 = getelementptr %struct.vertex*, %struct.vertex** %57, i64 12
  %64 = bitcast %struct.vertex** %63 to <4 x i64>*
  store <4 x i64> %wide.load15.1, <4 x i64>* %64, align 8, !tbaa !53, !alias.scope !395, !noalias !392
  %index.next.1 = or i64 %index, 32
  %65 = add i64 %indvars.iv.ls.dac.lcssa, %index.next.1
  %66 = getelementptr inbounds %struct.vertex*, %struct.vertex** %vv.ls, i64 %65
  %67 = bitcast %struct.vertex** %66 to <4 x i64>*
  %wide.load.2 = load <4 x i64>, <4 x i64>* %67, align 8, !tbaa !53, !alias.scope !392
  %68 = getelementptr %struct.vertex*, %struct.vertex** %66, i64 4
  %69 = bitcast %struct.vertex** %68 to <4 x i64>*
  %wide.load13.2 = load <4 x i64>, <4 x i64>* %69, align 8, !tbaa !53, !alias.scope !392
  %70 = getelementptr %struct.vertex*, %struct.vertex** %66, i64 8
  %71 = bitcast %struct.vertex** %70 to <4 x i64>*
  %wide.load14.2 = load <4 x i64>, <4 x i64>* %71, align 8, !tbaa !53, !alias.scope !392
  %72 = getelementptr %struct.vertex*, %struct.vertex** %66, i64 12
  %73 = bitcast %struct.vertex** %72 to <4 x i64>*
  %wide.load15.2 = load <4 x i64>, <4 x i64>* %73, align 8, !tbaa !53, !alias.scope !392
  %74 = getelementptr inbounds %struct.vertex*, %struct.vertex** %.ls1, i64 %65
  %75 = bitcast %struct.vertex** %74 to <4 x i64>*
  store <4 x i64> %wide.load.2, <4 x i64>* %75, align 8, !tbaa !53, !alias.scope !395, !noalias !392
  %76 = getelementptr %struct.vertex*, %struct.vertex** %74, i64 4
  %77 = bitcast %struct.vertex** %76 to <4 x i64>*
  store <4 x i64> %wide.load13.2, <4 x i64>* %77, align 8, !tbaa !53, !alias.scope !395, !noalias !392
  %78 = getelementptr %struct.vertex*, %struct.vertex** %74, i64 8
  %79 = bitcast %struct.vertex** %78 to <4 x i64>*
  store <4 x i64> %wide.load14.2, <4 x i64>* %79, align 8, !tbaa !53, !alias.scope !395, !noalias !392
  %80 = getelementptr %struct.vertex*, %struct.vertex** %74, i64 12
  %81 = bitcast %struct.vertex** %80 to <4 x i64>*
  store <4 x i64> %wide.load15.2, <4 x i64>* %81, align 8, !tbaa !53, !alias.scope !395, !noalias !392
  %index.next.2 = or i64 %index, 48
  %82 = add i64 %indvars.iv.ls.dac.lcssa, %index.next.2
  %83 = getelementptr inbounds %struct.vertex*, %struct.vertex** %vv.ls, i64 %82
  %84 = bitcast %struct.vertex** %83 to <4 x i64>*
  %wide.load.3 = load <4 x i64>, <4 x i64>* %84, align 8, !tbaa !53, !alias.scope !392
  %85 = getelementptr %struct.vertex*, %struct.vertex** %83, i64 4
  %86 = bitcast %struct.vertex** %85 to <4 x i64>*
  %wide.load13.3 = load <4 x i64>, <4 x i64>* %86, align 8, !tbaa !53, !alias.scope !392
  %87 = getelementptr %struct.vertex*, %struct.vertex** %83, i64 8
  %88 = bitcast %struct.vertex** %87 to <4 x i64>*
  %wide.load14.3 = load <4 x i64>, <4 x i64>* %88, align 8, !tbaa !53, !alias.scope !392
  %89 = getelementptr %struct.vertex*, %struct.vertex** %83, i64 12
  %90 = bitcast %struct.vertex** %89 to <4 x i64>*
  %wide.load15.3 = load <4 x i64>, <4 x i64>* %90, align 8, !tbaa !53, !alias.scope !392
  %91 = getelementptr inbounds %struct.vertex*, %struct.vertex** %.ls1, i64 %82
  %92 = bitcast %struct.vertex** %91 to <4 x i64>*
  store <4 x i64> %wide.load.3, <4 x i64>* %92, align 8, !tbaa !53, !alias.scope !395, !noalias !392
  %93 = getelementptr %struct.vertex*, %struct.vertex** %91, i64 4
  %94 = bitcast %struct.vertex** %93 to <4 x i64>*
  store <4 x i64> %wide.load13.3, <4 x i64>* %94, align 8, !tbaa !53, !alias.scope !395, !noalias !392
  %95 = getelementptr %struct.vertex*, %struct.vertex** %91, i64 8
  %96 = bitcast %struct.vertex** %95 to <4 x i64>*
  store <4 x i64> %wide.load14.3, <4 x i64>* %96, align 8, !tbaa !53, !alias.scope !395, !noalias !392
  %97 = getelementptr %struct.vertex*, %struct.vertex** %91, i64 12
  %98 = bitcast %struct.vertex** %97 to <4 x i64>*
  store <4 x i64> %wide.load15.3, <4 x i64>* %98, align 8, !tbaa !53, !alias.scope !395, !noalias !392
  %index.next.3 = add i64 %index, 64
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !397

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.3, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil.preheader

vector.body.epil.preheader:                       ; preds = %middle.block.unr-lcssa
  br label %vector.body.epil

vector.body.epil:                                 ; preds = %vector.body.epil, %vector.body.epil.preheader
  %index.epil = phi i64 [ %index.unr, %vector.body.epil.preheader ], [ %index.next.epil, %vector.body.epil ]
  %epil.iter = phi i64 [ %xtraiter, %vector.body.epil.preheader ], [ %epil.iter.sub, %vector.body.epil ]
  %99 = add i64 %indvars.iv.ls.dac.lcssa, %index.epil
  %100 = getelementptr inbounds %struct.vertex*, %struct.vertex** %vv.ls, i64 %99
  %101 = bitcast %struct.vertex** %100 to <4 x i64>*
  %wide.load.epil = load <4 x i64>, <4 x i64>* %101, align 8, !tbaa !53, !alias.scope !392
  %102 = getelementptr %struct.vertex*, %struct.vertex** %100, i64 4
  %103 = bitcast %struct.vertex** %102 to <4 x i64>*
  %wide.load13.epil = load <4 x i64>, <4 x i64>* %103, align 8, !tbaa !53, !alias.scope !392
  %104 = getelementptr %struct.vertex*, %struct.vertex** %100, i64 8
  %105 = bitcast %struct.vertex** %104 to <4 x i64>*
  %wide.load14.epil = load <4 x i64>, <4 x i64>* %105, align 8, !tbaa !53, !alias.scope !392
  %106 = getelementptr %struct.vertex*, %struct.vertex** %100, i64 12
  %107 = bitcast %struct.vertex** %106 to <4 x i64>*
  %wide.load15.epil = load <4 x i64>, <4 x i64>* %107, align 8, !tbaa !53, !alias.scope !392
  %108 = getelementptr inbounds %struct.vertex*, %struct.vertex** %.ls1, i64 %99
  %109 = bitcast %struct.vertex** %108 to <4 x i64>*
  store <4 x i64> %wide.load.epil, <4 x i64>* %109, align 8, !tbaa !53, !alias.scope !395, !noalias !392
  %110 = getelementptr %struct.vertex*, %struct.vertex** %108, i64 4
  %111 = bitcast %struct.vertex** %110 to <4 x i64>*
  store <4 x i64> %wide.load13.epil, <4 x i64>* %111, align 8, !tbaa !53, !alias.scope !395, !noalias !392
  %112 = getelementptr %struct.vertex*, %struct.vertex** %108, i64 8
  %113 = bitcast %struct.vertex** %112 to <4 x i64>*
  store <4 x i64> %wide.load14.epil, <4 x i64>* %113, align 8, !tbaa !53, !alias.scope !395, !noalias !392
  %114 = getelementptr %struct.vertex*, %struct.vertex** %108, i64 12
  %115 = bitcast %struct.vertex** %114 to <4 x i64>*
  store <4 x i64> %wide.load15.epil, <4 x i64>* %115, align 8, !tbaa !53, !alias.scope !395, !noalias !392
  %index.next.epil = add i64 %index.epil, 16
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block, label %vector.body.epil, !llvm.loop !398

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %24, %n.vec
  br i1 %cmp.n, label %pfor.cond.cleanup.loopexit.ls, label %pfor.detach.ls.preheader

pfor.cond.cleanup.loopexit.ls:                    ; preds = %pfor.detach.ls, %middle.block
  %116 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %117 = load atomic i32, i32* %116 acquire, align 8
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %120 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %121 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %122 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %121, i16* nonnull %122) #2
  %123 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %124 = call i8* @llvm.frameaddress(i32 0) #2
  %125 = getelementptr inbounds [5 x i8*], [5 x i8*]* %123, i64 0, i64 0
  store volatile i8* %124, i8** %125, align 8
  %126 = call i8* @llvm.stacksave() #2
  %127 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %126, i8** %127, align 8
  %128 = bitcast [5 x i8*]* %123 to i8*
  %129 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %128) #24
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %131 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %132 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %131, i64 0, i32 12, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 1
  store i64 %134, i64* %132, align 8
  %135 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %136 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %135, i64 0, i32 9
  %139 = bitcast %struct.__cilkrts_stack_frame** %138 to i64*
  store atomic i64 %137, i64* %139 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %140 = load atomic i32, i32* %116 acquire, align 8
  %141 = icmp eq i32 %140, 16777216
  br i1 %141, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %pfor.detach.ls
  %indvars.iv.ls = phi i64 [ %indvars.iv.next.ls, %pfor.detach.ls ], [ %indvars.iv.ls.ph, %pfor.detach.ls.preheader ]
  %arrayidx.ls = getelementptr inbounds %struct.vertex*, %struct.vertex** %vv.ls, i64 %indvars.iv.ls
  %142 = bitcast %struct.vertex** %arrayidx.ls to i64*
  %143 = load i64, i64* %142, align 8, !tbaa !53
  %arrayidx11.ls = getelementptr inbounds %struct.vertex*, %struct.vertex** %.ls1, i64 %indvars.iv.ls
  %144 = bitcast %struct.vertex** %arrayidx11.ls to i64*
  store i64 %143, i64* %144, align 8, !tbaa !53
  %145 = icmp ult i64 %indvars.iv.ls, %end.ls
  %indvars.iv.next.ls = add nuw nsw i64 %indvars.iv.ls, 1
  br i1 %145, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit.ls, !llvm.loop !399
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2__pfor.detach.ls(i64 %indvars.iv.start.ls, i64 %end.ls, i64 %.ls, i64 %.ls1, i32 %.ls2, i64 %.ls3, i64 %.ls4, i32 %e.ls, %struct.vertex** nocapture readonly align 1 %g.coerce.ls, i32 %.ls5, %"struct.std::pair"* nocapture align 1 %.ls6) unnamed_addr #15 {
pfor.detach.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount10 = sub i64 %end.ls, %indvars.iv.start.ls
  %9 = icmp ugt i64 %itercount10, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv.ls.ph = phi i64 [ %indvars.iv.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount12 = phi i64 [ %itercount10, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv.ls.dac11 = phi i64 [ %indvars.iv.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount12, 1
  %miditer = add nuw nsw i64 %indvars.iv.ls.dac11, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split13, label %.split.split

.split13:                                         ; preds = %16
  call fastcc void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2__pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac11, i64 %miditer, i64 %.ls, i64 %.ls1, i32 %.ls2, i64 %.ls3, i64 %.ls4, i32 %e.ls, %struct.vertex** %g.coerce.ls, i32 %.ls5, %"struct.std::pair"* %.ls6)
  br label %.split.split

.split.split:                                     ; preds = %.split13, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.ls:                             ; preds = %_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls
  %indvars.iv.ls = phi i64 [ %indvars.iv.next.ls, %_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls ], [ %indvars.iv.ls.ph, %pfor.detach.ls.preheader ]
  %48 = shl i64 %indvars.iv.ls, 10
  %49 = add i64 %48, %.ls1
  %50 = add nsw i64 %48, %.ls3
  %51 = add nsw i64 %50, 1024
  %cmp.i.ls = icmp sgt i64 %51, %.ls4
  %52 = trunc i64 %51 to i32
  %.sroa.speculated.ls = select i1 %cmp.i.ls, i32 %e.ls, i32 %52
  %arrayidx.i.i58.ls = getelementptr inbounds %struct.vertex*, %struct.vertex** %g.coerce.ls, i64 %50
  %53 = load %struct.vertex*, %struct.vertex** %arrayidx.i.i58.ls, align 8, !tbaa !53, !noalias !400
  %ref.tmp21.sroa.0.0..sroa_idx97.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %53, i64 0, i32 1, i32 0
  %54 = bitcast double* %ref.tmp21.sroa.0.0..sroa_idx97.ls to <2 x double>*
  %55 = load <2 x double>, <2 x double>* %54, align 8
  %56 = add nsw i64 %50, 1
  %57 = sext i32 %.sroa.speculated.ls to i64
  %cmp40.i62.ls = icmp slt i64 %56, %57
  br i1 %cmp40.i62.ls, label %for.body.i94.preheader.ls, label %_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls

for.body.i94.preheader.ls:                        ; preds = %pfor.detach.ls
  %58 = trunc i64 %indvars.iv.ls to i32
  %59 = mul i32 %58, -1024
  %60 = add i32 %59, %.ls2
  %61 = add i32 %.sroa.speculated.ls, %.ls5
  %62 = add i32 %60, %.sroa.speculated.ls
  %xtraiter126.ls = and i32 %61, 3
  %lcmp.mod127.ls = icmp eq i32 %xtraiter126.ls, 0
  br i1 %lcmp.mod127.ls, label %for.body.i94.prol.loopexit.ls, label %for.body.i94.prol.ls.preheader

for.body.i94.prol.ls.preheader:                   ; preds = %for.body.i94.preheader.ls
  br label %for.body.i94.prol.ls

for.body.i94.prol.ls:                             ; preds = %for.body.i94.prol.ls.preheader, %for.body.i94.prol.ls
  %indvars.iv.i73.prol.ls = phi i64 [ %indvars.iv.next.i91.prol.ls, %for.body.i94.prol.ls ], [ %56, %for.body.i94.prol.ls.preheader ]
  %63 = phi <2 x double> [ %69, %for.body.i94.prol.ls ], [ %55, %for.body.i94.prol.ls.preheader ]
  %64 = phi <2 x double> [ %71, %for.body.i94.prol.ls ], [ %55, %for.body.i94.prol.ls.preheader ]
  %prol.iter128.ls = phi i32 [ %prol.iter128.sub.ls, %for.body.i94.prol.ls ], [ %xtraiter126.ls, %for.body.i94.prol.ls.preheader ]
  %arrayidx.i10.i78.prol.ls = getelementptr inbounds %struct.vertex*, %struct.vertex** %g.coerce.ls, i64 %indvars.iv.i73.prol.ls
  %65 = load %struct.vertex*, %struct.vertex** %arrayidx.i10.i78.prol.ls, align 8, !tbaa !53, !noalias !405
  %agg.tmp1.sroa.0.0..sroa_idx.i79.prol.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %65, i64 0, i32 1, i32 0
  %66 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i79.prol.ls to <2 x double>*
  %67 = load <2 x double>, <2 x double>* %66, align 8, !noalias !408
  %68 = fcmp fast ogt <2 x double> %63, %67
  %69 = select <2 x i1> %68, <2 x double> %67, <2 x double> %63
  %70 = fcmp fast olt <2 x double> %64, %67
  %71 = select <2 x i1> %70, <2 x double> %67, <2 x double> %64
  %indvars.iv.next.i91.prol.ls = add nsw i64 %indvars.iv.i73.prol.ls, 1
  %prol.iter128.sub.ls = add nsw i32 %prol.iter128.ls, -1
  %prol.iter128.cmp.ls = icmp eq i32 %prol.iter128.sub.ls, 0
  br i1 %prol.iter128.cmp.ls, label %for.body.i94.prol.loopexit.loopexit.ls, label %for.body.i94.prol.ls, !llvm.loop !409

for.body.i94.prol.loopexit.ls:                    ; preds = %for.body.i94.prol.loopexit.loopexit.ls, %for.body.i94.preheader.ls
  %.lcssa124.unr.ls = phi <2 x double> [ undef, %for.body.i94.preheader.ls ], [ %69, %for.body.i94.prol.loopexit.loopexit.ls ]
  %.lcssa123.unr.ls = phi <2 x double> [ undef, %for.body.i94.preheader.ls ], [ %71, %for.body.i94.prol.loopexit.loopexit.ls ]
  %indvars.iv.i73.unr.ls = phi i64 [ %56, %for.body.i94.preheader.ls ], [ %110, %for.body.i94.prol.loopexit.loopexit.ls ]
  %.unr129.ls = phi <2 x double> [ %55, %for.body.i94.preheader.ls ], [ %69, %for.body.i94.prol.loopexit.loopexit.ls ]
  %.unr130.ls = phi <2 x double> [ %55, %for.body.i94.preheader.ls ], [ %71, %for.body.i94.prol.loopexit.loopexit.ls ]
  %72 = icmp ult i32 %62, 3
  br i1 %72, label %_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls, label %for.body.i94.ls.preheader

for.body.i94.ls.preheader:                        ; preds = %for.body.i94.prol.loopexit.ls
  br label %for.body.i94.ls

for.body.i94.ls:                                  ; preds = %for.body.i94.ls.preheader, %for.body.i94.ls
  %indvars.iv.i73.ls = phi i64 [ %indvars.iv.next.i91.3.ls, %for.body.i94.ls ], [ %indvars.iv.i73.unr.ls, %for.body.i94.ls.preheader ]
  %73 = phi <2 x double> [ %100, %for.body.i94.ls ], [ %.unr129.ls, %for.body.i94.ls.preheader ]
  %74 = phi <2 x double> [ %102, %for.body.i94.ls ], [ %.unr130.ls, %for.body.i94.ls.preheader ]
  %arrayidx.i10.i78.ls = getelementptr inbounds %struct.vertex*, %struct.vertex** %g.coerce.ls, i64 %indvars.iv.i73.ls
  %75 = load %struct.vertex*, %struct.vertex** %arrayidx.i10.i78.ls, align 8, !tbaa !53, !noalias !405
  %agg.tmp1.sroa.0.0..sroa_idx.i79.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %75, i64 0, i32 1, i32 0
  %76 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i79.ls to <2 x double>*
  %77 = load <2 x double>, <2 x double>* %76, align 8, !noalias !408
  %78 = fcmp fast ogt <2 x double> %73, %77
  %79 = select <2 x i1> %78, <2 x double> %77, <2 x double> %73
  %80 = fcmp fast olt <2 x double> %74, %77
  %81 = select <2 x i1> %80, <2 x double> %77, <2 x double> %74
  %indvars.iv.next.i91.ls = add nsw i64 %indvars.iv.i73.ls, 1
  %arrayidx.i10.i78.1.ls = getelementptr inbounds %struct.vertex*, %struct.vertex** %g.coerce.ls, i64 %indvars.iv.next.i91.ls
  %82 = load %struct.vertex*, %struct.vertex** %arrayidx.i10.i78.1.ls, align 8, !tbaa !53, !noalias !405
  %agg.tmp1.sroa.0.0..sroa_idx.i79.1.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %82, i64 0, i32 1, i32 0
  %83 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i79.1.ls to <2 x double>*
  %84 = load <2 x double>, <2 x double>* %83, align 8, !noalias !408
  %85 = fcmp fast ogt <2 x double> %79, %84
  %86 = select <2 x i1> %85, <2 x double> %84, <2 x double> %79
  %87 = fcmp fast olt <2 x double> %81, %84
  %88 = select <2 x i1> %87, <2 x double> %84, <2 x double> %81
  %indvars.iv.next.i91.1.ls = add nsw i64 %indvars.iv.i73.ls, 2
  %arrayidx.i10.i78.2.ls = getelementptr inbounds %struct.vertex*, %struct.vertex** %g.coerce.ls, i64 %indvars.iv.next.i91.1.ls
  %89 = load %struct.vertex*, %struct.vertex** %arrayidx.i10.i78.2.ls, align 8, !tbaa !53, !noalias !405
  %agg.tmp1.sroa.0.0..sroa_idx.i79.2.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %89, i64 0, i32 1, i32 0
  %90 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i79.2.ls to <2 x double>*
  %91 = load <2 x double>, <2 x double>* %90, align 8, !noalias !408
  %92 = fcmp fast ogt <2 x double> %86, %91
  %93 = select <2 x i1> %92, <2 x double> %91, <2 x double> %86
  %94 = fcmp fast olt <2 x double> %88, %91
  %95 = select <2 x i1> %94, <2 x double> %91, <2 x double> %88
  %indvars.iv.next.i91.2.ls = add nsw i64 %indvars.iv.i73.ls, 3
  %arrayidx.i10.i78.3.ls = getelementptr inbounds %struct.vertex*, %struct.vertex** %g.coerce.ls, i64 %indvars.iv.next.i91.2.ls
  %96 = load %struct.vertex*, %struct.vertex** %arrayidx.i10.i78.3.ls, align 8, !tbaa !53, !noalias !405
  %agg.tmp1.sroa.0.0..sroa_idx.i79.3.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %96, i64 0, i32 1, i32 0
  %97 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i79.3.ls to <2 x double>*
  %98 = load <2 x double>, <2 x double>* %97, align 8, !noalias !408
  %99 = fcmp fast ogt <2 x double> %93, %98
  %100 = select <2 x i1> %99, <2 x double> %98, <2 x double> %93
  %101 = fcmp fast olt <2 x double> %95, %98
  %102 = select <2 x i1> %101, <2 x double> %98, <2 x double> %95
  %indvars.iv.next.i91.3.ls = add nsw i64 %indvars.iv.i73.ls, 4
  %lftr.wideiv.i92.3.ls = trunc i64 %indvars.iv.next.i91.3.ls to i32
  %exitcond.i93.3.ls = icmp eq i32 %.sroa.speculated.ls, %lftr.wideiv.i92.3.ls
  br i1 %exitcond.i93.3.ls, label %_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls, label %for.body.i94.ls

_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls: ; preds = %for.body.i94.ls, %for.body.i94.prol.loopexit.ls, %pfor.detach.ls
  %103 = phi <2 x double> [ %55, %pfor.detach.ls ], [ %.lcssa124.unr.ls, %for.body.i94.prol.loopexit.ls ], [ %100, %for.body.i94.ls ]
  %104 = phi <2 x double> [ %55, %pfor.detach.ls ], [ %.lcssa123.unr.ls, %for.body.i94.prol.loopexit.ls ], [ %102, %for.body.i94.ls ]
  %ref.tmp21.sroa.0.0..sroa_idx.ls = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %.ls6, i64 %indvars.iv.ls, i32 0, i32 0
  %105 = bitcast double* %ref.tmp21.sroa.0.0..sroa_idx.ls to <2 x double>*
  store <2 x double> %103, <2 x double>* %105, align 8
  %ref.tmp21.sroa.8.16..sroa_idx.ls = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %.ls6, i64 %indvars.iv.ls, i32 1, i32 0
  %106 = bitcast double* %ref.tmp21.sroa.8.16..sroa_idx.ls to <2 x double>*
  store <2 x double> %104, <2 x double>* %106, align 8
  %107 = icmp ult i64 %indvars.iv.ls, %end.ls
  %indvars.iv.next.ls = add nuw nsw i64 %indvars.iv.ls, 1
  br i1 %107, label %pfor.detach.ls, label %pfor.cond.cleanup.ls

for.body.i94.prol.loopexit.loopexit.ls:           ; preds = %for.body.i94.prol.ls
  %108 = add nsw i32 %xtraiter126.ls, -1
  %109 = zext i32 %108 to i64
  %110 = add i64 %49, %109
  br label %for.body.i94.prol.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2__pfor.detach.ls(i64 %indvars.iv.start.ls, i64 %end.ls, i64 %.ls, i32 %.ls1, i64 %.ls2, i64 %.ls3, i32 %e.ls, %"struct.std::pair"* nocapture readonly align 1 %g.coerce.ls, %"struct.std::pair"* nocapture align 1 %.ls4) unnamed_addr #15 {
pfor.detach.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount10 = sub i64 %end.ls, %indvars.iv.start.ls
  %9 = icmp ugt i64 %itercount10, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv.ls.ph = phi i64 [ %indvars.iv.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount12 = phi i64 [ %itercount10, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv.ls.dac11 = phi i64 [ %indvars.iv.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount12, 1
  %miditer = add nuw nsw i64 %indvars.iv.ls.dac11, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split13, label %.split.split

.split13:                                         ; preds = %16
  call fastcc void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2__pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac11, i64 %miditer, i64 %.ls, i32 %.ls1, i64 %.ls2, i64 %.ls3, i32 %e.ls, %"struct.std::pair"* %g.coerce.ls, %"struct.std::pair"* %.ls4)
  br label %.split.split

.split.split:                                     ; preds = %.split13, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.ls:                             ; preds = %_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit93.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit93.ls
  %indvars.iv.ls = phi i64 [ %indvars.iv.next.ls, %_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit93.ls ], [ %indvars.iv.ls.ph, %pfor.detach.ls.preheader ]
  %48 = shl nsw i64 %indvars.iv.ls, 10
  %49 = add nsw i64 %48, %.ls2
  %50 = add nsw i64 %49, 1024
  %cmp.i.ls = icmp sgt i64 %50, %.ls3
  %51 = trunc i64 %50 to i32
  %.sroa.speculated.ls = select i1 %cmp.i.ls, i32 %e.ls, i32 %51
  %ref.tmp21.sroa.0.0..sroa_idx.ls = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %g.coerce.ls, i64 %49, i32 0, i32 0
  %52 = bitcast double* %ref.tmp21.sroa.0.0..sroa_idx.ls to <2 x double>*
  %53 = load <2 x double>, <2 x double>* %52, align 8
  %ref.tmp21.sroa.8.0..sroa_idx102.ls = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %g.coerce.ls, i64 %49, i32 1, i32 0
  %54 = bitcast double* %ref.tmp21.sroa.8.0..sroa_idx102.ls to <2 x double>*
  %55 = load <2 x double>, <2 x double>* %54, align 8
  %56 = add nsw i64 %49, 1
  %57 = sext i32 %.sroa.speculated.ls to i64
  %cmp39.i57.ls = icmp slt i64 %56, %57
  br i1 %cmp39.i57.ls, label %for.body.lr.ph.i66.ls, label %_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit93.ls

for.body.lr.ph.i66.ls:                            ; preds = %pfor.detach.ls
  %58 = trunc i64 %indvars.iv.ls to i32
  %59 = mul i32 %58, -1024
  %60 = add i32 %59, %.ls1
  %61 = add i32 %60, %.sroa.speculated.ls
  %62 = zext i32 %61 to i64
  %63 = add nuw nsw i64 %62, 1
  %min.iters.check.ls = icmp ult i64 %63, 4
  br i1 %min.iters.check.ls, label %for.body.i92.ls.preheader, label %vector.ph.ls

vector.ph.ls:                                     ; preds = %for.body.lr.ph.i66.ls
  %64 = add i32 %61, 1
  %65 = and i32 %64, 3
  %n.mod.vf.ls = zext i32 %65 to i64
  %n.vec.ls = sub nsw i64 %63, %n.mod.vf.ls
  %minmax.ident.splat.ls = shufflevector <2 x double> %55, <2 x double> undef, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %minmax.ident.splat128.ls = shufflevector <2 x double> %55, <2 x double> undef, <4 x i32> zeroinitializer
  %minmax.ident.splat137.ls = shufflevector <2 x double> %53, <2 x double> undef, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %minmax.ident.splat146.ls = shufflevector <2 x double> %53, <2 x double> undef, <4 x i32> zeroinitializer
  br label %vector.body.ls

vector.body.ls:                                   ; preds = %vector.body.ls, %vector.ph.ls
  %index.ls = phi i64 [ 0, %vector.ph.ls ], [ %index.next.ls, %vector.body.ls ]
  %vec.phi.ls = phi <4 x double> [ %minmax.ident.splat.ls, %vector.ph.ls ], [ %76, %vector.body.ls ]
  %vec.phi118.ls = phi <4 x double> [ %minmax.ident.splat128.ls, %vector.ph.ls ], [ %74, %vector.body.ls ]
  %vec.phi119.ls = phi <4 x double> [ %minmax.ident.splat137.ls, %vector.ph.ls ], [ %72, %vector.body.ls ]
  %vec.phi120.ls = phi <4 x double> [ %minmax.ident.splat146.ls, %vector.ph.ls ], [ %70, %vector.body.ls ]
  %66 = add i64 %index.ls, %56
  %67 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %g.coerce.ls, i64 %66, i32 0, i32 0
  %68 = bitcast double* %67 to <16 x double>*
  %wide.vec.ls = load <16 x double>, <16 x double>* %68, align 8, !noalias !410
  %strided.vec.ls = shufflevector <16 x double> %wide.vec.ls, <16 x double> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec121.ls = shufflevector <16 x double> %wide.vec.ls, <16 x double> undef, <4 x i32> <i32 1, i32 5, i32 9, i32 13>
  %strided.vec122.ls = shufflevector <16 x double> %wide.vec.ls, <16 x double> undef, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %strided.vec123.ls = shufflevector <16 x double> %wide.vec.ls, <16 x double> undef, <4 x i32> <i32 3, i32 7, i32 11, i32 15>
  %69 = fcmp fast ogt <4 x double> %vec.phi120.ls, %strided.vec.ls
  %70 = select <4 x i1> %69, <4 x double> %strided.vec.ls, <4 x double> %vec.phi120.ls
  %71 = fcmp fast ogt <4 x double> %vec.phi119.ls, %strided.vec121.ls
  %72 = select <4 x i1> %71, <4 x double> %strided.vec121.ls, <4 x double> %vec.phi119.ls
  %73 = fcmp fast olt <4 x double> %vec.phi118.ls, %strided.vec122.ls
  %74 = select <4 x i1> %73, <4 x double> %strided.vec122.ls, <4 x double> %vec.phi118.ls
  %75 = fcmp fast olt <4 x double> %vec.phi.ls, %strided.vec123.ls
  %76 = select <4 x i1> %75, <4 x double> %strided.vec123.ls, <4 x double> %vec.phi.ls
  %index.next.ls = add i64 %index.ls, 4
  %77 = icmp eq i64 %index.next.ls, %n.vec.ls
  br i1 %77, label %middle.block.ls, label %vector.body.ls, !llvm.loop !413

middle.block.ls:                                  ; preds = %vector.body.ls
  %ind.end.ls = add i64 %n.vec.ls, %56
  %rdx.shuf147.ls = shufflevector <4 x double> %70, <4 x double> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %rdx.minmax.cmp148.ls = fcmp fast olt <4 x double> %70, %rdx.shuf147.ls
  %rdx.minmax.select149.ls = select <4 x i1> %rdx.minmax.cmp148.ls, <4 x double> %70, <4 x double> %rdx.shuf147.ls
  %rdx.shuf150.ls = shufflevector <4 x double> %rdx.minmax.select149.ls, <4 x double> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp151.ls = fcmp fast olt <4 x double> %rdx.minmax.select149.ls, %rdx.shuf150.ls
  %rdx.minmax.select152.ls = select <4 x i1> %rdx.minmax.cmp151.ls, <4 x double> %rdx.minmax.select149.ls, <4 x double> %rdx.shuf150.ls
  %rdx.shuf138.ls = shufflevector <4 x double> %72, <4 x double> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %rdx.minmax.cmp139.ls = fcmp fast olt <4 x double> %72, %rdx.shuf138.ls
  %rdx.minmax.select140.ls = select <4 x i1> %rdx.minmax.cmp139.ls, <4 x double> %72, <4 x double> %rdx.shuf138.ls
  %rdx.shuf141.ls = shufflevector <4 x double> %rdx.minmax.select140.ls, <4 x double> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp142.ls = fcmp fast olt <4 x double> %rdx.minmax.select140.ls, %rdx.shuf141.ls
  %rdx.minmax.select143.ls = select <4 x i1> %rdx.minmax.cmp142.ls, <4 x double> %rdx.minmax.select140.ls, <4 x double> %rdx.shuf141.ls
  %rdx.shuf129.ls = shufflevector <4 x double> %74, <4 x double> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %rdx.minmax.cmp130.ls = fcmp fast ogt <4 x double> %74, %rdx.shuf129.ls
  %rdx.minmax.select131.ls = select <4 x i1> %rdx.minmax.cmp130.ls, <4 x double> %74, <4 x double> %rdx.shuf129.ls
  %rdx.shuf132.ls = shufflevector <4 x double> %rdx.minmax.select131.ls, <4 x double> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp133.ls = fcmp fast ogt <4 x double> %rdx.minmax.select131.ls, %rdx.shuf132.ls
  %rdx.minmax.select134.ls = select <4 x i1> %rdx.minmax.cmp133.ls, <4 x double> %rdx.minmax.select131.ls, <4 x double> %rdx.shuf132.ls
  %rdx.shuf.ls = shufflevector <4 x double> %76, <4 x double> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %rdx.minmax.cmp.ls = fcmp fast ogt <4 x double> %76, %rdx.shuf.ls
  %rdx.minmax.select.ls = select <4 x i1> %rdx.minmax.cmp.ls, <4 x double> %76, <4 x double> %rdx.shuf.ls
  %rdx.shuf124.ls = shufflevector <4 x double> %rdx.minmax.select.ls, <4 x double> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp125.ls = fcmp fast ogt <4 x double> %rdx.minmax.select.ls, %rdx.shuf124.ls
  %rdx.minmax.select126.ls = select <4 x i1> %rdx.minmax.cmp125.ls, <4 x double> %rdx.minmax.select.ls, <4 x double> %rdx.shuf124.ls
  %cmp.n.ls = icmp eq i32 %65, 0
  %78 = shufflevector <4 x double> %rdx.minmax.select152.ls, <4 x double> %rdx.minmax.select143.ls, <2 x i32> <i32 0, i32 4>
  %79 = shufflevector <4 x double> %rdx.minmax.select134.ls, <4 x double> %rdx.minmax.select126.ls, <2 x i32> <i32 0, i32 4>
  br i1 %cmp.n.ls, label %_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit93.ls, label %for.body.i92.ls.preheader

for.body.i92.ls.preheader:                        ; preds = %middle.block.ls, %for.body.lr.ph.i66.ls
  %indvars.iv.i68.ls.ph = phi i64 [ %ind.end.ls, %middle.block.ls ], [ %56, %for.body.lr.ph.i66.ls ]
  %.ph = phi <2 x double> [ %78, %middle.block.ls ], [ %53, %for.body.lr.ph.i66.ls ]
  %.ph22 = phi <2 x double> [ %79, %middle.block.ls ], [ %55, %for.body.lr.ph.i66.ls ]
  br label %for.body.i92.ls

for.body.i92.ls:                                  ; preds = %for.body.i92.ls.preheader, %for.body.i92.ls
  %indvars.iv.i68.ls = phi i64 [ %indvars.iv.next.i89.ls, %for.body.i92.ls ], [ %indvars.iv.i68.ls.ph, %for.body.i92.ls.preheader ]
  %80 = phi <2 x double> [ %87, %for.body.i92.ls ], [ %.ph, %for.body.i92.ls.preheader ]
  %81 = phi <2 x double> [ %89, %for.body.i92.ls ], [ %.ph22, %for.body.i92.ls.preheader ]
  %agg.tmp1.sroa.0.0..sroa_idx.i73.ls = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %g.coerce.ls, i64 %indvars.iv.i68.ls, i32 0, i32 0
  %82 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i73.ls to <2 x double>*
  %83 = load <2 x double>, <2 x double>* %82, align 8, !noalias !410
  %agg.tmp1.sroa.3.0..sroa_idx36.i77.ls = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %g.coerce.ls, i64 %indvars.iv.i68.ls, i32 1, i32 0
  %84 = bitcast double* %agg.tmp1.sroa.3.0..sroa_idx36.i77.ls to <2 x double>*
  %85 = load <2 x double>, <2 x double>* %84, align 8, !noalias !410
  %86 = fcmp fast ogt <2 x double> %80, %83
  %87 = select <2 x i1> %86, <2 x double> %83, <2 x double> %80
  %88 = fcmp fast olt <2 x double> %81, %85
  %89 = select <2 x i1> %88, <2 x double> %85, <2 x double> %81
  %indvars.iv.next.i89.ls = add nsw i64 %indvars.iv.i68.ls, 1
  %lftr.wideiv.i90.ls = trunc i64 %indvars.iv.next.i89.ls to i32
  %exitcond.i91.ls = icmp eq i32 %.sroa.speculated.ls, %lftr.wideiv.i90.ls
  br i1 %exitcond.i91.ls, label %_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit93.ls, label %for.body.i92.ls, !llvm.loop !414

_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit93.ls: ; preds = %for.body.i92.ls, %middle.block.ls, %pfor.detach.ls
  %90 = phi <2 x double> [ %53, %pfor.detach.ls ], [ %78, %middle.block.ls ], [ %87, %for.body.i92.ls ]
  %91 = phi <2 x double> [ %55, %pfor.detach.ls ], [ %79, %middle.block.ls ], [ %89, %for.body.i92.ls ]
  %ref.tmp21.sroa.0.0..sroa_idx95.ls = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %.ls4, i64 %indvars.iv.ls, i32 0, i32 0
  %92 = bitcast double* %ref.tmp21.sroa.0.0..sroa_idx95.ls to <2 x double>*
  store <2 x double> %90, <2 x double>* %92, align 8
  %ref.tmp21.sroa.8.16..sroa_idx.ls = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %.ls4, i64 %indvars.iv.ls, i32 1, i32 0
  %93 = bitcast double* %ref.tmp21.sroa.8.16..sroa_idx.ls to <2 x double>*
  store <2 x double> %91, <2 x double>* %93, align 8
  %94 = icmp ult i64 %indvars.iv.ls, %end.ls
  %indvars.iv.next.ls = add nuw nsw i64 %indvars.iv.ls, 1
  br i1 %94, label %pfor.detach.ls, label %pfor.cond.cleanup.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.ls(i64 %indvars.iv94.start.ls, i64 %end.ls, i64 %.ls, %struct.vertex** nocapture readonly align 1 %S.ls, %"struct.std::pair.6"* nocapture align 1 %.ls1) unnamed_addr #15 align 2 {
pfor.detach.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount3 = sub i64 %end.ls, %indvars.iv94.start.ls
  %9 = icmp ugt i64 %itercount3, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv94.ls.ph = phi i64 [ %indvars.iv94.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount5 = phi i64 [ %itercount3, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv94.ls.dac4 = phi i64 [ %indvars.iv94.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount5, 1
  %miditer = add nuw nsw i64 %indvars.iv94.ls.dac4, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split6, label %.split.split

.split6:                                          ; preds = %16
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.ls_.split.cilk(i64 %indvars.iv94.ls.dac4, i64 %miditer, i64 %.ls, %struct.vertex** %S.ls, %"struct.std::pair.6"* %.ls1)
  br label %.split.split

.split.split:                                     ; preds = %.split6, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.loopexit136.ls:                 ; preds = %pfor.detach.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit136.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit136.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %pfor.detach.ls
  %indvars.iv94.ls = phi i64 [ %indvars.iv.next95.ls, %pfor.detach.ls ], [ %indvars.iv94.ls.ph, %pfor.detach.ls.preheader ]
  %arrayidx.ls = getelementptr inbounds %struct.vertex*, %struct.vertex** %S.ls, i64 %indvars.iv94.ls
  %48 = bitcast %struct.vertex** %arrayidx.ls to i64*
  %49 = load i64, i64* %48, align 8, !tbaa !53
  %first2.i.ls = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %.ls1, i64 %indvars.iv94.ls, i32 0
  store i32 0, i32* %first2.i.ls, align 8, !tbaa !109
  %second4.i.ls = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %.ls1, i64 %indvars.iv94.ls, i32 1
  %50 = bitcast %struct.vertex** %second4.i.ls to i64*
  store i64 %49, i64* %50, align 8, !tbaa !111
  %51 = icmp ult i64 %indvars.iv94.ls, %end.ls
  %indvars.iv.next95.ls = add nuw nsw i64 %indvars.iv94.ls, 1
  br i1 %51, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit136.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.us.ls(i64 %indvars.iv90.start.ls, i64 %end.ls, i64 %.ls, %struct.vertex** nocapture readonly align 1 %S.ls, double %add.i.neg.ls, double %.ls1, i32 %sub3.i.ls, double %add9.i.neg.ls, i1 %min.iters.check.ls, i32 %n.vec.ls, i1 %cmp.n.ls, i32 %logdivs.ls, %"struct.std::pair.6"* nocapture align 1 %.ls2) unnamed_addr #15 align 2 {
pfor.detach.us.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.us.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.us.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.us.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.us.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount7 = sub i64 %end.ls, %indvars.iv90.start.ls
  %9 = icmp ugt i64 %itercount7, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.us.preheader.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount9 = phi i64 [ %itercount7, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv90.ls.dac8 = phi i64 [ %indvars.iv90.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount9, 1
  %miditer = add nuw nsw i64 %indvars.iv90.ls.dac8, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split10, label %.split.split

.split10:                                         ; preds = %16
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.us.ls_.split.cilk(i64 %indvars.iv90.ls.dac8, i64 %miditer, i64 %.ls, %struct.vertex** %S.ls, double %add.i.neg.ls, double %.ls1, i32 %sub3.i.ls, double %add9.i.neg.ls, i1 %min.iters.check.ls, i32 %n.vec.ls, i1 %cmp.n.ls, i32 %logdivs.ls, %"struct.std::pair.6"* %.ls2)
  br label %.split.split

.split.split:                                     ; preds = %.split10, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.us.preheader.ls.split._crit_edge

pfor.detach.us.preheader.ls.split._crit_edge:     ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv90.ls.dac.lcssa = phi i64 [ %indvars.iv90.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br i1 %min.iters.check.ls, label %pfor.detach.us.ls.us.preheader, label %pfor.detach.us.ls.preheader

pfor.detach.us.ls.preheader:                      ; preds = %pfor.detach.us.preheader.ls.split._crit_edge
  br label %pfor.detach.us.ls

pfor.detach.us.ls.us.preheader:                   ; preds = %pfor.detach.us.preheader.ls.split._crit_edge
  br label %pfor.detach.us.ls.us

pfor.detach.us.ls.us:                             ; preds = %pfor.detach.us.ls.us.preheader, %_Z11ptFindBlock8_point2dIdEdiS0_.exit.loopexit.us.ls.loopexit.us
  %indvars.iv90.ls.us = phi i64 [ %indvars.iv.next91.ls.us, %_Z11ptFindBlock8_point2dIdEdiS0_.exit.loopexit.us.ls.loopexit.us ], [ %indvars.iv90.ls.dac.lcssa, %pfor.detach.us.ls.us.preheader ]
  %arrayidx.us.ls.us = getelementptr inbounds %struct.vertex*, %struct.vertex** %S.ls, i64 %indvars.iv90.ls.us
  %22 = load %struct.vertex*, %struct.vertex** %arrayidx.us.ls.us, align 8, !tbaa !53
  %agg.tmp9.sroa.0.0..sroa_idx.us.ls.us = getelementptr inbounds %struct.vertex, %struct.vertex* %22, i64 0, i32 1, i32 0
  %agg.tmp9.sroa.0.0.copyload.us.ls.us = load double, double* %agg.tmp9.sroa.0.0..sroa_idx.us.ls.us, align 8
  %agg.tmp9.sroa.2.0..sroa_idx47.us.ls.us = getelementptr inbounds %struct.vertex, %struct.vertex* %22, i64 0, i32 1, i32 1
  %agg.tmp9.sroa.2.0.copyload.us.ls.us = load double, double* %agg.tmp9.sroa.2.0..sroa_idx47.us.ls.us, align 8
  %sub.i76.us.ls.us = fadd fast double %agg.tmp9.sroa.0.0.copyload.us.ls.us, %add.i.neg.ls
  %23 = fmul fast double %sub.i76.us.ls.us, %.ls1
  %conv.i.us.ls.us = fptosi double %23 to i32
  %cmp.i.i.us.ls.us = icmp sgt i32 %conv.i.us.ls.us, %sub3.i.ls
  %.sroa.speculated42.i.us.ls.us = select i1 %cmp.i.i.us.ls.us, i32 %sub3.i.ls, i32 %conv.i.us.ls.us
  %sub6.i.us.ls.us = fadd fast double %agg.tmp9.sroa.2.0.copyload.us.ls.us, %add9.i.neg.ls
  %24 = fmul fast double %sub6.i.us.ls.us, %.ls1
  %conv8.i.us.ls.us = fptosi double %24 to i32
  %cmp.i34.i.us.ls.us = icmp sgt i32 %conv8.i.us.ls.us, %sub3.i.ls
  %.sroa.speculated.i.us.ls.us = select i1 %cmp.i34.i.us.ls.us, i32 %sub3.i.ls, i32 %conv8.i.us.ls.us
  br label %for.body.i.us.ls.us

for.body.i.us.ls.us:                              ; preds = %for.body.i.us.ls.us, %pfor.detach.us.ls.us
  %result.049.i.us.ls.us = phi i32 [ %add17.i.us.ls.us, %for.body.i.us.ls.us ], [ 0, %pfor.detach.us.ls.us ]
  %i.048.i.us.ls.us = phi i32 [ %add15.i.us.ls.us, %for.body.i.us.ls.us ], [ 0, %pfor.detach.us.ls.us ]
  %shl12.i.us.ls.us = shl i32 1, %i.048.i.us.ls.us
  %and.i.us.ls.us = and i32 %shl12.i.us.ls.us, %.sroa.speculated42.i.us.ls.us
  %shl13.i.us.ls.us = shl i32 %and.i.us.ls.us, %i.048.i.us.ls.us
  %add.i77.us.ls.us = add nsw i32 %shl13.i.us.ls.us, %result.049.i.us.ls.us
  %and14.i.us.ls.us = and i32 %shl12.i.us.ls.us, %.sroa.speculated.i.us.ls.us
  %add15.i.us.ls.us = add nuw nsw i32 %i.048.i.us.ls.us, 1
  %shl16.i.us.ls.us = shl i32 %and14.i.us.ls.us, %add15.i.us.ls.us
  %add17.i.us.ls.us = add nsw i32 %add.i77.us.ls.us, %shl16.i.us.ls.us
  %exitcond.i.us.ls.us = icmp eq i32 %add15.i.us.ls.us, %logdivs.ls
  br i1 %exitcond.i.us.ls.us, label %_Z11ptFindBlock8_point2dIdEdiS0_.exit.loopexit.us.ls.loopexit.us, label %for.body.i.us.ls.us, !llvm.loop !415

_Z11ptFindBlock8_point2dIdEdiS0_.exit.loopexit.us.ls.loopexit.us: ; preds = %for.body.i.us.ls.us
  %25 = ptrtoint %struct.vertex* %22 to i64
  %first2.i.us.ls.us = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %.ls2, i64 %indvars.iv90.ls.us, i32 0
  store i32 %add17.i.us.ls.us, i32* %first2.i.us.ls.us, align 8, !tbaa !109
  %second4.i.us.ls.us = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %.ls2, i64 %indvars.iv90.ls.us, i32 1
  %26 = bitcast %struct.vertex** %second4.i.us.ls.us to i64*
  store i64 %25, i64* %26, align 8, !tbaa !111
  %27 = icmp ult i64 %indvars.iv90.ls.us, %end.ls
  %indvars.iv.next91.ls.us = add nuw nsw i64 %indvars.iv90.ls.us, 1
  br i1 %27, label %pfor.detach.us.ls.us, label %pfor.cond.cleanup.loopexit.ls

pfor.cond.cleanup.loopexit.ls:                    ; preds = %_Z11ptFindBlock8_point2dIdEdiS0_.exit.loopexit.us.ls, %_Z11ptFindBlock8_point2dIdEdiS0_.exit.loopexit.us.ls.loopexit.us
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %29 = load atomic i32, i32* %28 acquire, align 8
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %32 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %34 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %33, i16* nonnull %34) #2
  %35 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %36 = call i8* @llvm.frameaddress(i32 0) #2
  %37 = getelementptr inbounds [5 x i8*], [5 x i8*]* %35, i64 0, i64 0
  store volatile i8* %36, i8** %37, align 8
  %38 = call i8* @llvm.stacksave() #2
  %39 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %38, i8** %39, align 8
  %40 = bitcast [5 x i8*]* %35 to i8*
  %41 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %40) #24
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %43 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %43, i64 0, i32 12, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %44, align 8
  %47 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %48 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %47, i64 0, i32 9
  %51 = bitcast %struct.__cilkrts_stack_frame** %50 to i64*
  store atomic i64 %49, i64* %51 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %52 = load atomic i32, i32* %28 acquire, align 8
  %53 = icmp eq i32 %52, 16777216
  br i1 %53, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.us.ls:                                ; preds = %pfor.detach.us.ls.preheader, %_Z11ptFindBlock8_point2dIdEdiS0_.exit.loopexit.us.ls
  %indvars.iv90.ls = phi i64 [ %indvars.iv.next91.ls, %_Z11ptFindBlock8_point2dIdEdiS0_.exit.loopexit.us.ls ], [ %indvars.iv90.ls.dac.lcssa, %pfor.detach.us.ls.preheader ]
  %arrayidx.us.ls = getelementptr inbounds %struct.vertex*, %struct.vertex** %S.ls, i64 %indvars.iv90.ls
  %54 = load %struct.vertex*, %struct.vertex** %arrayidx.us.ls, align 8, !tbaa !53
  %agg.tmp9.sroa.0.0..sroa_idx.us.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %54, i64 0, i32 1, i32 0
  %agg.tmp9.sroa.0.0.copyload.us.ls = load double, double* %agg.tmp9.sroa.0.0..sroa_idx.us.ls, align 8
  %agg.tmp9.sroa.2.0..sroa_idx47.us.ls = getelementptr inbounds %struct.vertex, %struct.vertex* %54, i64 0, i32 1, i32 1
  %agg.tmp9.sroa.2.0.copyload.us.ls = load double, double* %agg.tmp9.sroa.2.0..sroa_idx47.us.ls, align 8
  %sub.i76.us.ls = fadd fast double %agg.tmp9.sroa.0.0.copyload.us.ls, %add.i.neg.ls
  %55 = fmul fast double %sub.i76.us.ls, %.ls1
  %conv.i.us.ls = fptosi double %55 to i32
  %cmp.i.i.us.ls = icmp sgt i32 %conv.i.us.ls, %sub3.i.ls
  %.sroa.speculated42.i.us.ls = select i1 %cmp.i.i.us.ls, i32 %sub3.i.ls, i32 %conv.i.us.ls
  %sub6.i.us.ls = fadd fast double %agg.tmp9.sroa.2.0.copyload.us.ls, %add9.i.neg.ls
  %56 = fmul fast double %sub6.i.us.ls, %.ls1
  %conv8.i.us.ls = fptosi double %56 to i32
  %cmp.i34.i.us.ls = icmp sgt i32 %conv8.i.us.ls, %sub3.i.ls
  %.sroa.speculated.i.us.ls = select i1 %cmp.i34.i.us.ls, i32 %sub3.i.ls, i32 %conv8.i.us.ls
  %broadcast.splatinsert.ls = insertelement <8 x i32> undef, i32 %.sroa.speculated42.i.us.ls, i32 0
  %broadcast.splat.ls = shufflevector <8 x i32> %broadcast.splatinsert.ls, <8 x i32> undef, <8 x i32> zeroinitializer
  %broadcast.splatinsert112.ls = insertelement <8 x i32> undef, i32 %.sroa.speculated.i.us.ls, i32 0
  %broadcast.splat113.ls = shufflevector <8 x i32> %broadcast.splatinsert112.ls, <8 x i32> undef, <8 x i32> zeroinitializer
  br label %vector.body.ls

vector.body.ls:                                   ; preds = %vector.body.ls, %pfor.detach.us.ls
  %index.ls = phi i32 [ 0, %pfor.detach.us.ls ], [ %index.next.ls, %vector.body.ls ]
  %vec.phi.ls = phi <8 x i32> [ zeroinitializer, %pfor.detach.us.ls ], [ %85, %vector.body.ls ]
  %vec.phi100.ls = phi <8 x i32> [ zeroinitializer, %pfor.detach.us.ls ], [ %86, %vector.body.ls ]
  %vec.phi101.ls = phi <8 x i32> [ zeroinitializer, %pfor.detach.us.ls ], [ %87, %vector.body.ls ]
  %vec.phi102.ls = phi <8 x i32> [ zeroinitializer, %pfor.detach.us.ls ], [ %88, %vector.body.ls ]
  %vec.ind.ls = phi <8 x i32> [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, %pfor.detach.us.ls ], [ %vec.ind.next.ls, %vector.body.ls ]
  %step.add.ls = add <8 x i32> %vec.ind.ls, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %step.add103.ls = add <8 x i32> %vec.ind.ls, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %step.add104.ls = add <8 x i32> %vec.ind.ls, <i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24>
  %57 = shl <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %vec.ind.ls
  %58 = shl <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %step.add.ls
  %59 = shl <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %step.add103.ls
  %60 = shl <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %step.add104.ls
  %61 = and <8 x i32> %57, %broadcast.splat.ls
  %62 = and <8 x i32> %58, %broadcast.splat.ls
  %63 = and <8 x i32> %59, %broadcast.splat.ls
  %64 = and <8 x i32> %60, %broadcast.splat.ls
  %65 = shl <8 x i32> %61, %vec.ind.ls
  %66 = shl <8 x i32> %62, %step.add.ls
  %67 = shl <8 x i32> %63, %step.add103.ls
  %68 = shl <8 x i32> %64, %step.add104.ls
  %69 = add nsw <8 x i32> %65, %vec.phi.ls
  %70 = add nsw <8 x i32> %66, %vec.phi100.ls
  %71 = add nsw <8 x i32> %67, %vec.phi101.ls
  %72 = add nsw <8 x i32> %68, %vec.phi102.ls
  %73 = and <8 x i32> %57, %broadcast.splat113.ls
  %74 = and <8 x i32> %58, %broadcast.splat113.ls
  %75 = and <8 x i32> %59, %broadcast.splat113.ls
  %76 = and <8 x i32> %60, %broadcast.splat113.ls
  %77 = add nuw nsw <8 x i32> %vec.ind.ls, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %78 = add <8 x i32> %vec.ind.ls, <i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9>
  %79 = add <8 x i32> %vec.ind.ls, <i32 17, i32 17, i32 17, i32 17, i32 17, i32 17, i32 17, i32 17>
  %80 = add <8 x i32> %vec.ind.ls, <i32 25, i32 25, i32 25, i32 25, i32 25, i32 25, i32 25, i32 25>
  %81 = shl <8 x i32> %73, %77
  %82 = shl <8 x i32> %74, %78
  %83 = shl <8 x i32> %75, %79
  %84 = shl <8 x i32> %76, %80
  %85 = add nsw <8 x i32> %69, %81
  %86 = add nsw <8 x i32> %70, %82
  %87 = add nsw <8 x i32> %71, %83
  %88 = add nsw <8 x i32> %72, %84
  %index.next.ls = add i32 %index.ls, 32
  %vec.ind.next.ls = add <8 x i32> %vec.ind.ls, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %89 = icmp eq i32 %index.next.ls, %n.vec.ls
  br i1 %89, label %middle.block.ls, label %vector.body.ls, !llvm.loop !416

middle.block.ls:                                  ; preds = %vector.body.ls
  %90 = ptrtoint %struct.vertex* %54 to i64
  %bin.rdx.ls = add <8 x i32> %86, %85
  %bin.rdx120.ls = add <8 x i32> %bin.rdx.ls, %87
  %bin.rdx121.ls = add <8 x i32> %bin.rdx120.ls, %88
  %rdx.shuf.ls = shufflevector <8 x i32> %bin.rdx121.ls, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx122.ls = add <8 x i32> %rdx.shuf.ls, %bin.rdx121.ls
  %rdx.shuf123.ls = shufflevector <8 x i32> %bin.rdx122.ls, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx124.ls = add <8 x i32> %rdx.shuf123.ls, %bin.rdx122.ls
  %rdx.shuf125.ls = shufflevector <8 x i32> %bin.rdx124.ls, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx126.ls = add <8 x i32> %rdx.shuf125.ls, %bin.rdx124.ls
  %91 = extractelement <8 x i32> %bin.rdx126.ls, i32 0
  br i1 %cmp.n.ls, label %_Z11ptFindBlock8_point2dIdEdiS0_.exit.loopexit.us.ls, label %for.body.i.us.ls.preheader

for.body.i.us.ls.preheader:                       ; preds = %middle.block.ls
  br label %for.body.i.us.ls

for.body.i.us.ls:                                 ; preds = %for.body.i.us.ls.preheader, %for.body.i.us.ls
  %result.049.i.us.ls = phi i32 [ %add17.i.us.ls, %for.body.i.us.ls ], [ %91, %for.body.i.us.ls.preheader ]
  %i.048.i.us.ls = phi i32 [ %add15.i.us.ls, %for.body.i.us.ls ], [ %n.vec.ls, %for.body.i.us.ls.preheader ]
  %shl12.i.us.ls = shl i32 1, %i.048.i.us.ls
  %and.i.us.ls = and i32 %shl12.i.us.ls, %.sroa.speculated42.i.us.ls
  %shl13.i.us.ls = shl i32 %and.i.us.ls, %i.048.i.us.ls
  %add.i77.us.ls = add nsw i32 %shl13.i.us.ls, %result.049.i.us.ls
  %and14.i.us.ls = and i32 %shl12.i.us.ls, %.sroa.speculated.i.us.ls
  %add15.i.us.ls = add nuw nsw i32 %i.048.i.us.ls, 1
  %shl16.i.us.ls = shl i32 %and14.i.us.ls, %add15.i.us.ls
  %add17.i.us.ls = add nsw i32 %add.i77.us.ls, %shl16.i.us.ls
  %exitcond.i.us.ls = icmp eq i32 %add15.i.us.ls, %logdivs.ls
  br i1 %exitcond.i.us.ls, label %_Z11ptFindBlock8_point2dIdEdiS0_.exit.loopexit.us.ls, label %for.body.i.us.ls, !llvm.loop !415

_Z11ptFindBlock8_point2dIdEdiS0_.exit.loopexit.us.ls: ; preds = %for.body.i.us.ls, %middle.block.ls
  %add17.i.us.lcssa.ls = phi i32 [ %91, %middle.block.ls ], [ %add17.i.us.ls, %for.body.i.us.ls ]
  %first2.i.us.ls = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %.ls2, i64 %indvars.iv90.ls, i32 0
  store i32 %add17.i.us.lcssa.ls, i32* %first2.i.us.ls, align 8, !tbaa !109
  %second4.i.us.ls = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %.ls2, i64 %indvars.iv90.ls, i32 1
  %92 = bitcast %struct.vertex** %second4.i.us.ls to i64*
  store i64 %90, i64* %92, align 8, !tbaa !111
  %93 = icmp ult i64 %indvars.iv90.ls, %end.ls
  %indvars.iv.next91.ls = add nuw nsw i64 %indvars.iv90.ls, 1
  br i1 %93, label %pfor.detach.us.ls, label %pfor.cond.cleanup.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach30.ls(i64 %indvars.iv.start.ls, i64 %end.ls, i64 %.ls, %"struct.std::pair.6"* nocapture readonly align 1 %.ls1, %struct.vertex** nocapture align 1 %S.ls) unnamed_addr #15 align 2 {
pfor.detach30.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach30.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach30.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach30.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach30.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount3 = sub i64 %end.ls, %indvars.iv.start.ls
  %9 = icmp ugt i64 %itercount3, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach30.lr.ph.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount5 = phi i64 [ %itercount3, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv.ls.dac4 = phi i64 [ %indvars.iv.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount5, 1
  %miditer = add nuw nsw i64 %indvars.iv.ls.dac4, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split6, label %.split.split

.split6:                                          ; preds = %16
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach30.ls_.split.cilk(i64 %indvars.iv.ls.dac4, i64 %miditer, i64 %.ls, %"struct.std::pair.6"* %.ls1, %struct.vertex** %S.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split6, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach30.lr.ph.ls.split._crit_edge

pfor.detach30.lr.ph.ls.split._crit_edge:          ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv.ls.dac.lcssa = phi i64 [ %indvars.iv.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  %22 = icmp ugt i64 %indvars.iv.ls.dac.lcssa, %end.ls
  %umax = select i1 %22, i64 %indvars.iv.ls.dac.lcssa, i64 %end.ls
  %23 = add i64 %umax, 1
  %24 = sub i64 %23, %indvars.iv.ls.dac.lcssa
  %min.iters.check = icmp ult i64 %24, 17
  br i1 %min.iters.check, label %pfor.detach30.ls.preheader, label %vector.memcheck

pfor.detach30.ls.preheader:                       ; preds = %vector.body, %vector.memcheck, %pfor.detach30.lr.ph.ls.split._crit_edge
  %indvars.iv.ls.ph = phi i64 [ %indvars.iv.ls.dac.lcssa, %vector.memcheck ], [ %indvars.iv.ls.dac.lcssa, %pfor.detach30.lr.ph.ls.split._crit_edge ], [ %ind.end, %vector.body ]
  br label %pfor.detach30.ls

vector.memcheck:                                  ; preds = %pfor.detach30.lr.ph.ls.split._crit_edge
  %scevgep = getelementptr %struct.vertex*, %struct.vertex** %S.ls, i64 %indvars.iv.ls.dac.lcssa
  %25 = icmp ugt i64 %indvars.iv.ls.dac.lcssa, %end.ls
  %umax2 = select i1 %25, i64 %indvars.iv.ls.dac.lcssa, i64 %end.ls
  %26 = add i64 %umax2, 1
  %scevgep3 = getelementptr %struct.vertex*, %struct.vertex** %S.ls, i64 %26
  %scevgep5 = getelementptr %"struct.std::pair.6", %"struct.std::pair.6"* %.ls1, i64 %indvars.iv.ls.dac.lcssa, i32 1
  %scevgep7 = getelementptr %"struct.std::pair.6", %"struct.std::pair.6"* %.ls1, i64 %26
  %27 = bitcast %"struct.std::pair.6"* %scevgep7 to %struct.vertex**
  %bound0 = icmp ult %struct.vertex** %scevgep, %27
  %bound1 = icmp ult %struct.vertex** %scevgep5, %scevgep3
  %memcheck.conflict = and i1 %bound0, %bound1
  br i1 %memcheck.conflict, label %pfor.detach30.ls.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.mod.vf = and i64 %24, 15
  %28 = icmp eq i64 %n.mod.vf, 0
  %29 = select i1 %28, i64 16, i64 %n.mod.vf
  %n.vec = sub i64 %24, %29
  %ind.end = add i64 %indvars.iv.ls.dac.lcssa, %n.vec
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %offset.idx = add i64 %indvars.iv.ls.dac.lcssa, %index
  %30 = add i64 %indvars.iv.ls.dac.lcssa, %index
  %31 = add i64 %offset.idx, 4
  %32 = add i64 %offset.idx, 8
  %33 = add i64 %offset.idx, 12
  %34 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %.ls1, i64 %30, i32 1
  %35 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %.ls1, i64 %31, i32 1
  %36 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %.ls1, i64 %32, i32 1
  %37 = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %.ls1, i64 %33, i32 1
  %38 = bitcast %struct.vertex** %34 to <8 x i64>*
  %39 = bitcast %struct.vertex** %35 to <8 x i64>*
  %40 = bitcast %struct.vertex** %36 to <8 x i64>*
  %41 = bitcast %struct.vertex** %37 to <8 x i64>*
  %wide.vec = load <8 x i64>, <8 x i64>* %38, align 8, !tbaa !111
  %wide.vec12 = load <8 x i64>, <8 x i64>* %39, align 8, !tbaa !111
  %wide.vec13 = load <8 x i64>, <8 x i64>* %40, align 8, !tbaa !111
  %wide.vec14 = load <8 x i64>, <8 x i64>* %41, align 8, !tbaa !111
  %strided.vec = shufflevector <8 x i64> %wide.vec, <8 x i64> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec15 = shufflevector <8 x i64> %wide.vec12, <8 x i64> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec16 = shufflevector <8 x i64> %wide.vec13, <8 x i64> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec17 = shufflevector <8 x i64> %wide.vec14, <8 x i64> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %42 = getelementptr inbounds %struct.vertex*, %struct.vertex** %S.ls, i64 %30
  %43 = bitcast %struct.vertex** %42 to <4 x i64>*
  store <4 x i64> %strided.vec, <4 x i64>* %43, align 8, !tbaa !53, !alias.scope !417, !noalias !420
  %44 = getelementptr %struct.vertex*, %struct.vertex** %42, i64 4
  %45 = bitcast %struct.vertex** %44 to <4 x i64>*
  store <4 x i64> %strided.vec15, <4 x i64>* %45, align 8, !tbaa !53, !alias.scope !417, !noalias !420
  %46 = getelementptr %struct.vertex*, %struct.vertex** %42, i64 8
  %47 = bitcast %struct.vertex** %46 to <4 x i64>*
  store <4 x i64> %strided.vec16, <4 x i64>* %47, align 8, !tbaa !53, !alias.scope !417, !noalias !420
  %48 = getelementptr %struct.vertex*, %struct.vertex** %42, i64 12
  %49 = bitcast %struct.vertex** %48 to <4 x i64>*
  store <4 x i64> %strided.vec17, <4 x i64>* %49, align 8, !tbaa !53, !alias.scope !417, !noalias !420
  %index.next = add i64 %index, 16
  %50 = icmp eq i64 %index.next, %n.vec
  br i1 %50, label %pfor.detach30.ls.preheader, label %vector.body, !llvm.loop !422

pfor.cond.cleanup29.loopexit.ls:                  ; preds = %pfor.detach30.ls
  %51 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %52 = load atomic i32, i32* %51 acquire, align 8
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup29.loopexit.ls
  %55 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %56 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %57 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %56, i16* nonnull %57) #2
  %58 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %59 = call i8* @llvm.frameaddress(i32 0) #2
  %60 = getelementptr inbounds [5 x i8*], [5 x i8*]* %58, i64 0, i64 0
  store volatile i8* %59, i8** %60, align 8
  %61 = call i8* @llvm.stacksave() #2
  %62 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %61, i8** %62, align 8
  %63 = bitcast [5 x i8*]* %58 to i8*
  %64 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %63) #24
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup29.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %66 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %67 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %66, i64 0, i32 12, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  store i64 %69, i64* %67, align 8
  %70 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %71 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %70, i64 0, i32 9
  %74 = bitcast %struct.__cilkrts_stack_frame** %73 to i64*
  store atomic i64 %72, i64* %74 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %75 = load atomic i32, i32* %51 acquire, align 8
  %76 = icmp eq i32 %75, 16777216
  br i1 %76, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach30.ls:                                 ; preds = %pfor.detach30.ls.preheader, %pfor.detach30.ls
  %indvars.iv.ls = phi i64 [ %indvars.iv.next.ls, %pfor.detach30.ls ], [ %indvars.iv.ls.ph, %pfor.detach30.ls.preheader ]
  %second.ls = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %.ls1, i64 %indvars.iv.ls, i32 1
  %77 = bitcast %struct.vertex** %second.ls to i64*
  %78 = load i64, i64* %77, align 8, !tbaa !111
  %arrayidx39.ls = getelementptr inbounds %struct.vertex*, %struct.vertex** %S.ls, i64 %indvars.iv.ls
  %79 = bitcast %struct.vertex** %arrayidx39.ls to i64*
  store i64 %78, i64* %79, align 8, !tbaa !53
  %80 = icmp ult i64 %indvars.iv.ls, %end.ls
  %indvars.iv.next.ls = add nuw nsw i64 %indvars.iv.ls, 1
  br i1 %80, label %pfor.detach30.ls, label %pfor.cond.cleanup29.loopexit.ls, !llvm.loop !423
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach34.ls(i64 %__begin25.0181.start.ls, i64 %end.ls, i64 %.ls, i32* nocapture align 1 %bucketOffsets.ls, i32 %conv40.ls) unnamed_addr #15 {
pfor.detach34.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach34.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach34.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach34.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach34.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount2 = sub i64 %end.ls, %__begin25.0181.start.ls
  %9 = icmp ugt i64 %itercount2, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach34.lr.ph.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount4 = phi i64 [ %itercount2, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin25.0181.ls.dac3 = phi i64 [ %__begin25.0181.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount4, 1
  %miditer = add nuw nsw i64 %__begin25.0181.ls.dac3, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split5, label %.split.split

.split5:                                          ; preds = %16
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach34.ls_.split.cilk(i64 %__begin25.0181.ls.dac3, i64 %miditer, i64 %.ls, i32* %bucketOffsets.ls, i32 %conv40.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split5, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach34.lr.ph.ls.split._crit_edge

pfor.detach34.lr.ph.ls.split._crit_edge:          ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin25.0181.ls.dac.lcssa = phi i64 [ %__begin25.0181.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  %22 = icmp ugt i64 %__begin25.0181.ls.dac.lcssa, %end.ls
  %umax = select i1 %22, i64 %__begin25.0181.ls.dac.lcssa, i64 %end.ls
  %23 = add i64 %umax, 1
  %24 = sub i64 %23, %__begin25.0181.ls.dac.lcssa
  %min.iters.check = icmp ult i64 %24, 32
  br i1 %min.iters.check, label %pfor.detach34.ls.preheader, label %vector.ph

pfor.detach34.ls.preheader:                       ; preds = %middle.block, %pfor.detach34.lr.ph.ls.split._crit_edge
  %__begin25.0181.ls.ph = phi i64 [ %__begin25.0181.ls.dac.lcssa, %pfor.detach34.lr.ph.ls.split._crit_edge ], [ %ind.end, %middle.block ]
  br label %pfor.detach34.ls

vector.ph:                                        ; preds = %pfor.detach34.lr.ph.ls.split._crit_edge
  %n.vec = and i64 %24, -32
  %ind.end = add i64 %__begin25.0181.ls.dac.lcssa, %n.vec
  %broadcast.splatinsert4 = insertelement <8 x i32> undef, i32 %conv40.ls, i32 0
  %broadcast.splat5 = shufflevector <8 x i32> %broadcast.splatinsert4, <8 x i32> undef, <8 x i32> zeroinitializer
  %broadcast.splatinsert6 = insertelement <8 x i32> undef, i32 %conv40.ls, i32 0
  %broadcast.splat7 = shufflevector <8 x i32> %broadcast.splatinsert6, <8 x i32> undef, <8 x i32> zeroinitializer
  %broadcast.splatinsert8 = insertelement <8 x i32> undef, i32 %conv40.ls, i32 0
  %broadcast.splat9 = shufflevector <8 x i32> %broadcast.splatinsert8, <8 x i32> undef, <8 x i32> zeroinitializer
  %broadcast.splatinsert10 = insertelement <8 x i32> undef, i32 %conv40.ls, i32 0
  %broadcast.splat11 = shufflevector <8 x i32> %broadcast.splatinsert10, <8 x i32> undef, <8 x i32> zeroinitializer
  %25 = add i64 %n.vec, -32
  %26 = lshr exact i64 %25, 5
  %27 = add nuw nsw i64 %26, 1
  %xtraiter = and i64 %27, 7
  %28 = icmp ult i64 %25, 224
  br i1 %28, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nsw i64 %27, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.7, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.7, %vector.body ]
  %29 = add i64 %__begin25.0181.ls.dac.lcssa, %index
  %30 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %29
  %31 = bitcast i32* %30 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %31, align 4, !tbaa !59
  %32 = getelementptr i32, i32* %30, i64 8
  %33 = bitcast i32* %32 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %33, align 4, !tbaa !59
  %34 = getelementptr i32, i32* %30, i64 16
  %35 = bitcast i32* %34 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %35, align 4, !tbaa !59
  %36 = getelementptr i32, i32* %30, i64 24
  %37 = bitcast i32* %36 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %37, align 4, !tbaa !59
  %index.next = or i64 %index, 32
  %38 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next
  %39 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %38
  %40 = bitcast i32* %39 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %40, align 4, !tbaa !59
  %41 = getelementptr i32, i32* %39, i64 8
  %42 = bitcast i32* %41 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %42, align 4, !tbaa !59
  %43 = getelementptr i32, i32* %39, i64 16
  %44 = bitcast i32* %43 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %44, align 4, !tbaa !59
  %45 = getelementptr i32, i32* %39, i64 24
  %46 = bitcast i32* %45 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %46, align 4, !tbaa !59
  %index.next.1 = or i64 %index, 64
  %47 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next.1
  %48 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %47
  %49 = bitcast i32* %48 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %49, align 4, !tbaa !59
  %50 = getelementptr i32, i32* %48, i64 8
  %51 = bitcast i32* %50 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %51, align 4, !tbaa !59
  %52 = getelementptr i32, i32* %48, i64 16
  %53 = bitcast i32* %52 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %53, align 4, !tbaa !59
  %54 = getelementptr i32, i32* %48, i64 24
  %55 = bitcast i32* %54 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %55, align 4, !tbaa !59
  %index.next.2 = or i64 %index, 96
  %56 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next.2
  %57 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %56
  %58 = bitcast i32* %57 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %58, align 4, !tbaa !59
  %59 = getelementptr i32, i32* %57, i64 8
  %60 = bitcast i32* %59 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %60, align 4, !tbaa !59
  %61 = getelementptr i32, i32* %57, i64 16
  %62 = bitcast i32* %61 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %62, align 4, !tbaa !59
  %63 = getelementptr i32, i32* %57, i64 24
  %64 = bitcast i32* %63 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %64, align 4, !tbaa !59
  %index.next.3 = or i64 %index, 128
  %65 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next.3
  %66 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %65
  %67 = bitcast i32* %66 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %67, align 4, !tbaa !59
  %68 = getelementptr i32, i32* %66, i64 8
  %69 = bitcast i32* %68 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %69, align 4, !tbaa !59
  %70 = getelementptr i32, i32* %66, i64 16
  %71 = bitcast i32* %70 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %71, align 4, !tbaa !59
  %72 = getelementptr i32, i32* %66, i64 24
  %73 = bitcast i32* %72 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %73, align 4, !tbaa !59
  %index.next.4 = or i64 %index, 160
  %74 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next.4
  %75 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %74
  %76 = bitcast i32* %75 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %76, align 4, !tbaa !59
  %77 = getelementptr i32, i32* %75, i64 8
  %78 = bitcast i32* %77 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %78, align 4, !tbaa !59
  %79 = getelementptr i32, i32* %75, i64 16
  %80 = bitcast i32* %79 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %80, align 4, !tbaa !59
  %81 = getelementptr i32, i32* %75, i64 24
  %82 = bitcast i32* %81 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %82, align 4, !tbaa !59
  %index.next.5 = or i64 %index, 192
  %83 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next.5
  %84 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %83
  %85 = bitcast i32* %84 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %85, align 4, !tbaa !59
  %86 = getelementptr i32, i32* %84, i64 8
  %87 = bitcast i32* %86 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %87, align 4, !tbaa !59
  %88 = getelementptr i32, i32* %84, i64 16
  %89 = bitcast i32* %88 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %89, align 4, !tbaa !59
  %90 = getelementptr i32, i32* %84, i64 24
  %91 = bitcast i32* %90 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %91, align 4, !tbaa !59
  %index.next.6 = or i64 %index, 224
  %92 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next.6
  %93 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %92
  %94 = bitcast i32* %93 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %94, align 4, !tbaa !59
  %95 = getelementptr i32, i32* %93, i64 8
  %96 = bitcast i32* %95 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %96, align 4, !tbaa !59
  %97 = getelementptr i32, i32* %93, i64 16
  %98 = bitcast i32* %97 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %98, align 4, !tbaa !59
  %99 = getelementptr i32, i32* %93, i64 24
  %100 = bitcast i32* %99 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %100, align 4, !tbaa !59
  %index.next.7 = add i64 %index, 256
  %niter.nsub.7 = add i64 %niter, -8
  %niter.ncmp.7 = icmp eq i64 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !424

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.7, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil.preheader

vector.body.epil.preheader:                       ; preds = %middle.block.unr-lcssa
  br label %vector.body.epil

vector.body.epil:                                 ; preds = %vector.body.epil, %vector.body.epil.preheader
  %index.epil = phi i64 [ %index.unr, %vector.body.epil.preheader ], [ %index.next.epil, %vector.body.epil ]
  %epil.iter = phi i64 [ %xtraiter, %vector.body.epil.preheader ], [ %epil.iter.sub, %vector.body.epil ]
  %101 = add i64 %__begin25.0181.ls.dac.lcssa, %index.epil
  %102 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %101
  %103 = bitcast i32* %102 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %103, align 4, !tbaa !59
  %104 = getelementptr i32, i32* %102, i64 8
  %105 = bitcast i32* %104 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %105, align 4, !tbaa !59
  %106 = getelementptr i32, i32* %102, i64 16
  %107 = bitcast i32* %106 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %107, align 4, !tbaa !59
  %108 = getelementptr i32, i32* %102, i64 24
  %109 = bitcast i32* %108 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %109, align 4, !tbaa !59
  %index.next.epil = add i64 %index.epil, 32
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block, label %vector.body.epil, !llvm.loop !425

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %24, %n.vec
  br i1 %cmp.n, label %pfor.cond.cleanup33.loopexit.ls, label %pfor.detach34.ls.preheader

pfor.cond.cleanup33.loopexit.ls:                  ; preds = %pfor.detach34.ls, %middle.block
  %110 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %111 = load atomic i32, i32* %110 acquire, align 8
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup33.loopexit.ls
  %114 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %115 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %116 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %115, i16* nonnull %116) #2
  %117 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %118 = call i8* @llvm.frameaddress(i32 0) #2
  %119 = getelementptr inbounds [5 x i8*], [5 x i8*]* %117, i64 0, i64 0
  store volatile i8* %118, i8** %119, align 8
  %120 = call i8* @llvm.stacksave() #2
  %121 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %120, i8** %121, align 8
  %122 = bitcast [5 x i8*]* %117 to i8*
  %123 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %122) #24
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup33.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %125 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %126 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %125, i64 0, i32 12, i32 0
  %127 = load i64, i64* %126, align 8
  %128 = add i64 %127, 1
  store i64 %128, i64* %126, align 8
  %129 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %130 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %129, i64 0, i32 9
  %133 = bitcast %struct.__cilkrts_stack_frame** %132 to i64*
  store atomic i64 %131, i64* %133 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %134 = load atomic i32, i32* %110 acquire, align 8
  %135 = icmp eq i32 %134, 16777216
  br i1 %135, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach34.ls:                                 ; preds = %pfor.detach34.ls.preheader, %pfor.detach34.ls
  %__begin25.0181.ls = phi i64 [ %inc44.ls, %pfor.detach34.ls ], [ %__begin25.0181.ls.ph, %pfor.detach34.ls.preheader ]
  %arrayidx41.ls = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %__begin25.0181.ls
  store i32 %conv40.ls, i32* %arrayidx41.ls, align 4, !tbaa !59
  %136 = icmp ult i64 %__begin25.0181.ls, %end.ls
  %inc44.ls = add nuw nsw i64 %__begin25.0181.ls, 1
  br i1 %136, label %pfor.detach34.ls, label %pfor.cond.cleanup33.loopexit.ls, !llvm.loop !426
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach59.ls(i64 %__begin49.0179.start.ls, i64 %end.ls, i64 %.ls, %"struct.std::pair.6"* nocapture readonly align 1 %A.ls, i32* nocapture align 1 %bucketOffsets.ls) unnamed_addr #15 {
pfor.detach59.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach59.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach59.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach59.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach59.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount2 = sub i64 %end.ls, %__begin49.0179.start.ls
  %9 = icmp ugt i64 %itercount2, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach59.ls.preheader

pfor.detach59.ls.preheader:                       ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin49.0179.ls.ph = phi i64 [ %__begin49.0179.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach59.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount4 = phi i64 [ %itercount2, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin49.0179.ls.dac3 = phi i64 [ %__begin49.0179.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount4, 1
  %miditer = add nuw nsw i64 %__begin49.0179.ls.dac3, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split5, label %.split.split

.split5:                                          ; preds = %16
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach59.ls_.split.cilk(i64 %__begin49.0179.ls.dac3, i64 %miditer, i64 %.ls, %"struct.std::pair.6"* %A.ls, i32* %bucketOffsets.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split5, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach59.ls.preheader

pfor.cond.cleanup58.loopexit.ls:                  ; preds = %pfor.inc81.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup58.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup58.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach59.ls:                                 ; preds = %pfor.detach59.ls.preheader, %pfor.inc81.ls
  %__begin49.0179.ls = phi i64 [ %add70.ls, %pfor.inc81.ls ], [ %__begin49.0179.ls.ph, %pfor.detach59.ls.preheader ]
  %agg.tmp65.sroa.0.0..sroa_idx.ls = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A.ls, i64 %__begin49.0179.ls, i32 0
  %agg.tmp65.sroa.0.0.copyload.ls = load i32, i32* %agg.tmp65.sroa.0.0..sroa_idx.ls, align 8
  %add70.ls = add nuw nsw i64 %__begin49.0179.ls, 1
  %agg.tmp69.sroa.0.0..sroa_idx.ls = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A.ls, i64 %add70.ls, i32 0
  %agg.tmp69.sroa.0.0.copyload.ls = load i32, i32* %agg.tmp69.sroa.0.0..sroa_idx.ls, align 8
  %cmp74.ls = icmp eq i32 %agg.tmp65.sroa.0.0.copyload.ls, %agg.tmp69.sroa.0.0.copyload.ls
  br i1 %cmp74.ls, label %pfor.inc81.ls, label %if.then75.ls

if.then75.ls:                                     ; preds = %pfor.detach59.ls
  %conv73.ls = sext i32 %agg.tmp69.sroa.0.0.copyload.ls to i64
  %conv77.ls = trunc i64 %add70.ls to i32
  %arrayidx78.ls = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %conv73.ls
  store i32 %conv77.ls, i32* %arrayidx78.ls, align 4, !tbaa !59
  br label %pfor.inc81.ls

pfor.inc81.ls:                                    ; preds = %pfor.detach59.ls, %if.then75.ls
  %48 = icmp ult i64 %__begin49.0179.ls, %end.ls
  br i1 %48, label %pfor.detach59.ls, label %pfor.cond.cleanup58.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach.ls(i64 %__begin.0177.start.ls, i64 %end.ls, i64 %.ls, [256 x i32]* nocapture readonly align 1 %.ls1, i32* nocapture align 1 %bucketOffsets.ls) unnamed_addr #15 {
pfor.detach.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount3 = sub i64 %end.ls, %__begin.0177.start.ls
  %9 = icmp ugt i64 %itercount3, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.preheader.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount5 = phi i64 [ %itercount3, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin.0177.ls.dac4 = phi i64 [ %__begin.0177.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount5, 1
  %miditer = add nuw nsw i64 %__begin.0177.ls.dac4, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split6, label %.split.split

.split6:                                          ; preds = %16
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach.ls_.split.cilk(i64 %__begin.0177.ls.dac4, i64 %miditer, i64 %.ls, [256 x i32]* %.ls1, i32* %bucketOffsets.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split6, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.preheader.ls.split._crit_edge

pfor.detach.preheader.ls.split._crit_edge:        ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin.0177.ls.dac.lcssa = phi i64 [ %__begin.0177.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  %22 = icmp ugt i64 %__begin.0177.ls.dac.lcssa, %end.ls
  %umax = select i1 %22, i64 %__begin.0177.ls.dac.lcssa, i64 %end.ls
  %23 = add i64 %umax, 1
  %24 = sub i64 %23, %__begin.0177.ls.dac.lcssa
  %min.iters.check = icmp ult i64 %24, 32
  br i1 %min.iters.check, label %pfor.detach.ls.preheader, label %vector.memcheck

pfor.detach.ls.preheader:                         ; preds = %middle.block, %vector.memcheck, %pfor.detach.preheader.ls.split._crit_edge
  %__begin.0177.ls.ph = phi i64 [ %__begin.0177.ls.dac.lcssa, %vector.memcheck ], [ %__begin.0177.ls.dac.lcssa, %pfor.detach.preheader.ls.split._crit_edge ], [ %ind.end, %middle.block ]
  br label %pfor.detach.ls

vector.memcheck:                                  ; preds = %pfor.detach.preheader.ls.split._crit_edge
  %scevgep = getelementptr i32, i32* %bucketOffsets.ls, i64 %__begin.0177.ls.dac.lcssa
  %25 = icmp ugt i64 %__begin.0177.ls.dac.lcssa, %end.ls
  %umax3 = select i1 %25, i64 %__begin.0177.ls.dac.lcssa, i64 %end.ls
  %26 = add i64 %umax3, 1
  %scevgep4 = getelementptr i32, i32* %bucketOffsets.ls, i64 %26
  %scevgep6 = getelementptr [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %__begin.0177.ls.dac.lcssa
  %scevgep8 = getelementptr [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %26
  %bound0 = icmp ult i32* %scevgep, %scevgep8
  %bound1 = icmp ult i32* %scevgep6, %scevgep4
  %memcheck.conflict = and i1 %bound0, %bound1
  br i1 %memcheck.conflict, label %pfor.detach.ls.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %24, -32
  %ind.end = add i64 %__begin.0177.ls.dac.lcssa, %n.vec
  %27 = add i64 %n.vec, -32
  %28 = lshr exact i64 %27, 5
  %29 = add nuw nsw i64 %28, 1
  %xtraiter = and i64 %29, 3
  %30 = icmp ult i64 %27, 96
  br i1 %30, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nsw i64 %29, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.3, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.3, %vector.body ]
  %31 = add i64 %__begin.0177.ls.dac.lcssa, %index
  %32 = getelementptr inbounds [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %31
  %33 = bitcast i32* %32 to <8 x i32>*
  %wide.load = load <8 x i32>, <8 x i32>* %33, align 4, !tbaa !59, !alias.scope !427
  %34 = getelementptr i32, i32* %32, i64 8
  %35 = bitcast i32* %34 to <8 x i32>*
  %wide.load13 = load <8 x i32>, <8 x i32>* %35, align 4, !tbaa !59, !alias.scope !427
  %36 = getelementptr i32, i32* %32, i64 16
  %37 = bitcast i32* %36 to <8 x i32>*
  %wide.load14 = load <8 x i32>, <8 x i32>* %37, align 4, !tbaa !59, !alias.scope !427
  %38 = getelementptr i32, i32* %32, i64 24
  %39 = bitcast i32* %38 to <8 x i32>*
  %wide.load15 = load <8 x i32>, <8 x i32>* %39, align 4, !tbaa !59, !alias.scope !427
  %40 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %31
  %41 = bitcast i32* %40 to <8 x i32>*
  store <8 x i32> %wide.load, <8 x i32>* %41, align 4, !tbaa !59, !alias.scope !430, !noalias !427
  %42 = getelementptr i32, i32* %40, i64 8
  %43 = bitcast i32* %42 to <8 x i32>*
  store <8 x i32> %wide.load13, <8 x i32>* %43, align 4, !tbaa !59, !alias.scope !430, !noalias !427
  %44 = getelementptr i32, i32* %40, i64 16
  %45 = bitcast i32* %44 to <8 x i32>*
  store <8 x i32> %wide.load14, <8 x i32>* %45, align 4, !tbaa !59, !alias.scope !430, !noalias !427
  %46 = getelementptr i32, i32* %40, i64 24
  %47 = bitcast i32* %46 to <8 x i32>*
  store <8 x i32> %wide.load15, <8 x i32>* %47, align 4, !tbaa !59, !alias.scope !430, !noalias !427
  %index.next = or i64 %index, 32
  %48 = add i64 %__begin.0177.ls.dac.lcssa, %index.next
  %49 = getelementptr inbounds [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %48
  %50 = bitcast i32* %49 to <8 x i32>*
  %wide.load.1 = load <8 x i32>, <8 x i32>* %50, align 4, !tbaa !59, !alias.scope !427
  %51 = getelementptr i32, i32* %49, i64 8
  %52 = bitcast i32* %51 to <8 x i32>*
  %wide.load13.1 = load <8 x i32>, <8 x i32>* %52, align 4, !tbaa !59, !alias.scope !427
  %53 = getelementptr i32, i32* %49, i64 16
  %54 = bitcast i32* %53 to <8 x i32>*
  %wide.load14.1 = load <8 x i32>, <8 x i32>* %54, align 4, !tbaa !59, !alias.scope !427
  %55 = getelementptr i32, i32* %49, i64 24
  %56 = bitcast i32* %55 to <8 x i32>*
  %wide.load15.1 = load <8 x i32>, <8 x i32>* %56, align 4, !tbaa !59, !alias.scope !427
  %57 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %48
  %58 = bitcast i32* %57 to <8 x i32>*
  store <8 x i32> %wide.load.1, <8 x i32>* %58, align 4, !tbaa !59, !alias.scope !430, !noalias !427
  %59 = getelementptr i32, i32* %57, i64 8
  %60 = bitcast i32* %59 to <8 x i32>*
  store <8 x i32> %wide.load13.1, <8 x i32>* %60, align 4, !tbaa !59, !alias.scope !430, !noalias !427
  %61 = getelementptr i32, i32* %57, i64 16
  %62 = bitcast i32* %61 to <8 x i32>*
  store <8 x i32> %wide.load14.1, <8 x i32>* %62, align 4, !tbaa !59, !alias.scope !430, !noalias !427
  %63 = getelementptr i32, i32* %57, i64 24
  %64 = bitcast i32* %63 to <8 x i32>*
  store <8 x i32> %wide.load15.1, <8 x i32>* %64, align 4, !tbaa !59, !alias.scope !430, !noalias !427
  %index.next.1 = or i64 %index, 64
  %65 = add i64 %__begin.0177.ls.dac.lcssa, %index.next.1
  %66 = getelementptr inbounds [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %65
  %67 = bitcast i32* %66 to <8 x i32>*
  %wide.load.2 = load <8 x i32>, <8 x i32>* %67, align 4, !tbaa !59, !alias.scope !427
  %68 = getelementptr i32, i32* %66, i64 8
  %69 = bitcast i32* %68 to <8 x i32>*
  %wide.load13.2 = load <8 x i32>, <8 x i32>* %69, align 4, !tbaa !59, !alias.scope !427
  %70 = getelementptr i32, i32* %66, i64 16
  %71 = bitcast i32* %70 to <8 x i32>*
  %wide.load14.2 = load <8 x i32>, <8 x i32>* %71, align 4, !tbaa !59, !alias.scope !427
  %72 = getelementptr i32, i32* %66, i64 24
  %73 = bitcast i32* %72 to <8 x i32>*
  %wide.load15.2 = load <8 x i32>, <8 x i32>* %73, align 4, !tbaa !59, !alias.scope !427
  %74 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %65
  %75 = bitcast i32* %74 to <8 x i32>*
  store <8 x i32> %wide.load.2, <8 x i32>* %75, align 4, !tbaa !59, !alias.scope !430, !noalias !427
  %76 = getelementptr i32, i32* %74, i64 8
  %77 = bitcast i32* %76 to <8 x i32>*
  store <8 x i32> %wide.load13.2, <8 x i32>* %77, align 4, !tbaa !59, !alias.scope !430, !noalias !427
  %78 = getelementptr i32, i32* %74, i64 16
  %79 = bitcast i32* %78 to <8 x i32>*
  store <8 x i32> %wide.load14.2, <8 x i32>* %79, align 4, !tbaa !59, !alias.scope !430, !noalias !427
  %80 = getelementptr i32, i32* %74, i64 24
  %81 = bitcast i32* %80 to <8 x i32>*
  store <8 x i32> %wide.load15.2, <8 x i32>* %81, align 4, !tbaa !59, !alias.scope !430, !noalias !427
  %index.next.2 = or i64 %index, 96
  %82 = add i64 %__begin.0177.ls.dac.lcssa, %index.next.2
  %83 = getelementptr inbounds [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %82
  %84 = bitcast i32* %83 to <8 x i32>*
  %wide.load.3 = load <8 x i32>, <8 x i32>* %84, align 4, !tbaa !59, !alias.scope !427
  %85 = getelementptr i32, i32* %83, i64 8
  %86 = bitcast i32* %85 to <8 x i32>*
  %wide.load13.3 = load <8 x i32>, <8 x i32>* %86, align 4, !tbaa !59, !alias.scope !427
  %87 = getelementptr i32, i32* %83, i64 16
  %88 = bitcast i32* %87 to <8 x i32>*
  %wide.load14.3 = load <8 x i32>, <8 x i32>* %88, align 4, !tbaa !59, !alias.scope !427
  %89 = getelementptr i32, i32* %83, i64 24
  %90 = bitcast i32* %89 to <8 x i32>*
  %wide.load15.3 = load <8 x i32>, <8 x i32>* %90, align 4, !tbaa !59, !alias.scope !427
  %91 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %82
  %92 = bitcast i32* %91 to <8 x i32>*
  store <8 x i32> %wide.load.3, <8 x i32>* %92, align 4, !tbaa !59, !alias.scope !430, !noalias !427
  %93 = getelementptr i32, i32* %91, i64 8
  %94 = bitcast i32* %93 to <8 x i32>*
  store <8 x i32> %wide.load13.3, <8 x i32>* %94, align 4, !tbaa !59, !alias.scope !430, !noalias !427
  %95 = getelementptr i32, i32* %91, i64 16
  %96 = bitcast i32* %95 to <8 x i32>*
  store <8 x i32> %wide.load14.3, <8 x i32>* %96, align 4, !tbaa !59, !alias.scope !430, !noalias !427
  %97 = getelementptr i32, i32* %91, i64 24
  %98 = bitcast i32* %97 to <8 x i32>*
  store <8 x i32> %wide.load15.3, <8 x i32>* %98, align 4, !tbaa !59, !alias.scope !430, !noalias !427
  %index.next.3 = add i64 %index, 128
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !432

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.3, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil.preheader

vector.body.epil.preheader:                       ; preds = %middle.block.unr-lcssa
  br label %vector.body.epil

vector.body.epil:                                 ; preds = %vector.body.epil, %vector.body.epil.preheader
  %index.epil = phi i64 [ %index.unr, %vector.body.epil.preheader ], [ %index.next.epil, %vector.body.epil ]
  %epil.iter = phi i64 [ %xtraiter, %vector.body.epil.preheader ], [ %epil.iter.sub, %vector.body.epil ]
  %99 = add i64 %__begin.0177.ls.dac.lcssa, %index.epil
  %100 = getelementptr inbounds [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %99
  %101 = bitcast i32* %100 to <8 x i32>*
  %wide.load.epil = load <8 x i32>, <8 x i32>* %101, align 4, !tbaa !59, !alias.scope !427
  %102 = getelementptr i32, i32* %100, i64 8
  %103 = bitcast i32* %102 to <8 x i32>*
  %wide.load13.epil = load <8 x i32>, <8 x i32>* %103, align 4, !tbaa !59, !alias.scope !427
  %104 = getelementptr i32, i32* %100, i64 16
  %105 = bitcast i32* %104 to <8 x i32>*
  %wide.load14.epil = load <8 x i32>, <8 x i32>* %105, align 4, !tbaa !59, !alias.scope !427
  %106 = getelementptr i32, i32* %100, i64 24
  %107 = bitcast i32* %106 to <8 x i32>*
  %wide.load15.epil = load <8 x i32>, <8 x i32>* %107, align 4, !tbaa !59, !alias.scope !427
  %108 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %99
  %109 = bitcast i32* %108 to <8 x i32>*
  store <8 x i32> %wide.load.epil, <8 x i32>* %109, align 4, !tbaa !59, !alias.scope !430, !noalias !427
  %110 = getelementptr i32, i32* %108, i64 8
  %111 = bitcast i32* %110 to <8 x i32>*
  store <8 x i32> %wide.load13.epil, <8 x i32>* %111, align 4, !tbaa !59, !alias.scope !430, !noalias !427
  %112 = getelementptr i32, i32* %108, i64 16
  %113 = bitcast i32* %112 to <8 x i32>*
  store <8 x i32> %wide.load14.epil, <8 x i32>* %113, align 4, !tbaa !59, !alias.scope !430, !noalias !427
  %114 = getelementptr i32, i32* %108, i64 24
  %115 = bitcast i32* %114 to <8 x i32>*
  store <8 x i32> %wide.load15.epil, <8 x i32>* %115, align 4, !tbaa !59, !alias.scope !430, !noalias !427
  %index.next.epil = add i64 %index.epil, 32
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block, label %vector.body.epil, !llvm.loop !433

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %24, %n.vec
  br i1 %cmp.n, label %pfor.cond.cleanup.loopexit.ls, label %pfor.detach.ls.preheader

pfor.cond.cleanup.loopexit.ls:                    ; preds = %pfor.detach.ls, %middle.block
  %116 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %117 = load atomic i32, i32* %116 acquire, align 8
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %120 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %121 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %122 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %121, i16* nonnull %122) #2
  %123 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %124 = call i8* @llvm.frameaddress(i32 0) #2
  %125 = getelementptr inbounds [5 x i8*], [5 x i8*]* %123, i64 0, i64 0
  store volatile i8* %124, i8** %125, align 8
  %126 = call i8* @llvm.stacksave() #2
  %127 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %126, i8** %127, align 8
  %128 = bitcast [5 x i8*]* %123 to i8*
  %129 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %128) #24
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %131 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %132 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %131, i64 0, i32 12, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 1
  store i64 %134, i64* %132, align 8
  %135 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %136 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %135, i64 0, i32 9
  %139 = bitcast %struct.__cilkrts_stack_frame** %138 to i64*
  store atomic i64 %137, i64* %139 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %140 = load atomic i32, i32* %116 acquire, align 8
  %141 = icmp eq i32 %140, 16777216
  br i1 %141, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %pfor.detach.ls
  %__begin.0177.ls = phi i64 [ %inc.ls, %pfor.detach.ls ], [ %__begin.0177.ls.ph, %pfor.detach.ls.preheader ]
  %arrayidx13.ls = getelementptr inbounds [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %__begin.0177.ls
  %142 = load i32, i32* %arrayidx13.ls, align 4, !tbaa !59
  %arrayidx14.ls = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %__begin.0177.ls
  store i32 %142, i32* %arrayidx14.ls, align 4, !tbaa !59
  %143 = icmp ult i64 %__begin.0177.ls, %end.ls
  %inc.ls = add nuw nsw i64 %__begin.0177.ls, 1
  br i1 %143, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit.ls, !llvm.loop !434
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.ls(i64 %__begin.0156.start.ls, i64 %.ls, i64 %div4.ls, i64 %n.ls, %"struct.std::pair.6"* nocapture readonly align 1 %A.ls, i8* nocapture align 1 %Tmp.ls, i64 %m.ls, [256 x i32]* nocapture align 1 %BK.ls, i64 %mul5.ls, i32 %sh_prom.i.i.ls, i64 %agg.tmp28.sroa.2.0.copyload.ls, %"struct.std::pair.6"* nocapture align 1 %B.ls) unnamed_addr #15 {
pfor.detach.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount1 = sub i64 %.ls, %__begin.0156.start.ls
  %9 = icmp ugt i64 %itercount1, 1
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin.0156.ls.ph = phi i64 [ %__begin.0156.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount3 = phi i64 [ %itercount1, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin.0156.ls.dac2 = phi i64 [ %__begin.0156.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount3, 1
  %miditer = add nuw nsw i64 %__begin.0156.ls.dac2, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split4, label %.split.split

.split4:                                          ; preds = %16
  call fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.ls_.split.cilk(i64 %__begin.0156.ls.dac2, i64 %miditer, i64 %div4.ls, i64 %n.ls, %"struct.std::pair.6"* %A.ls, i8* %Tmp.ls, i64 %m.ls, [256 x i32]* %BK.ls, i64 %mul5.ls, i32 %sh_prom.i.i.ls, i64 %agg.tmp28.sroa.2.0.copyload.ls, %"struct.std::pair.6"* %B.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split4, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, 1
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.loopexit201.ls:                 ; preds = %pfor.inc.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit201.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit201.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %pfor.inc.ls
  %__begin.0156.ls = phi i64 [ %inc.ls, %pfor.inc.ls ], [ %__begin.0156.ls.ph, %pfor.detach.ls.preheader ]
  %48 = mul i64 %__begin.0156.ls, %div4.ls
  %49 = and i64 %48, 4294967295
  %50 = sub i64 %n.ls, %49
  %51 = icmp sgt i64 %50, 0
  %smax194.ls = select i1 %51, i64 %50, i64 0
  %52 = icmp slt i64 %smax194.ls, %div4.ls
  %53 = select i1 %52, i64 %smax194.ls, i64 %div4.ls
  %add.ptr21.ls = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A.ls, i64 %49
  %add.ptr23.ls = getelementptr inbounds i8, i8* %Tmp.ls, i64 %49
  %mul24.ls = mul nsw i64 %__begin.0156.ls, %m.ls
  %add.ptr25.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 0, i64 %mul24.ls
  %add.ptr27.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 %mul5.ls, i64 %mul24.ls
  %cmp272.i.ls = icmp sgt i64 %53, 0
  br i1 %cmp272.i.ls, label %for.body4.i.preheader.ls, label %pfor.inc.ls

for.body4.i.preheader.ls:                         ; preds = %pfor.detach.ls
  %xtraiter196.ls = and i64 %53, 1
  %54 = icmp eq i64 %53, 1
  br i1 %54, label %for.body4.i.epil.ls, label %for.body4.i.preheader.new.ls

for.body4.i.preheader.new.ls:                     ; preds = %for.body4.i.preheader.ls
  %unroll_iter198.ls = sub i64 %53, %xtraiter196.ls
  br label %for.body4.i.ls

for.body4.i.ls:                                   ; preds = %for.body4.i.ls, %for.body4.i.preheader.new.ls
  %j.073.i.ls = phi i64 [ 0, %for.body4.i.preheader.new.ls ], [ %inc11.i.1.ls, %for.body4.i.ls ]
  %niter199.ls = phi i64 [ %unroll_iter198.ls, %for.body4.i.preheader.new.ls ], [ %niter199.nsub.1.ls, %for.body4.i.ls ]
  %agg.tmp.sroa.0.0..sroa_idx.i.ls = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %add.ptr21.ls, i64 %j.073.i.ls, i32 0
  %agg.tmp.sroa.0.0.copyload.i.ls = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.ls, align 8
  %shr.i.i.ls = ashr i32 %agg.tmp.sroa.0.0.copyload.i.ls, %sh_prom.i.i.ls
  %conv.i.i120.ls = sext i32 %shr.i.i.ls to i64
  %and.i.i.ls = and i64 %conv.i.i120.ls, %agg.tmp28.sroa.2.0.copyload.ls
  %conv.i.ls = trunc i64 %and.i.i.ls to i8
  %arrayidx6.i.ls = getelementptr inbounds i8, i8* %add.ptr23.ls, i64 %j.073.i.ls
  store i8 %conv.i.ls, i8* %arrayidx6.i.ls, align 1, !tbaa !22
  %conv7.i.ls = and i64 %and.i.i.ls, 255
  %arrayidx8.i.ls = getelementptr inbounds i32, i32* %add.ptr25.ls, i64 %conv7.i.ls
  %55 = load i32, i32* %arrayidx8.i.ls, align 4, !tbaa !59
  %inc9.i.ls = add i32 %55, 1
  store i32 %inc9.i.ls, i32* %arrayidx8.i.ls, align 4, !tbaa !59
  %inc11.i.ls = or i64 %j.073.i.ls, 1
  %agg.tmp.sroa.0.0..sroa_idx.i.1.ls = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %add.ptr21.ls, i64 %inc11.i.ls, i32 0
  %agg.tmp.sroa.0.0.copyload.i.1.ls = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.1.ls, align 8
  %shr.i.i.1.ls = ashr i32 %agg.tmp.sroa.0.0.copyload.i.1.ls, %sh_prom.i.i.ls
  %conv.i.i120.1.ls = sext i32 %shr.i.i.1.ls to i64
  %and.i.i.1.ls = and i64 %conv.i.i120.1.ls, %agg.tmp28.sroa.2.0.copyload.ls
  %conv.i.1.ls = trunc i64 %and.i.i.1.ls to i8
  %arrayidx6.i.1.ls = getelementptr inbounds i8, i8* %add.ptr23.ls, i64 %inc11.i.ls
  store i8 %conv.i.1.ls, i8* %arrayidx6.i.1.ls, align 1, !tbaa !22
  %conv7.i.1.ls = and i64 %and.i.i.1.ls, 255
  %arrayidx8.i.1.ls = getelementptr inbounds i32, i32* %add.ptr25.ls, i64 %conv7.i.1.ls
  %56 = load i32, i32* %arrayidx8.i.1.ls, align 4, !tbaa !59
  %inc9.i.1.ls = add i32 %56, 1
  store i32 %inc9.i.1.ls, i32* %arrayidx8.i.1.ls, align 4, !tbaa !59
  %inc11.i.1.ls = add nuw nsw i64 %j.073.i.ls, 2
  %niter199.nsub.1.ls = add i64 %niter199.ls, -2
  %niter199.ncmp.1.ls = icmp eq i64 %niter199.nsub.1.ls, 0
  br i1 %niter199.ncmp.1.ls, label %for.body27.i.preheader.unr-lcssa.ls, label %for.body4.i.ls

for.body27.i.preheader.unr-lcssa.ls:              ; preds = %for.body4.i.ls
  %lcmp.mod197.ls = icmp eq i64 %xtraiter196.ls, 0
  br i1 %lcmp.mod197.ls, label %for.body27.i.ls.preheader, label %for.body4.i.epil.ls

for.body4.i.epil.ls:                              ; preds = %for.body4.i.preheader.ls, %for.body27.i.preheader.unr-lcssa.ls
  %j.073.i.unr.ls2 = phi i64 [ %inc11.i.1.ls, %for.body27.i.preheader.unr-lcssa.ls ], [ 0, %for.body4.i.preheader.ls ]
  %agg.tmp.sroa.0.0..sroa_idx.i.epil.ls = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %add.ptr21.ls, i64 %j.073.i.unr.ls2, i32 0
  %agg.tmp.sroa.0.0.copyload.i.epil.ls = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.epil.ls, align 8
  %shr.i.i.epil.ls = ashr i32 %agg.tmp.sroa.0.0.copyload.i.epil.ls, %sh_prom.i.i.ls
  %conv.i.i120.epil.ls = sext i32 %shr.i.i.epil.ls to i64
  %and.i.i.epil.ls = and i64 %conv.i.i120.epil.ls, %agg.tmp28.sroa.2.0.copyload.ls
  %conv.i.epil.ls = trunc i64 %and.i.i.epil.ls to i8
  %arrayidx6.i.epil.ls = getelementptr inbounds i8, i8* %add.ptr23.ls, i64 %j.073.i.unr.ls2
  store i8 %conv.i.epil.ls, i8* %arrayidx6.i.epil.ls, align 1, !tbaa !22
  %conv7.i.epil.ls = and i64 %and.i.i.epil.ls, 255
  %arrayidx8.i.epil.ls = getelementptr inbounds i32, i32* %add.ptr25.ls, i64 %conv7.i.epil.ls
  %57 = load i32, i32* %arrayidx8.i.epil.ls, align 4, !tbaa !59
  %inc9.i.epil.ls = add i32 %57, 1
  store i32 %inc9.i.epil.ls, i32* %arrayidx8.i.epil.ls, align 4, !tbaa !59
  br label %for.body27.i.ls.preheader

for.body27.i.ls.preheader:                        ; preds = %for.body4.i.epil.ls, %for.body27.i.preheader.unr-lcssa.ls
  br label %for.body27.i.ls

for.body27.i.ls:                                  ; preds = %for.body27.i.ls.preheader, %for.body27.i.ls
  %j23.068.in.i.ls = phi i64 [ %j23.068.i.ls, %for.body27.i.ls ], [ %53, %for.body27.i.ls.preheader ]
  %j23.068.i.ls = add nsw i64 %j23.068.in.i.ls, -1
  %arrayidx28.i.ls = getelementptr inbounds i8, i8* %add.ptr23.ls, i64 %j23.068.i.ls
  %58 = load i8, i8* %arrayidx28.i.ls, align 1, !tbaa !22
  %idxprom29.i.ls = zext i8 %58 to i64
  %arrayidx30.i.ls = getelementptr inbounds i32, i32* %add.ptr27.ls, i64 %idxprom29.i.ls
  %59 = load i32, i32* %arrayidx30.i.ls, align 4, !tbaa !59
  %dec.i.ls = add i32 %59, -1
  store i32 %dec.i.ls, i32* %arrayidx30.i.ls, align 4, !tbaa !59
  %idxprom32.i.ls = zext i32 %dec.i.ls to i64
  %first.i.i122.ls = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %add.ptr21.ls, i64 %j23.068.i.ls, i32 0
  %60 = load i32, i32* %first.i.i122.ls, align 8, !tbaa !109
  %first2.i.i123.ls = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.ls, i64 %idxprom32.i.ls, i32 0
  store i32 %60, i32* %first2.i.i123.ls, align 8, !tbaa !109
  %second.i.i124.ls = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %add.ptr21.ls, i64 %j23.068.i.ls, i32 1
  %61 = bitcast %struct.vertex** %second.i.i124.ls to i64*
  %62 = load i64, i64* %61, align 8, !tbaa !111
  %second3.i.i125.ls = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.ls, i64 %idxprom32.i.ls, i32 1
  %63 = bitcast %struct.vertex** %second3.i.i125.ls to i64*
  store i64 %62, i64* %63, align 8, !tbaa !111
  %cmp25.i.ls = icmp sgt i64 %j23.068.in.i.ls, 1
  br i1 %cmp25.i.ls, label %for.body27.i.ls, label %pfor.inc.ls

pfor.inc.ls:                                      ; preds = %for.body27.i.ls, %pfor.detach.ls
  %64 = icmp ult i64 %__begin.0156.ls, %.ls
  %inc.ls = add nuw nsw i64 %__begin.0156.ls, 1
  br i1 %64, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit201.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.us.ls(i64 %__begin.0156.us.start.ls, i64 %.ls, i64 %div4.ls, i64 %n.ls, %"struct.std::pair.6"* nocapture readonly align 1 %A.ls, i8* nocapture align 1 %Tmp.ls, i64 %m.ls, [256 x i32]* nocapture align 1 %BK.ls, i64 %mul5.ls, i64 %.ls1, i32 %sh_prom.i.i.ls, i64 %agg.tmp28.sroa.2.0.copyload.ls, i1 %.ls2, i64 %unroll_iter192.ls, i1 %lcmp.mod191.ls, i64 %xtraiter189.ls, %"struct.std::pair.6"* nocapture align 1 %B.ls) unnamed_addr #15 {
pfor.detach.us.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.us.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.us.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.us.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.us.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount3 = sub i64 %.ls, %__begin.0156.us.start.ls
  %9 = icmp ugt i64 %itercount3, 1
  br i1 %9, label %.lr.ph, label %pfor.detach.us.ls.preheader

pfor.detach.us.ls.preheader:                      ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin.0156.us.ls.ph = phi i64 [ %__begin.0156.us.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.us.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount5 = phi i64 [ %itercount3, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin.0156.us.ls.dac4 = phi i64 [ %__begin.0156.us.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount5, 1
  %miditer = add nuw nsw i64 %__begin.0156.us.ls.dac4, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split6, label %.split.split

.split6:                                          ; preds = %16
  call fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.us.ls_.split.cilk(i64 %__begin.0156.us.ls.dac4, i64 %miditer, i64 %div4.ls, i64 %n.ls, %"struct.std::pair.6"* %A.ls, i8* %Tmp.ls, i64 %m.ls, [256 x i32]* %BK.ls, i64 %mul5.ls, i64 %.ls1, i32 %sh_prom.i.i.ls, i64 %agg.tmp28.sroa.2.0.copyload.ls, i1 %.ls2, i64 %unroll_iter192.ls, i1 %lcmp.mod191.ls, i64 %xtraiter189.ls, %"struct.std::pair.6"* %B.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split6, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, 1
  br i1 %21, label %16, label %pfor.detach.us.ls.preheader

pfor.cond.cleanup.loopexit.ls:                    ; preds = %pfor.inc.us.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.us.ls:                                ; preds = %pfor.detach.us.ls.preheader, %pfor.inc.us.ls
  %__begin.0156.us.ls = phi i64 [ %inc.us.ls, %pfor.inc.us.ls ], [ %__begin.0156.us.ls.ph, %pfor.detach.us.ls.preheader ]
  %48 = mul i64 %__begin.0156.us.ls, %div4.ls
  %49 = and i64 %48, 4294967295
  %50 = sub i64 %n.ls, %49
  %51 = icmp sgt i64 %50, 0
  %smax.ls = select i1 %51, i64 %50, i64 0
  %52 = icmp slt i64 %smax.ls, %div4.ls
  %53 = select i1 %52, i64 %smax.ls, i64 %div4.ls
  %conv.us.ls = trunc i64 %48 to i32
  %add.ptr21.us.ls = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A.ls, i64 %49
  %add.ptr23.us.ls = getelementptr inbounds i8, i8* %Tmp.ls, i64 %49
  %mul24.us.ls = mul nsw i64 %__begin.0156.us.ls, %m.ls
  %add.ptr25.us.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 0, i64 %mul24.us.ls
  %add.ptr27.us.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 %mul5.ls, i64 %mul24.us.ls
  %counts78.i.us.ls = bitcast i32* %add.ptr25.us.ls to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %counts78.i.us.ls, i8 0, i64 %.ls1, i32 4, i1 false) #2
  %cmp272.i.us.ls = icmp sgt i64 %53, 0
  br i1 %cmp272.i.us.ls, label %for.body4.i.us.preheader.ls, label %for.body17.i.us.preheader.ls

for.body4.i.us.preheader.ls:                      ; preds = %pfor.detach.us.ls
  %xtraiter185.ls = and i64 %53, 1
  %54 = icmp eq i64 %53, 1
  br i1 %54, label %for.body4.i.us.epil.ls, label %for.body4.i.us.preheader.new.ls

for.body4.i.us.preheader.new.ls:                  ; preds = %for.body4.i.us.preheader.ls
  %unroll_iter187.ls = sub i64 %53, %xtraiter185.ls
  br label %for.body4.i.us.ls

for.body4.i.us.ls:                                ; preds = %for.body4.i.us.ls, %for.body4.i.us.preheader.new.ls
  %j.073.i.us.ls = phi i64 [ 0, %for.body4.i.us.preheader.new.ls ], [ %inc11.i.us.1.ls, %for.body4.i.us.ls ]
  %niter188.ls = phi i64 [ %unroll_iter187.ls, %for.body4.i.us.preheader.new.ls ], [ %niter188.nsub.1.ls, %for.body4.i.us.ls ]
  %agg.tmp.sroa.0.0..sroa_idx.i.us.ls = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %add.ptr21.us.ls, i64 %j.073.i.us.ls, i32 0
  %agg.tmp.sroa.0.0.copyload.i.us.ls = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.us.ls, align 8
  %shr.i.i.us.ls = ashr i32 %agg.tmp.sroa.0.0.copyload.i.us.ls, %sh_prom.i.i.ls
  %conv.i.i120.us.ls = sext i32 %shr.i.i.us.ls to i64
  %and.i.i.us.ls = and i64 %conv.i.i120.us.ls, %agg.tmp28.sroa.2.0.copyload.ls
  %conv.i.us.ls = trunc i64 %and.i.i.us.ls to i8
  %arrayidx6.i.us.ls = getelementptr inbounds i8, i8* %add.ptr23.us.ls, i64 %j.073.i.us.ls
  store i8 %conv.i.us.ls, i8* %arrayidx6.i.us.ls, align 1, !tbaa !22
  %conv7.i.us.ls = and i64 %and.i.i.us.ls, 255
  %arrayidx8.i.us.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %conv7.i.us.ls
  %55 = load i32, i32* %arrayidx8.i.us.ls, align 4, !tbaa !59
  %inc9.i.us.ls = add i32 %55, 1
  store i32 %inc9.i.us.ls, i32* %arrayidx8.i.us.ls, align 4, !tbaa !59
  %inc11.i.us.ls = or i64 %j.073.i.us.ls, 1
  %agg.tmp.sroa.0.0..sroa_idx.i.us.1.ls = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %add.ptr21.us.ls, i64 %inc11.i.us.ls, i32 0
  %agg.tmp.sroa.0.0.copyload.i.us.1.ls = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.us.1.ls, align 8
  %shr.i.i.us.1.ls = ashr i32 %agg.tmp.sroa.0.0.copyload.i.us.1.ls, %sh_prom.i.i.ls
  %conv.i.i120.us.1.ls = sext i32 %shr.i.i.us.1.ls to i64
  %and.i.i.us.1.ls = and i64 %conv.i.i120.us.1.ls, %agg.tmp28.sroa.2.0.copyload.ls
  %conv.i.us.1.ls = trunc i64 %and.i.i.us.1.ls to i8
  %arrayidx6.i.us.1.ls = getelementptr inbounds i8, i8* %add.ptr23.us.ls, i64 %inc11.i.us.ls
  store i8 %conv.i.us.1.ls, i8* %arrayidx6.i.us.1.ls, align 1, !tbaa !22
  %conv7.i.us.1.ls = and i64 %and.i.i.us.1.ls, 255
  %arrayidx8.i.us.1.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %conv7.i.us.1.ls
  %56 = load i32, i32* %arrayidx8.i.us.1.ls, align 4, !tbaa !59
  %inc9.i.us.1.ls = add i32 %56, 1
  store i32 %inc9.i.us.1.ls, i32* %arrayidx8.i.us.1.ls, align 4, !tbaa !59
  %inc11.i.us.1.ls = add nuw nsw i64 %j.073.i.us.ls, 2
  %niter188.nsub.1.ls = add i64 %niter188.ls, -2
  %niter188.ncmp.1.ls = icmp eq i64 %niter188.nsub.1.ls, 0
  br i1 %niter188.ncmp.1.ls, label %for.body17.i.us.preheader.loopexit.unr-lcssa.ls, label %for.body4.i.us.ls

for.body17.i.us.preheader.loopexit.unr-lcssa.ls:  ; preds = %for.body4.i.us.ls
  %lcmp.mod186.ls = icmp eq i64 %xtraiter185.ls, 0
  br i1 %lcmp.mod186.ls, label %for.body17.i.us.preheader.ls, label %for.body4.i.us.epil.ls

for.body4.i.us.epil.ls:                           ; preds = %for.body4.i.us.preheader.ls, %for.body17.i.us.preheader.loopexit.unr-lcssa.ls
  %j.073.i.us.unr.ls2 = phi i64 [ %inc11.i.us.1.ls, %for.body17.i.us.preheader.loopexit.unr-lcssa.ls ], [ 0, %for.body4.i.us.preheader.ls ]
  %agg.tmp.sroa.0.0..sroa_idx.i.us.epil.ls = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %add.ptr21.us.ls, i64 %j.073.i.us.unr.ls2, i32 0
  %agg.tmp.sroa.0.0.copyload.i.us.epil.ls = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.us.epil.ls, align 8
  %shr.i.i.us.epil.ls = ashr i32 %agg.tmp.sroa.0.0.copyload.i.us.epil.ls, %sh_prom.i.i.ls
  %conv.i.i120.us.epil.ls = sext i32 %shr.i.i.us.epil.ls to i64
  %and.i.i.us.epil.ls = and i64 %conv.i.i120.us.epil.ls, %agg.tmp28.sroa.2.0.copyload.ls
  %conv.i.us.epil.ls = trunc i64 %and.i.i.us.epil.ls to i8
  %arrayidx6.i.us.epil.ls = getelementptr inbounds i8, i8* %add.ptr23.us.ls, i64 %j.073.i.us.unr.ls2
  store i8 %conv.i.us.epil.ls, i8* %arrayidx6.i.us.epil.ls, align 1, !tbaa !22
  %conv7.i.us.epil.ls = and i64 %and.i.i.us.epil.ls, 255
  %arrayidx8.i.us.epil.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %conv7.i.us.epil.ls
  %57 = load i32, i32* %arrayidx8.i.us.epil.ls, align 4, !tbaa !59
  %inc9.i.us.epil.ls = add i32 %57, 1
  store i32 %inc9.i.us.epil.ls, i32* %arrayidx8.i.us.epil.ls, align 4, !tbaa !59
  br label %for.body17.i.us.preheader.ls

for.body17.i.us.preheader.ls:                     ; preds = %for.body4.i.us.epil.ls, %for.body17.i.us.preheader.loopexit.unr-lcssa.ls, %pfor.detach.us.ls
  br i1 %.ls2, label %for.cond.cleanup16.i.loopexit.us.unr-lcssa.ls, label %for.body17.i.us.ls.preheader

for.body17.i.us.ls.preheader:                     ; preds = %for.body17.i.us.preheader.ls
  br label %for.body17.i.us.ls

for.body17.i.us.ls:                               ; preds = %for.body17.i.us.ls.preheader, %for.body17.i.us.ls
  %i13.071.i.us.ls = phi i64 [ %inc21.i.us.7.ls, %for.body17.i.us.ls ], [ 0, %for.body17.i.us.ls.preheader ]
  %s.070.i.us.ls = phi i32 [ %add.i.us.7.ls, %for.body17.i.us.ls ], [ %conv.us.ls, %for.body17.i.us.ls.preheader ]
  %niter193.ls = phi i64 [ %niter193.nsub.7.ls, %for.body17.i.us.ls ], [ %unroll_iter192.ls, %for.body17.i.us.ls.preheader ]
  %arrayidx18.i.us.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %i13.071.i.us.ls
  %58 = load i32, i32* %arrayidx18.i.us.ls, align 4, !tbaa !59
  %add.i.us.ls = add i32 %58, %s.070.i.us.ls
  %arrayidx19.i.us.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %i13.071.i.us.ls
  store i32 %add.i.us.ls, i32* %arrayidx19.i.us.ls, align 4, !tbaa !59
  %inc21.i.us.ls = or i64 %i13.071.i.us.ls, 1
  %arrayidx18.i.us.1.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.ls
  %59 = load i32, i32* %arrayidx18.i.us.1.ls, align 4, !tbaa !59
  %add.i.us.1.ls = add i32 %59, %add.i.us.ls
  %arrayidx19.i.us.1.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.ls
  store i32 %add.i.us.1.ls, i32* %arrayidx19.i.us.1.ls, align 4, !tbaa !59
  %inc21.i.us.1.ls = or i64 %i13.071.i.us.ls, 2
  %arrayidx18.i.us.2.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.1.ls
  %60 = load i32, i32* %arrayidx18.i.us.2.ls, align 4, !tbaa !59
  %add.i.us.2.ls = add i32 %60, %add.i.us.1.ls
  %arrayidx19.i.us.2.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.1.ls
  store i32 %add.i.us.2.ls, i32* %arrayidx19.i.us.2.ls, align 4, !tbaa !59
  %inc21.i.us.2.ls = or i64 %i13.071.i.us.ls, 3
  %arrayidx18.i.us.3.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.2.ls
  %61 = load i32, i32* %arrayidx18.i.us.3.ls, align 4, !tbaa !59
  %add.i.us.3.ls = add i32 %61, %add.i.us.2.ls
  %arrayidx19.i.us.3.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.2.ls
  store i32 %add.i.us.3.ls, i32* %arrayidx19.i.us.3.ls, align 4, !tbaa !59
  %inc21.i.us.3.ls = or i64 %i13.071.i.us.ls, 4
  %arrayidx18.i.us.4.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.3.ls
  %62 = load i32, i32* %arrayidx18.i.us.4.ls, align 4, !tbaa !59
  %add.i.us.4.ls = add i32 %62, %add.i.us.3.ls
  %arrayidx19.i.us.4.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.3.ls
  store i32 %add.i.us.4.ls, i32* %arrayidx19.i.us.4.ls, align 4, !tbaa !59
  %inc21.i.us.4.ls = or i64 %i13.071.i.us.ls, 5
  %arrayidx18.i.us.5.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.4.ls
  %63 = load i32, i32* %arrayidx18.i.us.5.ls, align 4, !tbaa !59
  %add.i.us.5.ls = add i32 %63, %add.i.us.4.ls
  %arrayidx19.i.us.5.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.4.ls
  store i32 %add.i.us.5.ls, i32* %arrayidx19.i.us.5.ls, align 4, !tbaa !59
  %inc21.i.us.5.ls = or i64 %i13.071.i.us.ls, 6
  %arrayidx18.i.us.6.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.5.ls
  %64 = load i32, i32* %arrayidx18.i.us.6.ls, align 4, !tbaa !59
  %add.i.us.6.ls = add i32 %64, %add.i.us.5.ls
  %arrayidx19.i.us.6.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.5.ls
  store i32 %add.i.us.6.ls, i32* %arrayidx19.i.us.6.ls, align 4, !tbaa !59
  %inc21.i.us.6.ls = or i64 %i13.071.i.us.ls, 7
  %arrayidx18.i.us.7.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.6.ls
  %65 = load i32, i32* %arrayidx18.i.us.7.ls, align 4, !tbaa !59
  %add.i.us.7.ls = add i32 %65, %add.i.us.6.ls
  %arrayidx19.i.us.7.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.6.ls
  store i32 %add.i.us.7.ls, i32* %arrayidx19.i.us.7.ls, align 4, !tbaa !59
  %inc21.i.us.7.ls = add nuw nsw i64 %i13.071.i.us.ls, 8
  %niter193.nsub.7.ls = add i64 %niter193.ls, -8
  %niter193.ncmp.7.ls = icmp eq i64 %niter193.nsub.7.ls, 0
  br i1 %niter193.ncmp.7.ls, label %for.cond.cleanup16.i.loopexit.us.unr-lcssa.ls, label %for.body17.i.us.ls

for.cond.cleanup16.i.loopexit.us.unr-lcssa.ls:    ; preds = %for.body17.i.us.ls, %for.body17.i.us.preheader.ls
  %i13.071.i.us.unr.ls = phi i64 [ 0, %for.body17.i.us.preheader.ls ], [ %inc21.i.us.7.ls, %for.body17.i.us.ls ]
  %s.070.i.us.unr.ls = phi i32 [ %conv.us.ls, %for.body17.i.us.preheader.ls ], [ %add.i.us.7.ls, %for.body17.i.us.ls ]
  br i1 %lcmp.mod191.ls, label %for.cond.cleanup16.i.loopexit.us.ls, label %for.body17.i.us.epil.ls.preheader

for.body17.i.us.epil.ls.preheader:                ; preds = %for.cond.cleanup16.i.loopexit.us.unr-lcssa.ls
  br label %for.body17.i.us.epil.ls

for.body17.i.us.epil.ls:                          ; preds = %for.body17.i.us.epil.ls.preheader, %for.body17.i.us.epil.ls
  %i13.071.i.us.epil.ls = phi i64 [ %inc21.i.us.epil.ls, %for.body17.i.us.epil.ls ], [ %i13.071.i.us.unr.ls, %for.body17.i.us.epil.ls.preheader ]
  %s.070.i.us.epil.ls = phi i32 [ %add.i.us.epil.ls, %for.body17.i.us.epil.ls ], [ %s.070.i.us.unr.ls, %for.body17.i.us.epil.ls.preheader ]
  %epil.iter190.ls = phi i64 [ %epil.iter190.sub.ls, %for.body17.i.us.epil.ls ], [ %xtraiter189.ls, %for.body17.i.us.epil.ls.preheader ]
  %arrayidx18.i.us.epil.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %i13.071.i.us.epil.ls
  %66 = load i32, i32* %arrayidx18.i.us.epil.ls, align 4, !tbaa !59
  %add.i.us.epil.ls = add i32 %66, %s.070.i.us.epil.ls
  %arrayidx19.i.us.epil.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %i13.071.i.us.epil.ls
  store i32 %add.i.us.epil.ls, i32* %arrayidx19.i.us.epil.ls, align 4, !tbaa !59
  %inc21.i.us.epil.ls = add nuw nsw i64 %i13.071.i.us.epil.ls, 1
  %epil.iter190.sub.ls = add nsw i64 %epil.iter190.ls, -1
  %epil.iter190.cmp.ls = icmp eq i64 %epil.iter190.sub.ls, 0
  br i1 %epil.iter190.cmp.ls, label %for.cond.cleanup16.i.loopexit.us.ls, label %for.body17.i.us.epil.ls, !llvm.loop !435

for.cond.cleanup16.i.loopexit.us.ls:              ; preds = %for.body17.i.us.epil.ls, %for.cond.cleanup16.i.loopexit.us.unr-lcssa.ls
  br i1 %cmp272.i.us.ls, label %for.body27.i.us.ls.preheader, label %pfor.inc.us.ls

for.body27.i.us.ls.preheader:                     ; preds = %for.cond.cleanup16.i.loopexit.us.ls
  br label %for.body27.i.us.ls

for.body27.i.us.ls:                               ; preds = %for.body27.i.us.ls.preheader, %for.body27.i.us.ls
  %j23.068.in.i.us.ls = phi i64 [ %j23.068.i.us.ls, %for.body27.i.us.ls ], [ %53, %for.body27.i.us.ls.preheader ]
  %j23.068.i.us.ls = add nsw i64 %j23.068.in.i.us.ls, -1
  %arrayidx28.i.us.ls = getelementptr inbounds i8, i8* %add.ptr23.us.ls, i64 %j23.068.i.us.ls
  %67 = load i8, i8* %arrayidx28.i.us.ls, align 1, !tbaa !22
  %idxprom29.i.us.ls = zext i8 %67 to i64
  %arrayidx30.i.us.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %idxprom29.i.us.ls
  %68 = load i32, i32* %arrayidx30.i.us.ls, align 4, !tbaa !59
  %dec.i.us.ls = add i32 %68, -1
  store i32 %dec.i.us.ls, i32* %arrayidx30.i.us.ls, align 4, !tbaa !59
  %idxprom32.i.us.ls = zext i32 %dec.i.us.ls to i64
  %first.i.i122.us.ls = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %add.ptr21.us.ls, i64 %j23.068.i.us.ls, i32 0
  %69 = load i32, i32* %first.i.i122.us.ls, align 8, !tbaa !109
  %first2.i.i123.us.ls = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.ls, i64 %idxprom32.i.us.ls, i32 0
  store i32 %69, i32* %first2.i.i123.us.ls, align 8, !tbaa !109
  %second.i.i124.us.ls = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %add.ptr21.us.ls, i64 %j23.068.i.us.ls, i32 1
  %70 = bitcast %struct.vertex** %second.i.i124.us.ls to i64*
  %71 = load i64, i64* %70, align 8, !tbaa !111
  %second3.i.i125.us.ls = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.ls, i64 %idxprom32.i.us.ls, i32 1
  %72 = bitcast %struct.vertex** %second3.i.i125.us.ls to i64*
  store i64 %71, i64* %72, align 8, !tbaa !111
  %cmp25.i.us.ls = icmp sgt i64 %j23.068.in.i.us.ls, 1
  br i1 %cmp25.i.us.ls, label %for.body27.i.us.ls, label %pfor.inc.us.ls

pfor.inc.us.ls:                                   ; preds = %for.body27.i.us.ls, %for.cond.cleanup16.i.loopexit.us.ls
  %73 = icmp ult i64 %__begin.0156.us.ls, %.ls
  %inc.us.ls = add nuw nsw i64 %__begin.0156.us.ls, 1
  br i1 %73, label %pfor.detach.us.ls, label %pfor.cond.cleanup.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0__pfor.detach.ls(i64 %indvars.iv.start.ls, i64 %end.ls, i64 %.ls, [256 x i32]* align 1 %BK.ls, float %conv10.ls, i64 %n.ls, float %div.ls, %"struct.std::pair.6"* align 1 %A.ls, %"struct.std::pair.6"* align 1 %B.ls, i8* align 1 %Tmp.ls, i64 %sub.ls) unnamed_addr #15 {
if.then5.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %if.then5.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %if.then5.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %if.then5.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %if.then5.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount1 = sub i64 %end.ls, %indvars.iv.start.ls
  %9 = icmp ugt i64 %itercount1, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv.ls.ph = phi i64 [ %indvars.iv.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount3 = phi i64 [ %itercount1, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv.ls.dac2 = phi i64 [ %indvars.iv.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount3, 1
  %miditer = add nuw nsw i64 %indvars.iv.ls.dac2, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split4, label %.split.split

.split4:                                          ; preds = %16
  call fastcc void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0__pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac2, i64 %miditer, i64 %.ls, [256 x i32]* %BK.ls, float %conv10.ls, i64 %n.ls, float %div.ls, %"struct.std::pair.6"* %A.ls, %"struct.std::pair.6"* %B.ls, i8* %Tmp.ls, i64 %sub.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split4, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.ls:                             ; preds = %cond.end.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %cond.end.ls
  %indvars.iv.ls = phi i64 [ %indvars.iv.next.ls.pre-phi, %cond.end.ls ], [ %indvars.iv.ls.ph, %pfor.detach.ls.preheader ]
  %arrayidx12.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 0, i64 %indvars.iv.ls
  %48 = load i32, i32* %arrayidx12.ls, align 4, !tbaa !59
  %conv13.ls = zext i32 %48 to i64
  %cmp14.ls = icmp eq i64 %indvars.iv.ls, 255
  br i1 %cmp14.ls, label %cond.end.ls, label %cond.false.ls

cond.false.ls:                                    ; preds = %pfor.detach.ls
  %49 = add nuw nsw i64 %indvars.iv.ls, 1
  %arrayidx17.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 0, i64 %49
  %50 = load i32, i32* %arrayidx17.ls, align 4, !tbaa !59
  %conv18.ls = zext i32 %50 to i64
  %.pre.ls = uitofp i32 %50 to float
  br label %cond.end.ls

cond.end.ls:                                      ; preds = %pfor.detach.ls, %cond.false.ls
  %indvars.iv.next.ls.pre-phi = phi i64 [ %49, %cond.false.ls ], [ 256, %pfor.detach.ls ]
  %conv26.pre-phi.ls = phi float [ %.pre.ls, %cond.false.ls ], [ %conv10.ls, %pfor.detach.ls ]
  %cond.ls = phi i64 [ %conv18.ls, %cond.false.ls ], [ %n.ls, %pfor.detach.ls ]
  %sub19.ls = sub nsw i64 %cond.ls, %conv13.ls
  %conv20.ls = uitofp i32 %48 to float
  %mul21.ls = fmul fast float %conv20.ls, %div.ls
  %51 = call fast float @llvm.floor.f32(float %mul21.ls) #2
  %conv22.ls = fptosi float %51 to i64
  %add25.ls = add i64 %indvars.iv.next.ls.pre-phi, %conv22.ls
  %mul27.ls = fmul fast float %conv26.pre-phi.ls, %div.ls
  %52 = call fast float @llvm.floor.f32(float %mul27.ls) #2
  %conv29.ls = fptosi float %52 to i64
  %add31.ls = add nuw nsw i64 %indvars.iv.ls, 2
  %add32.ls = sub i64 %add31.ls, %add25.ls
  %sub33.ls = add i64 %add32.ls, %conv29.ls
  %add.ptr.ls = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %A.ls, i64 %conv13.ls
  %add.ptr34.ls = getelementptr inbounds %"struct.std::pair.6", %"struct.std::pair.6"* %B.ls, i64 %conv13.ls
  %add.ptr35.ls = getelementptr inbounds i8, i8* %Tmp.ls, i64 %conv13.ls
  %add.ptr36.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 %add25.ls
  call void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0_(%"struct.std::pair.6"* %add.ptr.ls, %"struct.std::pair.6"* %add.ptr34.ls, i8* %add.ptr35.ls, [256 x i32]* %add.ptr36.ls, i64 %sub33.ls, i64 %sub19.ls, i64 %sub.ls)
  %53 = icmp ult i64 %indvars.iv.ls, %end.ls
  br i1 %53, label %pfor.detach.ls, label %pfor.cond.cleanup.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN8sequence4scanIjlN5utils4addFIjEENS_4getAIjlEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach.ls(i64 %__begin.0208.start.ls, i64 %end.ls, i64 %.ls, i64 %.ls1, i64 %.ls2, i64 %.ls3, i64 %s.ls, i64 %e.ls, i32* nocapture readonly align 1 %g.coerce.ls, i32* nocapture align 1 %.ls4) unnamed_addr #15 {
pfor.detach.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount12 = sub i64 %end.ls, %__begin.0208.start.ls
  %9 = icmp ugt i64 %itercount12, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin.0208.ls.ph = phi i64 [ %__begin.0208.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount14 = phi i64 [ %itercount12, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin.0208.ls.dac13 = phi i64 [ %__begin.0208.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount14, 1
  %miditer = add nuw nsw i64 %__begin.0208.ls.dac13, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split15, label %.split.split

.split15:                                         ; preds = %16
  call fastcc void @_ZN8sequence4scanIjlN5utils4addFIjEENS_4getAIjlEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach.ls_.split.cilk(i64 %__begin.0208.ls.dac13, i64 %miditer, i64 %.ls, i64 %.ls1, i64 %.ls2, i64 %.ls3, i64 %s.ls, i64 %e.ls, i32* %g.coerce.ls, i32* %.ls4)
  br label %.split.split

.split.split:                                     ; preds = %.split15, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.ls:                             ; preds = %_ZN8sequence12reduceSerialIjlN5utils4addFIjEENS_4getAIjlEEEET_T0_S7_T1_T2_.exit.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %_ZN8sequence12reduceSerialIjlN5utils4addFIjEENS_4getAIjlEEEET_T0_S7_T1_T2_.exit.ls
  %__begin.0208.ls = phi i64 [ %inc.ls, %_ZN8sequence12reduceSerialIjlN5utils4addFIjEENS_4getAIjlEEEET_T0_S7_T1_T2_.exit.ls ], [ %__begin.0208.ls.ph, %pfor.detach.ls.preheader ]
  %48 = mul nsw i64 %__begin.0208.ls, -1024
  %49 = add i64 %48, %.ls1
  %50 = add i64 %48, %.ls2
  %51 = icmp sgt i64 %50, %.ls3
  %smax278.ls = select i1 %51, i64 %50, i64 %.ls3
  %52 = sub i64 %49, %smax278.ls
  %53 = add i64 %52, -32
  %54 = lshr i64 %53, 5
  %55 = add nuw nsw i64 %54, 1
  %mul22.ls = shl nsw i64 %__begin.0208.ls, 10
  %add23.ls = add nsw i64 %mul22.ls, %s.ls
  %add25.ls = add nsw i64 %add23.ls, 1024
  %cmp.i131.ls = icmp sgt i64 %add25.ls, %e.ls
  %.sroa.speculated192.ls = select i1 %cmp.i131.ls, i64 %e.ls, i64 %add25.ls
  %arrayidx.i.i182.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %add23.ls
  %56 = load i32, i32* %arrayidx.i.i182.ls, align 4, !tbaa !59
  %j.013.i.ls = add nsw i64 %add23.ls, 1
  %cmp14.i.ls = icmp slt i64 %j.013.i.ls, %.sroa.speculated192.ls
  br i1 %cmp14.i.ls, label %for.body.lr.ph.i183.ls, label %_ZN8sequence12reduceSerialIjlN5utils4addFIjEENS_4getAIjlEEEET_T0_S7_T1_T2_.exit.ls

for.body.lr.ph.i183.ls:                           ; preds = %pfor.detach.ls
  %min.iters.check.ls = icmp ult i64 %52, 32
  br i1 %min.iters.check.ls, label %for.body.i186.ls.preheader, label %vector.ph.ls

vector.ph.ls:                                     ; preds = %for.body.lr.ph.i183.ls
  %n.vec.ls = and i64 %52, -32
  %ind.end.ls = add i64 %n.vec.ls, %j.013.i.ls
  %57 = insertelement <8 x i32> <i32 undef, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>, i32 %56, i32 0
  %xtraiter279.ls = and i64 %55, 3
  %58 = icmp ult i64 %53, 96
  br i1 %58, label %middle.block.unr-lcssa.ls, label %vector.ph.new.ls

vector.ph.new.ls:                                 ; preds = %vector.ph.ls
  %unroll_iter.ls = sub nsw i64 %55, %xtraiter279.ls
  br label %vector.body.ls

vector.body.ls:                                   ; preds = %vector.body.ls, %vector.ph.new.ls
  %index.ls = phi i64 [ 0, %vector.ph.new.ls ], [ %index.next.3.ls, %vector.body.ls ]
  %vec.phi.ls = phi <8 x i32> [ %57, %vector.ph.new.ls ], [ %107, %vector.body.ls ]
  %vec.phi231.ls = phi <8 x i32> [ zeroinitializer, %vector.ph.new.ls ], [ %108, %vector.body.ls ]
  %vec.phi232.ls = phi <8 x i32> [ zeroinitializer, %vector.ph.new.ls ], [ %109, %vector.body.ls ]
  %vec.phi233.ls = phi <8 x i32> [ zeroinitializer, %vector.ph.new.ls ], [ %110, %vector.body.ls ]
  %niter.ls = phi i64 [ %unroll_iter.ls, %vector.ph.new.ls ], [ %niter.nsub.3.ls, %vector.body.ls ]
  %59 = add i64 %index.ls, %j.013.i.ls
  %60 = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %59
  %61 = bitcast i32* %60 to <8 x i32>*
  %wide.load.ls = load <8 x i32>, <8 x i32>* %61, align 4, !tbaa !59
  %62 = getelementptr i32, i32* %60, i64 8
  %63 = bitcast i32* %62 to <8 x i32>*
  %wide.load234.ls = load <8 x i32>, <8 x i32>* %63, align 4, !tbaa !59
  %64 = getelementptr i32, i32* %60, i64 16
  %65 = bitcast i32* %64 to <8 x i32>*
  %wide.load235.ls = load <8 x i32>, <8 x i32>* %65, align 4, !tbaa !59
  %66 = getelementptr i32, i32* %60, i64 24
  %67 = bitcast i32* %66 to <8 x i32>*
  %wide.load236.ls = load <8 x i32>, <8 x i32>* %67, align 4, !tbaa !59
  %68 = add <8 x i32> %wide.load.ls, %vec.phi.ls
  %69 = add <8 x i32> %wide.load234.ls, %vec.phi231.ls
  %70 = add <8 x i32> %wide.load235.ls, %vec.phi232.ls
  %71 = add <8 x i32> %wide.load236.ls, %vec.phi233.ls
  %index.next.ls = or i64 %index.ls, 32
  %72 = add i64 %index.next.ls, %j.013.i.ls
  %73 = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %72
  %74 = bitcast i32* %73 to <8 x i32>*
  %wide.load.1.ls = load <8 x i32>, <8 x i32>* %74, align 4, !tbaa !59
  %75 = getelementptr i32, i32* %73, i64 8
  %76 = bitcast i32* %75 to <8 x i32>*
  %wide.load234.1.ls = load <8 x i32>, <8 x i32>* %76, align 4, !tbaa !59
  %77 = getelementptr i32, i32* %73, i64 16
  %78 = bitcast i32* %77 to <8 x i32>*
  %wide.load235.1.ls = load <8 x i32>, <8 x i32>* %78, align 4, !tbaa !59
  %79 = getelementptr i32, i32* %73, i64 24
  %80 = bitcast i32* %79 to <8 x i32>*
  %wide.load236.1.ls = load <8 x i32>, <8 x i32>* %80, align 4, !tbaa !59
  %81 = add <8 x i32> %68, %wide.load.1.ls
  %82 = add <8 x i32> %69, %wide.load234.1.ls
  %83 = add <8 x i32> %70, %wide.load235.1.ls
  %84 = add <8 x i32> %71, %wide.load236.1.ls
  %index.next.1.ls = or i64 %index.ls, 64
  %85 = add i64 %index.next.1.ls, %j.013.i.ls
  %86 = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %85
  %87 = bitcast i32* %86 to <8 x i32>*
  %wide.load.2.ls = load <8 x i32>, <8 x i32>* %87, align 4, !tbaa !59
  %88 = getelementptr i32, i32* %86, i64 8
  %89 = bitcast i32* %88 to <8 x i32>*
  %wide.load234.2.ls = load <8 x i32>, <8 x i32>* %89, align 4, !tbaa !59
  %90 = getelementptr i32, i32* %86, i64 16
  %91 = bitcast i32* %90 to <8 x i32>*
  %wide.load235.2.ls = load <8 x i32>, <8 x i32>* %91, align 4, !tbaa !59
  %92 = getelementptr i32, i32* %86, i64 24
  %93 = bitcast i32* %92 to <8 x i32>*
  %wide.load236.2.ls = load <8 x i32>, <8 x i32>* %93, align 4, !tbaa !59
  %94 = add <8 x i32> %81, %wide.load.2.ls
  %95 = add <8 x i32> %82, %wide.load234.2.ls
  %96 = add <8 x i32> %83, %wide.load235.2.ls
  %97 = add <8 x i32> %84, %wide.load236.2.ls
  %index.next.2.ls = or i64 %index.ls, 96
  %98 = add i64 %index.next.2.ls, %j.013.i.ls
  %99 = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %98
  %100 = bitcast i32* %99 to <8 x i32>*
  %wide.load.3.ls = load <8 x i32>, <8 x i32>* %100, align 4, !tbaa !59
  %101 = getelementptr i32, i32* %99, i64 8
  %102 = bitcast i32* %101 to <8 x i32>*
  %wide.load234.3.ls = load <8 x i32>, <8 x i32>* %102, align 4, !tbaa !59
  %103 = getelementptr i32, i32* %99, i64 16
  %104 = bitcast i32* %103 to <8 x i32>*
  %wide.load235.3.ls = load <8 x i32>, <8 x i32>* %104, align 4, !tbaa !59
  %105 = getelementptr i32, i32* %99, i64 24
  %106 = bitcast i32* %105 to <8 x i32>*
  %wide.load236.3.ls = load <8 x i32>, <8 x i32>* %106, align 4, !tbaa !59
  %107 = add <8 x i32> %94, %wide.load.3.ls
  %108 = add <8 x i32> %95, %wide.load234.3.ls
  %109 = add <8 x i32> %96, %wide.load235.3.ls
  %110 = add <8 x i32> %97, %wide.load236.3.ls
  %index.next.3.ls = add i64 %index.ls, 128
  %niter.nsub.3.ls = add i64 %niter.ls, -4
  %niter.ncmp.3.ls = icmp eq i64 %niter.nsub.3.ls, 0
  br i1 %niter.ncmp.3.ls, label %middle.block.unr-lcssa.ls, label %vector.body.ls, !llvm.loop !436

middle.block.unr-lcssa.ls:                        ; preds = %vector.body.ls, %vector.ph.ls
  %.lcssa252.ph.ls = phi <8 x i32> [ undef, %vector.ph.ls ], [ %107, %vector.body.ls ]
  %.lcssa251.ph.ls = phi <8 x i32> [ undef, %vector.ph.ls ], [ %108, %vector.body.ls ]
  %.lcssa250.ph.ls = phi <8 x i32> [ undef, %vector.ph.ls ], [ %109, %vector.body.ls ]
  %.lcssa.ph.ls = phi <8 x i32> [ undef, %vector.ph.ls ], [ %110, %vector.body.ls ]
  %index.unr.ls = phi i64 [ 0, %vector.ph.ls ], [ %index.next.3.ls, %vector.body.ls ]
  %vec.phi.unr.ls = phi <8 x i32> [ %57, %vector.ph.ls ], [ %107, %vector.body.ls ]
  %vec.phi231.unr.ls = phi <8 x i32> [ zeroinitializer, %vector.ph.ls ], [ %108, %vector.body.ls ]
  %vec.phi232.unr.ls = phi <8 x i32> [ zeroinitializer, %vector.ph.ls ], [ %109, %vector.body.ls ]
  %vec.phi233.unr.ls = phi <8 x i32> [ zeroinitializer, %vector.ph.ls ], [ %110, %vector.body.ls ]
  %lcmp.mod280.ls = icmp eq i64 %xtraiter279.ls, 0
  br i1 %lcmp.mod280.ls, label %middle.block.ls, label %vector.body.epil.ls.preheader

vector.body.epil.ls.preheader:                    ; preds = %middle.block.unr-lcssa.ls
  br label %vector.body.epil.ls

vector.body.epil.ls:                              ; preds = %vector.body.epil.ls.preheader, %vector.body.epil.ls
  %index.epil.ls = phi i64 [ %index.next.epil.ls, %vector.body.epil.ls ], [ %index.unr.ls, %vector.body.epil.ls.preheader ]
  %vec.phi.epil.ls = phi <8 x i32> [ %120, %vector.body.epil.ls ], [ %vec.phi.unr.ls, %vector.body.epil.ls.preheader ]
  %vec.phi231.epil.ls = phi <8 x i32> [ %121, %vector.body.epil.ls ], [ %vec.phi231.unr.ls, %vector.body.epil.ls.preheader ]
  %vec.phi232.epil.ls = phi <8 x i32> [ %122, %vector.body.epil.ls ], [ %vec.phi232.unr.ls, %vector.body.epil.ls.preheader ]
  %vec.phi233.epil.ls = phi <8 x i32> [ %123, %vector.body.epil.ls ], [ %vec.phi233.unr.ls, %vector.body.epil.ls.preheader ]
  %epil.iter.ls = phi i64 [ %epil.iter.sub.ls, %vector.body.epil.ls ], [ %xtraiter279.ls, %vector.body.epil.ls.preheader ]
  %111 = add i64 %index.epil.ls, %j.013.i.ls
  %112 = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %111
  %113 = bitcast i32* %112 to <8 x i32>*
  %wide.load.epil.ls = load <8 x i32>, <8 x i32>* %113, align 4, !tbaa !59
  %114 = getelementptr i32, i32* %112, i64 8
  %115 = bitcast i32* %114 to <8 x i32>*
  %wide.load234.epil.ls = load <8 x i32>, <8 x i32>* %115, align 4, !tbaa !59
  %116 = getelementptr i32, i32* %112, i64 16
  %117 = bitcast i32* %116 to <8 x i32>*
  %wide.load235.epil.ls = load <8 x i32>, <8 x i32>* %117, align 4, !tbaa !59
  %118 = getelementptr i32, i32* %112, i64 24
  %119 = bitcast i32* %118 to <8 x i32>*
  %wide.load236.epil.ls = load <8 x i32>, <8 x i32>* %119, align 4, !tbaa !59
  %120 = add <8 x i32> %wide.load.epil.ls, %vec.phi.epil.ls
  %121 = add <8 x i32> %wide.load234.epil.ls, %vec.phi231.epil.ls
  %122 = add <8 x i32> %wide.load235.epil.ls, %vec.phi232.epil.ls
  %123 = add <8 x i32> %wide.load236.epil.ls, %vec.phi233.epil.ls
  %index.next.epil.ls = add i64 %index.epil.ls, 32
  %epil.iter.sub.ls = add nsw i64 %epil.iter.ls, -1
  %epil.iter.cmp.ls = icmp eq i64 %epil.iter.sub.ls, 0
  br i1 %epil.iter.cmp.ls, label %middle.block.ls, label %vector.body.epil.ls, !llvm.loop !437

middle.block.ls:                                  ; preds = %vector.body.epil.ls, %middle.block.unr-lcssa.ls
  %.lcssa252.ls = phi <8 x i32> [ %.lcssa252.ph.ls, %middle.block.unr-lcssa.ls ], [ %120, %vector.body.epil.ls ]
  %.lcssa251.ls = phi <8 x i32> [ %.lcssa251.ph.ls, %middle.block.unr-lcssa.ls ], [ %121, %vector.body.epil.ls ]
  %.lcssa250.ls = phi <8 x i32> [ %.lcssa250.ph.ls, %middle.block.unr-lcssa.ls ], [ %122, %vector.body.epil.ls ]
  %.lcssa.ls = phi <8 x i32> [ %.lcssa.ph.ls, %middle.block.unr-lcssa.ls ], [ %123, %vector.body.epil.ls ]
  %bin.rdx.ls = add <8 x i32> %.lcssa251.ls, %.lcssa252.ls
  %bin.rdx237.ls = add <8 x i32> %bin.rdx.ls, %.lcssa250.ls
  %bin.rdx238.ls = add <8 x i32> %bin.rdx237.ls, %.lcssa.ls
  %rdx.shuf.ls = shufflevector <8 x i32> %bin.rdx238.ls, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx239.ls = add <8 x i32> %rdx.shuf.ls, %bin.rdx238.ls
  %rdx.shuf240.ls = shufflevector <8 x i32> %bin.rdx239.ls, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx241.ls = add <8 x i32> %rdx.shuf240.ls, %bin.rdx239.ls
  %rdx.shuf242.ls = shufflevector <8 x i32> %bin.rdx241.ls, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx243.ls = add <8 x i32> %rdx.shuf242.ls, %bin.rdx241.ls
  %124 = extractelement <8 x i32> %bin.rdx243.ls, i32 0
  %cmp.n.ls = icmp eq i64 %52, %n.vec.ls
  br i1 %cmp.n.ls, label %_ZN8sequence12reduceSerialIjlN5utils4addFIjEENS_4getAIjlEEEET_T0_S7_T1_T2_.exit.ls, label %for.body.i186.ls.preheader

for.body.i186.ls.preheader:                       ; preds = %middle.block.ls, %for.body.lr.ph.i183.ls
  %j.016.i.ls.ph = phi i64 [ %ind.end.ls, %middle.block.ls ], [ %j.013.i.ls, %for.body.lr.ph.i183.ls ]
  %r.015.i.ls.ph = phi i32 [ %124, %middle.block.ls ], [ %56, %for.body.lr.ph.i183.ls ]
  br label %for.body.i186.ls

for.body.i186.ls:                                 ; preds = %for.body.i186.ls.preheader, %for.body.i186.ls
  %j.016.i.ls = phi i64 [ %j.0.i.ls, %for.body.i186.ls ], [ %j.016.i.ls.ph, %for.body.i186.ls.preheader ]
  %r.015.i.ls = phi i32 [ %add.i.i184.ls, %for.body.i186.ls ], [ %r.015.i.ls.ph, %for.body.i186.ls.preheader ]
  %arrayidx.i8.i.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %j.016.i.ls
  %125 = load i32, i32* %arrayidx.i8.i.ls, align 4, !tbaa !59
  %add.i.i184.ls = add i32 %125, %r.015.i.ls
  %j.0.i.ls = add nsw i64 %j.016.i.ls, 1
  %exitcond.i185.ls = icmp eq i64 %j.0.i.ls, %.sroa.speculated192.ls
  br i1 %exitcond.i185.ls, label %_ZN8sequence12reduceSerialIjlN5utils4addFIjEENS_4getAIjlEEEET_T0_S7_T1_T2_.exit.ls, label %for.body.i186.ls, !llvm.loop !438

_ZN8sequence12reduceSerialIjlN5utils4addFIjEENS_4getAIjlEEEET_T0_S7_T1_T2_.exit.ls: ; preds = %for.body.i186.ls, %middle.block.ls, %pfor.detach.ls
  %r.0.lcssa.i.ls = phi i32 [ %56, %pfor.detach.ls ], [ %124, %middle.block.ls ], [ %add.i.i184.ls, %for.body.i186.ls ]
  %arrayidx.ls = getelementptr inbounds i32, i32* %.ls4, i64 %__begin.0208.ls
  store i32 %r.0.lcssa.i.ls, i32* %arrayidx.ls, align 4, !tbaa !59
  %126 = icmp ult i64 %__begin.0208.ls, %end.ls
  %inc.ls = add nuw nsw i64 %__begin.0208.ls, 1
  br i1 %126, label %pfor.detach.ls, label %pfor.cond.cleanup.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN8sequence4scanIjlN5utils4addFIjEENS_4getAIjlEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.ls(i64 %__begin46.0206.start.ls, i64 %end.ls, i64 %.ls, i64 %.ls1, i64 %.ls2, i64 %.ls3, i64 %.ls4, i64 %s.ls, i64 %e.ls, i32* nocapture readonly align 1 %.ls5, i1 zeroext %back.ls, i32* nocapture readonly align 1 %g.coerce.ls, i32* nocapture align 1 %Out.ls) unnamed_addr #15 {
pfor.detach55.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach55.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach55.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach55.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach55.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount12 = sub i64 %end.ls, %__begin46.0206.start.ls
  %9 = icmp ugt i64 %itercount12, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach55.ls.preheader

pfor.detach55.ls.preheader:                       ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin46.0206.ls.ph = phi i64 [ %__begin46.0206.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach55.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount14 = phi i64 [ %itercount12, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin46.0206.ls.dac13 = phi i64 [ %__begin46.0206.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount14, 1
  %miditer = add nuw nsw i64 %__begin46.0206.ls.dac13, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split15, label %.split.split

.split15:                                         ; preds = %16
  call fastcc void @_ZN8sequence4scanIjlN5utils4addFIjEENS_4getAIjlEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.ls_.split.cilk(i64 %__begin46.0206.ls.dac13, i64 %miditer, i64 %.ls, i64 %.ls1, i64 %.ls2, i64 %.ls3, i64 %.ls4, i64 %s.ls, i64 %e.ls, i32* %.ls5, i1 %back.ls, i32* %g.coerce.ls, i32* %Out.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split15, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach55.ls.preheader

pfor.cond.cleanup54.loopexit298.ls:               ; preds = %pfor.inc76.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup54.loopexit298.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup54.loopexit298.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach55.ls:                                 ; preds = %pfor.detach55.ls.preheader, %pfor.inc76.ls
  %__begin46.0206.ls = phi i64 [ %inc77.ls, %pfor.inc76.ls ], [ %__begin46.0206.ls.ph, %pfor.detach55.ls.preheader ]
  %48 = mul nsw i64 %__begin46.0206.ls, -1024
  %49 = add i64 %48, %.ls1
  %50 = icmp sgt i64 %49, %.ls2
  %smax274.ls = select i1 %50, i64 %49, i64 %.ls2
  %51 = sub i64 %.ls3, %smax274.ls
  %52 = add i64 %48, %.ls4
  %53 = sub i64 %52, %smax274.ls
  %mul62.ls = shl nsw i64 %__begin46.0206.ls, 10
  %add63.ls = add nsw i64 %mul62.ls, %s.ls
  %add66.ls = add nsw i64 %add63.ls, 1024
  %cmp.i132.ls = icmp sgt i64 %add66.ls, %e.ls
  %.sroa.speculated.ls = select i1 %cmp.i132.ls, i64 %e.ls, i64 %add66.ls
  %arrayidx70.ls = getelementptr inbounds i32, i32* %.ls5, i64 %__begin46.0206.ls
  %54 = load i32, i32* %arrayidx70.ls, align 4, !tbaa !59
  br i1 %back.ls, label %if.then18.i159.ls, label %if.else31.i170.ls

if.else31.i170.ls:                                ; preds = %pfor.detach55.ls
  %cmp34110.i169.ls = icmp slt i64 %add63.ls, %.sroa.speculated.ls
  br i1 %cmp34110.i169.ls, label %for.body36.i179.preheader.ls, label %pfor.inc76.ls

for.body36.i179.preheader.ls:                     ; preds = %if.else31.i170.ls
  %xtraiter271.ls = and i64 %51, 7
  %lcmp.mod272.ls = icmp eq i64 %xtraiter271.ls, 0
  br i1 %lcmp.mod272.ls, label %for.body36.i179.prol.loopexit.ls, label %for.body36.i179.prol.ls.preheader

for.body36.i179.prol.ls.preheader:                ; preds = %for.body36.i179.preheader.ls
  br label %for.body36.i179.prol.ls

for.body36.i179.prol.ls:                          ; preds = %for.body36.i179.prol.ls.preheader, %for.body36.i179.prol.ls
  %i32.0112.i172.prol.ls = phi i64 [ %inc42.i177.prol.ls, %for.body36.i179.prol.ls ], [ %add63.ls, %for.body36.i179.prol.ls.preheader ]
  %r.3111.i173.prol.ls = phi i32 [ %add.i.i176.prol.ls, %for.body36.i179.prol.ls ], [ %54, %for.body36.i179.prol.ls.preheader ]
  %prol.iter273.ls = phi i64 [ %prol.iter273.sub.ls, %for.body36.i179.prol.ls ], [ %xtraiter271.ls, %for.body36.i179.prol.ls.preheader ]
  %arrayidx.i72.i174.prol.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i32.0112.i172.prol.ls
  %55 = load i32, i32* %arrayidx.i72.i174.prol.ls, align 4, !tbaa !59
  %arrayidx39.i175.prol.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i32.0112.i172.prol.ls
  store i32 %r.3111.i173.prol.ls, i32* %arrayidx39.i175.prol.ls, align 4, !tbaa !59
  %add.i.i176.prol.ls = add i32 %55, %r.3111.i173.prol.ls
  %inc42.i177.prol.ls = add nsw i64 %i32.0112.i172.prol.ls, 1
  %prol.iter273.sub.ls = add nsw i64 %prol.iter273.ls, -1
  %prol.iter273.cmp.ls = icmp eq i64 %prol.iter273.sub.ls, 0
  br i1 %prol.iter273.cmp.ls, label %for.body36.i179.prol.loopexit.ls, label %for.body36.i179.prol.ls, !llvm.loop !439

for.body36.i179.prol.loopexit.ls:                 ; preds = %for.body36.i179.prol.ls, %for.body36.i179.preheader.ls
  %i32.0112.i172.unr.ls = phi i64 [ %add63.ls, %for.body36.i179.preheader.ls ], [ %inc42.i177.prol.ls, %for.body36.i179.prol.ls ]
  %r.3111.i173.unr.ls = phi i32 [ %54, %for.body36.i179.preheader.ls ], [ %add.i.i176.prol.ls, %for.body36.i179.prol.ls ]
  %56 = icmp ult i64 %53, 7
  br i1 %56, label %pfor.inc76.ls, label %for.body36.i179.ls.preheader

for.body36.i179.ls.preheader:                     ; preds = %for.body36.i179.prol.loopexit.ls
  br label %for.body36.i179.ls

for.body36.i179.ls:                               ; preds = %for.body36.i179.ls.preheader, %for.body36.i179.ls
  %i32.0112.i172.ls = phi i64 [ %inc42.i177.7.ls, %for.body36.i179.ls ], [ %i32.0112.i172.unr.ls, %for.body36.i179.ls.preheader ]
  %r.3111.i173.ls = phi i32 [ %add.i.i176.7.ls, %for.body36.i179.ls ], [ %r.3111.i173.unr.ls, %for.body36.i179.ls.preheader ]
  %arrayidx.i72.i174.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i32.0112.i172.ls
  %57 = load i32, i32* %arrayidx.i72.i174.ls, align 4, !tbaa !59
  %arrayidx39.i175.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i32.0112.i172.ls
  store i32 %r.3111.i173.ls, i32* %arrayidx39.i175.ls, align 4, !tbaa !59
  %add.i.i176.ls = add i32 %57, %r.3111.i173.ls
  %inc42.i177.ls = add nsw i64 %i32.0112.i172.ls, 1
  %arrayidx.i72.i174.1.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc42.i177.ls
  %58 = load i32, i32* %arrayidx.i72.i174.1.ls, align 4, !tbaa !59
  %arrayidx39.i175.1.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc42.i177.ls
  store i32 %add.i.i176.ls, i32* %arrayidx39.i175.1.ls, align 4, !tbaa !59
  %add.i.i176.1.ls = add i32 %58, %add.i.i176.ls
  %inc42.i177.1.ls = add nsw i64 %i32.0112.i172.ls, 2
  %arrayidx.i72.i174.2.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc42.i177.1.ls
  %59 = load i32, i32* %arrayidx.i72.i174.2.ls, align 4, !tbaa !59
  %arrayidx39.i175.2.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc42.i177.1.ls
  store i32 %add.i.i176.1.ls, i32* %arrayidx39.i175.2.ls, align 4, !tbaa !59
  %add.i.i176.2.ls = add i32 %59, %add.i.i176.1.ls
  %inc42.i177.2.ls = add nsw i64 %i32.0112.i172.ls, 3
  %arrayidx.i72.i174.3.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc42.i177.2.ls
  %60 = load i32, i32* %arrayidx.i72.i174.3.ls, align 4, !tbaa !59
  %arrayidx39.i175.3.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc42.i177.2.ls
  store i32 %add.i.i176.2.ls, i32* %arrayidx39.i175.3.ls, align 4, !tbaa !59
  %add.i.i176.3.ls = add i32 %60, %add.i.i176.2.ls
  %inc42.i177.3.ls = add nsw i64 %i32.0112.i172.ls, 4
  %arrayidx.i72.i174.4.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc42.i177.3.ls
  %61 = load i32, i32* %arrayidx.i72.i174.4.ls, align 4, !tbaa !59
  %arrayidx39.i175.4.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc42.i177.3.ls
  store i32 %add.i.i176.3.ls, i32* %arrayidx39.i175.4.ls, align 4, !tbaa !59
  %add.i.i176.4.ls = add i32 %61, %add.i.i176.3.ls
  %inc42.i177.4.ls = add nsw i64 %i32.0112.i172.ls, 5
  %arrayidx.i72.i174.5.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc42.i177.4.ls
  %62 = load i32, i32* %arrayidx.i72.i174.5.ls, align 4, !tbaa !59
  %arrayidx39.i175.5.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc42.i177.4.ls
  store i32 %add.i.i176.4.ls, i32* %arrayidx39.i175.5.ls, align 4, !tbaa !59
  %add.i.i176.5.ls = add i32 %62, %add.i.i176.4.ls
  %inc42.i177.5.ls = add nsw i64 %i32.0112.i172.ls, 6
  %arrayidx.i72.i174.6.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc42.i177.5.ls
  %63 = load i32, i32* %arrayidx.i72.i174.6.ls, align 4, !tbaa !59
  %arrayidx39.i175.6.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc42.i177.5.ls
  store i32 %add.i.i176.5.ls, i32* %arrayidx39.i175.6.ls, align 4, !tbaa !59
  %add.i.i176.6.ls = add i32 %63, %add.i.i176.5.ls
  %inc42.i177.6.ls = add nsw i64 %i32.0112.i172.ls, 7
  %arrayidx.i72.i174.7.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc42.i177.6.ls
  %64 = load i32, i32* %arrayidx.i72.i174.7.ls, align 4, !tbaa !59
  %arrayidx39.i175.7.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc42.i177.6.ls
  store i32 %add.i.i176.6.ls, i32* %arrayidx39.i175.7.ls, align 4, !tbaa !59
  %add.i.i176.7.ls = add i32 %64, %add.i.i176.6.ls
  %inc42.i177.7.ls = add nsw i64 %i32.0112.i172.ls, 8
  %exitcond117.i178.7.ls = icmp eq i64 %inc42.i177.7.ls, %.sroa.speculated.ls
  br i1 %exitcond117.i178.7.ls, label %pfor.inc76.ls, label %for.body36.i179.ls

if.then18.i159.ls:                                ; preds = %pfor.detach55.ls
  %cmp22106.i158.ls = icmp sgt i64 %.sroa.speculated.ls, %add63.ls
  br i1 %cmp22106.i158.ls, label %for.body24.i168.preheader.ls, label %pfor.inc76.ls

for.body24.i168.preheader.ls:                     ; preds = %if.then18.i159.ls
  %xtraiter275.ls = and i64 %51, 7
  %lcmp.mod276.ls = icmp eq i64 %xtraiter275.ls, 0
  br i1 %lcmp.mod276.ls, label %for.body24.i168.prol.loopexit.ls, label %for.body24.i168.prol.ls.preheader

for.body24.i168.prol.ls.preheader:                ; preds = %for.body24.i168.preheader.ls
  br label %for.body24.i168.prol.ls

for.body24.i168.prol.ls:                          ; preds = %for.body24.i168.prol.ls.preheader, %for.body24.i168.prol.ls
  %i19.0108.in.i161.prol.ls = phi i64 [ %i19.0108.i163.prol.ls, %for.body24.i168.prol.ls ], [ %.sroa.speculated.ls, %for.body24.i168.prol.ls.preheader ]
  %r.2107.i162.prol.ls = phi i32 [ %add.i73.i166.prol.ls, %for.body24.i168.prol.ls ], [ %54, %for.body24.i168.prol.ls.preheader ]
  %prol.iter277.ls = phi i64 [ %prol.iter277.sub.ls, %for.body24.i168.prol.ls ], [ %xtraiter275.ls, %for.body24.i168.prol.ls.preheader ]
  %i19.0108.i163.prol.ls = add nsw i64 %i19.0108.in.i161.prol.ls, -1
  %arrayidx.i75.i164.prol.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i19.0108.i163.prol.ls
  %65 = load i32, i32* %arrayidx.i75.i164.prol.ls, align 4, !tbaa !59
  %arrayidx26.i165.prol.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i19.0108.i163.prol.ls
  store i32 %r.2107.i162.prol.ls, i32* %arrayidx26.i165.prol.ls, align 4, !tbaa !59
  %add.i73.i166.prol.ls = add i32 %65, %r.2107.i162.prol.ls
  %prol.iter277.sub.ls = add nsw i64 %prol.iter277.ls, -1
  %prol.iter277.cmp.ls = icmp eq i64 %prol.iter277.sub.ls, 0
  br i1 %prol.iter277.cmp.ls, label %for.body24.i168.prol.loopexit.ls, label %for.body24.i168.prol.ls, !llvm.loop !440

for.body24.i168.prol.loopexit.ls:                 ; preds = %for.body24.i168.prol.ls, %for.body24.i168.preheader.ls
  %i19.0108.in.i161.unr.ls = phi i64 [ %.sroa.speculated.ls, %for.body24.i168.preheader.ls ], [ %i19.0108.i163.prol.ls, %for.body24.i168.prol.ls ]
  %r.2107.i162.unr.ls = phi i32 [ %54, %for.body24.i168.preheader.ls ], [ %add.i73.i166.prol.ls, %for.body24.i168.prol.ls ]
  %66 = icmp ult i64 %53, 7
  br i1 %66, label %pfor.inc76.ls, label %for.body24.i168.ls.preheader

for.body24.i168.ls.preheader:                     ; preds = %for.body24.i168.prol.loopexit.ls
  br label %for.body24.i168.ls

for.body24.i168.ls:                               ; preds = %for.body24.i168.ls.preheader, %for.body24.i168.ls
  %i19.0108.in.i161.ls = phi i64 [ %i19.0108.i163.7.ls, %for.body24.i168.ls ], [ %i19.0108.in.i161.unr.ls, %for.body24.i168.ls.preheader ]
  %r.2107.i162.ls = phi i32 [ %add.i73.i166.7.ls, %for.body24.i168.ls ], [ %r.2107.i162.unr.ls, %for.body24.i168.ls.preheader ]
  %i19.0108.i163.ls = add nsw i64 %i19.0108.in.i161.ls, -1
  %arrayidx.i75.i164.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i19.0108.i163.ls
  %67 = load i32, i32* %arrayidx.i75.i164.ls, align 4, !tbaa !59
  %arrayidx26.i165.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i19.0108.i163.ls
  store i32 %r.2107.i162.ls, i32* %arrayidx26.i165.ls, align 4, !tbaa !59
  %add.i73.i166.ls = add i32 %67, %r.2107.i162.ls
  %i19.0108.i163.1.ls = add nsw i64 %i19.0108.in.i161.ls, -2
  %arrayidx.i75.i164.1.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i19.0108.i163.1.ls
  %68 = load i32, i32* %arrayidx.i75.i164.1.ls, align 4, !tbaa !59
  %arrayidx26.i165.1.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i19.0108.i163.1.ls
  store i32 %add.i73.i166.ls, i32* %arrayidx26.i165.1.ls, align 4, !tbaa !59
  %add.i73.i166.1.ls = add i32 %68, %add.i73.i166.ls
  %i19.0108.i163.2.ls = add nsw i64 %i19.0108.in.i161.ls, -3
  %arrayidx.i75.i164.2.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i19.0108.i163.2.ls
  %69 = load i32, i32* %arrayidx.i75.i164.2.ls, align 4, !tbaa !59
  %arrayidx26.i165.2.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i19.0108.i163.2.ls
  store i32 %add.i73.i166.1.ls, i32* %arrayidx26.i165.2.ls, align 4, !tbaa !59
  %add.i73.i166.2.ls = add i32 %69, %add.i73.i166.1.ls
  %i19.0108.i163.3.ls = add nsw i64 %i19.0108.in.i161.ls, -4
  %arrayidx.i75.i164.3.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i19.0108.i163.3.ls
  %70 = load i32, i32* %arrayidx.i75.i164.3.ls, align 4, !tbaa !59
  %arrayidx26.i165.3.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i19.0108.i163.3.ls
  store i32 %add.i73.i166.2.ls, i32* %arrayidx26.i165.3.ls, align 4, !tbaa !59
  %add.i73.i166.3.ls = add i32 %70, %add.i73.i166.2.ls
  %i19.0108.i163.4.ls = add nsw i64 %i19.0108.in.i161.ls, -5
  %arrayidx.i75.i164.4.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i19.0108.i163.4.ls
  %71 = load i32, i32* %arrayidx.i75.i164.4.ls, align 4, !tbaa !59
  %arrayidx26.i165.4.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i19.0108.i163.4.ls
  store i32 %add.i73.i166.3.ls, i32* %arrayidx26.i165.4.ls, align 4, !tbaa !59
  %add.i73.i166.4.ls = add i32 %71, %add.i73.i166.3.ls
  %i19.0108.i163.5.ls = add nsw i64 %i19.0108.in.i161.ls, -6
  %arrayidx.i75.i164.5.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i19.0108.i163.5.ls
  %72 = load i32, i32* %arrayidx.i75.i164.5.ls, align 4, !tbaa !59
  %arrayidx26.i165.5.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i19.0108.i163.5.ls
  store i32 %add.i73.i166.4.ls, i32* %arrayidx26.i165.5.ls, align 4, !tbaa !59
  %add.i73.i166.5.ls = add i32 %72, %add.i73.i166.4.ls
  %i19.0108.i163.6.ls = add nsw i64 %i19.0108.in.i161.ls, -7
  %arrayidx.i75.i164.6.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i19.0108.i163.6.ls
  %73 = load i32, i32* %arrayidx.i75.i164.6.ls, align 4, !tbaa !59
  %arrayidx26.i165.6.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i19.0108.i163.6.ls
  store i32 %add.i73.i166.5.ls, i32* %arrayidx26.i165.6.ls, align 4, !tbaa !59
  %add.i73.i166.6.ls = add i32 %73, %add.i73.i166.5.ls
  %i19.0108.i163.7.ls = add nsw i64 %i19.0108.in.i161.ls, -8
  %arrayidx.i75.i164.7.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i19.0108.i163.7.ls
  %74 = load i32, i32* %arrayidx.i75.i164.7.ls, align 4, !tbaa !59
  %arrayidx26.i165.7.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i19.0108.i163.7.ls
  store i32 %add.i73.i166.6.ls, i32* %arrayidx26.i165.7.ls, align 4, !tbaa !59
  %add.i73.i166.7.ls = add i32 %74, %add.i73.i166.6.ls
  %cmp22.i167.7.ls = icmp sgt i64 %i19.0108.i163.7.ls, %add63.ls
  br i1 %cmp22.i167.7.ls, label %for.body24.i168.ls, label %pfor.inc76.ls

pfor.inc76.ls:                                    ; preds = %for.body36.i179.ls, %for.body24.i168.ls, %if.else31.i170.ls, %for.body36.i179.prol.loopexit.ls, %if.then18.i159.ls, %for.body24.i168.prol.loopexit.ls
  %75 = icmp ult i64 %__begin46.0206.ls, %end.ls
  %inc77.ls = add nuw nsw i64 %__begin46.0206.ls, 1
  br i1 %75, label %pfor.detach55.ls, label %pfor.cond.cleanup54.loopexit298.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN8sequence4scanIjlN5utils4addFIjEENS_4getAIjlEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.us.ls(i64 %__begin46.0206.us.start.ls, i64 %end.ls, i64 %.ls, i64 %.ls1, i64 %.ls2, i64 %.ls3, i64 %.ls4, i64 %s.ls, i64 %e.ls, i32* nocapture readonly align 1 %.ls5, i1 zeroext %back.ls, i32* nocapture readonly align 1 %g.coerce.ls, i32* nocapture align 1 %Out.ls) unnamed_addr #15 {
pfor.detach55.us.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach55.us.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach55.us.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach55.us.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach55.us.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount12 = sub i64 %end.ls, %__begin46.0206.us.start.ls
  %9 = icmp ugt i64 %itercount12, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach55.us.ls.preheader

pfor.detach55.us.ls.preheader:                    ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin46.0206.us.ls.ph = phi i64 [ %__begin46.0206.us.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach55.us.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount14 = phi i64 [ %itercount12, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin46.0206.us.ls.dac13 = phi i64 [ %__begin46.0206.us.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount14, 1
  %miditer = add nuw nsw i64 %__begin46.0206.us.ls.dac13, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split15, label %.split.split

.split15:                                         ; preds = %16
  call fastcc void @_ZN8sequence4scanIjlN5utils4addFIjEENS_4getAIjlEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.us.ls_.split.cilk(i64 %__begin46.0206.us.ls.dac13, i64 %miditer, i64 %.ls, i64 %.ls1, i64 %.ls2, i64 %.ls3, i64 %.ls4, i64 %s.ls, i64 %e.ls, i32* %.ls5, i1 %back.ls, i32* %g.coerce.ls, i32* %Out.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split15, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach55.us.ls.preheader

pfor.cond.cleanup54.loopexit.ls:                  ; preds = %pfor.inc76.us.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup54.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup54.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach55.us.ls:                              ; preds = %pfor.detach55.us.ls.preheader, %pfor.inc76.us.ls
  %__begin46.0206.us.ls = phi i64 [ %inc77.us.ls, %pfor.inc76.us.ls ], [ %__begin46.0206.us.ls.ph, %pfor.detach55.us.ls.preheader ]
  %48 = mul nsw i64 %__begin46.0206.us.ls, -1024
  %49 = add i64 %48, %.ls1
  %50 = icmp sgt i64 %49, %.ls2
  %smax266.ls = select i1 %50, i64 %49, i64 %.ls2
  %51 = sub i64 %.ls3, %smax266.ls
  %52 = add i64 %48, %.ls4
  %53 = sub i64 %52, %smax266.ls
  %mul62.us.ls = shl nsw i64 %__begin46.0206.us.ls, 10
  %add63.us.ls = add nsw i64 %mul62.us.ls, %s.ls
  %add66.us.ls = add nsw i64 %add63.us.ls, 1024
  %cmp.i132.us.ls = icmp sgt i64 %add66.us.ls, %e.ls
  %.sroa.speculated.us.ls = select i1 %cmp.i132.us.ls, i64 %e.ls, i64 %add66.us.ls
  %arrayidx70.us.ls = getelementptr inbounds i32, i32* %.ls5, i64 %__begin46.0206.us.ls
  %54 = load i32, i32* %arrayidx70.us.ls, align 4, !tbaa !59
  br i1 %back.ls, label %if.then3.i136.us.ls, label %if.else.i147.us.ls

if.else.i147.us.ls:                               ; preds = %pfor.detach55.us.ls
  %cmp7101.i146.us.ls = icmp slt i64 %add63.us.ls, %.sroa.speculated.us.ls
  br i1 %cmp7101.i146.us.ls, label %for.body9.i156.us.preheader.ls, label %pfor.inc76.us.ls

for.body9.i156.us.preheader.ls:                   ; preds = %if.else.i147.us.ls
  %xtraiter263.ls = and i64 %51, 7
  %lcmp.mod264.ls = icmp eq i64 %xtraiter263.ls, 0
  br i1 %lcmp.mod264.ls, label %for.body9.i156.us.prol.loopexit.ls, label %for.body9.i156.us.prol.ls.preheader

for.body9.i156.us.prol.ls.preheader:              ; preds = %for.body9.i156.us.preheader.ls
  br label %for.body9.i156.us.prol.ls

for.body9.i156.us.prol.ls:                        ; preds = %for.body9.i156.us.prol.ls.preheader, %for.body9.i156.us.prol.ls
  %i5.0103.i149.us.prol.ls = phi i64 [ %inc.i154.us.prol.ls, %for.body9.i156.us.prol.ls ], [ %add63.us.ls, %for.body9.i156.us.prol.ls.preheader ]
  %r.1102.i150.us.prol.ls = phi i32 [ %add.i76.i152.us.prol.ls, %for.body9.i156.us.prol.ls ], [ %54, %for.body9.i156.us.prol.ls.preheader ]
  %prol.iter265.ls = phi i64 [ %prol.iter265.sub.ls, %for.body9.i156.us.prol.ls ], [ %xtraiter263.ls, %for.body9.i156.us.prol.ls.preheader ]
  %arrayidx.i78.i151.us.prol.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i5.0103.i149.us.prol.ls
  %55 = load i32, i32* %arrayidx.i78.i151.us.prol.ls, align 4, !tbaa !59
  %add.i76.i152.us.prol.ls = add i32 %55, %r.1102.i150.us.prol.ls
  %arrayidx13.i153.us.prol.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i5.0103.i149.us.prol.ls
  store i32 %add.i76.i152.us.prol.ls, i32* %arrayidx13.i153.us.prol.ls, align 4, !tbaa !59
  %inc.i154.us.prol.ls = add nsw i64 %i5.0103.i149.us.prol.ls, 1
  %prol.iter265.sub.ls = add nsw i64 %prol.iter265.ls, -1
  %prol.iter265.cmp.ls = icmp eq i64 %prol.iter265.sub.ls, 0
  br i1 %prol.iter265.cmp.ls, label %for.body9.i156.us.prol.loopexit.ls, label %for.body9.i156.us.prol.ls, !llvm.loop !441

for.body9.i156.us.prol.loopexit.ls:               ; preds = %for.body9.i156.us.prol.ls, %for.body9.i156.us.preheader.ls
  %i5.0103.i149.us.unr.ls = phi i64 [ %add63.us.ls, %for.body9.i156.us.preheader.ls ], [ %inc.i154.us.prol.ls, %for.body9.i156.us.prol.ls ]
  %r.1102.i150.us.unr.ls = phi i32 [ %54, %for.body9.i156.us.preheader.ls ], [ %add.i76.i152.us.prol.ls, %for.body9.i156.us.prol.ls ]
  %56 = icmp ult i64 %53, 7
  br i1 %56, label %pfor.inc76.us.ls, label %for.body9.i156.us.ls.preheader

for.body9.i156.us.ls.preheader:                   ; preds = %for.body9.i156.us.prol.loopexit.ls
  br label %for.body9.i156.us.ls

for.body9.i156.us.ls:                             ; preds = %for.body9.i156.us.ls.preheader, %for.body9.i156.us.ls
  %i5.0103.i149.us.ls = phi i64 [ %inc.i154.us.7.ls, %for.body9.i156.us.ls ], [ %i5.0103.i149.us.unr.ls, %for.body9.i156.us.ls.preheader ]
  %r.1102.i150.us.ls = phi i32 [ %add.i76.i152.us.7.ls, %for.body9.i156.us.ls ], [ %r.1102.i150.us.unr.ls, %for.body9.i156.us.ls.preheader ]
  %arrayidx.i78.i151.us.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i5.0103.i149.us.ls
  %57 = load i32, i32* %arrayidx.i78.i151.us.ls, align 4, !tbaa !59
  %add.i76.i152.us.ls = add i32 %57, %r.1102.i150.us.ls
  %arrayidx13.i153.us.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i5.0103.i149.us.ls
  store i32 %add.i76.i152.us.ls, i32* %arrayidx13.i153.us.ls, align 4, !tbaa !59
  %inc.i154.us.ls = add nsw i64 %i5.0103.i149.us.ls, 1
  %arrayidx.i78.i151.us.1.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc.i154.us.ls
  %58 = load i32, i32* %arrayidx.i78.i151.us.1.ls, align 4, !tbaa !59
  %add.i76.i152.us.1.ls = add i32 %58, %add.i76.i152.us.ls
  %arrayidx13.i153.us.1.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc.i154.us.ls
  store i32 %add.i76.i152.us.1.ls, i32* %arrayidx13.i153.us.1.ls, align 4, !tbaa !59
  %inc.i154.us.1.ls = add nsw i64 %i5.0103.i149.us.ls, 2
  %arrayidx.i78.i151.us.2.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc.i154.us.1.ls
  %59 = load i32, i32* %arrayidx.i78.i151.us.2.ls, align 4, !tbaa !59
  %add.i76.i152.us.2.ls = add i32 %59, %add.i76.i152.us.1.ls
  %arrayidx13.i153.us.2.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc.i154.us.1.ls
  store i32 %add.i76.i152.us.2.ls, i32* %arrayidx13.i153.us.2.ls, align 4, !tbaa !59
  %inc.i154.us.2.ls = add nsw i64 %i5.0103.i149.us.ls, 3
  %arrayidx.i78.i151.us.3.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc.i154.us.2.ls
  %60 = load i32, i32* %arrayidx.i78.i151.us.3.ls, align 4, !tbaa !59
  %add.i76.i152.us.3.ls = add i32 %60, %add.i76.i152.us.2.ls
  %arrayidx13.i153.us.3.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc.i154.us.2.ls
  store i32 %add.i76.i152.us.3.ls, i32* %arrayidx13.i153.us.3.ls, align 4, !tbaa !59
  %inc.i154.us.3.ls = add nsw i64 %i5.0103.i149.us.ls, 4
  %arrayidx.i78.i151.us.4.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc.i154.us.3.ls
  %61 = load i32, i32* %arrayidx.i78.i151.us.4.ls, align 4, !tbaa !59
  %add.i76.i152.us.4.ls = add i32 %61, %add.i76.i152.us.3.ls
  %arrayidx13.i153.us.4.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc.i154.us.3.ls
  store i32 %add.i76.i152.us.4.ls, i32* %arrayidx13.i153.us.4.ls, align 4, !tbaa !59
  %inc.i154.us.4.ls = add nsw i64 %i5.0103.i149.us.ls, 5
  %arrayidx.i78.i151.us.5.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc.i154.us.4.ls
  %62 = load i32, i32* %arrayidx.i78.i151.us.5.ls, align 4, !tbaa !59
  %add.i76.i152.us.5.ls = add i32 %62, %add.i76.i152.us.4.ls
  %arrayidx13.i153.us.5.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc.i154.us.4.ls
  store i32 %add.i76.i152.us.5.ls, i32* %arrayidx13.i153.us.5.ls, align 4, !tbaa !59
  %inc.i154.us.5.ls = add nsw i64 %i5.0103.i149.us.ls, 6
  %arrayidx.i78.i151.us.6.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc.i154.us.5.ls
  %63 = load i32, i32* %arrayidx.i78.i151.us.6.ls, align 4, !tbaa !59
  %add.i76.i152.us.6.ls = add i32 %63, %add.i76.i152.us.5.ls
  %arrayidx13.i153.us.6.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc.i154.us.5.ls
  store i32 %add.i76.i152.us.6.ls, i32* %arrayidx13.i153.us.6.ls, align 4, !tbaa !59
  %inc.i154.us.6.ls = add nsw i64 %i5.0103.i149.us.ls, 7
  %arrayidx.i78.i151.us.7.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc.i154.us.6.ls
  %64 = load i32, i32* %arrayidx.i78.i151.us.7.ls, align 4, !tbaa !59
  %add.i76.i152.us.7.ls = add i32 %64, %add.i76.i152.us.6.ls
  %arrayidx13.i153.us.7.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc.i154.us.6.ls
  store i32 %add.i76.i152.us.7.ls, i32* %arrayidx13.i153.us.7.ls, align 4, !tbaa !59
  %inc.i154.us.7.ls = add nsw i64 %i5.0103.i149.us.ls, 8
  %exitcond.i155.us.7.ls = icmp eq i64 %inc.i154.us.7.ls, %.sroa.speculated.us.ls
  br i1 %exitcond.i155.us.7.ls, label %pfor.inc76.us.ls, label %for.body9.i156.us.ls

if.then3.i136.us.ls:                              ; preds = %pfor.detach55.us.ls
  %cmp98.i135.us.ls = icmp sgt i64 %.sroa.speculated.us.ls, %add63.us.ls
  br i1 %cmp98.i135.us.ls, label %for.body.i145.us.preheader.ls, label %pfor.inc76.us.ls

for.body.i145.us.preheader.ls:                    ; preds = %if.then3.i136.us.ls
  %xtraiter267.ls = and i64 %51, 7
  %lcmp.mod268.ls = icmp eq i64 %xtraiter267.ls, 0
  br i1 %lcmp.mod268.ls, label %for.body.i145.us.prol.loopexit.ls, label %for.body.i145.us.prol.ls.preheader

for.body.i145.us.prol.ls.preheader:               ; preds = %for.body.i145.us.preheader.ls
  br label %for.body.i145.us.prol.ls

for.body.i145.us.prol.ls:                         ; preds = %for.body.i145.us.prol.ls.preheader, %for.body.i145.us.prol.ls
  %i.0100.in.i138.us.prol.ls = phi i64 [ %i.0100.i140.us.prol.ls, %for.body.i145.us.prol.ls ], [ %.sroa.speculated.us.ls, %for.body.i145.us.prol.ls.preheader ]
  %r.099.i139.us.prol.ls = phi i32 [ %add.i79.i142.us.prol.ls, %for.body.i145.us.prol.ls ], [ %54, %for.body.i145.us.prol.ls.preheader ]
  %prol.iter269.ls = phi i64 [ %prol.iter269.sub.ls, %for.body.i145.us.prol.ls ], [ %xtraiter267.ls, %for.body.i145.us.prol.ls.preheader ]
  %i.0100.i140.us.prol.ls = add nsw i64 %i.0100.in.i138.us.prol.ls, -1
  %arrayidx.i.i141.us.prol.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i.0100.i140.us.prol.ls
  %65 = load i32, i32* %arrayidx.i.i141.us.prol.ls, align 4, !tbaa !59
  %add.i79.i142.us.prol.ls = add i32 %65, %r.099.i139.us.prol.ls
  %arrayidx.i143.us.prol.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i.0100.i140.us.prol.ls
  store i32 %add.i79.i142.us.prol.ls, i32* %arrayidx.i143.us.prol.ls, align 4, !tbaa !59
  %prol.iter269.sub.ls = add nsw i64 %prol.iter269.ls, -1
  %prol.iter269.cmp.ls = icmp eq i64 %prol.iter269.sub.ls, 0
  br i1 %prol.iter269.cmp.ls, label %for.body.i145.us.prol.loopexit.ls, label %for.body.i145.us.prol.ls, !llvm.loop !442

for.body.i145.us.prol.loopexit.ls:                ; preds = %for.body.i145.us.prol.ls, %for.body.i145.us.preheader.ls
  %i.0100.in.i138.us.unr.ls = phi i64 [ %.sroa.speculated.us.ls, %for.body.i145.us.preheader.ls ], [ %i.0100.i140.us.prol.ls, %for.body.i145.us.prol.ls ]
  %r.099.i139.us.unr.ls = phi i32 [ %54, %for.body.i145.us.preheader.ls ], [ %add.i79.i142.us.prol.ls, %for.body.i145.us.prol.ls ]
  %66 = icmp ult i64 %53, 7
  br i1 %66, label %pfor.inc76.us.ls, label %for.body.i145.us.ls.preheader

for.body.i145.us.ls.preheader:                    ; preds = %for.body.i145.us.prol.loopexit.ls
  br label %for.body.i145.us.ls

for.body.i145.us.ls:                              ; preds = %for.body.i145.us.ls.preheader, %for.body.i145.us.ls
  %i.0100.in.i138.us.ls = phi i64 [ %i.0100.i140.us.7.ls, %for.body.i145.us.ls ], [ %i.0100.in.i138.us.unr.ls, %for.body.i145.us.ls.preheader ]
  %r.099.i139.us.ls = phi i32 [ %add.i79.i142.us.7.ls, %for.body.i145.us.ls ], [ %r.099.i139.us.unr.ls, %for.body.i145.us.ls.preheader ]
  %i.0100.i140.us.ls = add nsw i64 %i.0100.in.i138.us.ls, -1
  %arrayidx.i.i141.us.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i.0100.i140.us.ls
  %67 = load i32, i32* %arrayidx.i.i141.us.ls, align 4, !tbaa !59
  %add.i79.i142.us.ls = add i32 %67, %r.099.i139.us.ls
  %arrayidx.i143.us.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i.0100.i140.us.ls
  store i32 %add.i79.i142.us.ls, i32* %arrayidx.i143.us.ls, align 4, !tbaa !59
  %i.0100.i140.us.1.ls = add nsw i64 %i.0100.in.i138.us.ls, -2
  %arrayidx.i.i141.us.1.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i.0100.i140.us.1.ls
  %68 = load i32, i32* %arrayidx.i.i141.us.1.ls, align 4, !tbaa !59
  %add.i79.i142.us.1.ls = add i32 %68, %add.i79.i142.us.ls
  %arrayidx.i143.us.1.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i.0100.i140.us.1.ls
  store i32 %add.i79.i142.us.1.ls, i32* %arrayidx.i143.us.1.ls, align 4, !tbaa !59
  %i.0100.i140.us.2.ls = add nsw i64 %i.0100.in.i138.us.ls, -3
  %arrayidx.i.i141.us.2.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i.0100.i140.us.2.ls
  %69 = load i32, i32* %arrayidx.i.i141.us.2.ls, align 4, !tbaa !59
  %add.i79.i142.us.2.ls = add i32 %69, %add.i79.i142.us.1.ls
  %arrayidx.i143.us.2.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i.0100.i140.us.2.ls
  store i32 %add.i79.i142.us.2.ls, i32* %arrayidx.i143.us.2.ls, align 4, !tbaa !59
  %i.0100.i140.us.3.ls = add nsw i64 %i.0100.in.i138.us.ls, -4
  %arrayidx.i.i141.us.3.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i.0100.i140.us.3.ls
  %70 = load i32, i32* %arrayidx.i.i141.us.3.ls, align 4, !tbaa !59
  %add.i79.i142.us.3.ls = add i32 %70, %add.i79.i142.us.2.ls
  %arrayidx.i143.us.3.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i.0100.i140.us.3.ls
  store i32 %add.i79.i142.us.3.ls, i32* %arrayidx.i143.us.3.ls, align 4, !tbaa !59
  %i.0100.i140.us.4.ls = add nsw i64 %i.0100.in.i138.us.ls, -5
  %arrayidx.i.i141.us.4.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i.0100.i140.us.4.ls
  %71 = load i32, i32* %arrayidx.i.i141.us.4.ls, align 4, !tbaa !59
  %add.i79.i142.us.4.ls = add i32 %71, %add.i79.i142.us.3.ls
  %arrayidx.i143.us.4.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i.0100.i140.us.4.ls
  store i32 %add.i79.i142.us.4.ls, i32* %arrayidx.i143.us.4.ls, align 4, !tbaa !59
  %i.0100.i140.us.5.ls = add nsw i64 %i.0100.in.i138.us.ls, -6
  %arrayidx.i.i141.us.5.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i.0100.i140.us.5.ls
  %72 = load i32, i32* %arrayidx.i.i141.us.5.ls, align 4, !tbaa !59
  %add.i79.i142.us.5.ls = add i32 %72, %add.i79.i142.us.4.ls
  %arrayidx.i143.us.5.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i.0100.i140.us.5.ls
  store i32 %add.i79.i142.us.5.ls, i32* %arrayidx.i143.us.5.ls, align 4, !tbaa !59
  %i.0100.i140.us.6.ls = add nsw i64 %i.0100.in.i138.us.ls, -7
  %arrayidx.i.i141.us.6.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i.0100.i140.us.6.ls
  %73 = load i32, i32* %arrayidx.i.i141.us.6.ls, align 4, !tbaa !59
  %add.i79.i142.us.6.ls = add i32 %73, %add.i79.i142.us.5.ls
  %arrayidx.i143.us.6.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i.0100.i140.us.6.ls
  store i32 %add.i79.i142.us.6.ls, i32* %arrayidx.i143.us.6.ls, align 4, !tbaa !59
  %i.0100.i140.us.7.ls = add nsw i64 %i.0100.in.i138.us.ls, -8
  %arrayidx.i.i141.us.7.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i.0100.i140.us.7.ls
  %74 = load i32, i32* %arrayidx.i.i141.us.7.ls, align 4, !tbaa !59
  %add.i79.i142.us.7.ls = add i32 %74, %add.i79.i142.us.6.ls
  %arrayidx.i143.us.7.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i.0100.i140.us.7.ls
  store i32 %add.i79.i142.us.7.ls, i32* %arrayidx.i143.us.7.ls, align 4, !tbaa !59
  %cmp.i144.us.7.ls = icmp sgt i64 %i.0100.i140.us.7.ls, %add63.us.ls
  br i1 %cmp.i144.us.7.ls, label %for.body.i145.us.ls, label %pfor.inc76.us.ls

pfor.inc76.us.ls:                                 ; preds = %for.body9.i156.us.ls, %for.body.i145.us.ls, %if.else.i147.us.ls, %for.body9.i156.us.prol.loopexit.ls, %if.then3.i136.us.ls, %for.body.i145.us.prol.loopexit.ls
  %75 = icmp ult i64 %__begin46.0206.us.ls, %end.ls
  %inc77.us.ls = add nuw nsw i64 %__begin46.0206.us.ls, 1
  br i1 %75, label %pfor.detach55.us.ls, label %pfor.cond.cleanup54.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN8sequence4scanIilN5utils4minFIiEENS_4getAIilEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach.ls(i64 %__begin.0213.start.ls, i64 %end.ls, i64 %.ls, i64 %.ls1, i64 %.ls2, i64 %.ls3, i64 %s.ls, i64 %e.ls, i32* nocapture readonly align 1 %g.coerce.ls, i32* nocapture align 1 %.ls4) unnamed_addr #15 {
pfor.detach.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount8 = sub i64 %end.ls, %__begin.0213.start.ls
  %9 = icmp ugt i64 %itercount8, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin.0213.ls.ph = phi i64 [ %__begin.0213.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount10 = phi i64 [ %itercount8, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin.0213.ls.dac9 = phi i64 [ %__begin.0213.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount10, 1
  %miditer = add nuw nsw i64 %__begin.0213.ls.dac9, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split11, label %.split.split

.split11:                                         ; preds = %16
  call fastcc void @_ZN8sequence4scanIilN5utils4minFIiEENS_4getAIilEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach.ls_.split.cilk(i64 %__begin.0213.ls.dac9, i64 %miditer, i64 %.ls, i64 %.ls1, i64 %.ls2, i64 %.ls3, i64 %s.ls, i64 %e.ls, i32* %g.coerce.ls, i32* %.ls4)
  br label %.split.split

.split.split:                                     ; preds = %.split11, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.ls:                             ; preds = %_ZN8sequence12reduceSerialIilN5utils4minFIiEENS_4getAIilEEEET_T0_S7_T1_T2_.exit.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %_ZN8sequence12reduceSerialIilN5utils4minFIiEENS_4getAIilEEEET_T0_S7_T1_T2_.exit.ls
  %__begin.0213.ls = phi i64 [ %inc.ls, %_ZN8sequence12reduceSerialIilN5utils4minFIiEENS_4getAIilEEEET_T0_S7_T1_T2_.exit.ls ], [ %__begin.0213.ls.ph, %pfor.detach.ls.preheader ]
  %48 = mul nsw i64 %__begin.0213.ls, -1024
  %49 = add i64 %48, %.ls1
  %50 = add i64 %48, %.ls2
  %51 = icmp sgt i64 %50, %.ls3
  %smax288.ls = select i1 %51, i64 %50, i64 %.ls3
  %52 = sub i64 %49, %smax288.ls
  %53 = add i64 %52, -32
  %54 = lshr i64 %53, 5
  %55 = add nuw nsw i64 %54, 1
  %mul22.ls = shl nsw i64 %__begin.0213.ls, 10
  %add23.ls = add nsw i64 %mul22.ls, %s.ls
  %add25.ls = add nsw i64 %add23.ls, 1024
  %cmp.i131.ls = icmp sgt i64 %add25.ls, %e.ls
  %.sroa.speculated197.ls = select i1 %cmp.i131.ls, i64 %e.ls, i64 %add25.ls
  %arrayidx.i.i186.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %add23.ls
  %56 = load i32, i32* %arrayidx.i.i186.ls, align 4, !tbaa !59
  %j.013.i.ls = add nsw i64 %add23.ls, 1
  %cmp14.i.ls = icmp slt i64 %j.013.i.ls, %.sroa.speculated197.ls
  br i1 %cmp14.i.ls, label %for.body.lr.ph.i187.ls, label %_ZN8sequence12reduceSerialIilN5utils4minFIiEENS_4getAIilEEEET_T0_S7_T1_T2_.exit.ls

for.body.lr.ph.i187.ls:                           ; preds = %pfor.detach.ls
  %min.iters.check.ls = icmp ult i64 %52, 32
  br i1 %min.iters.check.ls, label %for.body.i191.ls.preheader, label %vector.ph.ls

vector.ph.ls:                                     ; preds = %for.body.lr.ph.i187.ls
  %n.vec.ls = and i64 %52, -32
  %ind.end.ls = add i64 %n.vec.ls, %j.013.i.ls
  %minmax.ident.splatinsert.ls = insertelement <8 x i32> undef, i32 %56, i32 0
  %minmax.ident.splat.ls = shufflevector <8 x i32> %minmax.ident.splatinsert.ls, <8 x i32> undef, <8 x i32> zeroinitializer
  %xtraiter289.ls = and i64 %55, 1
  %57 = icmp eq i64 %54, 0
  br i1 %57, label %middle.block.unr-lcssa.ls, label %vector.ph.new.ls

vector.ph.new.ls:                                 ; preds = %vector.ph.ls
  %unroll_iter.ls = sub nsw i64 %55, %xtraiter289.ls
  br label %vector.body.ls

vector.body.ls:                                   ; preds = %vector.body.ls, %vector.ph.new.ls
  %index.ls = phi i64 [ 0, %vector.ph.new.ls ], [ %index.next.1.ls, %vector.body.ls ]
  %vec.phi.ls = phi <8 x i32> [ %minmax.ident.splat.ls, %vector.ph.new.ls ], [ %88, %vector.body.ls ]
  %vec.phi236.ls = phi <8 x i32> [ %minmax.ident.splat.ls, %vector.ph.new.ls ], [ %89, %vector.body.ls ]
  %vec.phi237.ls = phi <8 x i32> [ %minmax.ident.splat.ls, %vector.ph.new.ls ], [ %90, %vector.body.ls ]
  %vec.phi238.ls = phi <8 x i32> [ %minmax.ident.splat.ls, %vector.ph.new.ls ], [ %91, %vector.body.ls ]
  %niter.ls = phi i64 [ %unroll_iter.ls, %vector.ph.new.ls ], [ %niter.nsub.1.ls, %vector.body.ls ]
  %58 = add i64 %index.ls, %j.013.i.ls
  %59 = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %58
  %60 = bitcast i32* %59 to <8 x i32>*
  %wide.load.ls = load <8 x i32>, <8 x i32>* %60, align 4, !tbaa !59
  %61 = getelementptr i32, i32* %59, i64 8
  %62 = bitcast i32* %61 to <8 x i32>*
  %wide.load239.ls = load <8 x i32>, <8 x i32>* %62, align 4, !tbaa !59
  %63 = getelementptr i32, i32* %59, i64 16
  %64 = bitcast i32* %63 to <8 x i32>*
  %wide.load240.ls = load <8 x i32>, <8 x i32>* %64, align 4, !tbaa !59
  %65 = getelementptr i32, i32* %59, i64 24
  %66 = bitcast i32* %65 to <8 x i32>*
  %wide.load241.ls = load <8 x i32>, <8 x i32>* %66, align 4, !tbaa !59
  %67 = icmp slt <8 x i32> %vec.phi.ls, %wide.load.ls
  %68 = icmp slt <8 x i32> %vec.phi236.ls, %wide.load239.ls
  %69 = icmp slt <8 x i32> %vec.phi237.ls, %wide.load240.ls
  %70 = icmp slt <8 x i32> %vec.phi238.ls, %wide.load241.ls
  %71 = select <8 x i1> %67, <8 x i32> %vec.phi.ls, <8 x i32> %wide.load.ls
  %72 = select <8 x i1> %68, <8 x i32> %vec.phi236.ls, <8 x i32> %wide.load239.ls
  %73 = select <8 x i1> %69, <8 x i32> %vec.phi237.ls, <8 x i32> %wide.load240.ls
  %74 = select <8 x i1> %70, <8 x i32> %vec.phi238.ls, <8 x i32> %wide.load241.ls
  %index.next.ls = or i64 %index.ls, 32
  %75 = add i64 %index.next.ls, %j.013.i.ls
  %76 = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %75
  %77 = bitcast i32* %76 to <8 x i32>*
  %wide.load.1.ls = load <8 x i32>, <8 x i32>* %77, align 4, !tbaa !59
  %78 = getelementptr i32, i32* %76, i64 8
  %79 = bitcast i32* %78 to <8 x i32>*
  %wide.load239.1.ls = load <8 x i32>, <8 x i32>* %79, align 4, !tbaa !59
  %80 = getelementptr i32, i32* %76, i64 16
  %81 = bitcast i32* %80 to <8 x i32>*
  %wide.load240.1.ls = load <8 x i32>, <8 x i32>* %81, align 4, !tbaa !59
  %82 = getelementptr i32, i32* %76, i64 24
  %83 = bitcast i32* %82 to <8 x i32>*
  %wide.load241.1.ls = load <8 x i32>, <8 x i32>* %83, align 4, !tbaa !59
  %84 = icmp slt <8 x i32> %71, %wide.load.1.ls
  %85 = icmp slt <8 x i32> %72, %wide.load239.1.ls
  %86 = icmp slt <8 x i32> %73, %wide.load240.1.ls
  %87 = icmp slt <8 x i32> %74, %wide.load241.1.ls
  %88 = select <8 x i1> %84, <8 x i32> %71, <8 x i32> %wide.load.1.ls
  %89 = select <8 x i1> %85, <8 x i32> %72, <8 x i32> %wide.load239.1.ls
  %90 = select <8 x i1> %86, <8 x i32> %73, <8 x i32> %wide.load240.1.ls
  %91 = select <8 x i1> %87, <8 x i32> %74, <8 x i32> %wide.load241.1.ls
  %index.next.1.ls = add i64 %index.ls, 64
  %niter.nsub.1.ls = add i64 %niter.ls, -2
  %niter.ncmp.1.ls = icmp eq i64 %niter.nsub.1.ls, 0
  br i1 %niter.ncmp.1.ls, label %middle.block.unr-lcssa.ls, label %vector.body.ls, !llvm.loop !443

middle.block.unr-lcssa.ls:                        ; preds = %vector.body.ls, %vector.ph.ls
  %.lcssa262.ph.ls = phi <8 x i32> [ undef, %vector.ph.ls ], [ %88, %vector.body.ls ]
  %.lcssa261.ph.ls = phi <8 x i32> [ undef, %vector.ph.ls ], [ %89, %vector.body.ls ]
  %.lcssa260.ph.ls = phi <8 x i32> [ undef, %vector.ph.ls ], [ %90, %vector.body.ls ]
  %.lcssa.ph.ls = phi <8 x i32> [ undef, %vector.ph.ls ], [ %91, %vector.body.ls ]
  %index.unr.ls = phi i64 [ 0, %vector.ph.ls ], [ %index.next.1.ls, %vector.body.ls ]
  %vec.phi.unr.ls = phi <8 x i32> [ %minmax.ident.splat.ls, %vector.ph.ls ], [ %88, %vector.body.ls ]
  %vec.phi236.unr.ls = phi <8 x i32> [ %minmax.ident.splat.ls, %vector.ph.ls ], [ %89, %vector.body.ls ]
  %vec.phi237.unr.ls = phi <8 x i32> [ %minmax.ident.splat.ls, %vector.ph.ls ], [ %90, %vector.body.ls ]
  %vec.phi238.unr.ls = phi <8 x i32> [ %minmax.ident.splat.ls, %vector.ph.ls ], [ %91, %vector.body.ls ]
  %lcmp.mod290.ls = icmp eq i64 %xtraiter289.ls, 0
  br i1 %lcmp.mod290.ls, label %middle.block.ls, label %vector.body.epil.ls

vector.body.epil.ls:                              ; preds = %middle.block.unr-lcssa.ls
  %92 = add i64 %index.unr.ls, %j.013.i.ls
  %93 = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %92
  %94 = bitcast i32* %93 to <8 x i32>*
  %wide.load.epil.ls = load <8 x i32>, <8 x i32>* %94, align 4, !tbaa !59
  %95 = getelementptr i32, i32* %93, i64 8
  %96 = bitcast i32* %95 to <8 x i32>*
  %wide.load239.epil.ls = load <8 x i32>, <8 x i32>* %96, align 4, !tbaa !59
  %97 = getelementptr i32, i32* %93, i64 16
  %98 = bitcast i32* %97 to <8 x i32>*
  %wide.load240.epil.ls = load <8 x i32>, <8 x i32>* %98, align 4, !tbaa !59
  %99 = getelementptr i32, i32* %93, i64 24
  %100 = bitcast i32* %99 to <8 x i32>*
  %wide.load241.epil.ls = load <8 x i32>, <8 x i32>* %100, align 4, !tbaa !59
  %101 = icmp slt <8 x i32> %vec.phi238.unr.ls, %wide.load241.epil.ls
  %102 = select <8 x i1> %101, <8 x i32> %vec.phi238.unr.ls, <8 x i32> %wide.load241.epil.ls
  %103 = icmp slt <8 x i32> %vec.phi237.unr.ls, %wide.load240.epil.ls
  %104 = select <8 x i1> %103, <8 x i32> %vec.phi237.unr.ls, <8 x i32> %wide.load240.epil.ls
  %105 = icmp slt <8 x i32> %vec.phi236.unr.ls, %wide.load239.epil.ls
  %106 = select <8 x i1> %105, <8 x i32> %vec.phi236.unr.ls, <8 x i32> %wide.load239.epil.ls
  %107 = icmp slt <8 x i32> %vec.phi.unr.ls, %wide.load.epil.ls
  %108 = select <8 x i1> %107, <8 x i32> %vec.phi.unr.ls, <8 x i32> %wide.load.epil.ls
  br label %middle.block.ls

middle.block.ls:                                  ; preds = %vector.body.epil.ls, %middle.block.unr-lcssa.ls
  %.lcssa262.ls = phi <8 x i32> [ %.lcssa262.ph.ls, %middle.block.unr-lcssa.ls ], [ %108, %vector.body.epil.ls ]
  %.lcssa261.ls = phi <8 x i32> [ %.lcssa261.ph.ls, %middle.block.unr-lcssa.ls ], [ %106, %vector.body.epil.ls ]
  %.lcssa260.ls = phi <8 x i32> [ %.lcssa260.ph.ls, %middle.block.unr-lcssa.ls ], [ %104, %vector.body.epil.ls ]
  %.lcssa.ls = phi <8 x i32> [ %.lcssa.ph.ls, %middle.block.unr-lcssa.ls ], [ %102, %vector.body.epil.ls ]
  %rdx.minmax.cmp.ls = icmp slt <8 x i32> %.lcssa262.ls, %.lcssa261.ls
  %rdx.minmax.select.ls = select <8 x i1> %rdx.minmax.cmp.ls, <8 x i32> %.lcssa262.ls, <8 x i32> %.lcssa261.ls
  %rdx.minmax.cmp242.ls = icmp slt <8 x i32> %rdx.minmax.select.ls, %.lcssa260.ls
  %rdx.minmax.select243.ls = select <8 x i1> %rdx.minmax.cmp242.ls, <8 x i32> %rdx.minmax.select.ls, <8 x i32> %.lcssa260.ls
  %rdx.minmax.cmp244.ls = icmp slt <8 x i32> %rdx.minmax.select243.ls, %.lcssa.ls
  %rdx.minmax.select245.ls = select <8 x i1> %rdx.minmax.cmp244.ls, <8 x i32> %rdx.minmax.select243.ls, <8 x i32> %.lcssa.ls
  %rdx.shuf.ls = shufflevector <8 x i32> %rdx.minmax.select245.ls, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp246.ls = icmp slt <8 x i32> %rdx.minmax.select245.ls, %rdx.shuf.ls
  %rdx.minmax.select247.ls = select <8 x i1> %rdx.minmax.cmp246.ls, <8 x i32> %rdx.minmax.select245.ls, <8 x i32> %rdx.shuf.ls
  %rdx.shuf248.ls = shufflevector <8 x i32> %rdx.minmax.select247.ls, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp249.ls = icmp slt <8 x i32> %rdx.minmax.select247.ls, %rdx.shuf248.ls
  %rdx.minmax.select250.ls = select <8 x i1> %rdx.minmax.cmp249.ls, <8 x i32> %rdx.minmax.select247.ls, <8 x i32> %rdx.shuf248.ls
  %rdx.shuf251.ls = shufflevector <8 x i32> %rdx.minmax.select250.ls, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp252.ls = icmp slt <8 x i32> %rdx.minmax.select250.ls, %rdx.shuf251.ls
  %rdx.minmax.select253.ls = select <8 x i1> %rdx.minmax.cmp252.ls, <8 x i32> %rdx.minmax.select250.ls, <8 x i32> %rdx.shuf251.ls
  %109 = extractelement <8 x i32> %rdx.minmax.select253.ls, i32 0
  %cmp.n.ls = icmp eq i64 %52, %n.vec.ls
  br i1 %cmp.n.ls, label %_ZN8sequence12reduceSerialIilN5utils4minFIiEENS_4getAIilEEEET_T0_S7_T1_T2_.exit.ls, label %for.body.i191.ls.preheader

for.body.i191.ls.preheader:                       ; preds = %middle.block.ls, %for.body.lr.ph.i187.ls
  %j.016.i.ls.ph = phi i64 [ %ind.end.ls, %middle.block.ls ], [ %j.013.i.ls, %for.body.lr.ph.i187.ls ]
  %r.015.i.ls.ph = phi i32 [ %109, %middle.block.ls ], [ %56, %for.body.lr.ph.i187.ls ]
  br label %for.body.i191.ls

for.body.i191.ls:                                 ; preds = %for.body.i191.ls.preheader, %for.body.i191.ls
  %j.016.i.ls = phi i64 [ %j.0.i.ls, %for.body.i191.ls ], [ %j.016.i.ls.ph, %for.body.i191.ls.preheader ]
  %r.015.i.ls = phi i32 [ %..i.i189.ls, %for.body.i191.ls ], [ %r.015.i.ls.ph, %for.body.i191.ls.preheader ]
  %arrayidx.i8.i.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %j.016.i.ls
  %110 = load i32, i32* %arrayidx.i8.i.ls, align 4, !tbaa !59
  %cmp.i.i188.ls = icmp slt i32 %r.015.i.ls, %110
  %..i.i189.ls = select i1 %cmp.i.i188.ls, i32 %r.015.i.ls, i32 %110
  %j.0.i.ls = add nsw i64 %j.016.i.ls, 1
  %exitcond.i190.ls = icmp eq i64 %j.0.i.ls, %.sroa.speculated197.ls
  br i1 %exitcond.i190.ls, label %_ZN8sequence12reduceSerialIilN5utils4minFIiEENS_4getAIilEEEET_T0_S7_T1_T2_.exit.ls, label %for.body.i191.ls, !llvm.loop !444

_ZN8sequence12reduceSerialIilN5utils4minFIiEENS_4getAIilEEEET_T0_S7_T1_T2_.exit.ls: ; preds = %for.body.i191.ls, %middle.block.ls, %pfor.detach.ls
  %r.0.lcssa.i.ls = phi i32 [ %56, %pfor.detach.ls ], [ %109, %middle.block.ls ], [ %..i.i189.ls, %for.body.i191.ls ]
  %arrayidx.ls = getelementptr inbounds i32, i32* %.ls4, i64 %__begin.0213.ls
  store i32 %r.0.lcssa.i.ls, i32* %arrayidx.ls, align 4, !tbaa !59
  %111 = icmp ult i64 %__begin.0213.ls, %end.ls
  %inc.ls = add nuw nsw i64 %__begin.0213.ls, 1
  br i1 %111, label %pfor.detach.ls, label %pfor.cond.cleanup.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN8sequence4scanIilN5utils4minFIiEENS_4getAIilEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.ls(i64 %__begin46.0211.start.ls, i64 %end.ls, i64 %.ls, i64 %.ls1, i64 %.ls2, i64 %.ls3, i64 %.ls4, i64 %s.ls, i64 %e.ls, i32* nocapture readonly align 1 %.ls5, i1 zeroext %back.ls, i32* nocapture readonly align 1 %g.coerce.ls, i32* nocapture align 1 %Out.ls) unnamed_addr #15 {
pfor.detach55.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach55.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach55.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach55.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach55.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount12 = sub i64 %end.ls, %__begin46.0211.start.ls
  %9 = icmp ugt i64 %itercount12, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach55.ls.preheader

pfor.detach55.ls.preheader:                       ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin46.0211.ls.ph = phi i64 [ %__begin46.0211.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach55.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount14 = phi i64 [ %itercount12, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin46.0211.ls.dac13 = phi i64 [ %__begin46.0211.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount14, 1
  %miditer = add nuw nsw i64 %__begin46.0211.ls.dac13, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split15, label %.split.split

.split15:                                         ; preds = %16
  call fastcc void @_ZN8sequence4scanIilN5utils4minFIiEENS_4getAIilEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.ls_.split.cilk(i64 %__begin46.0211.ls.dac13, i64 %miditer, i64 %.ls, i64 %.ls1, i64 %.ls2, i64 %.ls3, i64 %.ls4, i64 %s.ls, i64 %e.ls, i32* %.ls5, i1 %back.ls, i32* %g.coerce.ls, i32* %Out.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split15, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach55.ls.preheader

pfor.cond.cleanup54.loopexit300.ls:               ; preds = %pfor.inc76.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup54.loopexit300.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup54.loopexit300.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach55.ls:                                 ; preds = %pfor.detach55.ls.preheader, %pfor.inc76.ls
  %__begin46.0211.ls = phi i64 [ %inc77.ls, %pfor.inc76.ls ], [ %__begin46.0211.ls.ph, %pfor.detach55.ls.preheader ]
  %48 = mul nsw i64 %__begin46.0211.ls, -1024
  %49 = add i64 %48, %.ls1
  %50 = icmp sgt i64 %49, %.ls2
  %smax284.ls = select i1 %50, i64 %49, i64 %.ls2
  %51 = sub i64 %.ls3, %smax284.ls
  %52 = add i64 %48, %.ls4
  %53 = sub i64 %52, %smax284.ls
  %mul62.ls = shl nsw i64 %__begin46.0211.ls, 10
  %add63.ls = add nsw i64 %mul62.ls, %s.ls
  %add66.ls = add nsw i64 %add63.ls, 1024
  %cmp.i132.ls = icmp sgt i64 %add66.ls, %e.ls
  %.sroa.speculated.ls = select i1 %cmp.i132.ls, i64 %e.ls, i64 %add66.ls
  %arrayidx70.ls = getelementptr inbounds i32, i32* %.ls5, i64 %__begin46.0211.ls
  %54 = load i32, i32* %arrayidx70.ls, align 4, !tbaa !59
  br i1 %back.ls, label %if.then18.i161.ls, label %if.else31.i173.ls

if.else31.i173.ls:                                ; preds = %pfor.detach55.ls
  %cmp34113.i172.ls = icmp slt i64 %add63.ls, %.sroa.speculated.ls
  br i1 %cmp34113.i172.ls, label %for.body36.i183.preheader.ls, label %pfor.inc76.ls

for.body36.i183.preheader.ls:                     ; preds = %if.else31.i173.ls
  %xtraiter281.ls = and i64 %51, 7
  %lcmp.mod282.ls = icmp eq i64 %xtraiter281.ls, 0
  br i1 %lcmp.mod282.ls, label %for.body36.i183.prol.loopexit.ls, label %for.body36.i183.prol.ls.preheader

for.body36.i183.prol.ls.preheader:                ; preds = %for.body36.i183.preheader.ls
  br label %for.body36.i183.prol.ls

for.body36.i183.prol.ls:                          ; preds = %for.body36.i183.prol.ls.preheader, %for.body36.i183.prol.ls
  %i32.0115.i175.prol.ls = phi i64 [ %inc42.i181.prol.ls, %for.body36.i183.prol.ls ], [ %add63.ls, %for.body36.i183.prol.ls.preheader ]
  %r.3114.i176.prol.ls = phi i32 [ %..i.i180.prol.ls, %for.body36.i183.prol.ls ], [ %54, %for.body36.i183.prol.ls.preheader ]
  %prol.iter283.ls = phi i64 [ %prol.iter283.sub.ls, %for.body36.i183.prol.ls ], [ %xtraiter281.ls, %for.body36.i183.prol.ls.preheader ]
  %arrayidx.i72.i177.prol.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i32.0115.i175.prol.ls
  %55 = load i32, i32* %arrayidx.i72.i177.prol.ls, align 4, !tbaa !59
  %arrayidx39.i178.prol.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i32.0115.i175.prol.ls
  store i32 %r.3114.i176.prol.ls, i32* %arrayidx39.i178.prol.ls, align 4, !tbaa !59
  %cmp.i.i179.prol.ls = icmp slt i32 %r.3114.i176.prol.ls, %55
  %..i.i180.prol.ls = select i1 %cmp.i.i179.prol.ls, i32 %r.3114.i176.prol.ls, i32 %55
  %inc42.i181.prol.ls = add nsw i64 %i32.0115.i175.prol.ls, 1
  %prol.iter283.sub.ls = add nsw i64 %prol.iter283.ls, -1
  %prol.iter283.cmp.ls = icmp eq i64 %prol.iter283.sub.ls, 0
  br i1 %prol.iter283.cmp.ls, label %for.body36.i183.prol.loopexit.ls, label %for.body36.i183.prol.ls, !llvm.loop !445

for.body36.i183.prol.loopexit.ls:                 ; preds = %for.body36.i183.prol.ls, %for.body36.i183.preheader.ls
  %i32.0115.i175.unr.ls = phi i64 [ %add63.ls, %for.body36.i183.preheader.ls ], [ %inc42.i181.prol.ls, %for.body36.i183.prol.ls ]
  %r.3114.i176.unr.ls = phi i32 [ %54, %for.body36.i183.preheader.ls ], [ %..i.i180.prol.ls, %for.body36.i183.prol.ls ]
  %56 = icmp ult i64 %53, 7
  br i1 %56, label %pfor.inc76.ls, label %for.body36.i183.ls.preheader

for.body36.i183.ls.preheader:                     ; preds = %for.body36.i183.prol.loopexit.ls
  br label %for.body36.i183.ls

for.body36.i183.ls:                               ; preds = %for.body36.i183.ls.preheader, %for.body36.i183.ls
  %i32.0115.i175.ls = phi i64 [ %inc42.i181.7.ls, %for.body36.i183.ls ], [ %i32.0115.i175.unr.ls, %for.body36.i183.ls.preheader ]
  %r.3114.i176.ls = phi i32 [ %..i.i180.7.ls, %for.body36.i183.ls ], [ %r.3114.i176.unr.ls, %for.body36.i183.ls.preheader ]
  %arrayidx.i72.i177.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i32.0115.i175.ls
  %57 = load i32, i32* %arrayidx.i72.i177.ls, align 4, !tbaa !59
  %arrayidx39.i178.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i32.0115.i175.ls
  store i32 %r.3114.i176.ls, i32* %arrayidx39.i178.ls, align 4, !tbaa !59
  %cmp.i.i179.ls = icmp slt i32 %r.3114.i176.ls, %57
  %..i.i180.ls = select i1 %cmp.i.i179.ls, i32 %r.3114.i176.ls, i32 %57
  %inc42.i181.ls = add nsw i64 %i32.0115.i175.ls, 1
  %arrayidx.i72.i177.1.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc42.i181.ls
  %58 = load i32, i32* %arrayidx.i72.i177.1.ls, align 4, !tbaa !59
  %arrayidx39.i178.1.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc42.i181.ls
  store i32 %..i.i180.ls, i32* %arrayidx39.i178.1.ls, align 4, !tbaa !59
  %cmp.i.i179.1.ls = icmp slt i32 %..i.i180.ls, %58
  %..i.i180.1.ls = select i1 %cmp.i.i179.1.ls, i32 %..i.i180.ls, i32 %58
  %inc42.i181.1.ls = add nsw i64 %i32.0115.i175.ls, 2
  %arrayidx.i72.i177.2.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc42.i181.1.ls
  %59 = load i32, i32* %arrayidx.i72.i177.2.ls, align 4, !tbaa !59
  %arrayidx39.i178.2.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc42.i181.1.ls
  store i32 %..i.i180.1.ls, i32* %arrayidx39.i178.2.ls, align 4, !tbaa !59
  %cmp.i.i179.2.ls = icmp slt i32 %..i.i180.1.ls, %59
  %..i.i180.2.ls = select i1 %cmp.i.i179.2.ls, i32 %..i.i180.1.ls, i32 %59
  %inc42.i181.2.ls = add nsw i64 %i32.0115.i175.ls, 3
  %arrayidx.i72.i177.3.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc42.i181.2.ls
  %60 = load i32, i32* %arrayidx.i72.i177.3.ls, align 4, !tbaa !59
  %arrayidx39.i178.3.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc42.i181.2.ls
  store i32 %..i.i180.2.ls, i32* %arrayidx39.i178.3.ls, align 4, !tbaa !59
  %cmp.i.i179.3.ls = icmp slt i32 %..i.i180.2.ls, %60
  %..i.i180.3.ls = select i1 %cmp.i.i179.3.ls, i32 %..i.i180.2.ls, i32 %60
  %inc42.i181.3.ls = add nsw i64 %i32.0115.i175.ls, 4
  %arrayidx.i72.i177.4.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc42.i181.3.ls
  %61 = load i32, i32* %arrayidx.i72.i177.4.ls, align 4, !tbaa !59
  %arrayidx39.i178.4.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc42.i181.3.ls
  store i32 %..i.i180.3.ls, i32* %arrayidx39.i178.4.ls, align 4, !tbaa !59
  %cmp.i.i179.4.ls = icmp slt i32 %..i.i180.3.ls, %61
  %..i.i180.4.ls = select i1 %cmp.i.i179.4.ls, i32 %..i.i180.3.ls, i32 %61
  %inc42.i181.4.ls = add nsw i64 %i32.0115.i175.ls, 5
  %arrayidx.i72.i177.5.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc42.i181.4.ls
  %62 = load i32, i32* %arrayidx.i72.i177.5.ls, align 4, !tbaa !59
  %arrayidx39.i178.5.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc42.i181.4.ls
  store i32 %..i.i180.4.ls, i32* %arrayidx39.i178.5.ls, align 4, !tbaa !59
  %cmp.i.i179.5.ls = icmp slt i32 %..i.i180.4.ls, %62
  %..i.i180.5.ls = select i1 %cmp.i.i179.5.ls, i32 %..i.i180.4.ls, i32 %62
  %inc42.i181.5.ls = add nsw i64 %i32.0115.i175.ls, 6
  %arrayidx.i72.i177.6.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc42.i181.5.ls
  %63 = load i32, i32* %arrayidx.i72.i177.6.ls, align 4, !tbaa !59
  %arrayidx39.i178.6.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc42.i181.5.ls
  store i32 %..i.i180.5.ls, i32* %arrayidx39.i178.6.ls, align 4, !tbaa !59
  %cmp.i.i179.6.ls = icmp slt i32 %..i.i180.5.ls, %63
  %..i.i180.6.ls = select i1 %cmp.i.i179.6.ls, i32 %..i.i180.5.ls, i32 %63
  %inc42.i181.6.ls = add nsw i64 %i32.0115.i175.ls, 7
  %arrayidx.i72.i177.7.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc42.i181.6.ls
  %64 = load i32, i32* %arrayidx.i72.i177.7.ls, align 4, !tbaa !59
  %arrayidx39.i178.7.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc42.i181.6.ls
  store i32 %..i.i180.6.ls, i32* %arrayidx39.i178.7.ls, align 4, !tbaa !59
  %cmp.i.i179.7.ls = icmp slt i32 %..i.i180.6.ls, %64
  %..i.i180.7.ls = select i1 %cmp.i.i179.7.ls, i32 %..i.i180.6.ls, i32 %64
  %inc42.i181.7.ls = add nsw i64 %i32.0115.i175.ls, 8
  %exitcond120.i182.7.ls = icmp eq i64 %inc42.i181.7.ls, %.sroa.speculated.ls
  br i1 %exitcond120.i182.7.ls, label %pfor.inc76.ls, label %for.body36.i183.ls

if.then18.i161.ls:                                ; preds = %pfor.detach55.ls
  %cmp22109.i160.ls = icmp sgt i64 %.sroa.speculated.ls, %add63.ls
  br i1 %cmp22109.i160.ls, label %for.body24.i171.preheader.ls, label %pfor.inc76.ls

for.body24.i171.preheader.ls:                     ; preds = %if.then18.i161.ls
  %xtraiter285.ls = and i64 %51, 7
  %lcmp.mod286.ls = icmp eq i64 %xtraiter285.ls, 0
  br i1 %lcmp.mod286.ls, label %for.body24.i171.prol.loopexit.ls, label %for.body24.i171.prol.ls.preheader

for.body24.i171.prol.ls.preheader:                ; preds = %for.body24.i171.preheader.ls
  br label %for.body24.i171.prol.ls

for.body24.i171.prol.ls:                          ; preds = %for.body24.i171.prol.ls.preheader, %for.body24.i171.prol.ls
  %i19.0111.in.i163.prol.ls = phi i64 [ %i19.0111.i165.prol.ls, %for.body24.i171.prol.ls ], [ %.sroa.speculated.ls, %for.body24.i171.prol.ls.preheader ]
  %r.2110.i164.prol.ls = phi i32 [ %..i74.i169.prol.ls, %for.body24.i171.prol.ls ], [ %54, %for.body24.i171.prol.ls.preheader ]
  %prol.iter287.ls = phi i64 [ %prol.iter287.sub.ls, %for.body24.i171.prol.ls ], [ %xtraiter285.ls, %for.body24.i171.prol.ls.preheader ]
  %i19.0111.i165.prol.ls = add nsw i64 %i19.0111.in.i163.prol.ls, -1
  %arrayidx.i76.i166.prol.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i19.0111.i165.prol.ls
  %65 = load i32, i32* %arrayidx.i76.i166.prol.ls, align 4, !tbaa !59
  %arrayidx26.i167.prol.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i19.0111.i165.prol.ls
  store i32 %r.2110.i164.prol.ls, i32* %arrayidx26.i167.prol.ls, align 4, !tbaa !59
  %cmp.i73.i168.prol.ls = icmp slt i32 %r.2110.i164.prol.ls, %65
  %..i74.i169.prol.ls = select i1 %cmp.i73.i168.prol.ls, i32 %r.2110.i164.prol.ls, i32 %65
  %prol.iter287.sub.ls = add nsw i64 %prol.iter287.ls, -1
  %prol.iter287.cmp.ls = icmp eq i64 %prol.iter287.sub.ls, 0
  br i1 %prol.iter287.cmp.ls, label %for.body24.i171.prol.loopexit.ls, label %for.body24.i171.prol.ls, !llvm.loop !446

for.body24.i171.prol.loopexit.ls:                 ; preds = %for.body24.i171.prol.ls, %for.body24.i171.preheader.ls
  %i19.0111.in.i163.unr.ls = phi i64 [ %.sroa.speculated.ls, %for.body24.i171.preheader.ls ], [ %i19.0111.i165.prol.ls, %for.body24.i171.prol.ls ]
  %r.2110.i164.unr.ls = phi i32 [ %54, %for.body24.i171.preheader.ls ], [ %..i74.i169.prol.ls, %for.body24.i171.prol.ls ]
  %66 = icmp ult i64 %53, 7
  br i1 %66, label %pfor.inc76.ls, label %for.body24.i171.ls.preheader

for.body24.i171.ls.preheader:                     ; preds = %for.body24.i171.prol.loopexit.ls
  br label %for.body24.i171.ls

for.body24.i171.ls:                               ; preds = %for.body24.i171.ls.preheader, %for.body24.i171.ls
  %i19.0111.in.i163.ls = phi i64 [ %i19.0111.i165.7.ls, %for.body24.i171.ls ], [ %i19.0111.in.i163.unr.ls, %for.body24.i171.ls.preheader ]
  %r.2110.i164.ls = phi i32 [ %..i74.i169.7.ls, %for.body24.i171.ls ], [ %r.2110.i164.unr.ls, %for.body24.i171.ls.preheader ]
  %i19.0111.i165.ls = add nsw i64 %i19.0111.in.i163.ls, -1
  %arrayidx.i76.i166.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i19.0111.i165.ls
  %67 = load i32, i32* %arrayidx.i76.i166.ls, align 4, !tbaa !59
  %arrayidx26.i167.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i19.0111.i165.ls
  store i32 %r.2110.i164.ls, i32* %arrayidx26.i167.ls, align 4, !tbaa !59
  %cmp.i73.i168.ls = icmp slt i32 %r.2110.i164.ls, %67
  %..i74.i169.ls = select i1 %cmp.i73.i168.ls, i32 %r.2110.i164.ls, i32 %67
  %i19.0111.i165.1.ls = add nsw i64 %i19.0111.in.i163.ls, -2
  %arrayidx.i76.i166.1.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i19.0111.i165.1.ls
  %68 = load i32, i32* %arrayidx.i76.i166.1.ls, align 4, !tbaa !59
  %arrayidx26.i167.1.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i19.0111.i165.1.ls
  store i32 %..i74.i169.ls, i32* %arrayidx26.i167.1.ls, align 4, !tbaa !59
  %cmp.i73.i168.1.ls = icmp slt i32 %..i74.i169.ls, %68
  %..i74.i169.1.ls = select i1 %cmp.i73.i168.1.ls, i32 %..i74.i169.ls, i32 %68
  %i19.0111.i165.2.ls = add nsw i64 %i19.0111.in.i163.ls, -3
  %arrayidx.i76.i166.2.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i19.0111.i165.2.ls
  %69 = load i32, i32* %arrayidx.i76.i166.2.ls, align 4, !tbaa !59
  %arrayidx26.i167.2.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i19.0111.i165.2.ls
  store i32 %..i74.i169.1.ls, i32* %arrayidx26.i167.2.ls, align 4, !tbaa !59
  %cmp.i73.i168.2.ls = icmp slt i32 %..i74.i169.1.ls, %69
  %..i74.i169.2.ls = select i1 %cmp.i73.i168.2.ls, i32 %..i74.i169.1.ls, i32 %69
  %i19.0111.i165.3.ls = add nsw i64 %i19.0111.in.i163.ls, -4
  %arrayidx.i76.i166.3.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i19.0111.i165.3.ls
  %70 = load i32, i32* %arrayidx.i76.i166.3.ls, align 4, !tbaa !59
  %arrayidx26.i167.3.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i19.0111.i165.3.ls
  store i32 %..i74.i169.2.ls, i32* %arrayidx26.i167.3.ls, align 4, !tbaa !59
  %cmp.i73.i168.3.ls = icmp slt i32 %..i74.i169.2.ls, %70
  %..i74.i169.3.ls = select i1 %cmp.i73.i168.3.ls, i32 %..i74.i169.2.ls, i32 %70
  %i19.0111.i165.4.ls = add nsw i64 %i19.0111.in.i163.ls, -5
  %arrayidx.i76.i166.4.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i19.0111.i165.4.ls
  %71 = load i32, i32* %arrayidx.i76.i166.4.ls, align 4, !tbaa !59
  %arrayidx26.i167.4.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i19.0111.i165.4.ls
  store i32 %..i74.i169.3.ls, i32* %arrayidx26.i167.4.ls, align 4, !tbaa !59
  %cmp.i73.i168.4.ls = icmp slt i32 %..i74.i169.3.ls, %71
  %..i74.i169.4.ls = select i1 %cmp.i73.i168.4.ls, i32 %..i74.i169.3.ls, i32 %71
  %i19.0111.i165.5.ls = add nsw i64 %i19.0111.in.i163.ls, -6
  %arrayidx.i76.i166.5.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i19.0111.i165.5.ls
  %72 = load i32, i32* %arrayidx.i76.i166.5.ls, align 4, !tbaa !59
  %arrayidx26.i167.5.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i19.0111.i165.5.ls
  store i32 %..i74.i169.4.ls, i32* %arrayidx26.i167.5.ls, align 4, !tbaa !59
  %cmp.i73.i168.5.ls = icmp slt i32 %..i74.i169.4.ls, %72
  %..i74.i169.5.ls = select i1 %cmp.i73.i168.5.ls, i32 %..i74.i169.4.ls, i32 %72
  %i19.0111.i165.6.ls = add nsw i64 %i19.0111.in.i163.ls, -7
  %arrayidx.i76.i166.6.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i19.0111.i165.6.ls
  %73 = load i32, i32* %arrayidx.i76.i166.6.ls, align 4, !tbaa !59
  %arrayidx26.i167.6.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i19.0111.i165.6.ls
  store i32 %..i74.i169.5.ls, i32* %arrayidx26.i167.6.ls, align 4, !tbaa !59
  %cmp.i73.i168.6.ls = icmp slt i32 %..i74.i169.5.ls, %73
  %..i74.i169.6.ls = select i1 %cmp.i73.i168.6.ls, i32 %..i74.i169.5.ls, i32 %73
  %i19.0111.i165.7.ls = add nsw i64 %i19.0111.in.i163.ls, -8
  %arrayidx.i76.i166.7.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i19.0111.i165.7.ls
  %74 = load i32, i32* %arrayidx.i76.i166.7.ls, align 4, !tbaa !59
  %arrayidx26.i167.7.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i19.0111.i165.7.ls
  store i32 %..i74.i169.6.ls, i32* %arrayidx26.i167.7.ls, align 4, !tbaa !59
  %cmp.i73.i168.7.ls = icmp slt i32 %..i74.i169.6.ls, %74
  %..i74.i169.7.ls = select i1 %cmp.i73.i168.7.ls, i32 %..i74.i169.6.ls, i32 %74
  %cmp22.i170.7.ls = icmp sgt i64 %i19.0111.i165.7.ls, %add63.ls
  br i1 %cmp22.i170.7.ls, label %for.body24.i171.ls, label %pfor.inc76.ls

pfor.inc76.ls:                                    ; preds = %for.body36.i183.ls, %for.body24.i171.ls, %if.else31.i173.ls, %for.body36.i183.prol.loopexit.ls, %if.then18.i161.ls, %for.body24.i171.prol.loopexit.ls
  %75 = icmp ult i64 %__begin46.0211.ls, %end.ls
  %inc77.ls = add nuw nsw i64 %__begin46.0211.ls, 1
  br i1 %75, label %pfor.detach55.ls, label %pfor.cond.cleanup54.loopexit300.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN8sequence4scanIilN5utils4minFIiEENS_4getAIilEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.us.ls(i64 %__begin46.0211.us.start.ls, i64 %end.ls, i64 %.ls, i64 %.ls1, i64 %.ls2, i64 %.ls3, i64 %.ls4, i64 %s.ls, i64 %e.ls, i32* nocapture readonly align 1 %.ls5, i1 zeroext %back.ls, i32* nocapture readonly align 1 %g.coerce.ls, i32* nocapture align 1 %Out.ls) unnamed_addr #15 {
pfor.detach55.us.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach55.us.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach55.us.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach55.us.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach55.us.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount12 = sub i64 %end.ls, %__begin46.0211.us.start.ls
  %9 = icmp ugt i64 %itercount12, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach55.us.ls.preheader

pfor.detach55.us.ls.preheader:                    ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin46.0211.us.ls.ph = phi i64 [ %__begin46.0211.us.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach55.us.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount14 = phi i64 [ %itercount12, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin46.0211.us.ls.dac13 = phi i64 [ %__begin46.0211.us.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount14, 1
  %miditer = add nuw nsw i64 %__begin46.0211.us.ls.dac13, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split15, label %.split.split

.split15:                                         ; preds = %16
  call fastcc void @_ZN8sequence4scanIilN5utils4minFIiEENS_4getAIilEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.us.ls_.split.cilk(i64 %__begin46.0211.us.ls.dac13, i64 %miditer, i64 %.ls, i64 %.ls1, i64 %.ls2, i64 %.ls3, i64 %.ls4, i64 %s.ls, i64 %e.ls, i32* %.ls5, i1 %back.ls, i32* %g.coerce.ls, i32* %Out.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split15, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach55.us.ls.preheader

pfor.cond.cleanup54.loopexit.ls:                  ; preds = %pfor.inc76.us.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup54.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup54.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach55.us.ls:                              ; preds = %pfor.detach55.us.ls.preheader, %pfor.inc76.us.ls
  %__begin46.0211.us.ls = phi i64 [ %inc77.us.ls, %pfor.inc76.us.ls ], [ %__begin46.0211.us.ls.ph, %pfor.detach55.us.ls.preheader ]
  %48 = mul nsw i64 %__begin46.0211.us.ls, -1024
  %49 = add i64 %48, %.ls1
  %50 = icmp sgt i64 %49, %.ls2
  %smax276.ls = select i1 %50, i64 %49, i64 %.ls2
  %51 = sub i64 %.ls3, %smax276.ls
  %52 = add i64 %48, %.ls4
  %53 = sub i64 %52, %smax276.ls
  %mul62.us.ls = shl nsw i64 %__begin46.0211.us.ls, 10
  %add63.us.ls = add nsw i64 %mul62.us.ls, %s.ls
  %add66.us.ls = add nsw i64 %add63.us.ls, 1024
  %cmp.i132.us.ls = icmp sgt i64 %add66.us.ls, %e.ls
  %.sroa.speculated.us.ls = select i1 %cmp.i132.us.ls, i64 %e.ls, i64 %add66.us.ls
  %arrayidx70.us.ls = getelementptr inbounds i32, i32* %.ls5, i64 %__begin46.0211.us.ls
  %54 = load i32, i32* %arrayidx70.us.ls, align 4, !tbaa !59
  br i1 %back.ls, label %if.then3.i136.us.ls, label %if.else.i148.us.ls

if.else.i148.us.ls:                               ; preds = %pfor.detach55.us.ls
  %cmp7104.i147.us.ls = icmp slt i64 %add63.us.ls, %.sroa.speculated.us.ls
  br i1 %cmp7104.i147.us.ls, label %for.body9.i158.us.preheader.ls, label %pfor.inc76.us.ls

for.body9.i158.us.preheader.ls:                   ; preds = %if.else.i148.us.ls
  %xtraiter273.ls = and i64 %51, 7
  %lcmp.mod274.ls = icmp eq i64 %xtraiter273.ls, 0
  br i1 %lcmp.mod274.ls, label %for.body9.i158.us.prol.loopexit.ls, label %for.body9.i158.us.prol.ls.preheader

for.body9.i158.us.prol.ls.preheader:              ; preds = %for.body9.i158.us.preheader.ls
  br label %for.body9.i158.us.prol.ls

for.body9.i158.us.prol.ls:                        ; preds = %for.body9.i158.us.prol.ls.preheader, %for.body9.i158.us.prol.ls
  %i5.0106.i150.us.prol.ls = phi i64 [ %inc.i156.us.prol.ls, %for.body9.i158.us.prol.ls ], [ %add63.us.ls, %for.body9.i158.us.prol.ls.preheader ]
  %r.1105.i151.us.prol.ls = phi i32 [ %..i78.i154.us.prol.ls, %for.body9.i158.us.prol.ls ], [ %54, %for.body9.i158.us.prol.ls.preheader ]
  %prol.iter275.ls = phi i64 [ %prol.iter275.sub.ls, %for.body9.i158.us.prol.ls ], [ %xtraiter273.ls, %for.body9.i158.us.prol.ls.preheader ]
  %arrayidx.i80.i152.us.prol.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i5.0106.i150.us.prol.ls
  %55 = load i32, i32* %arrayidx.i80.i152.us.prol.ls, align 4, !tbaa !59
  %cmp.i77.i153.us.prol.ls = icmp slt i32 %r.1105.i151.us.prol.ls, %55
  %..i78.i154.us.prol.ls = select i1 %cmp.i77.i153.us.prol.ls, i32 %r.1105.i151.us.prol.ls, i32 %55
  %arrayidx13.i155.us.prol.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i5.0106.i150.us.prol.ls
  store i32 %..i78.i154.us.prol.ls, i32* %arrayidx13.i155.us.prol.ls, align 4, !tbaa !59
  %inc.i156.us.prol.ls = add nsw i64 %i5.0106.i150.us.prol.ls, 1
  %prol.iter275.sub.ls = add nsw i64 %prol.iter275.ls, -1
  %prol.iter275.cmp.ls = icmp eq i64 %prol.iter275.sub.ls, 0
  br i1 %prol.iter275.cmp.ls, label %for.body9.i158.us.prol.loopexit.ls, label %for.body9.i158.us.prol.ls, !llvm.loop !447

for.body9.i158.us.prol.loopexit.ls:               ; preds = %for.body9.i158.us.prol.ls, %for.body9.i158.us.preheader.ls
  %i5.0106.i150.us.unr.ls = phi i64 [ %add63.us.ls, %for.body9.i158.us.preheader.ls ], [ %inc.i156.us.prol.ls, %for.body9.i158.us.prol.ls ]
  %r.1105.i151.us.unr.ls = phi i32 [ %54, %for.body9.i158.us.preheader.ls ], [ %..i78.i154.us.prol.ls, %for.body9.i158.us.prol.ls ]
  %56 = icmp ult i64 %53, 7
  br i1 %56, label %pfor.inc76.us.ls, label %for.body9.i158.us.ls.preheader

for.body9.i158.us.ls.preheader:                   ; preds = %for.body9.i158.us.prol.loopexit.ls
  br label %for.body9.i158.us.ls

for.body9.i158.us.ls:                             ; preds = %for.body9.i158.us.ls.preheader, %for.body9.i158.us.ls
  %i5.0106.i150.us.ls = phi i64 [ %inc.i156.us.7.ls, %for.body9.i158.us.ls ], [ %i5.0106.i150.us.unr.ls, %for.body9.i158.us.ls.preheader ]
  %r.1105.i151.us.ls = phi i32 [ %..i78.i154.us.7.ls, %for.body9.i158.us.ls ], [ %r.1105.i151.us.unr.ls, %for.body9.i158.us.ls.preheader ]
  %arrayidx.i80.i152.us.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i5.0106.i150.us.ls
  %57 = load i32, i32* %arrayidx.i80.i152.us.ls, align 4, !tbaa !59
  %cmp.i77.i153.us.ls = icmp slt i32 %r.1105.i151.us.ls, %57
  %..i78.i154.us.ls = select i1 %cmp.i77.i153.us.ls, i32 %r.1105.i151.us.ls, i32 %57
  %arrayidx13.i155.us.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i5.0106.i150.us.ls
  store i32 %..i78.i154.us.ls, i32* %arrayidx13.i155.us.ls, align 4, !tbaa !59
  %inc.i156.us.ls = add nsw i64 %i5.0106.i150.us.ls, 1
  %arrayidx.i80.i152.us.1.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc.i156.us.ls
  %58 = load i32, i32* %arrayidx.i80.i152.us.1.ls, align 4, !tbaa !59
  %cmp.i77.i153.us.1.ls = icmp slt i32 %..i78.i154.us.ls, %58
  %..i78.i154.us.1.ls = select i1 %cmp.i77.i153.us.1.ls, i32 %..i78.i154.us.ls, i32 %58
  %arrayidx13.i155.us.1.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc.i156.us.ls
  store i32 %..i78.i154.us.1.ls, i32* %arrayidx13.i155.us.1.ls, align 4, !tbaa !59
  %inc.i156.us.1.ls = add nsw i64 %i5.0106.i150.us.ls, 2
  %arrayidx.i80.i152.us.2.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc.i156.us.1.ls
  %59 = load i32, i32* %arrayidx.i80.i152.us.2.ls, align 4, !tbaa !59
  %cmp.i77.i153.us.2.ls = icmp slt i32 %..i78.i154.us.1.ls, %59
  %..i78.i154.us.2.ls = select i1 %cmp.i77.i153.us.2.ls, i32 %..i78.i154.us.1.ls, i32 %59
  %arrayidx13.i155.us.2.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc.i156.us.1.ls
  store i32 %..i78.i154.us.2.ls, i32* %arrayidx13.i155.us.2.ls, align 4, !tbaa !59
  %inc.i156.us.2.ls = add nsw i64 %i5.0106.i150.us.ls, 3
  %arrayidx.i80.i152.us.3.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc.i156.us.2.ls
  %60 = load i32, i32* %arrayidx.i80.i152.us.3.ls, align 4, !tbaa !59
  %cmp.i77.i153.us.3.ls = icmp slt i32 %..i78.i154.us.2.ls, %60
  %..i78.i154.us.3.ls = select i1 %cmp.i77.i153.us.3.ls, i32 %..i78.i154.us.2.ls, i32 %60
  %arrayidx13.i155.us.3.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc.i156.us.2.ls
  store i32 %..i78.i154.us.3.ls, i32* %arrayidx13.i155.us.3.ls, align 4, !tbaa !59
  %inc.i156.us.3.ls = add nsw i64 %i5.0106.i150.us.ls, 4
  %arrayidx.i80.i152.us.4.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc.i156.us.3.ls
  %61 = load i32, i32* %arrayidx.i80.i152.us.4.ls, align 4, !tbaa !59
  %cmp.i77.i153.us.4.ls = icmp slt i32 %..i78.i154.us.3.ls, %61
  %..i78.i154.us.4.ls = select i1 %cmp.i77.i153.us.4.ls, i32 %..i78.i154.us.3.ls, i32 %61
  %arrayidx13.i155.us.4.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc.i156.us.3.ls
  store i32 %..i78.i154.us.4.ls, i32* %arrayidx13.i155.us.4.ls, align 4, !tbaa !59
  %inc.i156.us.4.ls = add nsw i64 %i5.0106.i150.us.ls, 5
  %arrayidx.i80.i152.us.5.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc.i156.us.4.ls
  %62 = load i32, i32* %arrayidx.i80.i152.us.5.ls, align 4, !tbaa !59
  %cmp.i77.i153.us.5.ls = icmp slt i32 %..i78.i154.us.4.ls, %62
  %..i78.i154.us.5.ls = select i1 %cmp.i77.i153.us.5.ls, i32 %..i78.i154.us.4.ls, i32 %62
  %arrayidx13.i155.us.5.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc.i156.us.4.ls
  store i32 %..i78.i154.us.5.ls, i32* %arrayidx13.i155.us.5.ls, align 4, !tbaa !59
  %inc.i156.us.5.ls = add nsw i64 %i5.0106.i150.us.ls, 6
  %arrayidx.i80.i152.us.6.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc.i156.us.5.ls
  %63 = load i32, i32* %arrayidx.i80.i152.us.6.ls, align 4, !tbaa !59
  %cmp.i77.i153.us.6.ls = icmp slt i32 %..i78.i154.us.5.ls, %63
  %..i78.i154.us.6.ls = select i1 %cmp.i77.i153.us.6.ls, i32 %..i78.i154.us.5.ls, i32 %63
  %arrayidx13.i155.us.6.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc.i156.us.5.ls
  store i32 %..i78.i154.us.6.ls, i32* %arrayidx13.i155.us.6.ls, align 4, !tbaa !59
  %inc.i156.us.6.ls = add nsw i64 %i5.0106.i150.us.ls, 7
  %arrayidx.i80.i152.us.7.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %inc.i156.us.6.ls
  %64 = load i32, i32* %arrayidx.i80.i152.us.7.ls, align 4, !tbaa !59
  %cmp.i77.i153.us.7.ls = icmp slt i32 %..i78.i154.us.6.ls, %64
  %..i78.i154.us.7.ls = select i1 %cmp.i77.i153.us.7.ls, i32 %..i78.i154.us.6.ls, i32 %64
  %arrayidx13.i155.us.7.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %inc.i156.us.6.ls
  store i32 %..i78.i154.us.7.ls, i32* %arrayidx13.i155.us.7.ls, align 4, !tbaa !59
  %inc.i156.us.7.ls = add nsw i64 %i5.0106.i150.us.ls, 8
  %exitcond.i157.us.7.ls = icmp eq i64 %inc.i156.us.7.ls, %.sroa.speculated.us.ls
  br i1 %exitcond.i157.us.7.ls, label %pfor.inc76.us.ls, label %for.body9.i158.us.ls

if.then3.i136.us.ls:                              ; preds = %pfor.detach55.us.ls
  %cmp101.i135.us.ls = icmp sgt i64 %.sroa.speculated.us.ls, %add63.us.ls
  br i1 %cmp101.i135.us.ls, label %for.body.i146.us.preheader.ls, label %pfor.inc76.us.ls

for.body.i146.us.preheader.ls:                    ; preds = %if.then3.i136.us.ls
  %xtraiter277.ls = and i64 %51, 7
  %lcmp.mod278.ls = icmp eq i64 %xtraiter277.ls, 0
  br i1 %lcmp.mod278.ls, label %for.body.i146.us.prol.loopexit.ls, label %for.body.i146.us.prol.ls.preheader

for.body.i146.us.prol.ls.preheader:               ; preds = %for.body.i146.us.preheader.ls
  br label %for.body.i146.us.prol.ls

for.body.i146.us.prol.ls:                         ; preds = %for.body.i146.us.prol.ls.preheader, %for.body.i146.us.prol.ls
  %i.0103.in.i138.us.prol.ls = phi i64 [ %i.0103.i140.us.prol.ls, %for.body.i146.us.prol.ls ], [ %.sroa.speculated.us.ls, %for.body.i146.us.prol.ls.preheader ]
  %r.0102.i139.us.prol.ls = phi i32 [ %..i82.i143.us.prol.ls, %for.body.i146.us.prol.ls ], [ %54, %for.body.i146.us.prol.ls.preheader ]
  %prol.iter279.ls = phi i64 [ %prol.iter279.sub.ls, %for.body.i146.us.prol.ls ], [ %xtraiter277.ls, %for.body.i146.us.prol.ls.preheader ]
  %i.0103.i140.us.prol.ls = add nsw i64 %i.0103.in.i138.us.prol.ls, -1
  %arrayidx.i.i141.us.prol.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i.0103.i140.us.prol.ls
  %65 = load i32, i32* %arrayidx.i.i141.us.prol.ls, align 4, !tbaa !59
  %cmp.i81.i142.us.prol.ls = icmp slt i32 %r.0102.i139.us.prol.ls, %65
  %..i82.i143.us.prol.ls = select i1 %cmp.i81.i142.us.prol.ls, i32 %r.0102.i139.us.prol.ls, i32 %65
  %arrayidx.i144.us.prol.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i.0103.i140.us.prol.ls
  store i32 %..i82.i143.us.prol.ls, i32* %arrayidx.i144.us.prol.ls, align 4, !tbaa !59
  %prol.iter279.sub.ls = add nsw i64 %prol.iter279.ls, -1
  %prol.iter279.cmp.ls = icmp eq i64 %prol.iter279.sub.ls, 0
  br i1 %prol.iter279.cmp.ls, label %for.body.i146.us.prol.loopexit.ls, label %for.body.i146.us.prol.ls, !llvm.loop !448

for.body.i146.us.prol.loopexit.ls:                ; preds = %for.body.i146.us.prol.ls, %for.body.i146.us.preheader.ls
  %i.0103.in.i138.us.unr.ls = phi i64 [ %.sroa.speculated.us.ls, %for.body.i146.us.preheader.ls ], [ %i.0103.i140.us.prol.ls, %for.body.i146.us.prol.ls ]
  %r.0102.i139.us.unr.ls = phi i32 [ %54, %for.body.i146.us.preheader.ls ], [ %..i82.i143.us.prol.ls, %for.body.i146.us.prol.ls ]
  %66 = icmp ult i64 %53, 7
  br i1 %66, label %pfor.inc76.us.ls, label %for.body.i146.us.ls.preheader

for.body.i146.us.ls.preheader:                    ; preds = %for.body.i146.us.prol.loopexit.ls
  br label %for.body.i146.us.ls

for.body.i146.us.ls:                              ; preds = %for.body.i146.us.ls.preheader, %for.body.i146.us.ls
  %i.0103.in.i138.us.ls = phi i64 [ %i.0103.i140.us.7.ls, %for.body.i146.us.ls ], [ %i.0103.in.i138.us.unr.ls, %for.body.i146.us.ls.preheader ]
  %r.0102.i139.us.ls = phi i32 [ %..i82.i143.us.7.ls, %for.body.i146.us.ls ], [ %r.0102.i139.us.unr.ls, %for.body.i146.us.ls.preheader ]
  %i.0103.i140.us.ls = add nsw i64 %i.0103.in.i138.us.ls, -1
  %arrayidx.i.i141.us.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i.0103.i140.us.ls
  %67 = load i32, i32* %arrayidx.i.i141.us.ls, align 4, !tbaa !59
  %cmp.i81.i142.us.ls = icmp slt i32 %r.0102.i139.us.ls, %67
  %..i82.i143.us.ls = select i1 %cmp.i81.i142.us.ls, i32 %r.0102.i139.us.ls, i32 %67
  %arrayidx.i144.us.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i.0103.i140.us.ls
  store i32 %..i82.i143.us.ls, i32* %arrayidx.i144.us.ls, align 4, !tbaa !59
  %i.0103.i140.us.1.ls = add nsw i64 %i.0103.in.i138.us.ls, -2
  %arrayidx.i.i141.us.1.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i.0103.i140.us.1.ls
  %68 = load i32, i32* %arrayidx.i.i141.us.1.ls, align 4, !tbaa !59
  %cmp.i81.i142.us.1.ls = icmp slt i32 %..i82.i143.us.ls, %68
  %..i82.i143.us.1.ls = select i1 %cmp.i81.i142.us.1.ls, i32 %..i82.i143.us.ls, i32 %68
  %arrayidx.i144.us.1.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i.0103.i140.us.1.ls
  store i32 %..i82.i143.us.1.ls, i32* %arrayidx.i144.us.1.ls, align 4, !tbaa !59
  %i.0103.i140.us.2.ls = add nsw i64 %i.0103.in.i138.us.ls, -3
  %arrayidx.i.i141.us.2.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i.0103.i140.us.2.ls
  %69 = load i32, i32* %arrayidx.i.i141.us.2.ls, align 4, !tbaa !59
  %cmp.i81.i142.us.2.ls = icmp slt i32 %..i82.i143.us.1.ls, %69
  %..i82.i143.us.2.ls = select i1 %cmp.i81.i142.us.2.ls, i32 %..i82.i143.us.1.ls, i32 %69
  %arrayidx.i144.us.2.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i.0103.i140.us.2.ls
  store i32 %..i82.i143.us.2.ls, i32* %arrayidx.i144.us.2.ls, align 4, !tbaa !59
  %i.0103.i140.us.3.ls = add nsw i64 %i.0103.in.i138.us.ls, -4
  %arrayidx.i.i141.us.3.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i.0103.i140.us.3.ls
  %70 = load i32, i32* %arrayidx.i.i141.us.3.ls, align 4, !tbaa !59
  %cmp.i81.i142.us.3.ls = icmp slt i32 %..i82.i143.us.2.ls, %70
  %..i82.i143.us.3.ls = select i1 %cmp.i81.i142.us.3.ls, i32 %..i82.i143.us.2.ls, i32 %70
  %arrayidx.i144.us.3.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i.0103.i140.us.3.ls
  store i32 %..i82.i143.us.3.ls, i32* %arrayidx.i144.us.3.ls, align 4, !tbaa !59
  %i.0103.i140.us.4.ls = add nsw i64 %i.0103.in.i138.us.ls, -5
  %arrayidx.i.i141.us.4.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i.0103.i140.us.4.ls
  %71 = load i32, i32* %arrayidx.i.i141.us.4.ls, align 4, !tbaa !59
  %cmp.i81.i142.us.4.ls = icmp slt i32 %..i82.i143.us.3.ls, %71
  %..i82.i143.us.4.ls = select i1 %cmp.i81.i142.us.4.ls, i32 %..i82.i143.us.3.ls, i32 %71
  %arrayidx.i144.us.4.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i.0103.i140.us.4.ls
  store i32 %..i82.i143.us.4.ls, i32* %arrayidx.i144.us.4.ls, align 4, !tbaa !59
  %i.0103.i140.us.5.ls = add nsw i64 %i.0103.in.i138.us.ls, -6
  %arrayidx.i.i141.us.5.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i.0103.i140.us.5.ls
  %72 = load i32, i32* %arrayidx.i.i141.us.5.ls, align 4, !tbaa !59
  %cmp.i81.i142.us.5.ls = icmp slt i32 %..i82.i143.us.4.ls, %72
  %..i82.i143.us.5.ls = select i1 %cmp.i81.i142.us.5.ls, i32 %..i82.i143.us.4.ls, i32 %72
  %arrayidx.i144.us.5.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i.0103.i140.us.5.ls
  store i32 %..i82.i143.us.5.ls, i32* %arrayidx.i144.us.5.ls, align 4, !tbaa !59
  %i.0103.i140.us.6.ls = add nsw i64 %i.0103.in.i138.us.ls, -7
  %arrayidx.i.i141.us.6.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i.0103.i140.us.6.ls
  %73 = load i32, i32* %arrayidx.i.i141.us.6.ls, align 4, !tbaa !59
  %cmp.i81.i142.us.6.ls = icmp slt i32 %..i82.i143.us.5.ls, %73
  %..i82.i143.us.6.ls = select i1 %cmp.i81.i142.us.6.ls, i32 %..i82.i143.us.5.ls, i32 %73
  %arrayidx.i144.us.6.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i.0103.i140.us.6.ls
  store i32 %..i82.i143.us.6.ls, i32* %arrayidx.i144.us.6.ls, align 4, !tbaa !59
  %i.0103.i140.us.7.ls = add nsw i64 %i.0103.in.i138.us.ls, -8
  %arrayidx.i.i141.us.7.ls = getelementptr inbounds i32, i32* %g.coerce.ls, i64 %i.0103.i140.us.7.ls
  %74 = load i32, i32* %arrayidx.i.i141.us.7.ls, align 4, !tbaa !59
  %cmp.i81.i142.us.7.ls = icmp slt i32 %..i82.i143.us.6.ls, %74
  %..i82.i143.us.7.ls = select i1 %cmp.i81.i142.us.7.ls, i32 %..i82.i143.us.6.ls, i32 %74
  %arrayidx.i144.us.7.ls = getelementptr inbounds i32, i32* %Out.ls, i64 %i.0103.i140.us.7.ls
  store i32 %..i82.i143.us.7.ls, i32* %arrayidx.i144.us.7.ls, align 4, !tbaa !59
  %cmp.i145.us.7.ls = icmp sgt i64 %i.0103.i140.us.7.ls, %add63.us.ls
  br i1 %cmp.i145.us.7.ls, label %for.body.i146.us.ls, label %pfor.inc76.us.ls

pfor.inc76.us.ls:                                 ; preds = %for.body9.i158.us.ls, %for.body.i146.us.ls, %if.else.i148.us.ls, %for.body9.i158.us.prol.loopexit.ls, %if.then3.i136.us.ls, %for.body.i146.us.prol.loopexit.ls
  %75 = icmp ult i64 %__begin46.0211.us.ls, %end.ls
  %inc77.us.ls = add nuw nsw i64 %__begin46.0211.us.ls, 1
  br i1 %75, label %pfor.detach55.us.ls, label %pfor.cond.cleanup54.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7benchIO13arrayToStringIiEE4_seqIcEPT_l_pfor.detach.ls(i64 %__begin.0133.start.ls, i64 %end.ls, i64 %.ls, i64* nocapture align 1 %.ls1) unnamed_addr #15 {
pfor.detach.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount2 = sub i64 %end.ls, %__begin.0133.start.ls
  %9 = icmp ugt i64 %itercount2, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.preheader.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount4 = phi i64 [ %itercount2, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin.0133.ls.dac3 = phi i64 [ %__begin.0133.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount4, 1
  %miditer = add nuw nsw i64 %__begin.0133.ls.dac3, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split5, label %.split.split

.split5:                                          ; preds = %16
  call fastcc void @_ZN7benchIO13arrayToStringIiEE4_seqIcEPT_l_pfor.detach.ls_.split.cilk(i64 %__begin.0133.ls.dac3, i64 %miditer, i64 %.ls, i64* %.ls1)
  br label %.split.split

.split.split:                                     ; preds = %.split5, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.preheader.ls.split._crit_edge

pfor.detach.preheader.ls.split._crit_edge:        ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin.0133.ls.dac.lcssa = phi i64 [ %__begin.0133.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  %22 = icmp ugt i64 %__begin.0133.ls.dac.lcssa, %end.ls
  %umax = select i1 %22, i64 %__begin.0133.ls.dac.lcssa, i64 %end.ls
  %23 = add i64 %umax, 1
  %24 = sub i64 %23, %__begin.0133.ls.dac.lcssa
  %min.iters.check = icmp ult i64 %24, 16
  br i1 %min.iters.check, label %pfor.detach.ls.preheader, label %vector.ph

pfor.detach.ls.preheader:                         ; preds = %middle.block, %pfor.detach.preheader.ls.split._crit_edge
  %__begin.0133.ls.ph = phi i64 [ %__begin.0133.ls.dac.lcssa, %pfor.detach.preheader.ls.split._crit_edge ], [ %ind.end, %middle.block ]
  br label %pfor.detach.ls

vector.ph:                                        ; preds = %pfor.detach.preheader.ls.split._crit_edge
  %n.vec = and i64 %24, -16
  %ind.end = add i64 %__begin.0133.ls.dac.lcssa, %n.vec
  %25 = add i64 %n.vec, -16
  %26 = lshr exact i64 %25, 4
  %27 = add nuw nsw i64 %26, 1
  %xtraiter = and i64 %27, 7
  %28 = icmp ult i64 %25, 112
  br i1 %28, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nsw i64 %27, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.7, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.7, %vector.body ]
  %29 = add i64 %__begin.0133.ls.dac.lcssa, %index
  %30 = getelementptr inbounds i64, i64* %.ls1, i64 %29
  %31 = bitcast i64* %30 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %31, align 8, !tbaa !49
  %32 = getelementptr i64, i64* %30, i64 4
  %33 = bitcast i64* %32 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %33, align 8, !tbaa !49
  %34 = getelementptr i64, i64* %30, i64 8
  %35 = bitcast i64* %34 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %35, align 8, !tbaa !49
  %36 = getelementptr i64, i64* %30, i64 12
  %37 = bitcast i64* %36 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %37, align 8, !tbaa !49
  %index.next = or i64 %index, 16
  %38 = add i64 %__begin.0133.ls.dac.lcssa, %index.next
  %39 = getelementptr inbounds i64, i64* %.ls1, i64 %38
  %40 = bitcast i64* %39 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %40, align 8, !tbaa !49
  %41 = getelementptr i64, i64* %39, i64 4
  %42 = bitcast i64* %41 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %42, align 8, !tbaa !49
  %43 = getelementptr i64, i64* %39, i64 8
  %44 = bitcast i64* %43 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %44, align 8, !tbaa !49
  %45 = getelementptr i64, i64* %39, i64 12
  %46 = bitcast i64* %45 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %46, align 8, !tbaa !49
  %index.next.1 = or i64 %index, 32
  %47 = add i64 %__begin.0133.ls.dac.lcssa, %index.next.1
  %48 = getelementptr inbounds i64, i64* %.ls1, i64 %47
  %49 = bitcast i64* %48 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %49, align 8, !tbaa !49
  %50 = getelementptr i64, i64* %48, i64 4
  %51 = bitcast i64* %50 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %51, align 8, !tbaa !49
  %52 = getelementptr i64, i64* %48, i64 8
  %53 = bitcast i64* %52 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %53, align 8, !tbaa !49
  %54 = getelementptr i64, i64* %48, i64 12
  %55 = bitcast i64* %54 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %55, align 8, !tbaa !49
  %index.next.2 = or i64 %index, 48
  %56 = add i64 %__begin.0133.ls.dac.lcssa, %index.next.2
  %57 = getelementptr inbounds i64, i64* %.ls1, i64 %56
  %58 = bitcast i64* %57 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %58, align 8, !tbaa !49
  %59 = getelementptr i64, i64* %57, i64 4
  %60 = bitcast i64* %59 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %60, align 8, !tbaa !49
  %61 = getelementptr i64, i64* %57, i64 8
  %62 = bitcast i64* %61 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %62, align 8, !tbaa !49
  %63 = getelementptr i64, i64* %57, i64 12
  %64 = bitcast i64* %63 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %64, align 8, !tbaa !49
  %index.next.3 = or i64 %index, 64
  %65 = add i64 %__begin.0133.ls.dac.lcssa, %index.next.3
  %66 = getelementptr inbounds i64, i64* %.ls1, i64 %65
  %67 = bitcast i64* %66 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %67, align 8, !tbaa !49
  %68 = getelementptr i64, i64* %66, i64 4
  %69 = bitcast i64* %68 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %69, align 8, !tbaa !49
  %70 = getelementptr i64, i64* %66, i64 8
  %71 = bitcast i64* %70 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %71, align 8, !tbaa !49
  %72 = getelementptr i64, i64* %66, i64 12
  %73 = bitcast i64* %72 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %73, align 8, !tbaa !49
  %index.next.4 = or i64 %index, 80
  %74 = add i64 %__begin.0133.ls.dac.lcssa, %index.next.4
  %75 = getelementptr inbounds i64, i64* %.ls1, i64 %74
  %76 = bitcast i64* %75 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %76, align 8, !tbaa !49
  %77 = getelementptr i64, i64* %75, i64 4
  %78 = bitcast i64* %77 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %78, align 8, !tbaa !49
  %79 = getelementptr i64, i64* %75, i64 8
  %80 = bitcast i64* %79 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %80, align 8, !tbaa !49
  %81 = getelementptr i64, i64* %75, i64 12
  %82 = bitcast i64* %81 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %82, align 8, !tbaa !49
  %index.next.5 = or i64 %index, 96
  %83 = add i64 %__begin.0133.ls.dac.lcssa, %index.next.5
  %84 = getelementptr inbounds i64, i64* %.ls1, i64 %83
  %85 = bitcast i64* %84 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %85, align 8, !tbaa !49
  %86 = getelementptr i64, i64* %84, i64 4
  %87 = bitcast i64* %86 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %87, align 8, !tbaa !49
  %88 = getelementptr i64, i64* %84, i64 8
  %89 = bitcast i64* %88 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %89, align 8, !tbaa !49
  %90 = getelementptr i64, i64* %84, i64 12
  %91 = bitcast i64* %90 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %91, align 8, !tbaa !49
  %index.next.6 = or i64 %index, 112
  %92 = add i64 %__begin.0133.ls.dac.lcssa, %index.next.6
  %93 = getelementptr inbounds i64, i64* %.ls1, i64 %92
  %94 = bitcast i64* %93 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %94, align 8, !tbaa !49
  %95 = getelementptr i64, i64* %93, i64 4
  %96 = bitcast i64* %95 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %96, align 8, !tbaa !49
  %97 = getelementptr i64, i64* %93, i64 8
  %98 = bitcast i64* %97 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %98, align 8, !tbaa !49
  %99 = getelementptr i64, i64* %93, i64 12
  %100 = bitcast i64* %99 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %100, align 8, !tbaa !49
  %index.next.7 = add i64 %index, 128
  %niter.nsub.7 = add i64 %niter, -8
  %niter.ncmp.7 = icmp eq i64 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !449

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.7, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil.preheader

vector.body.epil.preheader:                       ; preds = %middle.block.unr-lcssa
  br label %vector.body.epil

vector.body.epil:                                 ; preds = %vector.body.epil, %vector.body.epil.preheader
  %index.epil = phi i64 [ %index.unr, %vector.body.epil.preheader ], [ %index.next.epil, %vector.body.epil ]
  %epil.iter = phi i64 [ %xtraiter, %vector.body.epil.preheader ], [ %epil.iter.sub, %vector.body.epil ]
  %101 = add i64 %__begin.0133.ls.dac.lcssa, %index.epil
  %102 = getelementptr inbounds i64, i64* %.ls1, i64 %101
  %103 = bitcast i64* %102 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %103, align 8, !tbaa !49
  %104 = getelementptr i64, i64* %102, i64 4
  %105 = bitcast i64* %104 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %105, align 8, !tbaa !49
  %106 = getelementptr i64, i64* %102, i64 8
  %107 = bitcast i64* %106 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %107, align 8, !tbaa !49
  %108 = getelementptr i64, i64* %102, i64 12
  %109 = bitcast i64* %108 to <4 x i64>*
  store <4 x i64> <i64 13, i64 13, i64 13, i64 13>, <4 x i64>* %109, align 8, !tbaa !49
  %index.next.epil = add i64 %index.epil, 16
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block, label %vector.body.epil, !llvm.loop !450

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %24, %n.vec
  br i1 %cmp.n, label %pfor.cond.cleanup.loopexit.ls, label %pfor.detach.ls.preheader

pfor.cond.cleanup.loopexit.ls:                    ; preds = %pfor.detach.ls, %middle.block
  %110 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %111 = load atomic i32, i32* %110 acquire, align 8
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %114 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %115 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %116 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %115, i16* nonnull %116) #2
  %117 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %118 = call i8* @llvm.frameaddress(i32 0) #2
  %119 = getelementptr inbounds [5 x i8*], [5 x i8*]* %117, i64 0, i64 0
  store volatile i8* %118, i8** %119, align 8
  %120 = call i8* @llvm.stacksave() #2
  %121 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %120, i8** %121, align 8
  %122 = bitcast [5 x i8*]* %117 to i8*
  %123 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %122) #24
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %125 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %126 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %125, i64 0, i32 12, i32 0
  %127 = load i64, i64* %126, align 8
  %128 = add i64 %127, 1
  store i64 %128, i64* %126, align 8
  %129 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %130 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %129, i64 0, i32 9
  %133 = bitcast %struct.__cilkrts_stack_frame** %132 to i64*
  store atomic i64 %131, i64* %133 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %134 = load atomic i32, i32* %110 acquire, align 8
  %135 = icmp eq i32 %134, 16777216
  br i1 %135, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %pfor.detach.ls
  %__begin.0133.ls = phi i64 [ %inc.ls, %pfor.detach.ls ], [ %__begin.0133.ls.ph, %pfor.detach.ls.preheader ]
  %arrayidx6.ls = getelementptr inbounds i64, i64* %.ls1, i64 %__begin.0133.ls
  store i64 13, i64* %arrayidx6.ls, align 8, !tbaa !49
  %136 = icmp ult i64 %__begin.0133.ls, %end.ls
  %inc.ls = add nuw nsw i64 %__begin.0133.ls, 1
  br i1 %136, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit.ls, !llvm.loop !451
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7benchIO13arrayToStringIiEE4_seqIcEPT_l_pfor.detach21.ls(i64 %__begin12.0131.start.ls, i64 %end.ls, i64 %.ls, i8* nocapture align 1 %call9.ls) unnamed_addr #15 {
pfor.detach21.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach21.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach21.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach21.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach21.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount2 = sub i64 %end.ls, %__begin12.0131.start.ls
  %9 = icmp ugt i64 %itercount2, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach21.preheader.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount4 = phi i64 [ %itercount2, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin12.0131.ls.dac3 = phi i64 [ %__begin12.0131.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount4, 1
  %miditer = add nuw nsw i64 %__begin12.0131.ls.dac3, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split5, label %.split.split

.split5:                                          ; preds = %16
  call fastcc void @_ZN7benchIO13arrayToStringIiEE4_seqIcEPT_l_pfor.detach21.ls_.split.cilk(i64 %__begin12.0131.ls.dac3, i64 %miditer, i64 %.ls, i8* %call9.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split5, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach21.preheader.ls.split._crit_edge

pfor.detach21.preheader.ls.split._crit_edge:      ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin12.0131.ls.dac.lcssa = phi i64 [ %__begin12.0131.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  %scevgep = getelementptr i8, i8* %call9.ls, i64 %__begin12.0131.ls.dac.lcssa
  %22 = icmp ugt i64 %__begin12.0131.ls.dac.lcssa, %end.ls
  %umax = select i1 %22, i64 %__begin12.0131.ls.dac.lcssa, i64 %end.ls
  %23 = add i64 %umax, 1
  %24 = sub i64 %23, %__begin12.0131.ls.dac.lcssa
  call void @llvm.memset.p0i8.i64(i8* %scevgep, i8 0, i64 %24, i32 1, i1 false)
  %25 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %26 = load atomic i32, i32* %25 acquire, align 8
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.detach21.preheader.ls.split._crit_edge
  %29 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %30 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %31 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %30, i16* nonnull %31) #2
  %32 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %33 = call i8* @llvm.frameaddress(i32 0) #2
  %34 = getelementptr inbounds [5 x i8*], [5 x i8*]* %32, i64 0, i64 0
  store volatile i8* %33, i8** %34, align 8
  %35 = call i8* @llvm.stacksave() #2
  %36 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %35, i8** %36, align 8
  %37 = bitcast [5 x i8*]* %32 to i8*
  %38 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %37) #24
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.detach21.preheader.ls.split._crit_edge, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %40 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %41 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %40, i64 0, i32 12, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %41, align 8
  %44 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %45 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %44, i64 0, i32 9
  %48 = bitcast %struct.__cilkrts_stack_frame** %47 to i64*
  store atomic i64 %46, i64* %48 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %49 = load atomic i32, i32* %25 acquire, align 8
  %50 = icmp eq i32 %49, 16777216
  br i1 %50, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7benchIO13arrayToStringIiEE4_seqIcEPT_l_pfor.detach44.ls(i64 %__begin34.0129.start.ls, i64 %end.ls, i64 %.ls, i64* nocapture readonly align 1 %.ls1, i8* nocapture align 1 %call9.ls, i32* nocapture readonly align 1 %A.ls) unnamed_addr #15 {
pfor.detach44.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach44.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach44.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach44.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach44.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount3 = sub i64 %end.ls, %__begin34.0129.start.ls
  %9 = icmp ugt i64 %itercount3, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach44.ls.preheader

pfor.detach44.ls.preheader:                       ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin34.0129.ls.ph = phi i64 [ %__begin34.0129.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach44.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount5 = phi i64 [ %itercount3, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin34.0129.ls.dac4 = phi i64 [ %__begin34.0129.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount5, 1
  %miditer = add nuw nsw i64 %__begin34.0129.ls.dac4, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split6, label %.split.split

.split6:                                          ; preds = %16
  call fastcc void @_ZN7benchIO13arrayToStringIiEE4_seqIcEPT_l_pfor.detach44.ls_.split.cilk(i64 %__begin34.0129.ls.dac4, i64 %miditer, i64 %.ls, i64* %.ls1, i8* %call9.ls, i32* %A.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split6, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach44.ls.preheader

pfor.cond.cleanup43.loopexit.ls:                  ; preds = %pfor.detach44.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup43.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup43.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach44.ls:                                 ; preds = %pfor.detach44.ls.preheader, %pfor.detach44.ls
  %__begin34.0129.ls = phi i64 [ %add52.ls, %pfor.detach44.ls ], [ %__begin34.0129.ls.ph, %pfor.detach44.ls.preheader ]
  %arrayidx50.ls = getelementptr inbounds i64, i64* %.ls1, i64 %__begin34.0129.ls
  %48 = load i64, i64* %arrayidx50.ls, align 8, !tbaa !49
  %add.ptr.ls = getelementptr inbounds i8, i8* %call9.ls, i64 %48
  %arrayidx51.ls = getelementptr inbounds i32, i32* %A.ls, i64 %__begin34.0129.ls
  %49 = load i32, i32* %arrayidx51.ls, align 4, !tbaa !59
  %call.i126.ls = tail call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr.ls, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0), i32 %49) #2
  %add52.ls = add nuw nsw i64 %__begin34.0129.ls, 1
  %arrayidx53.ls = getelementptr inbounds i64, i64* %.ls1, i64 %add52.ls
  %50 = load i64, i64* %arrayidx53.ls, align 8, !tbaa !49
  %sub54.ls = add nsw i64 %50, -1
  %arrayidx55.ls = getelementptr inbounds i8, i8* %call9.ls, i64 %sub54.ls
  store i8 10, i8* %arrayidx55.ls, align 1, !tbaa !22
  %51 = icmp ult i64 %__begin34.0129.ls, %end.ls
  br i1 %51, label %pfor.detach44.ls, label %pfor.cond.cleanup43.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7benchIO13arrayToStringIiEE4_seqIcEPT_l_pfor.detach.i.ls(i64 %__begin.028.i.start.ls, i64 %end.ls, i64 %.ls, i8* nocapture readonly align 1 %call9.ls, i8* nocapture align 1 %call1.i.ls) unnamed_addr #15 {
pfor.detach.lr.ph.i.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.i.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.i.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.i.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.i.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount2 = sub i64 %end.ls, %__begin.028.i.start.ls
  %9 = icmp ugt i64 %itercount2, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.lr.ph.i.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount4 = phi i64 [ %itercount2, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin.028.i.ls.dac3 = phi i64 [ %__begin.028.i.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount4, 1
  %miditer = add nuw nsw i64 %__begin.028.i.ls.dac3, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split5, label %.split.split

.split5:                                          ; preds = %16
  call fastcc void @_ZN7benchIO13arrayToStringIiEE4_seqIcEPT_l_pfor.detach.i.ls_.split.cilk(i64 %__begin.028.i.ls.dac3, i64 %miditer, i64 %.ls, i8* %call9.ls, i8* %call1.i.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split5, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.lr.ph.i.ls.split._crit_edge

pfor.detach.lr.ph.i.ls.split._crit_edge:          ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin.028.i.ls.dac.lcssa = phi i64 [ %__begin.028.i.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  %22 = icmp ugt i64 %__begin.028.i.ls.dac.lcssa, %end.ls
  %umax = select i1 %22, i64 %__begin.028.i.ls.dac.lcssa, i64 %end.ls
  %23 = add i64 %umax, 1
  %24 = sub i64 %23, %__begin.028.i.ls.dac.lcssa
  %min.iters.check = icmp ult i64 %24, 128
  br i1 %min.iters.check, label %pfor.detach.i.ls.preheader, label %vector.memcheck

pfor.detach.i.ls.preheader:                       ; preds = %middle.block, %vector.memcheck, %pfor.detach.lr.ph.i.ls.split._crit_edge
  %__begin.028.i.ls.ph = phi i64 [ %__begin.028.i.ls.dac.lcssa, %vector.memcheck ], [ %__begin.028.i.ls.dac.lcssa, %pfor.detach.lr.ph.i.ls.split._crit_edge ], [ %ind.end, %middle.block ]
  br label %pfor.detach.i.ls

vector.memcheck:                                  ; preds = %pfor.detach.lr.ph.i.ls.split._crit_edge
  %scevgep = getelementptr i8, i8* %call1.i.ls, i64 %__begin.028.i.ls.dac.lcssa
  %25 = icmp ugt i64 %__begin.028.i.ls.dac.lcssa, %end.ls
  %umax1 = select i1 %25, i64 %__begin.028.i.ls.dac.lcssa, i64 %end.ls
  %26 = add i64 %umax1, 1
  %scevgep2 = getelementptr i8, i8* %call1.i.ls, i64 %26
  %scevgep3 = getelementptr i8, i8* %call9.ls, i64 %__begin.028.i.ls.dac.lcssa
  %scevgep4 = getelementptr i8, i8* %call9.ls, i64 %26
  %bound0 = icmp ult i8* %scevgep, %scevgep4
  %bound1 = icmp ult i8* %scevgep3, %scevgep2
  %memcheck.conflict = and i1 %bound0, %bound1
  br i1 %memcheck.conflict, label %pfor.detach.i.ls.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %24, -128
  %ind.end = add i64 %__begin.028.i.ls.dac.lcssa, %n.vec
  %27 = add i64 %n.vec, -128
  %28 = lshr exact i64 %27, 7
  %29 = add nuw nsw i64 %28, 1
  %xtraiter = and i64 %29, 1
  %30 = icmp eq i64 %27, 0
  br i1 %30, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nsw i64 %29, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %vector.body ]
  %31 = add i64 %__begin.028.i.ls.dac.lcssa, %index
  %32 = getelementptr inbounds i8, i8* %call9.ls, i64 %31
  %33 = bitcast i8* %32 to <32 x i8>*
  %wide.load = load <32 x i8>, <32 x i8>* %33, align 1, !tbaa !22, !alias.scope !452
  %34 = getelementptr i8, i8* %32, i64 32
  %35 = bitcast i8* %34 to <32 x i8>*
  %wide.load8 = load <32 x i8>, <32 x i8>* %35, align 1, !tbaa !22, !alias.scope !452
  %36 = getelementptr i8, i8* %32, i64 64
  %37 = bitcast i8* %36 to <32 x i8>*
  %wide.load9 = load <32 x i8>, <32 x i8>* %37, align 1, !tbaa !22, !alias.scope !452
  %38 = getelementptr i8, i8* %32, i64 96
  %39 = bitcast i8* %38 to <32 x i8>*
  %wide.load10 = load <32 x i8>, <32 x i8>* %39, align 1, !tbaa !22, !alias.scope !452
  %40 = icmp sgt <32 x i8> %wide.load, zeroinitializer
  %41 = icmp sgt <32 x i8> %wide.load8, zeroinitializer
  %42 = icmp sgt <32 x i8> %wide.load9, zeroinitializer
  %43 = icmp sgt <32 x i8> %wide.load10, zeroinitializer
  %44 = getelementptr inbounds i8, i8* %call1.i.ls, i64 %31
  %45 = zext <32 x i1> %40 to <32 x i8>
  %46 = zext <32 x i1> %41 to <32 x i8>
  %47 = zext <32 x i1> %42 to <32 x i8>
  %48 = zext <32 x i1> %43 to <32 x i8>
  %49 = bitcast i8* %44 to <32 x i8>*
  store <32 x i8> %45, <32 x i8>* %49, align 1, !tbaa !23, !alias.scope !455, !noalias !452
  %50 = getelementptr i8, i8* %44, i64 32
  %51 = bitcast i8* %50 to <32 x i8>*
  store <32 x i8> %46, <32 x i8>* %51, align 1, !tbaa !23, !alias.scope !455, !noalias !452
  %52 = getelementptr i8, i8* %44, i64 64
  %53 = bitcast i8* %52 to <32 x i8>*
  store <32 x i8> %47, <32 x i8>* %53, align 1, !tbaa !23, !alias.scope !455, !noalias !452
  %54 = getelementptr i8, i8* %44, i64 96
  %55 = bitcast i8* %54 to <32 x i8>*
  store <32 x i8> %48, <32 x i8>* %55, align 1, !tbaa !23, !alias.scope !455, !noalias !452
  %index.next = or i64 %index, 128
  %56 = add i64 %__begin.028.i.ls.dac.lcssa, %index.next
  %57 = getelementptr inbounds i8, i8* %call9.ls, i64 %56
  %58 = bitcast i8* %57 to <32 x i8>*
  %wide.load.1 = load <32 x i8>, <32 x i8>* %58, align 1, !tbaa !22, !alias.scope !452
  %59 = getelementptr i8, i8* %57, i64 32
  %60 = bitcast i8* %59 to <32 x i8>*
  %wide.load8.1 = load <32 x i8>, <32 x i8>* %60, align 1, !tbaa !22, !alias.scope !452
  %61 = getelementptr i8, i8* %57, i64 64
  %62 = bitcast i8* %61 to <32 x i8>*
  %wide.load9.1 = load <32 x i8>, <32 x i8>* %62, align 1, !tbaa !22, !alias.scope !452
  %63 = getelementptr i8, i8* %57, i64 96
  %64 = bitcast i8* %63 to <32 x i8>*
  %wide.load10.1 = load <32 x i8>, <32 x i8>* %64, align 1, !tbaa !22, !alias.scope !452
  %65 = icmp sgt <32 x i8> %wide.load.1, zeroinitializer
  %66 = icmp sgt <32 x i8> %wide.load8.1, zeroinitializer
  %67 = icmp sgt <32 x i8> %wide.load9.1, zeroinitializer
  %68 = icmp sgt <32 x i8> %wide.load10.1, zeroinitializer
  %69 = getelementptr inbounds i8, i8* %call1.i.ls, i64 %56
  %70 = zext <32 x i1> %65 to <32 x i8>
  %71 = zext <32 x i1> %66 to <32 x i8>
  %72 = zext <32 x i1> %67 to <32 x i8>
  %73 = zext <32 x i1> %68 to <32 x i8>
  %74 = bitcast i8* %69 to <32 x i8>*
  store <32 x i8> %70, <32 x i8>* %74, align 1, !tbaa !23, !alias.scope !455, !noalias !452
  %75 = getelementptr i8, i8* %69, i64 32
  %76 = bitcast i8* %75 to <32 x i8>*
  store <32 x i8> %71, <32 x i8>* %76, align 1, !tbaa !23, !alias.scope !455, !noalias !452
  %77 = getelementptr i8, i8* %69, i64 64
  %78 = bitcast i8* %77 to <32 x i8>*
  store <32 x i8> %72, <32 x i8>* %78, align 1, !tbaa !23, !alias.scope !455, !noalias !452
  %79 = getelementptr i8, i8* %69, i64 96
  %80 = bitcast i8* %79 to <32 x i8>*
  store <32 x i8> %73, <32 x i8>* %80, align 1, !tbaa !23, !alias.scope !455, !noalias !452
  %index.next.1 = add i64 %index, 256
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !457

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %81 = add i64 %__begin.028.i.ls.dac.lcssa, %index.unr
  %82 = getelementptr inbounds i8, i8* %call9.ls, i64 %81
  %83 = bitcast i8* %82 to <32 x i8>*
  %wide.load.epil = load <32 x i8>, <32 x i8>* %83, align 1, !tbaa !22, !alias.scope !452
  %84 = getelementptr i8, i8* %82, i64 32
  %85 = bitcast i8* %84 to <32 x i8>*
  %wide.load8.epil = load <32 x i8>, <32 x i8>* %85, align 1, !tbaa !22, !alias.scope !452
  %86 = getelementptr i8, i8* %82, i64 64
  %87 = bitcast i8* %86 to <32 x i8>*
  %wide.load9.epil = load <32 x i8>, <32 x i8>* %87, align 1, !tbaa !22, !alias.scope !452
  %88 = getelementptr i8, i8* %82, i64 96
  %89 = bitcast i8* %88 to <32 x i8>*
  %wide.load10.epil = load <32 x i8>, <32 x i8>* %89, align 1, !tbaa !22, !alias.scope !452
  %90 = icmp sgt <32 x i8> %wide.load.epil, zeroinitializer
  %91 = icmp sgt <32 x i8> %wide.load8.epil, zeroinitializer
  %92 = icmp sgt <32 x i8> %wide.load9.epil, zeroinitializer
  %93 = icmp sgt <32 x i8> %wide.load10.epil, zeroinitializer
  %94 = getelementptr inbounds i8, i8* %call1.i.ls, i64 %81
  %95 = zext <32 x i1> %90 to <32 x i8>
  %96 = zext <32 x i1> %91 to <32 x i8>
  %97 = zext <32 x i1> %92 to <32 x i8>
  %98 = zext <32 x i1> %93 to <32 x i8>
  %99 = bitcast i8* %94 to <32 x i8>*
  store <32 x i8> %95, <32 x i8>* %99, align 1, !tbaa !23, !alias.scope !455, !noalias !452
  %100 = getelementptr i8, i8* %94, i64 32
  %101 = bitcast i8* %100 to <32 x i8>*
  store <32 x i8> %96, <32 x i8>* %101, align 1, !tbaa !23, !alias.scope !455, !noalias !452
  %102 = getelementptr i8, i8* %94, i64 64
  %103 = bitcast i8* %102 to <32 x i8>*
  store <32 x i8> %97, <32 x i8>* %103, align 1, !tbaa !23, !alias.scope !455, !noalias !452
  %104 = getelementptr i8, i8* %94, i64 96
  %105 = bitcast i8* %104 to <32 x i8>*
  store <32 x i8> %98, <32 x i8>* %105, align 1, !tbaa !23, !alias.scope !455, !noalias !452
  br label %middle.block

middle.block:                                     ; preds = %middle.block.unr-lcssa, %vector.body.epil
  %cmp.n = icmp eq i64 %24, %n.vec
  br i1 %cmp.n, label %pfor.cond.cleanup.i.ls, label %pfor.detach.i.ls.preheader

pfor.cond.cleanup.i.ls:                           ; preds = %pfor.detach.i.ls, %middle.block
  %106 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %107 = load atomic i32, i32* %106 acquire, align 8
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.i.ls
  %110 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %111 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %112 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %111, i16* nonnull %112) #2
  %113 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %114 = call i8* @llvm.frameaddress(i32 0) #2
  %115 = getelementptr inbounds [5 x i8*], [5 x i8*]* %113, i64 0, i64 0
  store volatile i8* %114, i8** %115, align 8
  %116 = call i8* @llvm.stacksave() #2
  %117 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %116, i8** %117, align 8
  %118 = bitcast [5 x i8*]* %113 to i8*
  %119 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %118) #24
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.i.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %121 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %122 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %121, i64 0, i32 12, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = add i64 %123, 1
  store i64 %124, i64* %122, align 8
  %125 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %126 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %125, i64 0, i32 9
  %129 = bitcast %struct.__cilkrts_stack_frame** %128 to i64*
  store atomic i64 %127, i64* %129 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %130 = load atomic i32, i32* %106 acquire, align 8
  %131 = icmp eq i32 %130, 16777216
  br i1 %131, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.i.ls:                                 ; preds = %pfor.detach.i.ls.preheader, %pfor.detach.i.ls
  %__begin.028.i.ls = phi i64 [ %inc.i.ls, %pfor.detach.i.ls ], [ %__begin.028.i.ls.ph, %pfor.detach.i.ls.preheader ]
  %arrayidx.i.ls = getelementptr inbounds i8, i8* %call9.ls, i64 %__begin.028.i.ls
  %132 = load i8, i8* %arrayidx.i.ls, align 1, !tbaa !22
  %cmp.i.i.ls = icmp sgt i8 %132, 0
  %arrayidx7.i.ls = getelementptr inbounds i8, i8* %call1.i.ls, i64 %__begin.028.i.ls
  %frombool.i.ls = zext i1 %cmp.i.i.ls to i8
  store i8 %frombool.i.ls, i8* %arrayidx7.i.ls, align 1, !tbaa !23
  %133 = icmp ult i64 %__begin.028.i.ls, %end.ls
  %inc.i.ls = add nuw nsw i64 %__begin.028.i.ls, 1
  br i1 %133, label %pfor.detach.i.ls, label %pfor.cond.cleanup.i.ls, !llvm.loop !458
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN8sequence4packIclNS_4getAIclEEEE4_seqIT_EPS4_PbT0_S8_T1__pfor.detach.ls(i64 %__begin.0222.start.ls, i64 %end.ls, i64 %.ls, i64 %.ls1, i64 %.ls2, i64 %.ls3, i64 %s.ls, i64 %e.ls, i8* align 1 %Fl.ls, i64* nocapture align 1 %.ls4) unnamed_addr #15 {
pfor.detach.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount13 = sub i64 %end.ls, %__begin.0222.start.ls
  %9 = icmp ugt i64 %itercount13, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin.0222.ls.ph = phi i64 [ %__begin.0222.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount15 = phi i64 [ %itercount13, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin.0222.ls.dac14 = phi i64 [ %__begin.0222.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount15, 1
  %miditer = add nuw nsw i64 %__begin.0222.ls.dac14, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split16, label %.split.split

.split16:                                         ; preds = %16
  call fastcc void @_ZN8sequence4packIclNS_4getAIclEEEE4_seqIT_EPS4_PbT0_S8_T1__pfor.detach.ls_.split.cilk(i64 %__begin.0222.ls.dac14, i64 %miditer, i64 %.ls, i64 %.ls1, i64 %.ls2, i64 %.ls3, i64 %s.ls, i64 %e.ls, i8* %Fl.ls, i64* %.ls4)
  br label %.split.split

.split.split:                                     ; preds = %.split16, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.ls:                             ; preds = %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.ls
  %__begin.0222.ls = phi i64 [ %inc.ls, %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.ls ], [ %__begin.0222.ls.ph, %pfor.detach.ls.preheader ]
  %48 = mul nsw i64 %__begin.0222.ls, -2048
  %49 = add i64 %48, %.ls1
  %50 = add i64 %48, %.ls2
  %51 = icmp sgt i64 %50, %.ls3
  %smax462.ls = select i1 %51, i64 %50, i64 %.ls3
  %52 = sub i64 %49, %smax462.ls
  %53 = add i64 %52, -16
  %54 = lshr i64 %53, 4
  %55 = add nuw nsw i64 %54, 1
  %mul16.ls = shl nsw i64 %__begin.0222.ls, 11
  %add17.ls = add nsw i64 %mul16.ls, %s.ls
  %add19.ls = add nsw i64 %add17.ls, 2048
  %cmp.i122.ls = icmp sgt i64 %add19.ls, %e.ls
  %.sroa.speculated209.ls = select i1 %cmp.i122.ls, i64 %e.ls, i64 %add19.ls
  %add.ptr.ls = getelementptr inbounds i8, i8* %Fl.ls, i64 %add17.ls
  %sub21.ls = sub nsw i64 %.sroa.speculated209.ls, %add17.ls
  %cmp.i194.ls = icmp sgt i64 %sub21.ls, 127
  %and.i.ls = and i64 %sub21.ls, 511
  %cmp1.i.ls = icmp eq i64 %and.i.ls, 0
  %or.cond.i.ls = and i1 %cmp.i194.ls, %cmp1.i.ls
  br i1 %or.cond.i.ls, label %land.lhs.true2.i.ls, label %if.else.i.ls

if.else.i.ls:                                     ; preds = %pfor.detach.ls
  %cmp2766.i.ls = icmp sgt i64 %sub21.ls, 0
  br i1 %cmp2766.i.ls, label %for.body29.lr.ph.i.ls, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.ls

land.lhs.true2.i.ls:                              ; preds = %pfor.detach.ls
  %56 = ptrtoint i8* %add.ptr.ls to i64
  %and3.i.ls = and i64 %56, 3
  %cmp4.i.ls = icmp eq i64 %and3.i.ls, 0
  br i1 %cmp4.i.ls, label %if.then.i195.ls, label %for.body29.lr.ph.i.ls

for.body29.lr.ph.i.ls:                            ; preds = %land.lhs.true2.i.ls, %if.else.i.ls
  %min.iters.check.ls = icmp ult i64 %52, 16
  br i1 %min.iters.check.ls, label %for.body29.i.ls.preheader, label %vector.ph252.ls

vector.ph252.ls:                                  ; preds = %for.body29.lr.ph.i.ls
  %n.vec.ls = and i64 %52, -16
  %xtraiter463.ls = and i64 %55, 3
  %57 = icmp ult i64 %53, 48
  br i1 %57, label %middle.block250.unr-lcssa.ls, label %vector.ph252.new.ls

vector.ph252.new.ls:                              ; preds = %vector.ph252.ls
  %unroll_iter470.ls = sub nsw i64 %55, %xtraiter463.ls
  br label %vector.body249.ls

vector.body249.ls:                                ; preds = %vector.body249.ls, %vector.ph252.new.ls
  %index253.ls = phi i64 [ 0, %vector.ph252.new.ls ], [ %index.next254.3.ls, %vector.body249.ls ]
  %vec.phi263.ls = phi <4 x i64> [ zeroinitializer, %vector.ph252.new.ls ], [ %118, %vector.body249.ls ]
  %vec.phi264.ls = phi <4 x i64> [ zeroinitializer, %vector.ph252.new.ls ], [ %119, %vector.body249.ls ]
  %vec.phi265.ls = phi <4 x i64> [ zeroinitializer, %vector.ph252.new.ls ], [ %120, %vector.body249.ls ]
  %vec.phi266.ls = phi <4 x i64> [ zeroinitializer, %vector.ph252.new.ls ], [ %121, %vector.body249.ls ]
  %niter471.ls = phi i64 [ %unroll_iter470.ls, %vector.ph252.new.ls ], [ %niter471.nsub.3.ls, %vector.body249.ls ]
  %58 = getelementptr inbounds i8, i8* %add.ptr.ls, i64 %index253.ls
  %59 = bitcast i8* %58 to <4 x i8>*
  %wide.load267.ls = load <4 x i8>, <4 x i8>* %59, align 1, !tbaa !23
  %60 = getelementptr i8, i8* %58, i64 4
  %61 = bitcast i8* %60 to <4 x i8>*
  %wide.load268.ls = load <4 x i8>, <4 x i8>* %61, align 1, !tbaa !23
  %62 = getelementptr i8, i8* %58, i64 8
  %63 = bitcast i8* %62 to <4 x i8>*
  %wide.load269.ls = load <4 x i8>, <4 x i8>* %63, align 1, !tbaa !23
  %64 = getelementptr i8, i8* %58, i64 12
  %65 = bitcast i8* %64 to <4 x i8>*
  %wide.load270.ls = load <4 x i8>, <4 x i8>* %65, align 1, !tbaa !23
  %66 = zext <4 x i8> %wide.load267.ls to <4 x i64>
  %67 = zext <4 x i8> %wide.load268.ls to <4 x i64>
  %68 = zext <4 x i8> %wide.load269.ls to <4 x i64>
  %69 = zext <4 x i8> %wide.load270.ls to <4 x i64>
  %70 = add nuw nsw <4 x i64> %vec.phi263.ls, %66
  %71 = add nuw nsw <4 x i64> %vec.phi264.ls, %67
  %72 = add nuw nsw <4 x i64> %vec.phi265.ls, %68
  %73 = add nuw nsw <4 x i64> %vec.phi266.ls, %69
  %index.next254.ls = or i64 %index253.ls, 16
  %74 = getelementptr inbounds i8, i8* %add.ptr.ls, i64 %index.next254.ls
  %75 = bitcast i8* %74 to <4 x i8>*
  %wide.load267.1.ls = load <4 x i8>, <4 x i8>* %75, align 1, !tbaa !23
  %76 = getelementptr i8, i8* %74, i64 4
  %77 = bitcast i8* %76 to <4 x i8>*
  %wide.load268.1.ls = load <4 x i8>, <4 x i8>* %77, align 1, !tbaa !23
  %78 = getelementptr i8, i8* %74, i64 8
  %79 = bitcast i8* %78 to <4 x i8>*
  %wide.load269.1.ls = load <4 x i8>, <4 x i8>* %79, align 1, !tbaa !23
  %80 = getelementptr i8, i8* %74, i64 12
  %81 = bitcast i8* %80 to <4 x i8>*
  %wide.load270.1.ls = load <4 x i8>, <4 x i8>* %81, align 1, !tbaa !23
  %82 = zext <4 x i8> %wide.load267.1.ls to <4 x i64>
  %83 = zext <4 x i8> %wide.load268.1.ls to <4 x i64>
  %84 = zext <4 x i8> %wide.load269.1.ls to <4 x i64>
  %85 = zext <4 x i8> %wide.load270.1.ls to <4 x i64>
  %86 = add nuw nsw <4 x i64> %70, %82
  %87 = add nuw nsw <4 x i64> %71, %83
  %88 = add nuw nsw <4 x i64> %72, %84
  %89 = add nuw nsw <4 x i64> %73, %85
  %index.next254.1.ls = or i64 %index253.ls, 32
  %90 = getelementptr inbounds i8, i8* %add.ptr.ls, i64 %index.next254.1.ls
  %91 = bitcast i8* %90 to <4 x i8>*
  %wide.load267.2.ls = load <4 x i8>, <4 x i8>* %91, align 1, !tbaa !23
  %92 = getelementptr i8, i8* %90, i64 4
  %93 = bitcast i8* %92 to <4 x i8>*
  %wide.load268.2.ls = load <4 x i8>, <4 x i8>* %93, align 1, !tbaa !23
  %94 = getelementptr i8, i8* %90, i64 8
  %95 = bitcast i8* %94 to <4 x i8>*
  %wide.load269.2.ls = load <4 x i8>, <4 x i8>* %95, align 1, !tbaa !23
  %96 = getelementptr i8, i8* %90, i64 12
  %97 = bitcast i8* %96 to <4 x i8>*
  %wide.load270.2.ls = load <4 x i8>, <4 x i8>* %97, align 1, !tbaa !23
  %98 = zext <4 x i8> %wide.load267.2.ls to <4 x i64>
  %99 = zext <4 x i8> %wide.load268.2.ls to <4 x i64>
  %100 = zext <4 x i8> %wide.load269.2.ls to <4 x i64>
  %101 = zext <4 x i8> %wide.load270.2.ls to <4 x i64>
  %102 = add nuw nsw <4 x i64> %86, %98
  %103 = add nuw nsw <4 x i64> %87, %99
  %104 = add nuw nsw <4 x i64> %88, %100
  %105 = add nuw nsw <4 x i64> %89, %101
  %index.next254.2.ls = or i64 %index253.ls, 48
  %106 = getelementptr inbounds i8, i8* %add.ptr.ls, i64 %index.next254.2.ls
  %107 = bitcast i8* %106 to <4 x i8>*
  %wide.load267.3.ls = load <4 x i8>, <4 x i8>* %107, align 1, !tbaa !23
  %108 = getelementptr i8, i8* %106, i64 4
  %109 = bitcast i8* %108 to <4 x i8>*
  %wide.load268.3.ls = load <4 x i8>, <4 x i8>* %109, align 1, !tbaa !23
  %110 = getelementptr i8, i8* %106, i64 8
  %111 = bitcast i8* %110 to <4 x i8>*
  %wide.load269.3.ls = load <4 x i8>, <4 x i8>* %111, align 1, !tbaa !23
  %112 = getelementptr i8, i8* %106, i64 12
  %113 = bitcast i8* %112 to <4 x i8>*
  %wide.load270.3.ls = load <4 x i8>, <4 x i8>* %113, align 1, !tbaa !23
  %114 = zext <4 x i8> %wide.load267.3.ls to <4 x i64>
  %115 = zext <4 x i8> %wide.load268.3.ls to <4 x i64>
  %116 = zext <4 x i8> %wide.load269.3.ls to <4 x i64>
  %117 = zext <4 x i8> %wide.load270.3.ls to <4 x i64>
  %118 = add nuw nsw <4 x i64> %102, %114
  %119 = add nuw nsw <4 x i64> %103, %115
  %120 = add nuw nsw <4 x i64> %104, %116
  %121 = add nuw nsw <4 x i64> %105, %117
  %index.next254.3.ls = add i64 %index253.ls, 64
  %niter471.nsub.3.ls = add i64 %niter471.ls, -4
  %niter471.ncmp.3.ls = icmp eq i64 %niter471.nsub.3.ls, 0
  br i1 %niter471.ncmp.3.ls, label %middle.block250.unr-lcssa.ls, label %vector.body249.ls, !llvm.loop !459

middle.block250.unr-lcssa.ls:                     ; preds = %vector.body249.ls, %vector.ph252.ls
  %.lcssa431.ph.ls = phi <4 x i64> [ undef, %vector.ph252.ls ], [ %118, %vector.body249.ls ]
  %.lcssa430.ph.ls = phi <4 x i64> [ undef, %vector.ph252.ls ], [ %119, %vector.body249.ls ]
  %.lcssa429.ph.ls = phi <4 x i64> [ undef, %vector.ph252.ls ], [ %120, %vector.body249.ls ]
  %.lcssa428.ph.ls = phi <4 x i64> [ undef, %vector.ph252.ls ], [ %121, %vector.body249.ls ]
  %index253.unr.ls = phi i64 [ 0, %vector.ph252.ls ], [ %index.next254.3.ls, %vector.body249.ls ]
  %vec.phi263.unr.ls = phi <4 x i64> [ zeroinitializer, %vector.ph252.ls ], [ %118, %vector.body249.ls ]
  %vec.phi264.unr.ls = phi <4 x i64> [ zeroinitializer, %vector.ph252.ls ], [ %119, %vector.body249.ls ]
  %vec.phi265.unr.ls = phi <4 x i64> [ zeroinitializer, %vector.ph252.ls ], [ %120, %vector.body249.ls ]
  %vec.phi266.unr.ls = phi <4 x i64> [ zeroinitializer, %vector.ph252.ls ], [ %121, %vector.body249.ls ]
  %lcmp.mod465.ls = icmp eq i64 %xtraiter463.ls, 0
  br i1 %lcmp.mod465.ls, label %middle.block250.ls, label %vector.body249.epil.ls.preheader

vector.body249.epil.ls.preheader:                 ; preds = %middle.block250.unr-lcssa.ls
  br label %vector.body249.epil.ls

vector.body249.epil.ls:                           ; preds = %vector.body249.epil.ls.preheader, %vector.body249.epil.ls
  %index253.epil.ls = phi i64 [ %index.next254.epil.ls, %vector.body249.epil.ls ], [ %index253.unr.ls, %vector.body249.epil.ls.preheader ]
  %vec.phi263.epil.ls = phi <4 x i64> [ %134, %vector.body249.epil.ls ], [ %vec.phi263.unr.ls, %vector.body249.epil.ls.preheader ]
  %vec.phi264.epil.ls = phi <4 x i64> [ %135, %vector.body249.epil.ls ], [ %vec.phi264.unr.ls, %vector.body249.epil.ls.preheader ]
  %vec.phi265.epil.ls = phi <4 x i64> [ %136, %vector.body249.epil.ls ], [ %vec.phi265.unr.ls, %vector.body249.epil.ls.preheader ]
  %vec.phi266.epil.ls = phi <4 x i64> [ %137, %vector.body249.epil.ls ], [ %vec.phi266.unr.ls, %vector.body249.epil.ls.preheader ]
  %epil.iter464.ls = phi i64 [ %epil.iter464.sub.ls, %vector.body249.epil.ls ], [ %xtraiter463.ls, %vector.body249.epil.ls.preheader ]
  %122 = getelementptr inbounds i8, i8* %add.ptr.ls, i64 %index253.epil.ls
  %123 = bitcast i8* %122 to <4 x i8>*
  %wide.load267.epil.ls = load <4 x i8>, <4 x i8>* %123, align 1, !tbaa !23
  %124 = getelementptr i8, i8* %122, i64 4
  %125 = bitcast i8* %124 to <4 x i8>*
  %wide.load268.epil.ls = load <4 x i8>, <4 x i8>* %125, align 1, !tbaa !23
  %126 = getelementptr i8, i8* %122, i64 8
  %127 = bitcast i8* %126 to <4 x i8>*
  %wide.load269.epil.ls = load <4 x i8>, <4 x i8>* %127, align 1, !tbaa !23
  %128 = getelementptr i8, i8* %122, i64 12
  %129 = bitcast i8* %128 to <4 x i8>*
  %wide.load270.epil.ls = load <4 x i8>, <4 x i8>* %129, align 1, !tbaa !23
  %130 = zext <4 x i8> %wide.load267.epil.ls to <4 x i64>
  %131 = zext <4 x i8> %wide.load268.epil.ls to <4 x i64>
  %132 = zext <4 x i8> %wide.load269.epil.ls to <4 x i64>
  %133 = zext <4 x i8> %wide.load270.epil.ls to <4 x i64>
  %134 = add nuw nsw <4 x i64> %vec.phi263.epil.ls, %130
  %135 = add nuw nsw <4 x i64> %vec.phi264.epil.ls, %131
  %136 = add nuw nsw <4 x i64> %vec.phi265.epil.ls, %132
  %137 = add nuw nsw <4 x i64> %vec.phi266.epil.ls, %133
  %index.next254.epil.ls = add i64 %index253.epil.ls, 16
  %epil.iter464.sub.ls = add nsw i64 %epil.iter464.ls, -1
  %epil.iter464.cmp.ls = icmp eq i64 %epil.iter464.sub.ls, 0
  br i1 %epil.iter464.cmp.ls, label %middle.block250.ls, label %vector.body249.epil.ls, !llvm.loop !460

middle.block250.ls:                               ; preds = %vector.body249.epil.ls, %middle.block250.unr-lcssa.ls
  %.lcssa431.ls = phi <4 x i64> [ %.lcssa431.ph.ls, %middle.block250.unr-lcssa.ls ], [ %134, %vector.body249.epil.ls ]
  %.lcssa430.ls = phi <4 x i64> [ %.lcssa430.ph.ls, %middle.block250.unr-lcssa.ls ], [ %135, %vector.body249.epil.ls ]
  %.lcssa429.ls = phi <4 x i64> [ %.lcssa429.ph.ls, %middle.block250.unr-lcssa.ls ], [ %136, %vector.body249.epil.ls ]
  %.lcssa428.ls = phi <4 x i64> [ %.lcssa428.ph.ls, %middle.block250.unr-lcssa.ls ], [ %137, %vector.body249.epil.ls ]
  %bin.rdx271.ls = add nuw <4 x i64> %.lcssa430.ls, %.lcssa431.ls
  %bin.rdx272.ls = add <4 x i64> %bin.rdx271.ls, %.lcssa429.ls
  %bin.rdx273.ls = add <4 x i64> %bin.rdx272.ls, %.lcssa428.ls
  %rdx.shuf274.ls = shufflevector <4 x i64> %bin.rdx273.ls, <4 x i64> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %bin.rdx275.ls = add <4 x i64> %rdx.shuf274.ls, %bin.rdx273.ls
  %rdx.shuf276.ls = shufflevector <4 x i64> %bin.rdx275.ls, <4 x i64> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %bin.rdx277.ls = add <4 x i64> %rdx.shuf276.ls, %bin.rdx275.ls
  %138 = extractelement <4 x i64> %bin.rdx277.ls, i32 0
  %cmp.n256.ls = icmp eq i64 %52, %n.vec.ls
  br i1 %cmp.n256.ls, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.ls, label %for.body29.i.ls.preheader

for.body29.i.ls.preheader:                        ; preds = %middle.block250.ls, %for.body29.lr.ph.i.ls
  %j25.068.i.ls.ph = phi i64 [ %n.vec.ls, %middle.block250.ls ], [ 0, %for.body29.lr.ph.i.ls ]
  %r.167.i.ls.ph = phi i64 [ %138, %middle.block250.ls ], [ 0, %for.body29.lr.ph.i.ls ]
  br label %for.body29.i.ls

for.body29.i.ls:                                  ; preds = %for.body29.i.ls.preheader, %for.body29.i.ls
  %j25.068.i.ls = phi i64 [ %inc34.i.ls, %for.body29.i.ls ], [ %j25.068.i.ls.ph, %for.body29.i.ls.preheader ]
  %r.167.i.ls = phi i64 [ %add32.i.ls, %for.body29.i.ls ], [ %r.167.i.ls.ph, %for.body29.i.ls.preheader ]
  %arrayidx30.i.ls = getelementptr inbounds i8, i8* %add.ptr.ls, i64 %j25.068.i.ls
  %139 = load i8, i8* %arrayidx30.i.ls, align 1, !tbaa !23, !range !70
  %140 = zext i8 %139 to i64
  %add32.i.ls = add nuw nsw i64 %r.167.i.ls, %140
  %inc34.i.ls = add nuw nsw i64 %j25.068.i.ls, 1
  %exitcond73.i.ls = icmp eq i64 %inc34.i.ls, %sub21.ls
  br i1 %exitcond73.i.ls, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.ls, label %for.body29.i.ls, !llvm.loop !461

if.then.i195.ls:                                  ; preds = %land.lhs.true2.i.ls
  %shr75.i.ls = lshr i64 %sub21.ls, 9
  %cmp562.i.ls = icmp sgt i64 %sub21.ls, 511
  br i1 %cmp562.i.ls, label %for.body.lr.ph.i196.ls, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.ls

for.body.lr.ph.i196.ls:                           ; preds = %if.then.i195.ls
  %141 = bitcast i8* %add.ptr.ls to i32*
  br label %vector.ph.ls

vector.ph.ls:                                     ; preds = %vector.ph.ls, %for.body.lr.ph.i196.ls
  %indvars.iv71.i.ls = phi i64 [ 0, %for.body.lr.ph.i196.ls ], [ %indvars.iv.next72.i.ls, %vector.ph.ls ]
  %IFl.064.i.ls = phi i32* [ %141, %for.body.lr.ph.i196.ls ], [ %add.ptr.i198.ls, %vector.ph.ls ]
  %r.063.i.ls = phi i64 [ 0, %for.body.lr.ph.i196.ls ], [ %add21.i.ls, %vector.ph.ls ]
  %142 = bitcast i32* %IFl.064.i.ls to <8 x i32>*
  %wide.load.ls = load <8 x i32>, <8 x i32>* %142, align 4, !tbaa !59
  %143 = getelementptr i32, i32* %IFl.064.i.ls, i64 8
  %144 = bitcast i32* %143 to <8 x i32>*
  %wide.load239.ls = load <8 x i32>, <8 x i32>* %144, align 4, !tbaa !59
  %145 = getelementptr i32, i32* %IFl.064.i.ls, i64 16
  %146 = bitcast i32* %145 to <8 x i32>*
  %wide.load240.ls = load <8 x i32>, <8 x i32>* %146, align 4, !tbaa !59
  %147 = getelementptr i32, i32* %IFl.064.i.ls, i64 24
  %148 = bitcast i32* %147 to <8 x i32>*
  %wide.load241.ls = load <8 x i32>, <8 x i32>* %148, align 4, !tbaa !59
  %149 = getelementptr inbounds i32, i32* %IFl.064.i.ls, i64 32
  %150 = bitcast i32* %149 to <8 x i32>*
  %wide.load.1.ls = load <8 x i32>, <8 x i32>* %150, align 4, !tbaa !59
  %151 = getelementptr i32, i32* %IFl.064.i.ls, i64 40
  %152 = bitcast i32* %151 to <8 x i32>*
  %wide.load239.1.ls = load <8 x i32>, <8 x i32>* %152, align 4, !tbaa !59
  %153 = getelementptr i32, i32* %IFl.064.i.ls, i64 48
  %154 = bitcast i32* %153 to <8 x i32>*
  %wide.load240.1.ls = load <8 x i32>, <8 x i32>* %154, align 4, !tbaa !59
  %155 = getelementptr i32, i32* %IFl.064.i.ls, i64 56
  %156 = bitcast i32* %155 to <8 x i32>*
  %wide.load241.1.ls = load <8 x i32>, <8 x i32>* %156, align 4, !tbaa !59
  %157 = getelementptr inbounds i32, i32* %IFl.064.i.ls, i64 64
  %158 = bitcast i32* %157 to <8 x i32>*
  %wide.load.2.ls = load <8 x i32>, <8 x i32>* %158, align 4, !tbaa !59
  %159 = getelementptr i32, i32* %IFl.064.i.ls, i64 72
  %160 = bitcast i32* %159 to <8 x i32>*
  %wide.load239.2.ls = load <8 x i32>, <8 x i32>* %160, align 4, !tbaa !59
  %161 = getelementptr i32, i32* %IFl.064.i.ls, i64 80
  %162 = bitcast i32* %161 to <8 x i32>*
  %wide.load240.2.ls = load <8 x i32>, <8 x i32>* %162, align 4, !tbaa !59
  %163 = getelementptr i32, i32* %IFl.064.i.ls, i64 88
  %164 = bitcast i32* %163 to <8 x i32>*
  %wide.load241.2.ls = load <8 x i32>, <8 x i32>* %164, align 4, !tbaa !59
  %165 = getelementptr inbounds i32, i32* %IFl.064.i.ls, i64 96
  %166 = bitcast i32* %165 to <8 x i32>*
  %wide.load.3.ls = load <8 x i32>, <8 x i32>* %166, align 4, !tbaa !59
  %167 = getelementptr i32, i32* %IFl.064.i.ls, i64 104
  %168 = bitcast i32* %167 to <8 x i32>*
  %wide.load239.3.ls = load <8 x i32>, <8 x i32>* %168, align 4, !tbaa !59
  %169 = getelementptr i32, i32* %IFl.064.i.ls, i64 112
  %170 = bitcast i32* %169 to <8 x i32>*
  %wide.load240.3.ls = load <8 x i32>, <8 x i32>* %170, align 4, !tbaa !59
  %171 = getelementptr i32, i32* %IFl.064.i.ls, i64 120
  %172 = bitcast i32* %171 to <8 x i32>*
  %wide.load241.3.ls = load <8 x i32>, <8 x i32>* %172, align 4, !tbaa !59
  %173 = add <8 x i32> %wide.load239.ls, %wide.load.ls
  %174 = add <8 x i32> %173, %wide.load240.ls
  %175 = add <8 x i32> %174, %wide.load241.ls
  %176 = add <8 x i32> %175, %wide.load.1.ls
  %177 = add <8 x i32> %176, %wide.load239.1.ls
  %178 = add <8 x i32> %177, %wide.load240.1.ls
  %bin.rdx.ls = add <8 x i32> %178, %wide.load241.1.ls
  %179 = add <8 x i32> %bin.rdx.ls, %wide.load.2.ls
  %180 = add <8 x i32> %179, %wide.load239.2.ls
  %181 = add <8 x i32> %180, %wide.load240.2.ls
  %bin.rdx242.ls = add <8 x i32> %181, %wide.load241.2.ls
  %182 = add <8 x i32> %bin.rdx242.ls, %wide.load.3.ls
  %183 = add <8 x i32> %182, %wide.load239.3.ls
  %184 = add <8 x i32> %183, %wide.load240.3.ls
  %bin.rdx243.ls = add <8 x i32> %184, %wide.load241.3.ls
  %rdx.shuf.ls = shufflevector <8 x i32> %bin.rdx243.ls, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx244.ls = add <8 x i32> %rdx.shuf.ls, %bin.rdx243.ls
  %rdx.shuf245.ls = shufflevector <8 x i32> %bin.rdx244.ls, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx246.ls = add <8 x i32> %rdx.shuf245.ls, %bin.rdx244.ls
  %rdx.shuf247.ls = shufflevector <8 x i32> %bin.rdx246.ls, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx248.ls = add <8 x i32> %rdx.shuf247.ls, %bin.rdx246.ls
  %185 = extractelement <8 x i32> %bin.rdx248.ls, i32 0
  %and10.i.ls = and i32 %185, 255
  %186 = lshr i32 %185, 8
  %and12.i.ls = and i32 %186, 255
  %187 = lshr i32 %185, 16
  %and15.i.ls = and i32 %187, 255
  %188 = lshr i32 %185, 24
  %add13.i.ls = add nuw nsw i32 %188, %and10.i.ls
  %add16.i.ls = add nuw nsw i32 %add13.i.ls, %and12.i.ls
  %add19.i.ls = add nuw nsw i32 %add16.i.ls, %and15.i.ls
  %189 = zext i32 %add19.i.ls to i64
  %add21.i.ls = add nuw nsw i64 %r.063.i.ls, %189
  %add.ptr.i198.ls = getelementptr inbounds i32, i32* %IFl.064.i.ls, i64 128
  %indvars.iv.next72.i.ls = add nuw nsw i64 %indvars.iv71.i.ls, 1
  %cmp5.i.ls = icmp ugt i64 %shr75.i.ls, %indvars.iv.next72.i.ls
  br i1 %cmp5.i.ls, label %vector.ph.ls, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.ls

_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.ls:  ; preds = %for.body29.i.ls, %vector.ph.ls, %if.then.i195.ls, %middle.block250.ls, %if.else.i.ls
  %r.2.i.ls = phi i64 [ 0, %if.then.i195.ls ], [ 0, %if.else.i.ls ], [ %138, %middle.block250.ls ], [ %add21.i.ls, %vector.ph.ls ], [ %add32.i.ls, %for.body29.i.ls ]
  %arrayidx.ls = getelementptr inbounds i64, i64* %.ls4, i64 %__begin.0222.ls
  store i64 %r.2.i.ls, i64* %arrayidx.ls, align 8, !tbaa !49
  %190 = icmp ult i64 %__begin.0222.ls, %end.ls
  %inc.ls = add nuw nsw i64 %__begin.0222.ls, 1
  br i1 %190, label %pfor.detach.ls, label %pfor.cond.cleanup.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN8sequence4packIclNS_4getAIclEEEE4_seqIT_EPS4_PbT0_S8_T1__pfor.detach48.ls(i64 %__begin39.0220.start.ls, i64 %end.ls, i64 %.ls, i8* nocapture readonly align 1 %f.coerce.ls, i8* align 1 %Fl.ls, i64 %.ls1, i64 %.ls2, i64 %.ls3, i64 %.ls4, i64 %s.ls, i64 %e.ls, i64* nocapture readonly align 1 %.ls5, i8* align 1 %Out.addr.0.ls) unnamed_addr #15 {
pfor.detach48.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach48.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach48.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach48.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach48.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount14 = sub i64 %end.ls, %__begin39.0220.start.ls
  %9 = icmp ugt i64 %itercount14, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach48.ls.preheader

pfor.detach48.ls.preheader:                       ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin39.0220.ls.ph = phi i64 [ %__begin39.0220.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach48.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount16 = phi i64 [ %itercount14, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin39.0220.ls.dac15 = phi i64 [ %__begin39.0220.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount16, 1
  %miditer = add nuw nsw i64 %__begin39.0220.ls.dac15, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split17, label %.split.split

.split17:                                         ; preds = %16
  call fastcc void @_ZN8sequence4packIclNS_4getAIclEEEE4_seqIT_EPS4_PbT0_S8_T1__pfor.detach48.ls_.split.cilk(i64 %__begin39.0220.ls.dac15, i64 %miditer, i64 %.ls, i8* %f.coerce.ls, i8* %Fl.ls, i64 %.ls1, i64 %.ls2, i64 %.ls3, i64 %.ls4, i64 %s.ls, i64 %e.ls, i64* %.ls5, i8* %Out.addr.0.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split17, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach48.ls.preheader

pfor.cond.cleanup47.loopexit.ls:                  ; preds = %pfor.inc67.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup47.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup47.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach48.ls:                                 ; preds = %pfor.detach48.ls.preheader, %pfor.inc67.ls
  %__begin39.0220.ls = phi i64 [ %inc68.ls, %pfor.inc67.ls ], [ %__begin39.0220.ls.ph, %pfor.detach48.ls.preheader ]
  %48 = mul nsw i64 %__begin39.0220.ls, -2048
  %49 = add i64 %48, %.ls1
  %50 = add i64 %48, %.ls2
  %51 = icmp sgt i64 %50, %.ls3
  %smax456.ls = select i1 %51, i64 %50, i64 %.ls3
  %52 = sub i64 %49, %smax456.ls
  %53 = add i64 %48, %.ls4
  %54 = sub i64 %53, %smax456.ls
  %55 = add i64 %52, -16
  %56 = lshr i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %mul55.ls = shl nsw i64 %__begin39.0220.ls, 11
  %add56.ls = add nsw i64 %mul55.ls, %s.ls
  %add59.ls = add nsw i64 %add56.ls, 2048
  %cmp.i202.ls = icmp sgt i64 %add59.ls, %e.ls
  %.sroa.speculated.ls = select i1 %cmp.i202.ls, i64 %e.ls, i64 %add59.ls
  %arrayidx61.ls = getelementptr inbounds i64, i64* %.ls5, i64 %__begin39.0220.ls
  %58 = load i64, i64* %arrayidx61.ls, align 8, !tbaa !49
  %add.ptr62.ls = getelementptr inbounds i8, i8* %Out.addr.0.ls, i64 %58
  %cmp.i123.ls = icmp eq i8* %add.ptr62.ls, null
  br i1 %cmp.i123.ls, label %if.then.i130.ls, label %if.end.i175.ls

if.then.i130.ls:                                  ; preds = %pfor.detach48.ls
  %add.ptr.i124.ls = getelementptr inbounds i8, i8* %Fl.ls, i64 %add56.ls
  %sub.i125.ls = sub nsw i64 %.sroa.speculated.ls, %add56.ls
  %cmp.i.i126.ls = icmp sgt i64 %sub.i125.ls, 127
  %and.i.i127.ls = and i64 %sub.i125.ls, 511
  %cmp1.i.i128.ls = icmp eq i64 %and.i.i127.ls, 0
  %or.cond.i.i129.ls = and i1 %cmp.i.i126.ls, %cmp1.i.i128.ls
  br i1 %or.cond.i.i129.ls, label %land.lhs.true2.i.i133.ls, label %if.else.i.i161.ls

if.else.i.i161.ls:                                ; preds = %if.then.i130.ls
  %cmp2766.i.i160.ls = icmp sgt i64 %sub.i125.ls, 0
  br i1 %cmp2766.i.i160.ls, label %for.body29.lr.ph.i.i162.ls, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i172.ls

land.lhs.true2.i.i133.ls:                         ; preds = %if.then.i130.ls
  %59 = ptrtoint i8* %add.ptr.i124.ls to i64
  %and3.i.i131.ls = and i64 %59, 3
  %cmp4.i.i132.ls = icmp eq i64 %and3.i.i131.ls, 0
  br i1 %cmp4.i.i132.ls, label %if.then.i.i136.ls, label %for.body29.lr.ph.i.i162.ls

for.body29.lr.ph.i.i162.ls:                       ; preds = %land.lhs.true2.i.i133.ls, %if.else.i.i161.ls
  %min.iters.check315.ls = icmp ult i64 %52, 16
  br i1 %min.iters.check315.ls, label %for.body29.i.i169.ls.preheader, label %vector.ph316.ls

vector.ph316.ls:                                  ; preds = %for.body29.lr.ph.i.i162.ls
  %n.vec318.ls = and i64 %52, -16
  %xtraiter447.ls = and i64 %57, 3
  %60 = icmp ult i64 %55, 48
  br i1 %60, label %middle.block312.unr-lcssa.ls, label %vector.ph316.new.ls

vector.ph316.new.ls:                              ; preds = %vector.ph316.ls
  %unroll_iter454.ls = sub nsw i64 %57, %xtraiter447.ls
  br label %vector.body311.ls

vector.body311.ls:                                ; preds = %vector.body311.ls, %vector.ph316.new.ls
  %index319.ls = phi i64 [ 0, %vector.ph316.new.ls ], [ %index.next320.3.ls, %vector.body311.ls ]
  %vec.phi329.ls = phi <4 x i64> [ zeroinitializer, %vector.ph316.new.ls ], [ %121, %vector.body311.ls ]
  %vec.phi330.ls = phi <4 x i64> [ zeroinitializer, %vector.ph316.new.ls ], [ %122, %vector.body311.ls ]
  %vec.phi331.ls = phi <4 x i64> [ zeroinitializer, %vector.ph316.new.ls ], [ %123, %vector.body311.ls ]
  %vec.phi332.ls = phi <4 x i64> [ zeroinitializer, %vector.ph316.new.ls ], [ %124, %vector.body311.ls ]
  %niter455.ls = phi i64 [ %unroll_iter454.ls, %vector.ph316.new.ls ], [ %niter455.nsub.3.ls, %vector.body311.ls ]
  %61 = getelementptr inbounds i8, i8* %add.ptr.i124.ls, i64 %index319.ls
  %62 = bitcast i8* %61 to <4 x i8>*
  %wide.load333.ls = load <4 x i8>, <4 x i8>* %62, align 1, !tbaa !23
  %63 = getelementptr i8, i8* %61, i64 4
  %64 = bitcast i8* %63 to <4 x i8>*
  %wide.load334.ls = load <4 x i8>, <4 x i8>* %64, align 1, !tbaa !23
  %65 = getelementptr i8, i8* %61, i64 8
  %66 = bitcast i8* %65 to <4 x i8>*
  %wide.load335.ls = load <4 x i8>, <4 x i8>* %66, align 1, !tbaa !23
  %67 = getelementptr i8, i8* %61, i64 12
  %68 = bitcast i8* %67 to <4 x i8>*
  %wide.load336.ls = load <4 x i8>, <4 x i8>* %68, align 1, !tbaa !23
  %69 = zext <4 x i8> %wide.load333.ls to <4 x i64>
  %70 = zext <4 x i8> %wide.load334.ls to <4 x i64>
  %71 = zext <4 x i8> %wide.load335.ls to <4 x i64>
  %72 = zext <4 x i8> %wide.load336.ls to <4 x i64>
  %73 = add nuw nsw <4 x i64> %vec.phi329.ls, %69
  %74 = add nuw nsw <4 x i64> %vec.phi330.ls, %70
  %75 = add nuw nsw <4 x i64> %vec.phi331.ls, %71
  %76 = add nuw nsw <4 x i64> %vec.phi332.ls, %72
  %index.next320.ls = or i64 %index319.ls, 16
  %77 = getelementptr inbounds i8, i8* %add.ptr.i124.ls, i64 %index.next320.ls
  %78 = bitcast i8* %77 to <4 x i8>*
  %wide.load333.1.ls = load <4 x i8>, <4 x i8>* %78, align 1, !tbaa !23
  %79 = getelementptr i8, i8* %77, i64 4
  %80 = bitcast i8* %79 to <4 x i8>*
  %wide.load334.1.ls = load <4 x i8>, <4 x i8>* %80, align 1, !tbaa !23
  %81 = getelementptr i8, i8* %77, i64 8
  %82 = bitcast i8* %81 to <4 x i8>*
  %wide.load335.1.ls = load <4 x i8>, <4 x i8>* %82, align 1, !tbaa !23
  %83 = getelementptr i8, i8* %77, i64 12
  %84 = bitcast i8* %83 to <4 x i8>*
  %wide.load336.1.ls = load <4 x i8>, <4 x i8>* %84, align 1, !tbaa !23
  %85 = zext <4 x i8> %wide.load333.1.ls to <4 x i64>
  %86 = zext <4 x i8> %wide.load334.1.ls to <4 x i64>
  %87 = zext <4 x i8> %wide.load335.1.ls to <4 x i64>
  %88 = zext <4 x i8> %wide.load336.1.ls to <4 x i64>
  %89 = add nuw nsw <4 x i64> %73, %85
  %90 = add nuw nsw <4 x i64> %74, %86
  %91 = add nuw nsw <4 x i64> %75, %87
  %92 = add nuw nsw <4 x i64> %76, %88
  %index.next320.1.ls = or i64 %index319.ls, 32
  %93 = getelementptr inbounds i8, i8* %add.ptr.i124.ls, i64 %index.next320.1.ls
  %94 = bitcast i8* %93 to <4 x i8>*
  %wide.load333.2.ls = load <4 x i8>, <4 x i8>* %94, align 1, !tbaa !23
  %95 = getelementptr i8, i8* %93, i64 4
  %96 = bitcast i8* %95 to <4 x i8>*
  %wide.load334.2.ls = load <4 x i8>, <4 x i8>* %96, align 1, !tbaa !23
  %97 = getelementptr i8, i8* %93, i64 8
  %98 = bitcast i8* %97 to <4 x i8>*
  %wide.load335.2.ls = load <4 x i8>, <4 x i8>* %98, align 1, !tbaa !23
  %99 = getelementptr i8, i8* %93, i64 12
  %100 = bitcast i8* %99 to <4 x i8>*
  %wide.load336.2.ls = load <4 x i8>, <4 x i8>* %100, align 1, !tbaa !23
  %101 = zext <4 x i8> %wide.load333.2.ls to <4 x i64>
  %102 = zext <4 x i8> %wide.load334.2.ls to <4 x i64>
  %103 = zext <4 x i8> %wide.load335.2.ls to <4 x i64>
  %104 = zext <4 x i8> %wide.load336.2.ls to <4 x i64>
  %105 = add nuw nsw <4 x i64> %89, %101
  %106 = add nuw nsw <4 x i64> %90, %102
  %107 = add nuw nsw <4 x i64> %91, %103
  %108 = add nuw nsw <4 x i64> %92, %104
  %index.next320.2.ls = or i64 %index319.ls, 48
  %109 = getelementptr inbounds i8, i8* %add.ptr.i124.ls, i64 %index.next320.2.ls
  %110 = bitcast i8* %109 to <4 x i8>*
  %wide.load333.3.ls = load <4 x i8>, <4 x i8>* %110, align 1, !tbaa !23
  %111 = getelementptr i8, i8* %109, i64 4
  %112 = bitcast i8* %111 to <4 x i8>*
  %wide.load334.3.ls = load <4 x i8>, <4 x i8>* %112, align 1, !tbaa !23
  %113 = getelementptr i8, i8* %109, i64 8
  %114 = bitcast i8* %113 to <4 x i8>*
  %wide.load335.3.ls = load <4 x i8>, <4 x i8>* %114, align 1, !tbaa !23
  %115 = getelementptr i8, i8* %109, i64 12
  %116 = bitcast i8* %115 to <4 x i8>*
  %wide.load336.3.ls = load <4 x i8>, <4 x i8>* %116, align 1, !tbaa !23
  %117 = zext <4 x i8> %wide.load333.3.ls to <4 x i64>
  %118 = zext <4 x i8> %wide.load334.3.ls to <4 x i64>
  %119 = zext <4 x i8> %wide.load335.3.ls to <4 x i64>
  %120 = zext <4 x i8> %wide.load336.3.ls to <4 x i64>
  %121 = add nuw nsw <4 x i64> %105, %117
  %122 = add nuw nsw <4 x i64> %106, %118
  %123 = add nuw nsw <4 x i64> %107, %119
  %124 = add nuw nsw <4 x i64> %108, %120
  %index.next320.3.ls = add i64 %index319.ls, 64
  %niter455.nsub.3.ls = add i64 %niter455.ls, -4
  %niter455.ncmp.3.ls = icmp eq i64 %niter455.nsub.3.ls, 0
  br i1 %niter455.ncmp.3.ls, label %middle.block312.unr-lcssa.ls, label %vector.body311.ls, !llvm.loop !462

middle.block312.unr-lcssa.ls:                     ; preds = %vector.body311.ls, %vector.ph316.ls
  %.lcssa423.ph.ls = phi <4 x i64> [ undef, %vector.ph316.ls ], [ %121, %vector.body311.ls ]
  %.lcssa422.ph.ls = phi <4 x i64> [ undef, %vector.ph316.ls ], [ %122, %vector.body311.ls ]
  %.lcssa421.ph.ls = phi <4 x i64> [ undef, %vector.ph316.ls ], [ %123, %vector.body311.ls ]
  %.lcssa420.ph.ls = phi <4 x i64> [ undef, %vector.ph316.ls ], [ %124, %vector.body311.ls ]
  %index319.unr.ls = phi i64 [ 0, %vector.ph316.ls ], [ %index.next320.3.ls, %vector.body311.ls ]
  %vec.phi329.unr.ls = phi <4 x i64> [ zeroinitializer, %vector.ph316.ls ], [ %121, %vector.body311.ls ]
  %vec.phi330.unr.ls = phi <4 x i64> [ zeroinitializer, %vector.ph316.ls ], [ %122, %vector.body311.ls ]
  %vec.phi331.unr.ls = phi <4 x i64> [ zeroinitializer, %vector.ph316.ls ], [ %123, %vector.body311.ls ]
  %vec.phi332.unr.ls = phi <4 x i64> [ zeroinitializer, %vector.ph316.ls ], [ %124, %vector.body311.ls ]
  %lcmp.mod449.ls = icmp eq i64 %xtraiter447.ls, 0
  br i1 %lcmp.mod449.ls, label %middle.block312.ls, label %vector.body311.epil.ls.preheader

vector.body311.epil.ls.preheader:                 ; preds = %middle.block312.unr-lcssa.ls
  br label %vector.body311.epil.ls

vector.body311.epil.ls:                           ; preds = %vector.body311.epil.ls.preheader, %vector.body311.epil.ls
  %index319.epil.ls = phi i64 [ %index.next320.epil.ls, %vector.body311.epil.ls ], [ %index319.unr.ls, %vector.body311.epil.ls.preheader ]
  %vec.phi329.epil.ls = phi <4 x i64> [ %137, %vector.body311.epil.ls ], [ %vec.phi329.unr.ls, %vector.body311.epil.ls.preheader ]
  %vec.phi330.epil.ls = phi <4 x i64> [ %138, %vector.body311.epil.ls ], [ %vec.phi330.unr.ls, %vector.body311.epil.ls.preheader ]
  %vec.phi331.epil.ls = phi <4 x i64> [ %139, %vector.body311.epil.ls ], [ %vec.phi331.unr.ls, %vector.body311.epil.ls.preheader ]
  %vec.phi332.epil.ls = phi <4 x i64> [ %140, %vector.body311.epil.ls ], [ %vec.phi332.unr.ls, %vector.body311.epil.ls.preheader ]
  %epil.iter448.ls = phi i64 [ %epil.iter448.sub.ls, %vector.body311.epil.ls ], [ %xtraiter447.ls, %vector.body311.epil.ls.preheader ]
  %125 = getelementptr inbounds i8, i8* %add.ptr.i124.ls, i64 %index319.epil.ls
  %126 = bitcast i8* %125 to <4 x i8>*
  %wide.load333.epil.ls = load <4 x i8>, <4 x i8>* %126, align 1, !tbaa !23
  %127 = getelementptr i8, i8* %125, i64 4
  %128 = bitcast i8* %127 to <4 x i8>*
  %wide.load334.epil.ls = load <4 x i8>, <4 x i8>* %128, align 1, !tbaa !23
  %129 = getelementptr i8, i8* %125, i64 8
  %130 = bitcast i8* %129 to <4 x i8>*
  %wide.load335.epil.ls = load <4 x i8>, <4 x i8>* %130, align 1, !tbaa !23
  %131 = getelementptr i8, i8* %125, i64 12
  %132 = bitcast i8* %131 to <4 x i8>*
  %wide.load336.epil.ls = load <4 x i8>, <4 x i8>* %132, align 1, !tbaa !23
  %133 = zext <4 x i8> %wide.load333.epil.ls to <4 x i64>
  %134 = zext <4 x i8> %wide.load334.epil.ls to <4 x i64>
  %135 = zext <4 x i8> %wide.load335.epil.ls to <4 x i64>
  %136 = zext <4 x i8> %wide.load336.epil.ls to <4 x i64>
  %137 = add nuw nsw <4 x i64> %vec.phi329.epil.ls, %133
  %138 = add nuw nsw <4 x i64> %vec.phi330.epil.ls, %134
  %139 = add nuw nsw <4 x i64> %vec.phi331.epil.ls, %135
  %140 = add nuw nsw <4 x i64> %vec.phi332.epil.ls, %136
  %index.next320.epil.ls = add i64 %index319.epil.ls, 16
  %epil.iter448.sub.ls = add nsw i64 %epil.iter448.ls, -1
  %epil.iter448.cmp.ls = icmp eq i64 %epil.iter448.sub.ls, 0
  br i1 %epil.iter448.cmp.ls, label %middle.block312.ls, label %vector.body311.epil.ls, !llvm.loop !463

middle.block312.ls:                               ; preds = %vector.body311.epil.ls, %middle.block312.unr-lcssa.ls
  %.lcssa423.ls = phi <4 x i64> [ %.lcssa423.ph.ls, %middle.block312.unr-lcssa.ls ], [ %137, %vector.body311.epil.ls ]
  %.lcssa422.ls = phi <4 x i64> [ %.lcssa422.ph.ls, %middle.block312.unr-lcssa.ls ], [ %138, %vector.body311.epil.ls ]
  %.lcssa421.ls = phi <4 x i64> [ %.lcssa421.ph.ls, %middle.block312.unr-lcssa.ls ], [ %139, %vector.body311.epil.ls ]
  %.lcssa420.ls = phi <4 x i64> [ %.lcssa420.ph.ls, %middle.block312.unr-lcssa.ls ], [ %140, %vector.body311.epil.ls ]
  %bin.rdx337.ls = add nuw <4 x i64> %.lcssa422.ls, %.lcssa423.ls
  %bin.rdx338.ls = add <4 x i64> %bin.rdx337.ls, %.lcssa421.ls
  %bin.rdx339.ls = add <4 x i64> %bin.rdx338.ls, %.lcssa420.ls
  %rdx.shuf340.ls = shufflevector <4 x i64> %bin.rdx339.ls, <4 x i64> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %bin.rdx341.ls = add <4 x i64> %rdx.shuf340.ls, %bin.rdx339.ls
  %rdx.shuf342.ls = shufflevector <4 x i64> %bin.rdx341.ls, <4 x i64> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %bin.rdx343.ls = add <4 x i64> %rdx.shuf342.ls, %bin.rdx341.ls
  %141 = extractelement <4 x i64> %bin.rdx343.ls, i32 0
  %cmp.n322.ls = icmp eq i64 %52, %n.vec318.ls
  br i1 %cmp.n322.ls, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i172.ls, label %for.body29.i.i169.ls.preheader

for.body29.i.i169.ls.preheader:                   ; preds = %middle.block312.ls, %for.body29.lr.ph.i.i162.ls
  %j25.068.i.i163.ls.ph = phi i64 [ %n.vec318.ls, %middle.block312.ls ], [ 0, %for.body29.lr.ph.i.i162.ls ]
  %r.167.i.i164.ls.ph = phi i64 [ %141, %middle.block312.ls ], [ 0, %for.body29.lr.ph.i.i162.ls ]
  br label %for.body29.i.i169.ls

for.body29.i.i169.ls:                             ; preds = %for.body29.i.i169.ls.preheader, %for.body29.i.i169.ls
  %j25.068.i.i163.ls = phi i64 [ %inc34.i.i167.ls, %for.body29.i.i169.ls ], [ %j25.068.i.i163.ls.ph, %for.body29.i.i169.ls.preheader ]
  %r.167.i.i164.ls = phi i64 [ %add32.i.i166.ls, %for.body29.i.i169.ls ], [ %r.167.i.i164.ls.ph, %for.body29.i.i169.ls.preheader ]
  %arrayidx30.i.i165.ls = getelementptr inbounds i8, i8* %add.ptr.i124.ls, i64 %j25.068.i.i163.ls
  %142 = load i8, i8* %arrayidx30.i.i165.ls, align 1, !tbaa !23, !range !70
  %143 = zext i8 %142 to i64
  %add32.i.i166.ls = add nuw nsw i64 %r.167.i.i164.ls, %143
  %inc34.i.i167.ls = add nuw nsw i64 %j25.068.i.i163.ls, 1
  %exitcond73.i.i168.ls = icmp eq i64 %inc34.i.i167.ls, %sub.i125.ls
  br i1 %exitcond73.i.i168.ls, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i172.ls, label %for.body29.i.i169.ls, !llvm.loop !464

if.then.i.i136.ls:                                ; preds = %land.lhs.true2.i.i133.ls
  %shr75.i.i134.ls = lshr i64 %sub.i125.ls, 9
  %cmp562.i.i135.ls = icmp sgt i64 %sub.i125.ls, 511
  br i1 %cmp562.i.i135.ls, label %for.body.lr.ph.i.i137.ls, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i172.ls

for.body.lr.ph.i.i137.ls:                         ; preds = %if.then.i.i136.ls
  %144 = bitcast i8* %add.ptr.i124.ls to i32*
  br label %vector.ph282.ls

vector.ph282.ls:                                  ; preds = %vector.ph282.ls, %for.body.lr.ph.i.i137.ls
  %indvars.iv71.i.i138.ls = phi i64 [ 0, %for.body.lr.ph.i.i137.ls ], [ %indvars.iv.next72.i.i150.ls, %vector.ph282.ls ]
  %IFl.064.i.i139.ls = phi i32* [ %144, %for.body.lr.ph.i.i137.ls ], [ %add.ptr.i.i149.ls, %vector.ph282.ls ]
  %r.063.i.i140.ls = phi i64 [ 0, %for.body.lr.ph.i.i137.ls ], [ %add21.i.i148.ls, %vector.ph282.ls ]
  %145 = bitcast i32* %IFl.064.i.i139.ls to <8 x i32>*
  %wide.load297.ls = load <8 x i32>, <8 x i32>* %145, align 4, !tbaa !59
  %146 = getelementptr i32, i32* %IFl.064.i.i139.ls, i64 8
  %147 = bitcast i32* %146 to <8 x i32>*
  %wide.load298.ls = load <8 x i32>, <8 x i32>* %147, align 4, !tbaa !59
  %148 = getelementptr i32, i32* %IFl.064.i.i139.ls, i64 16
  %149 = bitcast i32* %148 to <8 x i32>*
  %wide.load299.ls = load <8 x i32>, <8 x i32>* %149, align 4, !tbaa !59
  %150 = getelementptr i32, i32* %IFl.064.i.i139.ls, i64 24
  %151 = bitcast i32* %150 to <8 x i32>*
  %wide.load300.ls = load <8 x i32>, <8 x i32>* %151, align 4, !tbaa !59
  %152 = getelementptr inbounds i32, i32* %IFl.064.i.i139.ls, i64 32
  %153 = bitcast i32* %152 to <8 x i32>*
  %wide.load297.1.ls = load <8 x i32>, <8 x i32>* %153, align 4, !tbaa !59
  %154 = getelementptr i32, i32* %IFl.064.i.i139.ls, i64 40
  %155 = bitcast i32* %154 to <8 x i32>*
  %wide.load298.1.ls = load <8 x i32>, <8 x i32>* %155, align 4, !tbaa !59
  %156 = getelementptr i32, i32* %IFl.064.i.i139.ls, i64 48
  %157 = bitcast i32* %156 to <8 x i32>*
  %wide.load299.1.ls = load <8 x i32>, <8 x i32>* %157, align 4, !tbaa !59
  %158 = getelementptr i32, i32* %IFl.064.i.i139.ls, i64 56
  %159 = bitcast i32* %158 to <8 x i32>*
  %wide.load300.1.ls = load <8 x i32>, <8 x i32>* %159, align 4, !tbaa !59
  %160 = getelementptr inbounds i32, i32* %IFl.064.i.i139.ls, i64 64
  %161 = bitcast i32* %160 to <8 x i32>*
  %wide.load297.2.ls = load <8 x i32>, <8 x i32>* %161, align 4, !tbaa !59
  %162 = getelementptr i32, i32* %IFl.064.i.i139.ls, i64 72
  %163 = bitcast i32* %162 to <8 x i32>*
  %wide.load298.2.ls = load <8 x i32>, <8 x i32>* %163, align 4, !tbaa !59
  %164 = getelementptr i32, i32* %IFl.064.i.i139.ls, i64 80
  %165 = bitcast i32* %164 to <8 x i32>*
  %wide.load299.2.ls = load <8 x i32>, <8 x i32>* %165, align 4, !tbaa !59
  %166 = getelementptr i32, i32* %IFl.064.i.i139.ls, i64 88
  %167 = bitcast i32* %166 to <8 x i32>*
  %wide.load300.2.ls = load <8 x i32>, <8 x i32>* %167, align 4, !tbaa !59
  %168 = getelementptr inbounds i32, i32* %IFl.064.i.i139.ls, i64 96
  %169 = bitcast i32* %168 to <8 x i32>*
  %wide.load297.3.ls = load <8 x i32>, <8 x i32>* %169, align 4, !tbaa !59
  %170 = getelementptr i32, i32* %IFl.064.i.i139.ls, i64 104
  %171 = bitcast i32* %170 to <8 x i32>*
  %wide.load298.3.ls = load <8 x i32>, <8 x i32>* %171, align 4, !tbaa !59
  %172 = getelementptr i32, i32* %IFl.064.i.i139.ls, i64 112
  %173 = bitcast i32* %172 to <8 x i32>*
  %wide.load299.3.ls = load <8 x i32>, <8 x i32>* %173, align 4, !tbaa !59
  %174 = getelementptr i32, i32* %IFl.064.i.i139.ls, i64 120
  %175 = bitcast i32* %174 to <8 x i32>*
  %wide.load300.3.ls = load <8 x i32>, <8 x i32>* %175, align 4, !tbaa !59
  %176 = add <8 x i32> %wide.load298.ls, %wide.load297.ls
  %177 = add <8 x i32> %176, %wide.load299.ls
  %178 = add <8 x i32> %177, %wide.load300.ls
  %179 = add <8 x i32> %178, %wide.load297.1.ls
  %180 = add <8 x i32> %179, %wide.load298.1.ls
  %181 = add <8 x i32> %180, %wide.load299.1.ls
  %bin.rdx301.ls = add <8 x i32> %181, %wide.load300.1.ls
  %182 = add <8 x i32> %bin.rdx301.ls, %wide.load297.2.ls
  %183 = add <8 x i32> %182, %wide.load298.2.ls
  %184 = add <8 x i32> %183, %wide.load299.2.ls
  %bin.rdx302.ls = add <8 x i32> %184, %wide.load300.2.ls
  %185 = add <8 x i32> %bin.rdx302.ls, %wide.load297.3.ls
  %186 = add <8 x i32> %185, %wide.load298.3.ls
  %187 = add <8 x i32> %186, %wide.load299.3.ls
  %bin.rdx303.ls = add <8 x i32> %187, %wide.load300.3.ls
  %rdx.shuf304.ls = shufflevector <8 x i32> %bin.rdx303.ls, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx305.ls = add <8 x i32> %rdx.shuf304.ls, %bin.rdx303.ls
  %rdx.shuf306.ls = shufflevector <8 x i32> %bin.rdx305.ls, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx307.ls = add <8 x i32> %rdx.shuf306.ls, %bin.rdx305.ls
  %rdx.shuf308.ls = shufflevector <8 x i32> %bin.rdx307.ls, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx309.ls = add <8 x i32> %rdx.shuf308.ls, %bin.rdx307.ls
  %188 = extractelement <8 x i32> %bin.rdx309.ls, i32 0
  %and10.i.i142.ls = and i32 %188, 255
  %189 = lshr i32 %188, 8
  %and12.i.i143.ls = and i32 %189, 255
  %190 = lshr i32 %188, 16
  %and15.i.i144.ls = and i32 %190, 255
  %191 = lshr i32 %188, 24
  %add13.i.i145.ls = add nuw nsw i32 %191, %and10.i.i142.ls
  %add16.i.i146.ls = add nuw nsw i32 %add13.i.i145.ls, %and12.i.i143.ls
  %add19.i.i147.ls = add nuw nsw i32 %add16.i.i146.ls, %and15.i.i144.ls
  %192 = zext i32 %add19.i.i147.ls to i64
  %add21.i.i148.ls = add nuw nsw i64 %r.063.i.i140.ls, %192
  %add.ptr.i.i149.ls = getelementptr inbounds i32, i32* %IFl.064.i.i139.ls, i64 128
  %indvars.iv.next72.i.i150.ls = add nuw nsw i64 %indvars.iv71.i.i138.ls, 1
  %cmp5.i.i151.ls = icmp ugt i64 %shr75.i.i134.ls, %indvars.iv.next72.i.i150.ls
  br i1 %cmp5.i.i151.ls, label %vector.ph282.ls, label %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i172.ls

_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i172.ls: ; preds = %for.body29.i.i169.ls, %vector.ph282.ls, %if.then.i.i136.ls, %middle.block312.ls, %if.else.i.i161.ls
  %r.2.i.i170.ls = phi i64 [ 0, %if.then.i.i136.ls ], [ 0, %if.else.i.i161.ls ], [ %141, %middle.block312.ls ], [ %add21.i.i148.ls, %vector.ph282.ls ], [ %add32.i.i166.ls, %for.body29.i.i169.ls ]
  %call1.i171.ls = tail call noalias i8* @malloc(i64 %r.2.i.i170.ls) #2
  br label %if.end.i175.ls

if.end.i175.ls:                                   ; preds = %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i172.ls, %pfor.detach48.ls
  %Out.addr.0.i173.ls = phi i8* [ %call1.i171.ls, %_ZN8sequence14sumFlagsSerialIlEET_PbS1_.exit.i172.ls ], [ %add.ptr62.ls, %pfor.detach48.ls ]
  %cmp224.i174.ls = icmp sgt i64 %.sroa.speculated.ls, %add56.ls
  br i1 %cmp224.i174.ls, label %for.body.i184.preheader.ls, label %pfor.inc67.ls

for.body.i184.preheader.ls:                       ; preds = %if.end.i175.ls
  %xtraiter457.ls = and i64 %52, 3
  %193 = icmp ult i64 %54, 3
  br i1 %193, label %_ZN8sequence10packSerialIclNS_4getAIclEEEE4_seqIT_EPS4_PbT0_S8_T1_.exit193.loopexit.unr-lcssa.ls, label %for.body.i184.preheader.new.ls

for.body.i184.preheader.new.ls:                   ; preds = %for.body.i184.preheader.ls
  %unroll_iter460.ls = sub i64 %52, %xtraiter457.ls
  br label %for.body.i184.ls

for.body.i184.ls:                                 ; preds = %for.inc.i192.3.ls, %for.body.i184.preheader.new.ls
  %i.026.i180.ls = phi i64 [ %add56.ls, %for.body.i184.preheader.new.ls ], [ %inc7.i190.3.ls, %for.inc.i192.3.ls ]
  %k.025.i181.ls = phi i64 [ 0, %for.body.i184.preheader.new.ls ], [ %k.1.i189.3.ls, %for.inc.i192.3.ls ]
  %niter461.ls = phi i64 [ %unroll_iter460.ls, %for.body.i184.preheader.new.ls ], [ %niter461.nsub.3.ls, %for.inc.i192.3.ls ]
  %arrayidx.i182.ls = getelementptr inbounds i8, i8* %Fl.ls, i64 %i.026.i180.ls
  %194 = load i8, i8* %arrayidx.i182.ls, align 1, !tbaa !23, !range !70
  %tobool.i183.ls = icmp eq i8 %194, 0
  br i1 %tobool.i183.ls, label %for.inc.i192.ls, label %if.then3.i188.ls

if.then3.i188.ls:                                 ; preds = %for.body.i184.ls
  %arrayidx.i21.i185.ls = getelementptr inbounds i8, i8* %f.coerce.ls, i64 %i.026.i180.ls
  %195 = load i8, i8* %arrayidx.i21.i185.ls, align 1, !tbaa !22
  %inc.i186.ls = add nsw i64 %k.025.i181.ls, 1
  %arrayidx5.i187.ls = getelementptr inbounds i8, i8* %Out.addr.0.i173.ls, i64 %k.025.i181.ls
  store i8 %195, i8* %arrayidx5.i187.ls, align 1, !tbaa !22
  br label %for.inc.i192.ls

for.inc.i192.ls:                                  ; preds = %if.then3.i188.ls, %for.body.i184.ls
  %k.1.i189.ls = phi i64 [ %inc.i186.ls, %if.then3.i188.ls ], [ %k.025.i181.ls, %for.body.i184.ls ]
  %inc7.i190.ls = add nsw i64 %i.026.i180.ls, 1
  %arrayidx.i182.1.ls = getelementptr inbounds i8, i8* %Fl.ls, i64 %inc7.i190.ls
  %196 = load i8, i8* %arrayidx.i182.1.ls, align 1, !tbaa !23, !range !70
  %tobool.i183.1.ls = icmp eq i8 %196, 0
  br i1 %tobool.i183.1.ls, label %for.inc.i192.1.ls, label %if.then3.i188.1.ls

if.then3.i188.1.ls:                               ; preds = %for.inc.i192.ls
  %arrayidx.i21.i185.1.ls = getelementptr inbounds i8, i8* %f.coerce.ls, i64 %inc7.i190.ls
  %197 = load i8, i8* %arrayidx.i21.i185.1.ls, align 1, !tbaa !22
  %inc.i186.1.ls = add nsw i64 %k.1.i189.ls, 1
  %arrayidx5.i187.1.ls = getelementptr inbounds i8, i8* %Out.addr.0.i173.ls, i64 %k.1.i189.ls
  store i8 %197, i8* %arrayidx5.i187.1.ls, align 1, !tbaa !22
  br label %for.inc.i192.1.ls

for.inc.i192.1.ls:                                ; preds = %if.then3.i188.1.ls, %for.inc.i192.ls
  %k.1.i189.1.ls = phi i64 [ %inc.i186.1.ls, %if.then3.i188.1.ls ], [ %k.1.i189.ls, %for.inc.i192.ls ]
  %inc7.i190.1.ls = add nsw i64 %i.026.i180.ls, 2
  %arrayidx.i182.2.ls = getelementptr inbounds i8, i8* %Fl.ls, i64 %inc7.i190.1.ls
  %198 = load i8, i8* %arrayidx.i182.2.ls, align 1, !tbaa !23, !range !70
  %tobool.i183.2.ls = icmp eq i8 %198, 0
  br i1 %tobool.i183.2.ls, label %for.inc.i192.2.ls, label %if.then3.i188.2.ls

if.then3.i188.2.ls:                               ; preds = %for.inc.i192.1.ls
  %arrayidx.i21.i185.2.ls = getelementptr inbounds i8, i8* %f.coerce.ls, i64 %inc7.i190.1.ls
  %199 = load i8, i8* %arrayidx.i21.i185.2.ls, align 1, !tbaa !22
  %inc.i186.2.ls = add nsw i64 %k.1.i189.1.ls, 1
  %arrayidx5.i187.2.ls = getelementptr inbounds i8, i8* %Out.addr.0.i173.ls, i64 %k.1.i189.1.ls
  store i8 %199, i8* %arrayidx5.i187.2.ls, align 1, !tbaa !22
  br label %for.inc.i192.2.ls

for.inc.i192.2.ls:                                ; preds = %if.then3.i188.2.ls, %for.inc.i192.1.ls
  %k.1.i189.2.ls = phi i64 [ %inc.i186.2.ls, %if.then3.i188.2.ls ], [ %k.1.i189.1.ls, %for.inc.i192.1.ls ]
  %inc7.i190.2.ls = add nsw i64 %i.026.i180.ls, 3
  %arrayidx.i182.3.ls = getelementptr inbounds i8, i8* %Fl.ls, i64 %inc7.i190.2.ls
  %200 = load i8, i8* %arrayidx.i182.3.ls, align 1, !tbaa !23, !range !70
  %tobool.i183.3.ls = icmp eq i8 %200, 0
  br i1 %tobool.i183.3.ls, label %for.inc.i192.3.ls, label %if.then3.i188.3.ls

if.then3.i188.3.ls:                               ; preds = %for.inc.i192.2.ls
  %arrayidx.i21.i185.3.ls = getelementptr inbounds i8, i8* %f.coerce.ls, i64 %inc7.i190.2.ls
  %201 = load i8, i8* %arrayidx.i21.i185.3.ls, align 1, !tbaa !22
  %inc.i186.3.ls = add nsw i64 %k.1.i189.2.ls, 1
  %arrayidx5.i187.3.ls = getelementptr inbounds i8, i8* %Out.addr.0.i173.ls, i64 %k.1.i189.2.ls
  store i8 %201, i8* %arrayidx5.i187.3.ls, align 1, !tbaa !22
  br label %for.inc.i192.3.ls

for.inc.i192.3.ls:                                ; preds = %if.then3.i188.3.ls, %for.inc.i192.2.ls
  %k.1.i189.3.ls = phi i64 [ %inc.i186.3.ls, %if.then3.i188.3.ls ], [ %k.1.i189.2.ls, %for.inc.i192.2.ls ]
  %inc7.i190.3.ls = add nsw i64 %i.026.i180.ls, 4
  %niter461.nsub.3.ls = add i64 %niter461.ls, -4
  %niter461.ncmp.3.ls = icmp eq i64 %niter461.nsub.3.ls, 0
  br i1 %niter461.ncmp.3.ls, label %_ZN8sequence10packSerialIclNS_4getAIclEEEE4_seqIT_EPS4_PbT0_S8_T1_.exit193.loopexit.unr-lcssa.ls, label %for.body.i184.ls

_ZN8sequence10packSerialIclNS_4getAIclEEEE4_seqIT_EPS4_PbT0_S8_T1_.exit193.loopexit.unr-lcssa.ls: ; preds = %for.inc.i192.3.ls, %for.body.i184.preheader.ls
  %i.026.i180.unr.ls = phi i64 [ %add56.ls, %for.body.i184.preheader.ls ], [ %inc7.i190.3.ls, %for.inc.i192.3.ls ]
  %k.025.i181.unr.ls = phi i64 [ 0, %for.body.i184.preheader.ls ], [ %k.1.i189.3.ls, %for.inc.i192.3.ls ]
  %lcmp.mod459.ls = icmp eq i64 %xtraiter457.ls, 0
  br i1 %lcmp.mod459.ls, label %pfor.inc67.ls, label %for.body.i184.epil.ls.preheader

for.body.i184.epil.ls.preheader:                  ; preds = %_ZN8sequence10packSerialIclNS_4getAIclEEEE4_seqIT_EPS4_PbT0_S8_T1_.exit193.loopexit.unr-lcssa.ls
  br label %for.body.i184.epil.ls

for.body.i184.epil.ls:                            ; preds = %for.body.i184.epil.ls.preheader, %for.inc.i192.epil.ls
  %i.026.i180.epil.ls = phi i64 [ %inc7.i190.epil.ls, %for.inc.i192.epil.ls ], [ %i.026.i180.unr.ls, %for.body.i184.epil.ls.preheader ]
  %k.025.i181.epil.ls = phi i64 [ %k.1.i189.epil.ls, %for.inc.i192.epil.ls ], [ %k.025.i181.unr.ls, %for.body.i184.epil.ls.preheader ]
  %epil.iter458.ls = phi i64 [ %epil.iter458.sub.ls, %for.inc.i192.epil.ls ], [ %xtraiter457.ls, %for.body.i184.epil.ls.preheader ]
  %arrayidx.i182.epil.ls = getelementptr inbounds i8, i8* %Fl.ls, i64 %i.026.i180.epil.ls
  %202 = load i8, i8* %arrayidx.i182.epil.ls, align 1, !tbaa !23, !range !70
  %tobool.i183.epil.ls = icmp eq i8 %202, 0
  br i1 %tobool.i183.epil.ls, label %for.inc.i192.epil.ls, label %if.then3.i188.epil.ls

if.then3.i188.epil.ls:                            ; preds = %for.body.i184.epil.ls
  %arrayidx.i21.i185.epil.ls = getelementptr inbounds i8, i8* %f.coerce.ls, i64 %i.026.i180.epil.ls
  %203 = load i8, i8* %arrayidx.i21.i185.epil.ls, align 1, !tbaa !22
  %inc.i186.epil.ls = add nsw i64 %k.025.i181.epil.ls, 1
  %arrayidx5.i187.epil.ls = getelementptr inbounds i8, i8* %Out.addr.0.i173.ls, i64 %k.025.i181.epil.ls
  store i8 %203, i8* %arrayidx5.i187.epil.ls, align 1, !tbaa !22
  br label %for.inc.i192.epil.ls

for.inc.i192.epil.ls:                             ; preds = %if.then3.i188.epil.ls, %for.body.i184.epil.ls
  %k.1.i189.epil.ls = phi i64 [ %inc.i186.epil.ls, %if.then3.i188.epil.ls ], [ %k.025.i181.epil.ls, %for.body.i184.epil.ls ]
  %inc7.i190.epil.ls = add nsw i64 %i.026.i180.epil.ls, 1
  %epil.iter458.sub.ls = add nsw i64 %epil.iter458.ls, -1
  %epil.iter458.cmp.ls = icmp eq i64 %epil.iter458.sub.ls, 0
  br i1 %epil.iter458.cmp.ls, label %pfor.inc67.ls, label %for.body.i184.epil.ls, !llvm.loop !465

pfor.inc67.ls:                                    ; preds = %for.inc.i192.epil.ls, %if.end.i175.ls, %_ZN8sequence10packSerialIclNS_4getAIclEEEE4_seqIT_EPS4_PbT0_S8_T1_.exit193.loopexit.unr-lcssa.ls
  %204 = icmp ult i64 %__begin39.0220.ls, %end.ls
  %inc68.ls = add nuw nsw i64 %__begin39.0220.ls, 1
  br i1 %204, label %pfor.detach48.ls, label %pfor.cond.cleanup47.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_Z3ANNILi10E6vertexI8_point2dIdELi10EEEvPPT0_ii_pfor.detach.ls(i64 %indvars.iv.start.ls, i64 %.ls, %struct.vertex.16** nocapture readonly align 1 %.ls1, %struct.kNearestNeighbor.17* align 8 %T.ls, i32 %k.ls) unnamed_addr #15 {
pfor.detach.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount2 = sub i64 %.ls, %indvars.iv.start.ls
  %9 = icmp ugt i64 %itercount2, 1
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv.ls.ph = phi i64 [ %indvars.iv.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount4 = phi i64 [ %itercount2, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv.ls.dac3 = phi i64 [ %indvars.iv.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount4, 1
  %miditer = add nuw nsw i64 %indvars.iv.ls.dac3, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split5, label %.split.split

.split5:                                          ; preds = %16
  call fastcc void @_Z3ANNILi10E6vertexI8_point2dIdELi10EEEvPPT0_ii_pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac3, i64 %miditer, %struct.vertex.16** %.ls1, %struct.kNearestNeighbor.17* %T.ls, i32 %k.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split5, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, 1
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.loopexit.ls:                    ; preds = %pfor.detach.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %pfor.detach.ls
  %indvars.iv.ls = phi i64 [ %indvars.iv.next.ls, %pfor.detach.ls ], [ %indvars.iv.ls.ph, %pfor.detach.ls.preheader ]
  %arrayidx.ls = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %.ls1, i64 %indvars.iv.ls
  %48 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx.ls, align 8, !tbaa !53
  %arraydecay.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %48, i64 0, i32 2, i64 0
  call void @_ZN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE8kNearestEPS3_PS5_i(%struct.kNearestNeighbor.17* nonnull %T.ls, %struct.vertex.16* %48, %struct.vertex.16** nonnull %arraydecay.ls, i32 %k.ls)
  %49 = icmp ult i64 %indvars.iv.ls, %.ls
  %indvars.iv.next.ls = add nuw nsw i64 %indvars.iv.ls, 1
  br i1 %49, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE5gTreeEPPS5_i_pfor.detach.ls(i64 %indvars.iv.start.ls, i64 %end.ls, i64 %.ls, %struct.vertex.16** nocapture readonly align 1 %vv.ls, %struct.vertex.16** nocapture align 1 %.ls1) unnamed_addr #15 align 2 {
pfor.detach.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount3 = sub i64 %end.ls, %indvars.iv.start.ls
  %9 = icmp ugt i64 %itercount3, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.lr.ph.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount5 = phi i64 [ %itercount3, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv.ls.dac4 = phi i64 [ %indvars.iv.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount5, 1
  %miditer = add nuw nsw i64 %indvars.iv.ls.dac4, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split6, label %.split.split

.split6:                                          ; preds = %16
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE5gTreeEPPS5_i_pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac4, i64 %miditer, i64 %.ls, %struct.vertex.16** %vv.ls, %struct.vertex.16** %.ls1)
  br label %.split.split

.split.split:                                     ; preds = %.split6, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.lr.ph.ls.split._crit_edge

pfor.detach.lr.ph.ls.split._crit_edge:            ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv.ls.dac.lcssa = phi i64 [ %indvars.iv.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  %22 = icmp ugt i64 %indvars.iv.ls.dac.lcssa, %end.ls
  %umax = select i1 %22, i64 %indvars.iv.ls.dac.lcssa, i64 %end.ls
  %23 = add i64 %umax, 1
  %24 = sub i64 %23, %indvars.iv.ls.dac.lcssa
  %min.iters.check = icmp ult i64 %24, 16
  br i1 %min.iters.check, label %pfor.detach.ls.preheader, label %vector.memcheck

pfor.detach.ls.preheader:                         ; preds = %middle.block, %vector.memcheck, %pfor.detach.lr.ph.ls.split._crit_edge
  %indvars.iv.ls.ph = phi i64 [ %indvars.iv.ls.dac.lcssa, %vector.memcheck ], [ %indvars.iv.ls.dac.lcssa, %pfor.detach.lr.ph.ls.split._crit_edge ], [ %ind.end, %middle.block ]
  br label %pfor.detach.ls

vector.memcheck:                                  ; preds = %pfor.detach.lr.ph.ls.split._crit_edge
  %scevgep = getelementptr %struct.vertex.16*, %struct.vertex.16** %.ls1, i64 %indvars.iv.ls.dac.lcssa
  %25 = icmp ugt i64 %indvars.iv.ls.dac.lcssa, %end.ls
  %umax3 = select i1 %25, i64 %indvars.iv.ls.dac.lcssa, i64 %end.ls
  %26 = add i64 %umax3, 1
  %scevgep4 = getelementptr %struct.vertex.16*, %struct.vertex.16** %.ls1, i64 %26
  %scevgep6 = getelementptr %struct.vertex.16*, %struct.vertex.16** %vv.ls, i64 %indvars.iv.ls.dac.lcssa
  %scevgep8 = getelementptr %struct.vertex.16*, %struct.vertex.16** %vv.ls, i64 %26
  %bound0 = icmp ult %struct.vertex.16** %scevgep, %scevgep8
  %bound1 = icmp ult %struct.vertex.16** %scevgep6, %scevgep4
  %memcheck.conflict = and i1 %bound0, %bound1
  br i1 %memcheck.conflict, label %pfor.detach.ls.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %24, -16
  %ind.end = add i64 %indvars.iv.ls.dac.lcssa, %n.vec
  %27 = add i64 %n.vec, -16
  %28 = lshr exact i64 %27, 4
  %29 = add nuw nsw i64 %28, 1
  %xtraiter = and i64 %29, 3
  %30 = icmp ult i64 %27, 48
  br i1 %30, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nsw i64 %29, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.3, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.3, %vector.body ]
  %31 = add i64 %indvars.iv.ls.dac.lcssa, %index
  %32 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %vv.ls, i64 %31
  %33 = bitcast %struct.vertex.16** %32 to <4 x i64>*
  %wide.load = load <4 x i64>, <4 x i64>* %33, align 8, !tbaa !53, !alias.scope !466
  %34 = getelementptr %struct.vertex.16*, %struct.vertex.16** %32, i64 4
  %35 = bitcast %struct.vertex.16** %34 to <4 x i64>*
  %wide.load13 = load <4 x i64>, <4 x i64>* %35, align 8, !tbaa !53, !alias.scope !466
  %36 = getelementptr %struct.vertex.16*, %struct.vertex.16** %32, i64 8
  %37 = bitcast %struct.vertex.16** %36 to <4 x i64>*
  %wide.load14 = load <4 x i64>, <4 x i64>* %37, align 8, !tbaa !53, !alias.scope !466
  %38 = getelementptr %struct.vertex.16*, %struct.vertex.16** %32, i64 12
  %39 = bitcast %struct.vertex.16** %38 to <4 x i64>*
  %wide.load15 = load <4 x i64>, <4 x i64>* %39, align 8, !tbaa !53, !alias.scope !466
  %40 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %.ls1, i64 %31
  %41 = bitcast %struct.vertex.16** %40 to <4 x i64>*
  store <4 x i64> %wide.load, <4 x i64>* %41, align 8, !tbaa !53, !alias.scope !469, !noalias !466
  %42 = getelementptr %struct.vertex.16*, %struct.vertex.16** %40, i64 4
  %43 = bitcast %struct.vertex.16** %42 to <4 x i64>*
  store <4 x i64> %wide.load13, <4 x i64>* %43, align 8, !tbaa !53, !alias.scope !469, !noalias !466
  %44 = getelementptr %struct.vertex.16*, %struct.vertex.16** %40, i64 8
  %45 = bitcast %struct.vertex.16** %44 to <4 x i64>*
  store <4 x i64> %wide.load14, <4 x i64>* %45, align 8, !tbaa !53, !alias.scope !469, !noalias !466
  %46 = getelementptr %struct.vertex.16*, %struct.vertex.16** %40, i64 12
  %47 = bitcast %struct.vertex.16** %46 to <4 x i64>*
  store <4 x i64> %wide.load15, <4 x i64>* %47, align 8, !tbaa !53, !alias.scope !469, !noalias !466
  %index.next = or i64 %index, 16
  %48 = add i64 %indvars.iv.ls.dac.lcssa, %index.next
  %49 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %vv.ls, i64 %48
  %50 = bitcast %struct.vertex.16** %49 to <4 x i64>*
  %wide.load.1 = load <4 x i64>, <4 x i64>* %50, align 8, !tbaa !53, !alias.scope !466
  %51 = getelementptr %struct.vertex.16*, %struct.vertex.16** %49, i64 4
  %52 = bitcast %struct.vertex.16** %51 to <4 x i64>*
  %wide.load13.1 = load <4 x i64>, <4 x i64>* %52, align 8, !tbaa !53, !alias.scope !466
  %53 = getelementptr %struct.vertex.16*, %struct.vertex.16** %49, i64 8
  %54 = bitcast %struct.vertex.16** %53 to <4 x i64>*
  %wide.load14.1 = load <4 x i64>, <4 x i64>* %54, align 8, !tbaa !53, !alias.scope !466
  %55 = getelementptr %struct.vertex.16*, %struct.vertex.16** %49, i64 12
  %56 = bitcast %struct.vertex.16** %55 to <4 x i64>*
  %wide.load15.1 = load <4 x i64>, <4 x i64>* %56, align 8, !tbaa !53, !alias.scope !466
  %57 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %.ls1, i64 %48
  %58 = bitcast %struct.vertex.16** %57 to <4 x i64>*
  store <4 x i64> %wide.load.1, <4 x i64>* %58, align 8, !tbaa !53, !alias.scope !469, !noalias !466
  %59 = getelementptr %struct.vertex.16*, %struct.vertex.16** %57, i64 4
  %60 = bitcast %struct.vertex.16** %59 to <4 x i64>*
  store <4 x i64> %wide.load13.1, <4 x i64>* %60, align 8, !tbaa !53, !alias.scope !469, !noalias !466
  %61 = getelementptr %struct.vertex.16*, %struct.vertex.16** %57, i64 8
  %62 = bitcast %struct.vertex.16** %61 to <4 x i64>*
  store <4 x i64> %wide.load14.1, <4 x i64>* %62, align 8, !tbaa !53, !alias.scope !469, !noalias !466
  %63 = getelementptr %struct.vertex.16*, %struct.vertex.16** %57, i64 12
  %64 = bitcast %struct.vertex.16** %63 to <4 x i64>*
  store <4 x i64> %wide.load15.1, <4 x i64>* %64, align 8, !tbaa !53, !alias.scope !469, !noalias !466
  %index.next.1 = or i64 %index, 32
  %65 = add i64 %indvars.iv.ls.dac.lcssa, %index.next.1
  %66 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %vv.ls, i64 %65
  %67 = bitcast %struct.vertex.16** %66 to <4 x i64>*
  %wide.load.2 = load <4 x i64>, <4 x i64>* %67, align 8, !tbaa !53, !alias.scope !466
  %68 = getelementptr %struct.vertex.16*, %struct.vertex.16** %66, i64 4
  %69 = bitcast %struct.vertex.16** %68 to <4 x i64>*
  %wide.load13.2 = load <4 x i64>, <4 x i64>* %69, align 8, !tbaa !53, !alias.scope !466
  %70 = getelementptr %struct.vertex.16*, %struct.vertex.16** %66, i64 8
  %71 = bitcast %struct.vertex.16** %70 to <4 x i64>*
  %wide.load14.2 = load <4 x i64>, <4 x i64>* %71, align 8, !tbaa !53, !alias.scope !466
  %72 = getelementptr %struct.vertex.16*, %struct.vertex.16** %66, i64 12
  %73 = bitcast %struct.vertex.16** %72 to <4 x i64>*
  %wide.load15.2 = load <4 x i64>, <4 x i64>* %73, align 8, !tbaa !53, !alias.scope !466
  %74 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %.ls1, i64 %65
  %75 = bitcast %struct.vertex.16** %74 to <4 x i64>*
  store <4 x i64> %wide.load.2, <4 x i64>* %75, align 8, !tbaa !53, !alias.scope !469, !noalias !466
  %76 = getelementptr %struct.vertex.16*, %struct.vertex.16** %74, i64 4
  %77 = bitcast %struct.vertex.16** %76 to <4 x i64>*
  store <4 x i64> %wide.load13.2, <4 x i64>* %77, align 8, !tbaa !53, !alias.scope !469, !noalias !466
  %78 = getelementptr %struct.vertex.16*, %struct.vertex.16** %74, i64 8
  %79 = bitcast %struct.vertex.16** %78 to <4 x i64>*
  store <4 x i64> %wide.load14.2, <4 x i64>* %79, align 8, !tbaa !53, !alias.scope !469, !noalias !466
  %80 = getelementptr %struct.vertex.16*, %struct.vertex.16** %74, i64 12
  %81 = bitcast %struct.vertex.16** %80 to <4 x i64>*
  store <4 x i64> %wide.load15.2, <4 x i64>* %81, align 8, !tbaa !53, !alias.scope !469, !noalias !466
  %index.next.2 = or i64 %index, 48
  %82 = add i64 %indvars.iv.ls.dac.lcssa, %index.next.2
  %83 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %vv.ls, i64 %82
  %84 = bitcast %struct.vertex.16** %83 to <4 x i64>*
  %wide.load.3 = load <4 x i64>, <4 x i64>* %84, align 8, !tbaa !53, !alias.scope !466
  %85 = getelementptr %struct.vertex.16*, %struct.vertex.16** %83, i64 4
  %86 = bitcast %struct.vertex.16** %85 to <4 x i64>*
  %wide.load13.3 = load <4 x i64>, <4 x i64>* %86, align 8, !tbaa !53, !alias.scope !466
  %87 = getelementptr %struct.vertex.16*, %struct.vertex.16** %83, i64 8
  %88 = bitcast %struct.vertex.16** %87 to <4 x i64>*
  %wide.load14.3 = load <4 x i64>, <4 x i64>* %88, align 8, !tbaa !53, !alias.scope !466
  %89 = getelementptr %struct.vertex.16*, %struct.vertex.16** %83, i64 12
  %90 = bitcast %struct.vertex.16** %89 to <4 x i64>*
  %wide.load15.3 = load <4 x i64>, <4 x i64>* %90, align 8, !tbaa !53, !alias.scope !466
  %91 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %.ls1, i64 %82
  %92 = bitcast %struct.vertex.16** %91 to <4 x i64>*
  store <4 x i64> %wide.load.3, <4 x i64>* %92, align 8, !tbaa !53, !alias.scope !469, !noalias !466
  %93 = getelementptr %struct.vertex.16*, %struct.vertex.16** %91, i64 4
  %94 = bitcast %struct.vertex.16** %93 to <4 x i64>*
  store <4 x i64> %wide.load13.3, <4 x i64>* %94, align 8, !tbaa !53, !alias.scope !469, !noalias !466
  %95 = getelementptr %struct.vertex.16*, %struct.vertex.16** %91, i64 8
  %96 = bitcast %struct.vertex.16** %95 to <4 x i64>*
  store <4 x i64> %wide.load14.3, <4 x i64>* %96, align 8, !tbaa !53, !alias.scope !469, !noalias !466
  %97 = getelementptr %struct.vertex.16*, %struct.vertex.16** %91, i64 12
  %98 = bitcast %struct.vertex.16** %97 to <4 x i64>*
  store <4 x i64> %wide.load15.3, <4 x i64>* %98, align 8, !tbaa !53, !alias.scope !469, !noalias !466
  %index.next.3 = add i64 %index, 64
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !471

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.3, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil.preheader

vector.body.epil.preheader:                       ; preds = %middle.block.unr-lcssa
  br label %vector.body.epil

vector.body.epil:                                 ; preds = %vector.body.epil, %vector.body.epil.preheader
  %index.epil = phi i64 [ %index.unr, %vector.body.epil.preheader ], [ %index.next.epil, %vector.body.epil ]
  %epil.iter = phi i64 [ %xtraiter, %vector.body.epil.preheader ], [ %epil.iter.sub, %vector.body.epil ]
  %99 = add i64 %indvars.iv.ls.dac.lcssa, %index.epil
  %100 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %vv.ls, i64 %99
  %101 = bitcast %struct.vertex.16** %100 to <4 x i64>*
  %wide.load.epil = load <4 x i64>, <4 x i64>* %101, align 8, !tbaa !53, !alias.scope !466
  %102 = getelementptr %struct.vertex.16*, %struct.vertex.16** %100, i64 4
  %103 = bitcast %struct.vertex.16** %102 to <4 x i64>*
  %wide.load13.epil = load <4 x i64>, <4 x i64>* %103, align 8, !tbaa !53, !alias.scope !466
  %104 = getelementptr %struct.vertex.16*, %struct.vertex.16** %100, i64 8
  %105 = bitcast %struct.vertex.16** %104 to <4 x i64>*
  %wide.load14.epil = load <4 x i64>, <4 x i64>* %105, align 8, !tbaa !53, !alias.scope !466
  %106 = getelementptr %struct.vertex.16*, %struct.vertex.16** %100, i64 12
  %107 = bitcast %struct.vertex.16** %106 to <4 x i64>*
  %wide.load15.epil = load <4 x i64>, <4 x i64>* %107, align 8, !tbaa !53, !alias.scope !466
  %108 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %.ls1, i64 %99
  %109 = bitcast %struct.vertex.16** %108 to <4 x i64>*
  store <4 x i64> %wide.load.epil, <4 x i64>* %109, align 8, !tbaa !53, !alias.scope !469, !noalias !466
  %110 = getelementptr %struct.vertex.16*, %struct.vertex.16** %108, i64 4
  %111 = bitcast %struct.vertex.16** %110 to <4 x i64>*
  store <4 x i64> %wide.load13.epil, <4 x i64>* %111, align 8, !tbaa !53, !alias.scope !469, !noalias !466
  %112 = getelementptr %struct.vertex.16*, %struct.vertex.16** %108, i64 8
  %113 = bitcast %struct.vertex.16** %112 to <4 x i64>*
  store <4 x i64> %wide.load14.epil, <4 x i64>* %113, align 8, !tbaa !53, !alias.scope !469, !noalias !466
  %114 = getelementptr %struct.vertex.16*, %struct.vertex.16** %108, i64 12
  %115 = bitcast %struct.vertex.16** %114 to <4 x i64>*
  store <4 x i64> %wide.load15.epil, <4 x i64>* %115, align 8, !tbaa !53, !alias.scope !469, !noalias !466
  %index.next.epil = add i64 %index.epil, 16
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block, label %vector.body.epil, !llvm.loop !472

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %24, %n.vec
  br i1 %cmp.n, label %pfor.cond.cleanup.loopexit.ls, label %pfor.detach.ls.preheader

pfor.cond.cleanup.loopexit.ls:                    ; preds = %pfor.detach.ls, %middle.block
  %116 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %117 = load atomic i32, i32* %116 acquire, align 8
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %120 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %121 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %122 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %121, i16* nonnull %122) #2
  %123 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %124 = call i8* @llvm.frameaddress(i32 0) #2
  %125 = getelementptr inbounds [5 x i8*], [5 x i8*]* %123, i64 0, i64 0
  store volatile i8* %124, i8** %125, align 8
  %126 = call i8* @llvm.stacksave() #2
  %127 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %126, i8** %127, align 8
  %128 = bitcast [5 x i8*]* %123 to i8*
  %129 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %128) #24
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %131 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %132 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %131, i64 0, i32 12, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 1
  store i64 %134, i64* %132, align 8
  %135 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %136 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %135, i64 0, i32 9
  %139 = bitcast %struct.__cilkrts_stack_frame** %138 to i64*
  store atomic i64 %137, i64* %139 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %140 = load atomic i32, i32* %116 acquire, align 8
  %141 = icmp eq i32 %140, 16777216
  br i1 %141, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %pfor.detach.ls
  %indvars.iv.ls = phi i64 [ %indvars.iv.next.ls, %pfor.detach.ls ], [ %indvars.iv.ls.ph, %pfor.detach.ls.preheader ]
  %arrayidx.ls = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %vv.ls, i64 %indvars.iv.ls
  %142 = bitcast %struct.vertex.16** %arrayidx.ls to i64*
  %143 = load i64, i64* %142, align 8, !tbaa !53
  %arrayidx11.ls = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %.ls1, i64 %indvars.iv.ls
  %144 = bitcast %struct.vertex.16** %arrayidx11.ls to i64*
  store i64 %143, i64* %144, align 8, !tbaa !53
  %145 = icmp ult i64 %indvars.iv.ls, %end.ls
  %indvars.iv.next.ls = add nuw nsw i64 %indvars.iv.ls, 1
  br i1 %145, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit.ls, !llvm.loop !473
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2__pfor.detach.ls(i64 %indvars.iv.start.ls, i64 %end.ls, i64 %.ls, i64 %.ls1, i32 %.ls2, i64 %.ls3, i64 %.ls4, i32 %e.ls, %struct.vertex.16** nocapture readonly align 1 %g.coerce.ls, i32 %.ls5, %"struct.std::pair"* nocapture align 1 %.ls6) unnamed_addr #15 {
pfor.detach.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount10 = sub i64 %end.ls, %indvars.iv.start.ls
  %9 = icmp ugt i64 %itercount10, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv.ls.ph = phi i64 [ %indvars.iv.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount12 = phi i64 [ %itercount10, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv.ls.dac11 = phi i64 [ %indvars.iv.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount12, 1
  %miditer = add nuw nsw i64 %indvars.iv.ls.dac11, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split13, label %.split.split

.split13:                                         ; preds = %16
  call fastcc void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2__pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac11, i64 %miditer, i64 %.ls, i64 %.ls1, i32 %.ls2, i64 %.ls3, i64 %.ls4, i32 %e.ls, %struct.vertex.16** %g.coerce.ls, i32 %.ls5, %"struct.std::pair"* %.ls6)
  br label %.split.split

.split.split:                                     ; preds = %.split13, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.ls:                             ; preds = %_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls
  %indvars.iv.ls = phi i64 [ %indvars.iv.next.ls, %_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls ], [ %indvars.iv.ls.ph, %pfor.detach.ls.preheader ]
  %48 = shl i64 %indvars.iv.ls, 10
  %49 = add i64 %48, %.ls1
  %50 = add nsw i64 %48, %.ls3
  %51 = add nsw i64 %50, 1024
  %cmp.i.ls = icmp sgt i64 %51, %.ls4
  %52 = trunc i64 %51 to i32
  %.sroa.speculated.ls = select i1 %cmp.i.ls, i32 %e.ls, i32 %52
  %arrayidx.i.i58.ls = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %g.coerce.ls, i64 %50
  %53 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx.i.i58.ls, align 8, !tbaa !53, !noalias !474
  %ref.tmp21.sroa.0.0..sroa_idx97.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %53, i64 0, i32 1, i32 0
  %54 = bitcast double* %ref.tmp21.sroa.0.0..sroa_idx97.ls to <2 x double>*
  %55 = load <2 x double>, <2 x double>* %54, align 8
  %56 = add nsw i64 %50, 1
  %57 = sext i32 %.sroa.speculated.ls to i64
  %cmp40.i62.ls = icmp slt i64 %56, %57
  br i1 %cmp40.i62.ls, label %for.body.i94.preheader.ls, label %_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls

for.body.i94.preheader.ls:                        ; preds = %pfor.detach.ls
  %58 = trunc i64 %indvars.iv.ls to i32
  %59 = mul i32 %58, -1024
  %60 = add i32 %59, %.ls2
  %61 = add i32 %.sroa.speculated.ls, %.ls5
  %62 = add i32 %60, %.sroa.speculated.ls
  %xtraiter126.ls = and i32 %61, 3
  %lcmp.mod127.ls = icmp eq i32 %xtraiter126.ls, 0
  br i1 %lcmp.mod127.ls, label %for.body.i94.prol.loopexit.ls, label %for.body.i94.prol.ls.preheader

for.body.i94.prol.ls.preheader:                   ; preds = %for.body.i94.preheader.ls
  br label %for.body.i94.prol.ls

for.body.i94.prol.ls:                             ; preds = %for.body.i94.prol.ls.preheader, %for.body.i94.prol.ls
  %indvars.iv.i73.prol.ls = phi i64 [ %indvars.iv.next.i91.prol.ls, %for.body.i94.prol.ls ], [ %56, %for.body.i94.prol.ls.preheader ]
  %63 = phi <2 x double> [ %69, %for.body.i94.prol.ls ], [ %55, %for.body.i94.prol.ls.preheader ]
  %64 = phi <2 x double> [ %71, %for.body.i94.prol.ls ], [ %55, %for.body.i94.prol.ls.preheader ]
  %prol.iter128.ls = phi i32 [ %prol.iter128.sub.ls, %for.body.i94.prol.ls ], [ %xtraiter126.ls, %for.body.i94.prol.ls.preheader ]
  %arrayidx.i10.i78.prol.ls = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %g.coerce.ls, i64 %indvars.iv.i73.prol.ls
  %65 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx.i10.i78.prol.ls, align 8, !tbaa !53, !noalias !479
  %agg.tmp1.sroa.0.0..sroa_idx.i79.prol.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %65, i64 0, i32 1, i32 0
  %66 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i79.prol.ls to <2 x double>*
  %67 = load <2 x double>, <2 x double>* %66, align 8, !noalias !482
  %68 = fcmp fast ogt <2 x double> %63, %67
  %69 = select <2 x i1> %68, <2 x double> %67, <2 x double> %63
  %70 = fcmp fast olt <2 x double> %64, %67
  %71 = select <2 x i1> %70, <2 x double> %67, <2 x double> %64
  %indvars.iv.next.i91.prol.ls = add nsw i64 %indvars.iv.i73.prol.ls, 1
  %prol.iter128.sub.ls = add nsw i32 %prol.iter128.ls, -1
  %prol.iter128.cmp.ls = icmp eq i32 %prol.iter128.sub.ls, 0
  br i1 %prol.iter128.cmp.ls, label %for.body.i94.prol.loopexit.loopexit.ls, label %for.body.i94.prol.ls, !llvm.loop !483

for.body.i94.prol.loopexit.ls:                    ; preds = %for.body.i94.prol.loopexit.loopexit.ls, %for.body.i94.preheader.ls
  %.lcssa124.unr.ls = phi <2 x double> [ undef, %for.body.i94.preheader.ls ], [ %69, %for.body.i94.prol.loopexit.loopexit.ls ]
  %.lcssa123.unr.ls = phi <2 x double> [ undef, %for.body.i94.preheader.ls ], [ %71, %for.body.i94.prol.loopexit.loopexit.ls ]
  %indvars.iv.i73.unr.ls = phi i64 [ %56, %for.body.i94.preheader.ls ], [ %110, %for.body.i94.prol.loopexit.loopexit.ls ]
  %.unr129.ls = phi <2 x double> [ %55, %for.body.i94.preheader.ls ], [ %69, %for.body.i94.prol.loopexit.loopexit.ls ]
  %.unr130.ls = phi <2 x double> [ %55, %for.body.i94.preheader.ls ], [ %71, %for.body.i94.prol.loopexit.loopexit.ls ]
  %72 = icmp ult i32 %62, 3
  br i1 %72, label %_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls, label %for.body.i94.ls.preheader

for.body.i94.ls.preheader:                        ; preds = %for.body.i94.prol.loopexit.ls
  br label %for.body.i94.ls

for.body.i94.ls:                                  ; preds = %for.body.i94.ls.preheader, %for.body.i94.ls
  %indvars.iv.i73.ls = phi i64 [ %indvars.iv.next.i91.3.ls, %for.body.i94.ls ], [ %indvars.iv.i73.unr.ls, %for.body.i94.ls.preheader ]
  %73 = phi <2 x double> [ %100, %for.body.i94.ls ], [ %.unr129.ls, %for.body.i94.ls.preheader ]
  %74 = phi <2 x double> [ %102, %for.body.i94.ls ], [ %.unr130.ls, %for.body.i94.ls.preheader ]
  %arrayidx.i10.i78.ls = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %g.coerce.ls, i64 %indvars.iv.i73.ls
  %75 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx.i10.i78.ls, align 8, !tbaa !53, !noalias !479
  %agg.tmp1.sroa.0.0..sroa_idx.i79.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %75, i64 0, i32 1, i32 0
  %76 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i79.ls to <2 x double>*
  %77 = load <2 x double>, <2 x double>* %76, align 8, !noalias !482
  %78 = fcmp fast ogt <2 x double> %73, %77
  %79 = select <2 x i1> %78, <2 x double> %77, <2 x double> %73
  %80 = fcmp fast olt <2 x double> %74, %77
  %81 = select <2 x i1> %80, <2 x double> %77, <2 x double> %74
  %indvars.iv.next.i91.ls = add nsw i64 %indvars.iv.i73.ls, 1
  %arrayidx.i10.i78.1.ls = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %g.coerce.ls, i64 %indvars.iv.next.i91.ls
  %82 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx.i10.i78.1.ls, align 8, !tbaa !53, !noalias !479
  %agg.tmp1.sroa.0.0..sroa_idx.i79.1.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %82, i64 0, i32 1, i32 0
  %83 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i79.1.ls to <2 x double>*
  %84 = load <2 x double>, <2 x double>* %83, align 8, !noalias !482
  %85 = fcmp fast ogt <2 x double> %79, %84
  %86 = select <2 x i1> %85, <2 x double> %84, <2 x double> %79
  %87 = fcmp fast olt <2 x double> %81, %84
  %88 = select <2 x i1> %87, <2 x double> %84, <2 x double> %81
  %indvars.iv.next.i91.1.ls = add nsw i64 %indvars.iv.i73.ls, 2
  %arrayidx.i10.i78.2.ls = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %g.coerce.ls, i64 %indvars.iv.next.i91.1.ls
  %89 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx.i10.i78.2.ls, align 8, !tbaa !53, !noalias !479
  %agg.tmp1.sroa.0.0..sroa_idx.i79.2.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %89, i64 0, i32 1, i32 0
  %90 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i79.2.ls to <2 x double>*
  %91 = load <2 x double>, <2 x double>* %90, align 8, !noalias !482
  %92 = fcmp fast ogt <2 x double> %86, %91
  %93 = select <2 x i1> %92, <2 x double> %91, <2 x double> %86
  %94 = fcmp fast olt <2 x double> %88, %91
  %95 = select <2 x i1> %94, <2 x double> %91, <2 x double> %88
  %indvars.iv.next.i91.2.ls = add nsw i64 %indvars.iv.i73.ls, 3
  %arrayidx.i10.i78.3.ls = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %g.coerce.ls, i64 %indvars.iv.next.i91.2.ls
  %96 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx.i10.i78.3.ls, align 8, !tbaa !53, !noalias !479
  %agg.tmp1.sroa.0.0..sroa_idx.i79.3.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %96, i64 0, i32 1, i32 0
  %97 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i79.3.ls to <2 x double>*
  %98 = load <2 x double>, <2 x double>* %97, align 8, !noalias !482
  %99 = fcmp fast ogt <2 x double> %93, %98
  %100 = select <2 x i1> %99, <2 x double> %98, <2 x double> %93
  %101 = fcmp fast olt <2 x double> %95, %98
  %102 = select <2 x i1> %101, <2 x double> %98, <2 x double> %95
  %indvars.iv.next.i91.3.ls = add nsw i64 %indvars.iv.i73.ls, 4
  %lftr.wideiv.i92.3.ls = trunc i64 %indvars.iv.next.i91.3.ls to i32
  %exitcond.i93.3.ls = icmp eq i32 %.sroa.speculated.ls, %lftr.wideiv.i92.3.ls
  br i1 %exitcond.i93.3.ls, label %_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls, label %for.body.i94.ls

_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls: ; preds = %for.body.i94.ls, %for.body.i94.prol.loopexit.ls, %pfor.detach.ls
  %103 = phi <2 x double> [ %55, %pfor.detach.ls ], [ %.lcssa124.unr.ls, %for.body.i94.prol.loopexit.ls ], [ %100, %for.body.i94.ls ]
  %104 = phi <2 x double> [ %55, %pfor.detach.ls ], [ %.lcssa123.unr.ls, %for.body.i94.prol.loopexit.ls ], [ %102, %for.body.i94.ls ]
  %ref.tmp21.sroa.0.0..sroa_idx.ls = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %.ls6, i64 %indvars.iv.ls, i32 0, i32 0
  %105 = bitcast double* %ref.tmp21.sroa.0.0..sroa_idx.ls to <2 x double>*
  store <2 x double> %103, <2 x double>* %105, align 8
  %ref.tmp21.sroa.8.16..sroa_idx.ls = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %.ls6, i64 %indvars.iv.ls, i32 1, i32 0
  %106 = bitcast double* %ref.tmp21.sroa.8.16..sroa_idx.ls to <2 x double>*
  store <2 x double> %104, <2 x double>* %106, align 8
  %107 = icmp ult i64 %indvars.iv.ls, %end.ls
  %indvars.iv.next.ls = add nuw nsw i64 %indvars.iv.ls, 1
  br i1 %107, label %pfor.detach.ls, label %pfor.cond.cleanup.ls

for.body.i94.prol.loopexit.loopexit.ls:           ; preds = %for.body.i94.prol.ls
  %108 = add nsw i32 %xtraiter126.ls, -1
  %109 = zext i32 %108 to i64
  %110 = add i64 %49, %109
  br label %for.body.i94.prol.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2__pfor.detach.ls(i64 %indvars.iv.start.ls, i64 %end.ls, i64 %.ls, i32 %.ls1, i64 %.ls2, i64 %.ls3, i32 %e.ls, %"struct.std::pair"* nocapture readonly align 1 %g.coerce.ls, %"struct.std::pair"* nocapture align 1 %.ls4) unnamed_addr #15 {
pfor.detach.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount10 = sub i64 %end.ls, %indvars.iv.start.ls
  %9 = icmp ugt i64 %itercount10, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv.ls.ph = phi i64 [ %indvars.iv.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount12 = phi i64 [ %itercount10, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv.ls.dac11 = phi i64 [ %indvars.iv.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount12, 1
  %miditer = add nuw nsw i64 %indvars.iv.ls.dac11, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split13, label %.split.split

.split13:                                         ; preds = %16
  call fastcc void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2__pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac11, i64 %miditer, i64 %.ls, i32 %.ls1, i64 %.ls2, i64 %.ls3, i32 %e.ls, %"struct.std::pair"* %g.coerce.ls, %"struct.std::pair"* %.ls4)
  br label %.split.split

.split.split:                                     ; preds = %.split13, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.ls:                             ; preds = %_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit93.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit93.ls
  %indvars.iv.ls = phi i64 [ %indvars.iv.next.ls, %_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit93.ls ], [ %indvars.iv.ls.ph, %pfor.detach.ls.preheader ]
  %48 = shl nsw i64 %indvars.iv.ls, 10
  %49 = add nsw i64 %48, %.ls2
  %50 = add nsw i64 %49, 1024
  %cmp.i.ls = icmp sgt i64 %50, %.ls3
  %51 = trunc i64 %50 to i32
  %.sroa.speculated.ls = select i1 %cmp.i.ls, i32 %e.ls, i32 %51
  %ref.tmp21.sroa.0.0..sroa_idx.ls = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %g.coerce.ls, i64 %49, i32 0, i32 0
  %52 = bitcast double* %ref.tmp21.sroa.0.0..sroa_idx.ls to <2 x double>*
  %53 = load <2 x double>, <2 x double>* %52, align 8
  %ref.tmp21.sroa.8.0..sroa_idx102.ls = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %g.coerce.ls, i64 %49, i32 1, i32 0
  %54 = bitcast double* %ref.tmp21.sroa.8.0..sroa_idx102.ls to <2 x double>*
  %55 = load <2 x double>, <2 x double>* %54, align 8
  %56 = add nsw i64 %49, 1
  %57 = sext i32 %.sroa.speculated.ls to i64
  %cmp39.i57.ls = icmp slt i64 %56, %57
  br i1 %cmp39.i57.ls, label %for.body.lr.ph.i66.ls, label %_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit93.ls

for.body.lr.ph.i66.ls:                            ; preds = %pfor.detach.ls
  %58 = trunc i64 %indvars.iv.ls to i32
  %59 = mul i32 %58, -1024
  %60 = add i32 %59, %.ls1
  %61 = add i32 %60, %.sroa.speculated.ls
  %62 = zext i32 %61 to i64
  %63 = add nuw nsw i64 %62, 1
  %min.iters.check.ls = icmp ult i64 %63, 4
  br i1 %min.iters.check.ls, label %for.body.i92.ls.preheader, label %vector.ph.ls

vector.ph.ls:                                     ; preds = %for.body.lr.ph.i66.ls
  %64 = add i32 %61, 1
  %65 = and i32 %64, 3
  %n.mod.vf.ls = zext i32 %65 to i64
  %n.vec.ls = sub nsw i64 %63, %n.mod.vf.ls
  %minmax.ident.splat.ls = shufflevector <2 x double> %55, <2 x double> undef, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %minmax.ident.splat128.ls = shufflevector <2 x double> %55, <2 x double> undef, <4 x i32> zeroinitializer
  %minmax.ident.splat137.ls = shufflevector <2 x double> %53, <2 x double> undef, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %minmax.ident.splat146.ls = shufflevector <2 x double> %53, <2 x double> undef, <4 x i32> zeroinitializer
  br label %vector.body.ls

vector.body.ls:                                   ; preds = %vector.body.ls, %vector.ph.ls
  %index.ls = phi i64 [ 0, %vector.ph.ls ], [ %index.next.ls, %vector.body.ls ]
  %vec.phi.ls = phi <4 x double> [ %minmax.ident.splat.ls, %vector.ph.ls ], [ %76, %vector.body.ls ]
  %vec.phi118.ls = phi <4 x double> [ %minmax.ident.splat128.ls, %vector.ph.ls ], [ %74, %vector.body.ls ]
  %vec.phi119.ls = phi <4 x double> [ %minmax.ident.splat137.ls, %vector.ph.ls ], [ %72, %vector.body.ls ]
  %vec.phi120.ls = phi <4 x double> [ %minmax.ident.splat146.ls, %vector.ph.ls ], [ %70, %vector.body.ls ]
  %66 = add i64 %index.ls, %56
  %67 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %g.coerce.ls, i64 %66, i32 0, i32 0
  %68 = bitcast double* %67 to <16 x double>*
  %wide.vec.ls = load <16 x double>, <16 x double>* %68, align 8, !noalias !484
  %strided.vec.ls = shufflevector <16 x double> %wide.vec.ls, <16 x double> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec121.ls = shufflevector <16 x double> %wide.vec.ls, <16 x double> undef, <4 x i32> <i32 1, i32 5, i32 9, i32 13>
  %strided.vec122.ls = shufflevector <16 x double> %wide.vec.ls, <16 x double> undef, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %strided.vec123.ls = shufflevector <16 x double> %wide.vec.ls, <16 x double> undef, <4 x i32> <i32 3, i32 7, i32 11, i32 15>
  %69 = fcmp fast ogt <4 x double> %vec.phi120.ls, %strided.vec.ls
  %70 = select <4 x i1> %69, <4 x double> %strided.vec.ls, <4 x double> %vec.phi120.ls
  %71 = fcmp fast ogt <4 x double> %vec.phi119.ls, %strided.vec121.ls
  %72 = select <4 x i1> %71, <4 x double> %strided.vec121.ls, <4 x double> %vec.phi119.ls
  %73 = fcmp fast olt <4 x double> %vec.phi118.ls, %strided.vec122.ls
  %74 = select <4 x i1> %73, <4 x double> %strided.vec122.ls, <4 x double> %vec.phi118.ls
  %75 = fcmp fast olt <4 x double> %vec.phi.ls, %strided.vec123.ls
  %76 = select <4 x i1> %75, <4 x double> %strided.vec123.ls, <4 x double> %vec.phi.ls
  %index.next.ls = add i64 %index.ls, 4
  %77 = icmp eq i64 %index.next.ls, %n.vec.ls
  br i1 %77, label %middle.block.ls, label %vector.body.ls, !llvm.loop !487

middle.block.ls:                                  ; preds = %vector.body.ls
  %ind.end.ls = add i64 %n.vec.ls, %56
  %rdx.shuf147.ls = shufflevector <4 x double> %70, <4 x double> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %rdx.minmax.cmp148.ls = fcmp fast olt <4 x double> %70, %rdx.shuf147.ls
  %rdx.minmax.select149.ls = select <4 x i1> %rdx.minmax.cmp148.ls, <4 x double> %70, <4 x double> %rdx.shuf147.ls
  %rdx.shuf150.ls = shufflevector <4 x double> %rdx.minmax.select149.ls, <4 x double> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp151.ls = fcmp fast olt <4 x double> %rdx.minmax.select149.ls, %rdx.shuf150.ls
  %rdx.minmax.select152.ls = select <4 x i1> %rdx.minmax.cmp151.ls, <4 x double> %rdx.minmax.select149.ls, <4 x double> %rdx.shuf150.ls
  %rdx.shuf138.ls = shufflevector <4 x double> %72, <4 x double> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %rdx.minmax.cmp139.ls = fcmp fast olt <4 x double> %72, %rdx.shuf138.ls
  %rdx.minmax.select140.ls = select <4 x i1> %rdx.minmax.cmp139.ls, <4 x double> %72, <4 x double> %rdx.shuf138.ls
  %rdx.shuf141.ls = shufflevector <4 x double> %rdx.minmax.select140.ls, <4 x double> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp142.ls = fcmp fast olt <4 x double> %rdx.minmax.select140.ls, %rdx.shuf141.ls
  %rdx.minmax.select143.ls = select <4 x i1> %rdx.minmax.cmp142.ls, <4 x double> %rdx.minmax.select140.ls, <4 x double> %rdx.shuf141.ls
  %rdx.shuf129.ls = shufflevector <4 x double> %74, <4 x double> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %rdx.minmax.cmp130.ls = fcmp fast ogt <4 x double> %74, %rdx.shuf129.ls
  %rdx.minmax.select131.ls = select <4 x i1> %rdx.minmax.cmp130.ls, <4 x double> %74, <4 x double> %rdx.shuf129.ls
  %rdx.shuf132.ls = shufflevector <4 x double> %rdx.minmax.select131.ls, <4 x double> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp133.ls = fcmp fast ogt <4 x double> %rdx.minmax.select131.ls, %rdx.shuf132.ls
  %rdx.minmax.select134.ls = select <4 x i1> %rdx.minmax.cmp133.ls, <4 x double> %rdx.minmax.select131.ls, <4 x double> %rdx.shuf132.ls
  %rdx.shuf.ls = shufflevector <4 x double> %76, <4 x double> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %rdx.minmax.cmp.ls = fcmp fast ogt <4 x double> %76, %rdx.shuf.ls
  %rdx.minmax.select.ls = select <4 x i1> %rdx.minmax.cmp.ls, <4 x double> %76, <4 x double> %rdx.shuf.ls
  %rdx.shuf124.ls = shufflevector <4 x double> %rdx.minmax.select.ls, <4 x double> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp125.ls = fcmp fast ogt <4 x double> %rdx.minmax.select.ls, %rdx.shuf124.ls
  %rdx.minmax.select126.ls = select <4 x i1> %rdx.minmax.cmp125.ls, <4 x double> %rdx.minmax.select.ls, <4 x double> %rdx.shuf124.ls
  %cmp.n.ls = icmp eq i32 %65, 0
  %78 = shufflevector <4 x double> %rdx.minmax.select152.ls, <4 x double> %rdx.minmax.select143.ls, <2 x i32> <i32 0, i32 4>
  %79 = shufflevector <4 x double> %rdx.minmax.select134.ls, <4 x double> %rdx.minmax.select126.ls, <2 x i32> <i32 0, i32 4>
  br i1 %cmp.n.ls, label %_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit93.ls, label %for.body.i92.ls.preheader

for.body.i92.ls.preheader:                        ; preds = %middle.block.ls, %for.body.lr.ph.i66.ls
  %indvars.iv.i68.ls.ph = phi i64 [ %ind.end.ls, %middle.block.ls ], [ %56, %for.body.lr.ph.i66.ls ]
  %.ph = phi <2 x double> [ %78, %middle.block.ls ], [ %53, %for.body.lr.ph.i66.ls ]
  %.ph22 = phi <2 x double> [ %79, %middle.block.ls ], [ %55, %for.body.lr.ph.i66.ls ]
  br label %for.body.i92.ls

for.body.i92.ls:                                  ; preds = %for.body.i92.ls.preheader, %for.body.i92.ls
  %indvars.iv.i68.ls = phi i64 [ %indvars.iv.next.i89.ls, %for.body.i92.ls ], [ %indvars.iv.i68.ls.ph, %for.body.i92.ls.preheader ]
  %80 = phi <2 x double> [ %87, %for.body.i92.ls ], [ %.ph, %for.body.i92.ls.preheader ]
  %81 = phi <2 x double> [ %89, %for.body.i92.ls ], [ %.ph22, %for.body.i92.ls.preheader ]
  %agg.tmp1.sroa.0.0..sroa_idx.i73.ls = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %g.coerce.ls, i64 %indvars.iv.i68.ls, i32 0, i32 0
  %82 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i73.ls to <2 x double>*
  %83 = load <2 x double>, <2 x double>* %82, align 8, !noalias !484
  %agg.tmp1.sroa.3.0..sroa_idx36.i77.ls = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %g.coerce.ls, i64 %indvars.iv.i68.ls, i32 1, i32 0
  %84 = bitcast double* %agg.tmp1.sroa.3.0..sroa_idx36.i77.ls to <2 x double>*
  %85 = load <2 x double>, <2 x double>* %84, align 8, !noalias !484
  %86 = fcmp fast ogt <2 x double> %80, %83
  %87 = select <2 x i1> %86, <2 x double> %83, <2 x double> %80
  %88 = fcmp fast olt <2 x double> %81, %85
  %89 = select <2 x i1> %88, <2 x double> %85, <2 x double> %81
  %indvars.iv.next.i89.ls = add nsw i64 %indvars.iv.i68.ls, 1
  %lftr.wideiv.i90.ls = trunc i64 %indvars.iv.next.i89.ls to i32
  %exitcond.i91.ls = icmp eq i32 %.sroa.speculated.ls, %lftr.wideiv.i90.ls
  br i1 %exitcond.i91.ls, label %_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit93.ls, label %for.body.i92.ls, !llvm.loop !488

_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit93.ls: ; preds = %for.body.i92.ls, %middle.block.ls, %pfor.detach.ls
  %90 = phi <2 x double> [ %53, %pfor.detach.ls ], [ %78, %middle.block.ls ], [ %87, %for.body.i92.ls ]
  %91 = phi <2 x double> [ %55, %pfor.detach.ls ], [ %79, %middle.block.ls ], [ %89, %for.body.i92.ls ]
  %ref.tmp21.sroa.0.0..sroa_idx95.ls = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %.ls4, i64 %indvars.iv.ls, i32 0, i32 0
  %92 = bitcast double* %ref.tmp21.sroa.0.0..sroa_idx95.ls to <2 x double>*
  store <2 x double> %90, <2 x double>* %92, align 8
  %ref.tmp21.sroa.8.16..sroa_idx.ls = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %.ls4, i64 %indvars.iv.ls, i32 1, i32 0
  %93 = bitcast double* %ref.tmp21.sroa.8.16..sroa_idx.ls to <2 x double>*
  store <2 x double> %91, <2 x double>* %93, align 8
  %94 = icmp ult i64 %indvars.iv.ls, %end.ls
  %indvars.iv.next.ls = add nuw nsw i64 %indvars.iv.ls, 1
  br i1 %94, label %pfor.detach.ls, label %pfor.cond.cleanup.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.ls(i64 %indvars.iv94.start.ls, i64 %end.ls, i64 %.ls, %struct.vertex.16** nocapture readonly align 1 %S.ls, %"struct.std::pair.23"* nocapture align 1 %.ls1) unnamed_addr #15 align 2 {
pfor.detach.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount3 = sub i64 %end.ls, %indvars.iv94.start.ls
  %9 = icmp ugt i64 %itercount3, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv94.ls.ph = phi i64 [ %indvars.iv94.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount5 = phi i64 [ %itercount3, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv94.ls.dac4 = phi i64 [ %indvars.iv94.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount5, 1
  %miditer = add nuw nsw i64 %indvars.iv94.ls.dac4, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split6, label %.split.split

.split6:                                          ; preds = %16
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.ls_.split.cilk(i64 %indvars.iv94.ls.dac4, i64 %miditer, i64 %.ls, %struct.vertex.16** %S.ls, %"struct.std::pair.23"* %.ls1)
  br label %.split.split

.split.split:                                     ; preds = %.split6, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.loopexit136.ls:                 ; preds = %pfor.detach.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit136.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit136.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %pfor.detach.ls
  %indvars.iv94.ls = phi i64 [ %indvars.iv.next95.ls, %pfor.detach.ls ], [ %indvars.iv94.ls.ph, %pfor.detach.ls.preheader ]
  %arrayidx.ls = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %S.ls, i64 %indvars.iv94.ls
  %48 = bitcast %struct.vertex.16** %arrayidx.ls to i64*
  %49 = load i64, i64* %48, align 8, !tbaa !53
  %first2.i.ls = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %.ls1, i64 %indvars.iv94.ls, i32 0
  store i32 0, i32* %first2.i.ls, align 8, !tbaa !192
  %second4.i.ls = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %.ls1, i64 %indvars.iv94.ls, i32 1
  %50 = bitcast %struct.vertex.16** %second4.i.ls to i64*
  store i64 %49, i64* %50, align 8, !tbaa !194
  %51 = icmp ult i64 %indvars.iv94.ls, %end.ls
  %indvars.iv.next95.ls = add nuw nsw i64 %indvars.iv94.ls, 1
  br i1 %51, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit136.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.us.ls(i64 %indvars.iv90.start.ls, i64 %end.ls, i64 %.ls, %struct.vertex.16** nocapture readonly align 1 %S.ls, double %add.i.neg.ls, double %.ls1, i32 %sub3.i.ls, double %add9.i.neg.ls, i1 %min.iters.check.ls, i32 %n.vec.ls, i1 %cmp.n.ls, i32 %logdivs.ls, %"struct.std::pair.23"* nocapture align 1 %.ls2) unnamed_addr #15 align 2 {
pfor.detach.us.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.us.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.us.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.us.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.us.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount7 = sub i64 %end.ls, %indvars.iv90.start.ls
  %9 = icmp ugt i64 %itercount7, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.us.preheader.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount9 = phi i64 [ %itercount7, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv90.ls.dac8 = phi i64 [ %indvars.iv90.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount9, 1
  %miditer = add nuw nsw i64 %indvars.iv90.ls.dac8, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split10, label %.split.split

.split10:                                         ; preds = %16
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.us.ls_.split.cilk(i64 %indvars.iv90.ls.dac8, i64 %miditer, i64 %.ls, %struct.vertex.16** %S.ls, double %add.i.neg.ls, double %.ls1, i32 %sub3.i.ls, double %add9.i.neg.ls, i1 %min.iters.check.ls, i32 %n.vec.ls, i1 %cmp.n.ls, i32 %logdivs.ls, %"struct.std::pair.23"* %.ls2)
  br label %.split.split

.split.split:                                     ; preds = %.split10, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.us.preheader.ls.split._crit_edge

pfor.detach.us.preheader.ls.split._crit_edge:     ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv90.ls.dac.lcssa = phi i64 [ %indvars.iv90.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br i1 %min.iters.check.ls, label %pfor.detach.us.ls.us.preheader, label %pfor.detach.us.ls.preheader

pfor.detach.us.ls.preheader:                      ; preds = %pfor.detach.us.preheader.ls.split._crit_edge
  br label %pfor.detach.us.ls

pfor.detach.us.ls.us.preheader:                   ; preds = %pfor.detach.us.preheader.ls.split._crit_edge
  br label %pfor.detach.us.ls.us

pfor.detach.us.ls.us:                             ; preds = %pfor.detach.us.ls.us.preheader, %_Z11ptFindBlock8_point2dIdEdiS0_.exit.loopexit.us.ls.loopexit.us
  %indvars.iv90.ls.us = phi i64 [ %indvars.iv.next91.ls.us, %_Z11ptFindBlock8_point2dIdEdiS0_.exit.loopexit.us.ls.loopexit.us ], [ %indvars.iv90.ls.dac.lcssa, %pfor.detach.us.ls.us.preheader ]
  %arrayidx.us.ls.us = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %S.ls, i64 %indvars.iv90.ls.us
  %22 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx.us.ls.us, align 8, !tbaa !53
  %agg.tmp9.sroa.0.0..sroa_idx.us.ls.us = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %22, i64 0, i32 1, i32 0
  %agg.tmp9.sroa.0.0.copyload.us.ls.us = load double, double* %agg.tmp9.sroa.0.0..sroa_idx.us.ls.us, align 8
  %agg.tmp9.sroa.2.0..sroa_idx47.us.ls.us = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %22, i64 0, i32 1, i32 1
  %agg.tmp9.sroa.2.0.copyload.us.ls.us = load double, double* %agg.tmp9.sroa.2.0..sroa_idx47.us.ls.us, align 8
  %sub.i76.us.ls.us = fadd fast double %agg.tmp9.sroa.0.0.copyload.us.ls.us, %add.i.neg.ls
  %23 = fmul fast double %sub.i76.us.ls.us, %.ls1
  %conv.i.us.ls.us = fptosi double %23 to i32
  %cmp.i.i.us.ls.us = icmp sgt i32 %conv.i.us.ls.us, %sub3.i.ls
  %.sroa.speculated42.i.us.ls.us = select i1 %cmp.i.i.us.ls.us, i32 %sub3.i.ls, i32 %conv.i.us.ls.us
  %sub6.i.us.ls.us = fadd fast double %agg.tmp9.sroa.2.0.copyload.us.ls.us, %add9.i.neg.ls
  %24 = fmul fast double %sub6.i.us.ls.us, %.ls1
  %conv8.i.us.ls.us = fptosi double %24 to i32
  %cmp.i34.i.us.ls.us = icmp sgt i32 %conv8.i.us.ls.us, %sub3.i.ls
  %.sroa.speculated.i.us.ls.us = select i1 %cmp.i34.i.us.ls.us, i32 %sub3.i.ls, i32 %conv8.i.us.ls.us
  br label %for.body.i.us.ls.us

for.body.i.us.ls.us:                              ; preds = %for.body.i.us.ls.us, %pfor.detach.us.ls.us
  %result.049.i.us.ls.us = phi i32 [ %add17.i.us.ls.us, %for.body.i.us.ls.us ], [ 0, %pfor.detach.us.ls.us ]
  %i.048.i.us.ls.us = phi i32 [ %add15.i.us.ls.us, %for.body.i.us.ls.us ], [ 0, %pfor.detach.us.ls.us ]
  %shl12.i.us.ls.us = shl i32 1, %i.048.i.us.ls.us
  %and.i.us.ls.us = and i32 %shl12.i.us.ls.us, %.sroa.speculated42.i.us.ls.us
  %shl13.i.us.ls.us = shl i32 %and.i.us.ls.us, %i.048.i.us.ls.us
  %add.i77.us.ls.us = add nsw i32 %shl13.i.us.ls.us, %result.049.i.us.ls.us
  %and14.i.us.ls.us = and i32 %shl12.i.us.ls.us, %.sroa.speculated.i.us.ls.us
  %add15.i.us.ls.us = add nuw nsw i32 %i.048.i.us.ls.us, 1
  %shl16.i.us.ls.us = shl i32 %and14.i.us.ls.us, %add15.i.us.ls.us
  %add17.i.us.ls.us = add nsw i32 %add.i77.us.ls.us, %shl16.i.us.ls.us
  %exitcond.i.us.ls.us = icmp eq i32 %add15.i.us.ls.us, %logdivs.ls
  br i1 %exitcond.i.us.ls.us, label %_Z11ptFindBlock8_point2dIdEdiS0_.exit.loopexit.us.ls.loopexit.us, label %for.body.i.us.ls.us, !llvm.loop !489

_Z11ptFindBlock8_point2dIdEdiS0_.exit.loopexit.us.ls.loopexit.us: ; preds = %for.body.i.us.ls.us
  %25 = ptrtoint %struct.vertex.16* %22 to i64
  %first2.i.us.ls.us = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %.ls2, i64 %indvars.iv90.ls.us, i32 0
  store i32 %add17.i.us.ls.us, i32* %first2.i.us.ls.us, align 8, !tbaa !192
  %second4.i.us.ls.us = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %.ls2, i64 %indvars.iv90.ls.us, i32 1
  %26 = bitcast %struct.vertex.16** %second4.i.us.ls.us to i64*
  store i64 %25, i64* %26, align 8, !tbaa !194
  %27 = icmp ult i64 %indvars.iv90.ls.us, %end.ls
  %indvars.iv.next91.ls.us = add nuw nsw i64 %indvars.iv90.ls.us, 1
  br i1 %27, label %pfor.detach.us.ls.us, label %pfor.cond.cleanup.loopexit.ls

pfor.cond.cleanup.loopexit.ls:                    ; preds = %_Z11ptFindBlock8_point2dIdEdiS0_.exit.loopexit.us.ls, %_Z11ptFindBlock8_point2dIdEdiS0_.exit.loopexit.us.ls.loopexit.us
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %29 = load atomic i32, i32* %28 acquire, align 8
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %32 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %34 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %33, i16* nonnull %34) #2
  %35 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %36 = call i8* @llvm.frameaddress(i32 0) #2
  %37 = getelementptr inbounds [5 x i8*], [5 x i8*]* %35, i64 0, i64 0
  store volatile i8* %36, i8** %37, align 8
  %38 = call i8* @llvm.stacksave() #2
  %39 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %38, i8** %39, align 8
  %40 = bitcast [5 x i8*]* %35 to i8*
  %41 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %40) #24
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %43 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %43, i64 0, i32 12, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %44, align 8
  %47 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %48 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %47, i64 0, i32 9
  %51 = bitcast %struct.__cilkrts_stack_frame** %50 to i64*
  store atomic i64 %49, i64* %51 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %52 = load atomic i32, i32* %28 acquire, align 8
  %53 = icmp eq i32 %52, 16777216
  br i1 %53, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.us.ls:                                ; preds = %pfor.detach.us.ls.preheader, %_Z11ptFindBlock8_point2dIdEdiS0_.exit.loopexit.us.ls
  %indvars.iv90.ls = phi i64 [ %indvars.iv.next91.ls, %_Z11ptFindBlock8_point2dIdEdiS0_.exit.loopexit.us.ls ], [ %indvars.iv90.ls.dac.lcssa, %pfor.detach.us.ls.preheader ]
  %arrayidx.us.ls = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %S.ls, i64 %indvars.iv90.ls
  %54 = load %struct.vertex.16*, %struct.vertex.16** %arrayidx.us.ls, align 8, !tbaa !53
  %agg.tmp9.sroa.0.0..sroa_idx.us.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %54, i64 0, i32 1, i32 0
  %agg.tmp9.sroa.0.0.copyload.us.ls = load double, double* %agg.tmp9.sroa.0.0..sroa_idx.us.ls, align 8
  %agg.tmp9.sroa.2.0..sroa_idx47.us.ls = getelementptr inbounds %struct.vertex.16, %struct.vertex.16* %54, i64 0, i32 1, i32 1
  %agg.tmp9.sroa.2.0.copyload.us.ls = load double, double* %agg.tmp9.sroa.2.0..sroa_idx47.us.ls, align 8
  %sub.i76.us.ls = fadd fast double %agg.tmp9.sroa.0.0.copyload.us.ls, %add.i.neg.ls
  %55 = fmul fast double %sub.i76.us.ls, %.ls1
  %conv.i.us.ls = fptosi double %55 to i32
  %cmp.i.i.us.ls = icmp sgt i32 %conv.i.us.ls, %sub3.i.ls
  %.sroa.speculated42.i.us.ls = select i1 %cmp.i.i.us.ls, i32 %sub3.i.ls, i32 %conv.i.us.ls
  %sub6.i.us.ls = fadd fast double %agg.tmp9.sroa.2.0.copyload.us.ls, %add9.i.neg.ls
  %56 = fmul fast double %sub6.i.us.ls, %.ls1
  %conv8.i.us.ls = fptosi double %56 to i32
  %cmp.i34.i.us.ls = icmp sgt i32 %conv8.i.us.ls, %sub3.i.ls
  %.sroa.speculated.i.us.ls = select i1 %cmp.i34.i.us.ls, i32 %sub3.i.ls, i32 %conv8.i.us.ls
  %broadcast.splatinsert.ls = insertelement <8 x i32> undef, i32 %.sroa.speculated42.i.us.ls, i32 0
  %broadcast.splat.ls = shufflevector <8 x i32> %broadcast.splatinsert.ls, <8 x i32> undef, <8 x i32> zeroinitializer
  %broadcast.splatinsert112.ls = insertelement <8 x i32> undef, i32 %.sroa.speculated.i.us.ls, i32 0
  %broadcast.splat113.ls = shufflevector <8 x i32> %broadcast.splatinsert112.ls, <8 x i32> undef, <8 x i32> zeroinitializer
  br label %vector.body.ls

vector.body.ls:                                   ; preds = %vector.body.ls, %pfor.detach.us.ls
  %index.ls = phi i32 [ 0, %pfor.detach.us.ls ], [ %index.next.ls, %vector.body.ls ]
  %vec.phi.ls = phi <8 x i32> [ zeroinitializer, %pfor.detach.us.ls ], [ %85, %vector.body.ls ]
  %vec.phi100.ls = phi <8 x i32> [ zeroinitializer, %pfor.detach.us.ls ], [ %86, %vector.body.ls ]
  %vec.phi101.ls = phi <8 x i32> [ zeroinitializer, %pfor.detach.us.ls ], [ %87, %vector.body.ls ]
  %vec.phi102.ls = phi <8 x i32> [ zeroinitializer, %pfor.detach.us.ls ], [ %88, %vector.body.ls ]
  %vec.ind.ls = phi <8 x i32> [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, %pfor.detach.us.ls ], [ %vec.ind.next.ls, %vector.body.ls ]
  %step.add.ls = add <8 x i32> %vec.ind.ls, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %step.add103.ls = add <8 x i32> %vec.ind.ls, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %step.add104.ls = add <8 x i32> %vec.ind.ls, <i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24, i32 24>
  %57 = shl <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %vec.ind.ls
  %58 = shl <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %step.add.ls
  %59 = shl <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %step.add103.ls
  %60 = shl <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %step.add104.ls
  %61 = and <8 x i32> %57, %broadcast.splat.ls
  %62 = and <8 x i32> %58, %broadcast.splat.ls
  %63 = and <8 x i32> %59, %broadcast.splat.ls
  %64 = and <8 x i32> %60, %broadcast.splat.ls
  %65 = shl <8 x i32> %61, %vec.ind.ls
  %66 = shl <8 x i32> %62, %step.add.ls
  %67 = shl <8 x i32> %63, %step.add103.ls
  %68 = shl <8 x i32> %64, %step.add104.ls
  %69 = add nsw <8 x i32> %65, %vec.phi.ls
  %70 = add nsw <8 x i32> %66, %vec.phi100.ls
  %71 = add nsw <8 x i32> %67, %vec.phi101.ls
  %72 = add nsw <8 x i32> %68, %vec.phi102.ls
  %73 = and <8 x i32> %57, %broadcast.splat113.ls
  %74 = and <8 x i32> %58, %broadcast.splat113.ls
  %75 = and <8 x i32> %59, %broadcast.splat113.ls
  %76 = and <8 x i32> %60, %broadcast.splat113.ls
  %77 = add nuw nsw <8 x i32> %vec.ind.ls, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %78 = add <8 x i32> %vec.ind.ls, <i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9>
  %79 = add <8 x i32> %vec.ind.ls, <i32 17, i32 17, i32 17, i32 17, i32 17, i32 17, i32 17, i32 17>
  %80 = add <8 x i32> %vec.ind.ls, <i32 25, i32 25, i32 25, i32 25, i32 25, i32 25, i32 25, i32 25>
  %81 = shl <8 x i32> %73, %77
  %82 = shl <8 x i32> %74, %78
  %83 = shl <8 x i32> %75, %79
  %84 = shl <8 x i32> %76, %80
  %85 = add nsw <8 x i32> %69, %81
  %86 = add nsw <8 x i32> %70, %82
  %87 = add nsw <8 x i32> %71, %83
  %88 = add nsw <8 x i32> %72, %84
  %index.next.ls = add i32 %index.ls, 32
  %vec.ind.next.ls = add <8 x i32> %vec.ind.ls, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %89 = icmp eq i32 %index.next.ls, %n.vec.ls
  br i1 %89, label %middle.block.ls, label %vector.body.ls, !llvm.loop !490

middle.block.ls:                                  ; preds = %vector.body.ls
  %90 = ptrtoint %struct.vertex.16* %54 to i64
  %bin.rdx.ls = add <8 x i32> %86, %85
  %bin.rdx120.ls = add <8 x i32> %bin.rdx.ls, %87
  %bin.rdx121.ls = add <8 x i32> %bin.rdx120.ls, %88
  %rdx.shuf.ls = shufflevector <8 x i32> %bin.rdx121.ls, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx122.ls = add <8 x i32> %rdx.shuf.ls, %bin.rdx121.ls
  %rdx.shuf123.ls = shufflevector <8 x i32> %bin.rdx122.ls, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx124.ls = add <8 x i32> %rdx.shuf123.ls, %bin.rdx122.ls
  %rdx.shuf125.ls = shufflevector <8 x i32> %bin.rdx124.ls, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx126.ls = add <8 x i32> %rdx.shuf125.ls, %bin.rdx124.ls
  %91 = extractelement <8 x i32> %bin.rdx126.ls, i32 0
  br i1 %cmp.n.ls, label %_Z11ptFindBlock8_point2dIdEdiS0_.exit.loopexit.us.ls, label %for.body.i.us.ls.preheader

for.body.i.us.ls.preheader:                       ; preds = %middle.block.ls
  br label %for.body.i.us.ls

for.body.i.us.ls:                                 ; preds = %for.body.i.us.ls.preheader, %for.body.i.us.ls
  %result.049.i.us.ls = phi i32 [ %add17.i.us.ls, %for.body.i.us.ls ], [ %91, %for.body.i.us.ls.preheader ]
  %i.048.i.us.ls = phi i32 [ %add15.i.us.ls, %for.body.i.us.ls ], [ %n.vec.ls, %for.body.i.us.ls.preheader ]
  %shl12.i.us.ls = shl i32 1, %i.048.i.us.ls
  %and.i.us.ls = and i32 %shl12.i.us.ls, %.sroa.speculated42.i.us.ls
  %shl13.i.us.ls = shl i32 %and.i.us.ls, %i.048.i.us.ls
  %add.i77.us.ls = add nsw i32 %shl13.i.us.ls, %result.049.i.us.ls
  %and14.i.us.ls = and i32 %shl12.i.us.ls, %.sroa.speculated.i.us.ls
  %add15.i.us.ls = add nuw nsw i32 %i.048.i.us.ls, 1
  %shl16.i.us.ls = shl i32 %and14.i.us.ls, %add15.i.us.ls
  %add17.i.us.ls = add nsw i32 %add.i77.us.ls, %shl16.i.us.ls
  %exitcond.i.us.ls = icmp eq i32 %add15.i.us.ls, %logdivs.ls
  br i1 %exitcond.i.us.ls, label %_Z11ptFindBlock8_point2dIdEdiS0_.exit.loopexit.us.ls, label %for.body.i.us.ls, !llvm.loop !489

_Z11ptFindBlock8_point2dIdEdiS0_.exit.loopexit.us.ls: ; preds = %for.body.i.us.ls, %middle.block.ls
  %add17.i.us.lcssa.ls = phi i32 [ %91, %middle.block.ls ], [ %add17.i.us.ls, %for.body.i.us.ls ]
  %first2.i.us.ls = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %.ls2, i64 %indvars.iv90.ls, i32 0
  store i32 %add17.i.us.lcssa.ls, i32* %first2.i.us.ls, align 8, !tbaa !192
  %second4.i.us.ls = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %.ls2, i64 %indvars.iv90.ls, i32 1
  %92 = bitcast %struct.vertex.16** %second4.i.us.ls to i64*
  store i64 %90, i64* %92, align 8, !tbaa !194
  %93 = icmp ult i64 %indvars.iv90.ls, %end.ls
  %indvars.iv.next91.ls = add nuw nsw i64 %indvars.iv90.ls, 1
  br i1 %93, label %pfor.detach.us.ls, label %pfor.cond.cleanup.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach30.ls(i64 %indvars.iv.start.ls, i64 %end.ls, i64 %.ls, %"struct.std::pair.23"* nocapture readonly align 1 %.ls1, %struct.vertex.16** nocapture align 1 %S.ls) unnamed_addr #15 align 2 {
pfor.detach30.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach30.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach30.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach30.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach30.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount3 = sub i64 %end.ls, %indvars.iv.start.ls
  %9 = icmp ugt i64 %itercount3, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach30.lr.ph.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount5 = phi i64 [ %itercount3, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv.ls.dac4 = phi i64 [ %indvars.iv.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount5, 1
  %miditer = add nuw nsw i64 %indvars.iv.ls.dac4, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split6, label %.split.split

.split6:                                          ; preds = %16
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach30.ls_.split.cilk(i64 %indvars.iv.ls.dac4, i64 %miditer, i64 %.ls, %"struct.std::pair.23"* %.ls1, %struct.vertex.16** %S.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split6, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach30.lr.ph.ls.split._crit_edge

pfor.detach30.lr.ph.ls.split._crit_edge:          ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv.ls.dac.lcssa = phi i64 [ %indvars.iv.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  %22 = icmp ugt i64 %indvars.iv.ls.dac.lcssa, %end.ls
  %umax = select i1 %22, i64 %indvars.iv.ls.dac.lcssa, i64 %end.ls
  %23 = add i64 %umax, 1
  %24 = sub i64 %23, %indvars.iv.ls.dac.lcssa
  %min.iters.check = icmp ult i64 %24, 17
  br i1 %min.iters.check, label %pfor.detach30.ls.preheader, label %vector.memcheck

pfor.detach30.ls.preheader:                       ; preds = %vector.body, %vector.memcheck, %pfor.detach30.lr.ph.ls.split._crit_edge
  %indvars.iv.ls.ph = phi i64 [ %indvars.iv.ls.dac.lcssa, %vector.memcheck ], [ %indvars.iv.ls.dac.lcssa, %pfor.detach30.lr.ph.ls.split._crit_edge ], [ %ind.end, %vector.body ]
  br label %pfor.detach30.ls

vector.memcheck:                                  ; preds = %pfor.detach30.lr.ph.ls.split._crit_edge
  %scevgep = getelementptr %struct.vertex.16*, %struct.vertex.16** %S.ls, i64 %indvars.iv.ls.dac.lcssa
  %25 = icmp ugt i64 %indvars.iv.ls.dac.lcssa, %end.ls
  %umax2 = select i1 %25, i64 %indvars.iv.ls.dac.lcssa, i64 %end.ls
  %26 = add i64 %umax2, 1
  %scevgep3 = getelementptr %struct.vertex.16*, %struct.vertex.16** %S.ls, i64 %26
  %scevgep5 = getelementptr %"struct.std::pair.23", %"struct.std::pair.23"* %.ls1, i64 %indvars.iv.ls.dac.lcssa, i32 1
  %scevgep7 = getelementptr %"struct.std::pair.23", %"struct.std::pair.23"* %.ls1, i64 %26
  %27 = bitcast %"struct.std::pair.23"* %scevgep7 to %struct.vertex.16**
  %bound0 = icmp ult %struct.vertex.16** %scevgep, %27
  %bound1 = icmp ult %struct.vertex.16** %scevgep5, %scevgep3
  %memcheck.conflict = and i1 %bound0, %bound1
  br i1 %memcheck.conflict, label %pfor.detach30.ls.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.mod.vf = and i64 %24, 15
  %28 = icmp eq i64 %n.mod.vf, 0
  %29 = select i1 %28, i64 16, i64 %n.mod.vf
  %n.vec = sub i64 %24, %29
  %ind.end = add i64 %indvars.iv.ls.dac.lcssa, %n.vec
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %offset.idx = add i64 %indvars.iv.ls.dac.lcssa, %index
  %30 = add i64 %indvars.iv.ls.dac.lcssa, %index
  %31 = add i64 %offset.idx, 4
  %32 = add i64 %offset.idx, 8
  %33 = add i64 %offset.idx, 12
  %34 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %.ls1, i64 %30, i32 1
  %35 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %.ls1, i64 %31, i32 1
  %36 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %.ls1, i64 %32, i32 1
  %37 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %.ls1, i64 %33, i32 1
  %38 = bitcast %struct.vertex.16** %34 to <8 x i64>*
  %39 = bitcast %struct.vertex.16** %35 to <8 x i64>*
  %40 = bitcast %struct.vertex.16** %36 to <8 x i64>*
  %41 = bitcast %struct.vertex.16** %37 to <8 x i64>*
  %wide.vec = load <8 x i64>, <8 x i64>* %38, align 8, !tbaa !194
  %wide.vec12 = load <8 x i64>, <8 x i64>* %39, align 8, !tbaa !194
  %wide.vec13 = load <8 x i64>, <8 x i64>* %40, align 8, !tbaa !194
  %wide.vec14 = load <8 x i64>, <8 x i64>* %41, align 8, !tbaa !194
  %strided.vec = shufflevector <8 x i64> %wide.vec, <8 x i64> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec15 = shufflevector <8 x i64> %wide.vec12, <8 x i64> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec16 = shufflevector <8 x i64> %wide.vec13, <8 x i64> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec17 = shufflevector <8 x i64> %wide.vec14, <8 x i64> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %42 = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %S.ls, i64 %30
  %43 = bitcast %struct.vertex.16** %42 to <4 x i64>*
  store <4 x i64> %strided.vec, <4 x i64>* %43, align 8, !tbaa !53, !alias.scope !491, !noalias !494
  %44 = getelementptr %struct.vertex.16*, %struct.vertex.16** %42, i64 4
  %45 = bitcast %struct.vertex.16** %44 to <4 x i64>*
  store <4 x i64> %strided.vec15, <4 x i64>* %45, align 8, !tbaa !53, !alias.scope !491, !noalias !494
  %46 = getelementptr %struct.vertex.16*, %struct.vertex.16** %42, i64 8
  %47 = bitcast %struct.vertex.16** %46 to <4 x i64>*
  store <4 x i64> %strided.vec16, <4 x i64>* %47, align 8, !tbaa !53, !alias.scope !491, !noalias !494
  %48 = getelementptr %struct.vertex.16*, %struct.vertex.16** %42, i64 12
  %49 = bitcast %struct.vertex.16** %48 to <4 x i64>*
  store <4 x i64> %strided.vec17, <4 x i64>* %49, align 8, !tbaa !53, !alias.scope !491, !noalias !494
  %index.next = add i64 %index, 16
  %50 = icmp eq i64 %index.next, %n.vec
  br i1 %50, label %pfor.detach30.ls.preheader, label %vector.body, !llvm.loop !496

pfor.cond.cleanup29.loopexit.ls:                  ; preds = %pfor.detach30.ls
  %51 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %52 = load atomic i32, i32* %51 acquire, align 8
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup29.loopexit.ls
  %55 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %56 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %57 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %56, i16* nonnull %57) #2
  %58 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %59 = call i8* @llvm.frameaddress(i32 0) #2
  %60 = getelementptr inbounds [5 x i8*], [5 x i8*]* %58, i64 0, i64 0
  store volatile i8* %59, i8** %60, align 8
  %61 = call i8* @llvm.stacksave() #2
  %62 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %61, i8** %62, align 8
  %63 = bitcast [5 x i8*]* %58 to i8*
  %64 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %63) #24
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup29.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %66 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %67 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %66, i64 0, i32 12, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  store i64 %69, i64* %67, align 8
  %70 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %71 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %70, i64 0, i32 9
  %74 = bitcast %struct.__cilkrts_stack_frame** %73 to i64*
  store atomic i64 %72, i64* %74 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %75 = load atomic i32, i32* %51 acquire, align 8
  %76 = icmp eq i32 %75, 16777216
  br i1 %76, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach30.ls:                                 ; preds = %pfor.detach30.ls.preheader, %pfor.detach30.ls
  %indvars.iv.ls = phi i64 [ %indvars.iv.next.ls, %pfor.detach30.ls ], [ %indvars.iv.ls.ph, %pfor.detach30.ls.preheader ]
  %second.ls = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %.ls1, i64 %indvars.iv.ls, i32 1
  %77 = bitcast %struct.vertex.16** %second.ls to i64*
  %78 = load i64, i64* %77, align 8, !tbaa !194
  %arrayidx39.ls = getelementptr inbounds %struct.vertex.16*, %struct.vertex.16** %S.ls, i64 %indvars.iv.ls
  %79 = bitcast %struct.vertex.16** %arrayidx39.ls to i64*
  store i64 %78, i64* %79, align 8, !tbaa !53
  %80 = icmp ult i64 %indvars.iv.ls, %end.ls
  %indvars.iv.next.ls = add nuw nsw i64 %indvars.iv.ls, 1
  br i1 %80, label %pfor.detach30.ls, label %pfor.cond.cleanup29.loopexit.ls, !llvm.loop !497
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach34.ls(i64 %__begin25.0181.start.ls, i64 %end.ls, i64 %.ls, i32* nocapture align 1 %bucketOffsets.ls, i32 %conv40.ls) unnamed_addr #15 {
pfor.detach34.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach34.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach34.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach34.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach34.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount2 = sub i64 %end.ls, %__begin25.0181.start.ls
  %9 = icmp ugt i64 %itercount2, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach34.lr.ph.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount4 = phi i64 [ %itercount2, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin25.0181.ls.dac3 = phi i64 [ %__begin25.0181.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount4, 1
  %miditer = add nuw nsw i64 %__begin25.0181.ls.dac3, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split5, label %.split.split

.split5:                                          ; preds = %16
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach34.ls_.split.cilk(i64 %__begin25.0181.ls.dac3, i64 %miditer, i64 %.ls, i32* %bucketOffsets.ls, i32 %conv40.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split5, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach34.lr.ph.ls.split._crit_edge

pfor.detach34.lr.ph.ls.split._crit_edge:          ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin25.0181.ls.dac.lcssa = phi i64 [ %__begin25.0181.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  %22 = icmp ugt i64 %__begin25.0181.ls.dac.lcssa, %end.ls
  %umax = select i1 %22, i64 %__begin25.0181.ls.dac.lcssa, i64 %end.ls
  %23 = add i64 %umax, 1
  %24 = sub i64 %23, %__begin25.0181.ls.dac.lcssa
  %min.iters.check = icmp ult i64 %24, 32
  br i1 %min.iters.check, label %pfor.detach34.ls.preheader, label %vector.ph

pfor.detach34.ls.preheader:                       ; preds = %middle.block, %pfor.detach34.lr.ph.ls.split._crit_edge
  %__begin25.0181.ls.ph = phi i64 [ %__begin25.0181.ls.dac.lcssa, %pfor.detach34.lr.ph.ls.split._crit_edge ], [ %ind.end, %middle.block ]
  br label %pfor.detach34.ls

vector.ph:                                        ; preds = %pfor.detach34.lr.ph.ls.split._crit_edge
  %n.vec = and i64 %24, -32
  %ind.end = add i64 %__begin25.0181.ls.dac.lcssa, %n.vec
  %broadcast.splatinsert4 = insertelement <8 x i32> undef, i32 %conv40.ls, i32 0
  %broadcast.splat5 = shufflevector <8 x i32> %broadcast.splatinsert4, <8 x i32> undef, <8 x i32> zeroinitializer
  %broadcast.splatinsert6 = insertelement <8 x i32> undef, i32 %conv40.ls, i32 0
  %broadcast.splat7 = shufflevector <8 x i32> %broadcast.splatinsert6, <8 x i32> undef, <8 x i32> zeroinitializer
  %broadcast.splatinsert8 = insertelement <8 x i32> undef, i32 %conv40.ls, i32 0
  %broadcast.splat9 = shufflevector <8 x i32> %broadcast.splatinsert8, <8 x i32> undef, <8 x i32> zeroinitializer
  %broadcast.splatinsert10 = insertelement <8 x i32> undef, i32 %conv40.ls, i32 0
  %broadcast.splat11 = shufflevector <8 x i32> %broadcast.splatinsert10, <8 x i32> undef, <8 x i32> zeroinitializer
  %25 = add i64 %n.vec, -32
  %26 = lshr exact i64 %25, 5
  %27 = add nuw nsw i64 %26, 1
  %xtraiter = and i64 %27, 7
  %28 = icmp ult i64 %25, 224
  br i1 %28, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nsw i64 %27, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.7, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.7, %vector.body ]
  %29 = add i64 %__begin25.0181.ls.dac.lcssa, %index
  %30 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %29
  %31 = bitcast i32* %30 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %31, align 4, !tbaa !59
  %32 = getelementptr i32, i32* %30, i64 8
  %33 = bitcast i32* %32 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %33, align 4, !tbaa !59
  %34 = getelementptr i32, i32* %30, i64 16
  %35 = bitcast i32* %34 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %35, align 4, !tbaa !59
  %36 = getelementptr i32, i32* %30, i64 24
  %37 = bitcast i32* %36 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %37, align 4, !tbaa !59
  %index.next = or i64 %index, 32
  %38 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next
  %39 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %38
  %40 = bitcast i32* %39 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %40, align 4, !tbaa !59
  %41 = getelementptr i32, i32* %39, i64 8
  %42 = bitcast i32* %41 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %42, align 4, !tbaa !59
  %43 = getelementptr i32, i32* %39, i64 16
  %44 = bitcast i32* %43 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %44, align 4, !tbaa !59
  %45 = getelementptr i32, i32* %39, i64 24
  %46 = bitcast i32* %45 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %46, align 4, !tbaa !59
  %index.next.1 = or i64 %index, 64
  %47 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next.1
  %48 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %47
  %49 = bitcast i32* %48 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %49, align 4, !tbaa !59
  %50 = getelementptr i32, i32* %48, i64 8
  %51 = bitcast i32* %50 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %51, align 4, !tbaa !59
  %52 = getelementptr i32, i32* %48, i64 16
  %53 = bitcast i32* %52 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %53, align 4, !tbaa !59
  %54 = getelementptr i32, i32* %48, i64 24
  %55 = bitcast i32* %54 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %55, align 4, !tbaa !59
  %index.next.2 = or i64 %index, 96
  %56 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next.2
  %57 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %56
  %58 = bitcast i32* %57 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %58, align 4, !tbaa !59
  %59 = getelementptr i32, i32* %57, i64 8
  %60 = bitcast i32* %59 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %60, align 4, !tbaa !59
  %61 = getelementptr i32, i32* %57, i64 16
  %62 = bitcast i32* %61 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %62, align 4, !tbaa !59
  %63 = getelementptr i32, i32* %57, i64 24
  %64 = bitcast i32* %63 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %64, align 4, !tbaa !59
  %index.next.3 = or i64 %index, 128
  %65 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next.3
  %66 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %65
  %67 = bitcast i32* %66 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %67, align 4, !tbaa !59
  %68 = getelementptr i32, i32* %66, i64 8
  %69 = bitcast i32* %68 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %69, align 4, !tbaa !59
  %70 = getelementptr i32, i32* %66, i64 16
  %71 = bitcast i32* %70 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %71, align 4, !tbaa !59
  %72 = getelementptr i32, i32* %66, i64 24
  %73 = bitcast i32* %72 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %73, align 4, !tbaa !59
  %index.next.4 = or i64 %index, 160
  %74 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next.4
  %75 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %74
  %76 = bitcast i32* %75 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %76, align 4, !tbaa !59
  %77 = getelementptr i32, i32* %75, i64 8
  %78 = bitcast i32* %77 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %78, align 4, !tbaa !59
  %79 = getelementptr i32, i32* %75, i64 16
  %80 = bitcast i32* %79 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %80, align 4, !tbaa !59
  %81 = getelementptr i32, i32* %75, i64 24
  %82 = bitcast i32* %81 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %82, align 4, !tbaa !59
  %index.next.5 = or i64 %index, 192
  %83 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next.5
  %84 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %83
  %85 = bitcast i32* %84 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %85, align 4, !tbaa !59
  %86 = getelementptr i32, i32* %84, i64 8
  %87 = bitcast i32* %86 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %87, align 4, !tbaa !59
  %88 = getelementptr i32, i32* %84, i64 16
  %89 = bitcast i32* %88 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %89, align 4, !tbaa !59
  %90 = getelementptr i32, i32* %84, i64 24
  %91 = bitcast i32* %90 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %91, align 4, !tbaa !59
  %index.next.6 = or i64 %index, 224
  %92 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next.6
  %93 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %92
  %94 = bitcast i32* %93 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %94, align 4, !tbaa !59
  %95 = getelementptr i32, i32* %93, i64 8
  %96 = bitcast i32* %95 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %96, align 4, !tbaa !59
  %97 = getelementptr i32, i32* %93, i64 16
  %98 = bitcast i32* %97 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %98, align 4, !tbaa !59
  %99 = getelementptr i32, i32* %93, i64 24
  %100 = bitcast i32* %99 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %100, align 4, !tbaa !59
  %index.next.7 = add i64 %index, 256
  %niter.nsub.7 = add i64 %niter, -8
  %niter.ncmp.7 = icmp eq i64 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !498

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.7, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil.preheader

vector.body.epil.preheader:                       ; preds = %middle.block.unr-lcssa
  br label %vector.body.epil

vector.body.epil:                                 ; preds = %vector.body.epil, %vector.body.epil.preheader
  %index.epil = phi i64 [ %index.unr, %vector.body.epil.preheader ], [ %index.next.epil, %vector.body.epil ]
  %epil.iter = phi i64 [ %xtraiter, %vector.body.epil.preheader ], [ %epil.iter.sub, %vector.body.epil ]
  %101 = add i64 %__begin25.0181.ls.dac.lcssa, %index.epil
  %102 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %101
  %103 = bitcast i32* %102 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %103, align 4, !tbaa !59
  %104 = getelementptr i32, i32* %102, i64 8
  %105 = bitcast i32* %104 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %105, align 4, !tbaa !59
  %106 = getelementptr i32, i32* %102, i64 16
  %107 = bitcast i32* %106 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %107, align 4, !tbaa !59
  %108 = getelementptr i32, i32* %102, i64 24
  %109 = bitcast i32* %108 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %109, align 4, !tbaa !59
  %index.next.epil = add i64 %index.epil, 32
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block, label %vector.body.epil, !llvm.loop !499

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %24, %n.vec
  br i1 %cmp.n, label %pfor.cond.cleanup33.loopexit.ls, label %pfor.detach34.ls.preheader

pfor.cond.cleanup33.loopexit.ls:                  ; preds = %pfor.detach34.ls, %middle.block
  %110 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %111 = load atomic i32, i32* %110 acquire, align 8
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup33.loopexit.ls
  %114 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %115 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %116 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %115, i16* nonnull %116) #2
  %117 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %118 = call i8* @llvm.frameaddress(i32 0) #2
  %119 = getelementptr inbounds [5 x i8*], [5 x i8*]* %117, i64 0, i64 0
  store volatile i8* %118, i8** %119, align 8
  %120 = call i8* @llvm.stacksave() #2
  %121 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %120, i8** %121, align 8
  %122 = bitcast [5 x i8*]* %117 to i8*
  %123 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %122) #24
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup33.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %125 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %126 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %125, i64 0, i32 12, i32 0
  %127 = load i64, i64* %126, align 8
  %128 = add i64 %127, 1
  store i64 %128, i64* %126, align 8
  %129 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %130 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %129, i64 0, i32 9
  %133 = bitcast %struct.__cilkrts_stack_frame** %132 to i64*
  store atomic i64 %131, i64* %133 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %134 = load atomic i32, i32* %110 acquire, align 8
  %135 = icmp eq i32 %134, 16777216
  br i1 %135, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach34.ls:                                 ; preds = %pfor.detach34.ls.preheader, %pfor.detach34.ls
  %__begin25.0181.ls = phi i64 [ %inc44.ls, %pfor.detach34.ls ], [ %__begin25.0181.ls.ph, %pfor.detach34.ls.preheader ]
  %arrayidx41.ls = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %__begin25.0181.ls
  store i32 %conv40.ls, i32* %arrayidx41.ls, align 4, !tbaa !59
  %136 = icmp ult i64 %__begin25.0181.ls, %end.ls
  %inc44.ls = add nuw nsw i64 %__begin25.0181.ls, 1
  br i1 %136, label %pfor.detach34.ls, label %pfor.cond.cleanup33.loopexit.ls, !llvm.loop !500
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach59.ls(i64 %__begin49.0179.start.ls, i64 %end.ls, i64 %.ls, %"struct.std::pair.23"* nocapture readonly align 1 %A.ls, i32* nocapture align 1 %bucketOffsets.ls) unnamed_addr #15 {
pfor.detach59.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach59.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach59.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach59.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach59.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount2 = sub i64 %end.ls, %__begin49.0179.start.ls
  %9 = icmp ugt i64 %itercount2, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach59.ls.preheader

pfor.detach59.ls.preheader:                       ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin49.0179.ls.ph = phi i64 [ %__begin49.0179.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach59.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount4 = phi i64 [ %itercount2, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin49.0179.ls.dac3 = phi i64 [ %__begin49.0179.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount4, 1
  %miditer = add nuw nsw i64 %__begin49.0179.ls.dac3, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split5, label %.split.split

.split5:                                          ; preds = %16
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach59.ls_.split.cilk(i64 %__begin49.0179.ls.dac3, i64 %miditer, i64 %.ls, %"struct.std::pair.23"* %A.ls, i32* %bucketOffsets.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split5, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach59.ls.preheader

pfor.cond.cleanup58.loopexit.ls:                  ; preds = %pfor.inc81.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup58.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup58.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach59.ls:                                 ; preds = %pfor.detach59.ls.preheader, %pfor.inc81.ls
  %__begin49.0179.ls = phi i64 [ %add70.ls, %pfor.inc81.ls ], [ %__begin49.0179.ls.ph, %pfor.detach59.ls.preheader ]
  %agg.tmp65.sroa.0.0..sroa_idx.ls = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A.ls, i64 %__begin49.0179.ls, i32 0
  %agg.tmp65.sroa.0.0.copyload.ls = load i32, i32* %agg.tmp65.sroa.0.0..sroa_idx.ls, align 8
  %add70.ls = add nuw nsw i64 %__begin49.0179.ls, 1
  %agg.tmp69.sroa.0.0..sroa_idx.ls = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A.ls, i64 %add70.ls, i32 0
  %agg.tmp69.sroa.0.0.copyload.ls = load i32, i32* %agg.tmp69.sroa.0.0..sroa_idx.ls, align 8
  %cmp74.ls = icmp eq i32 %agg.tmp65.sroa.0.0.copyload.ls, %agg.tmp69.sroa.0.0.copyload.ls
  br i1 %cmp74.ls, label %pfor.inc81.ls, label %if.then75.ls

if.then75.ls:                                     ; preds = %pfor.detach59.ls
  %conv73.ls = sext i32 %agg.tmp69.sroa.0.0.copyload.ls to i64
  %conv77.ls = trunc i64 %add70.ls to i32
  %arrayidx78.ls = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %conv73.ls
  store i32 %conv77.ls, i32* %arrayidx78.ls, align 4, !tbaa !59
  br label %pfor.inc81.ls

pfor.inc81.ls:                                    ; preds = %pfor.detach59.ls, %if.then75.ls
  %48 = icmp ult i64 %__begin49.0179.ls, %end.ls
  br i1 %48, label %pfor.detach59.ls, label %pfor.cond.cleanup58.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach.ls(i64 %__begin.0177.start.ls, i64 %end.ls, i64 %.ls, [256 x i32]* nocapture readonly align 1 %.ls1, i32* nocapture align 1 %bucketOffsets.ls) unnamed_addr #15 {
pfor.detach.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount3 = sub i64 %end.ls, %__begin.0177.start.ls
  %9 = icmp ugt i64 %itercount3, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.preheader.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount5 = phi i64 [ %itercount3, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin.0177.ls.dac4 = phi i64 [ %__begin.0177.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount5, 1
  %miditer = add nuw nsw i64 %__begin.0177.ls.dac4, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split6, label %.split.split

.split6:                                          ; preds = %16
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach.ls_.split.cilk(i64 %__begin.0177.ls.dac4, i64 %miditer, i64 %.ls, [256 x i32]* %.ls1, i32* %bucketOffsets.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split6, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.preheader.ls.split._crit_edge

pfor.detach.preheader.ls.split._crit_edge:        ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin.0177.ls.dac.lcssa = phi i64 [ %__begin.0177.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  %22 = icmp ugt i64 %__begin.0177.ls.dac.lcssa, %end.ls
  %umax = select i1 %22, i64 %__begin.0177.ls.dac.lcssa, i64 %end.ls
  %23 = add i64 %umax, 1
  %24 = sub i64 %23, %__begin.0177.ls.dac.lcssa
  %min.iters.check = icmp ult i64 %24, 32
  br i1 %min.iters.check, label %pfor.detach.ls.preheader, label %vector.memcheck

pfor.detach.ls.preheader:                         ; preds = %middle.block, %vector.memcheck, %pfor.detach.preheader.ls.split._crit_edge
  %__begin.0177.ls.ph = phi i64 [ %__begin.0177.ls.dac.lcssa, %vector.memcheck ], [ %__begin.0177.ls.dac.lcssa, %pfor.detach.preheader.ls.split._crit_edge ], [ %ind.end, %middle.block ]
  br label %pfor.detach.ls

vector.memcheck:                                  ; preds = %pfor.detach.preheader.ls.split._crit_edge
  %scevgep = getelementptr i32, i32* %bucketOffsets.ls, i64 %__begin.0177.ls.dac.lcssa
  %25 = icmp ugt i64 %__begin.0177.ls.dac.lcssa, %end.ls
  %umax3 = select i1 %25, i64 %__begin.0177.ls.dac.lcssa, i64 %end.ls
  %26 = add i64 %umax3, 1
  %scevgep4 = getelementptr i32, i32* %bucketOffsets.ls, i64 %26
  %scevgep6 = getelementptr [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %__begin.0177.ls.dac.lcssa
  %scevgep8 = getelementptr [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %26
  %bound0 = icmp ult i32* %scevgep, %scevgep8
  %bound1 = icmp ult i32* %scevgep6, %scevgep4
  %memcheck.conflict = and i1 %bound0, %bound1
  br i1 %memcheck.conflict, label %pfor.detach.ls.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %24, -32
  %ind.end = add i64 %__begin.0177.ls.dac.lcssa, %n.vec
  %27 = add i64 %n.vec, -32
  %28 = lshr exact i64 %27, 5
  %29 = add nuw nsw i64 %28, 1
  %xtraiter = and i64 %29, 3
  %30 = icmp ult i64 %27, 96
  br i1 %30, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nsw i64 %29, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.3, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.3, %vector.body ]
  %31 = add i64 %__begin.0177.ls.dac.lcssa, %index
  %32 = getelementptr inbounds [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %31
  %33 = bitcast i32* %32 to <8 x i32>*
  %wide.load = load <8 x i32>, <8 x i32>* %33, align 4, !tbaa !59, !alias.scope !501
  %34 = getelementptr i32, i32* %32, i64 8
  %35 = bitcast i32* %34 to <8 x i32>*
  %wide.load13 = load <8 x i32>, <8 x i32>* %35, align 4, !tbaa !59, !alias.scope !501
  %36 = getelementptr i32, i32* %32, i64 16
  %37 = bitcast i32* %36 to <8 x i32>*
  %wide.load14 = load <8 x i32>, <8 x i32>* %37, align 4, !tbaa !59, !alias.scope !501
  %38 = getelementptr i32, i32* %32, i64 24
  %39 = bitcast i32* %38 to <8 x i32>*
  %wide.load15 = load <8 x i32>, <8 x i32>* %39, align 4, !tbaa !59, !alias.scope !501
  %40 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %31
  %41 = bitcast i32* %40 to <8 x i32>*
  store <8 x i32> %wide.load, <8 x i32>* %41, align 4, !tbaa !59, !alias.scope !504, !noalias !501
  %42 = getelementptr i32, i32* %40, i64 8
  %43 = bitcast i32* %42 to <8 x i32>*
  store <8 x i32> %wide.load13, <8 x i32>* %43, align 4, !tbaa !59, !alias.scope !504, !noalias !501
  %44 = getelementptr i32, i32* %40, i64 16
  %45 = bitcast i32* %44 to <8 x i32>*
  store <8 x i32> %wide.load14, <8 x i32>* %45, align 4, !tbaa !59, !alias.scope !504, !noalias !501
  %46 = getelementptr i32, i32* %40, i64 24
  %47 = bitcast i32* %46 to <8 x i32>*
  store <8 x i32> %wide.load15, <8 x i32>* %47, align 4, !tbaa !59, !alias.scope !504, !noalias !501
  %index.next = or i64 %index, 32
  %48 = add i64 %__begin.0177.ls.dac.lcssa, %index.next
  %49 = getelementptr inbounds [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %48
  %50 = bitcast i32* %49 to <8 x i32>*
  %wide.load.1 = load <8 x i32>, <8 x i32>* %50, align 4, !tbaa !59, !alias.scope !501
  %51 = getelementptr i32, i32* %49, i64 8
  %52 = bitcast i32* %51 to <8 x i32>*
  %wide.load13.1 = load <8 x i32>, <8 x i32>* %52, align 4, !tbaa !59, !alias.scope !501
  %53 = getelementptr i32, i32* %49, i64 16
  %54 = bitcast i32* %53 to <8 x i32>*
  %wide.load14.1 = load <8 x i32>, <8 x i32>* %54, align 4, !tbaa !59, !alias.scope !501
  %55 = getelementptr i32, i32* %49, i64 24
  %56 = bitcast i32* %55 to <8 x i32>*
  %wide.load15.1 = load <8 x i32>, <8 x i32>* %56, align 4, !tbaa !59, !alias.scope !501
  %57 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %48
  %58 = bitcast i32* %57 to <8 x i32>*
  store <8 x i32> %wide.load.1, <8 x i32>* %58, align 4, !tbaa !59, !alias.scope !504, !noalias !501
  %59 = getelementptr i32, i32* %57, i64 8
  %60 = bitcast i32* %59 to <8 x i32>*
  store <8 x i32> %wide.load13.1, <8 x i32>* %60, align 4, !tbaa !59, !alias.scope !504, !noalias !501
  %61 = getelementptr i32, i32* %57, i64 16
  %62 = bitcast i32* %61 to <8 x i32>*
  store <8 x i32> %wide.load14.1, <8 x i32>* %62, align 4, !tbaa !59, !alias.scope !504, !noalias !501
  %63 = getelementptr i32, i32* %57, i64 24
  %64 = bitcast i32* %63 to <8 x i32>*
  store <8 x i32> %wide.load15.1, <8 x i32>* %64, align 4, !tbaa !59, !alias.scope !504, !noalias !501
  %index.next.1 = or i64 %index, 64
  %65 = add i64 %__begin.0177.ls.dac.lcssa, %index.next.1
  %66 = getelementptr inbounds [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %65
  %67 = bitcast i32* %66 to <8 x i32>*
  %wide.load.2 = load <8 x i32>, <8 x i32>* %67, align 4, !tbaa !59, !alias.scope !501
  %68 = getelementptr i32, i32* %66, i64 8
  %69 = bitcast i32* %68 to <8 x i32>*
  %wide.load13.2 = load <8 x i32>, <8 x i32>* %69, align 4, !tbaa !59, !alias.scope !501
  %70 = getelementptr i32, i32* %66, i64 16
  %71 = bitcast i32* %70 to <8 x i32>*
  %wide.load14.2 = load <8 x i32>, <8 x i32>* %71, align 4, !tbaa !59, !alias.scope !501
  %72 = getelementptr i32, i32* %66, i64 24
  %73 = bitcast i32* %72 to <8 x i32>*
  %wide.load15.2 = load <8 x i32>, <8 x i32>* %73, align 4, !tbaa !59, !alias.scope !501
  %74 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %65
  %75 = bitcast i32* %74 to <8 x i32>*
  store <8 x i32> %wide.load.2, <8 x i32>* %75, align 4, !tbaa !59, !alias.scope !504, !noalias !501
  %76 = getelementptr i32, i32* %74, i64 8
  %77 = bitcast i32* %76 to <8 x i32>*
  store <8 x i32> %wide.load13.2, <8 x i32>* %77, align 4, !tbaa !59, !alias.scope !504, !noalias !501
  %78 = getelementptr i32, i32* %74, i64 16
  %79 = bitcast i32* %78 to <8 x i32>*
  store <8 x i32> %wide.load14.2, <8 x i32>* %79, align 4, !tbaa !59, !alias.scope !504, !noalias !501
  %80 = getelementptr i32, i32* %74, i64 24
  %81 = bitcast i32* %80 to <8 x i32>*
  store <8 x i32> %wide.load15.2, <8 x i32>* %81, align 4, !tbaa !59, !alias.scope !504, !noalias !501
  %index.next.2 = or i64 %index, 96
  %82 = add i64 %__begin.0177.ls.dac.lcssa, %index.next.2
  %83 = getelementptr inbounds [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %82
  %84 = bitcast i32* %83 to <8 x i32>*
  %wide.load.3 = load <8 x i32>, <8 x i32>* %84, align 4, !tbaa !59, !alias.scope !501
  %85 = getelementptr i32, i32* %83, i64 8
  %86 = bitcast i32* %85 to <8 x i32>*
  %wide.load13.3 = load <8 x i32>, <8 x i32>* %86, align 4, !tbaa !59, !alias.scope !501
  %87 = getelementptr i32, i32* %83, i64 16
  %88 = bitcast i32* %87 to <8 x i32>*
  %wide.load14.3 = load <8 x i32>, <8 x i32>* %88, align 4, !tbaa !59, !alias.scope !501
  %89 = getelementptr i32, i32* %83, i64 24
  %90 = bitcast i32* %89 to <8 x i32>*
  %wide.load15.3 = load <8 x i32>, <8 x i32>* %90, align 4, !tbaa !59, !alias.scope !501
  %91 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %82
  %92 = bitcast i32* %91 to <8 x i32>*
  store <8 x i32> %wide.load.3, <8 x i32>* %92, align 4, !tbaa !59, !alias.scope !504, !noalias !501
  %93 = getelementptr i32, i32* %91, i64 8
  %94 = bitcast i32* %93 to <8 x i32>*
  store <8 x i32> %wide.load13.3, <8 x i32>* %94, align 4, !tbaa !59, !alias.scope !504, !noalias !501
  %95 = getelementptr i32, i32* %91, i64 16
  %96 = bitcast i32* %95 to <8 x i32>*
  store <8 x i32> %wide.load14.3, <8 x i32>* %96, align 4, !tbaa !59, !alias.scope !504, !noalias !501
  %97 = getelementptr i32, i32* %91, i64 24
  %98 = bitcast i32* %97 to <8 x i32>*
  store <8 x i32> %wide.load15.3, <8 x i32>* %98, align 4, !tbaa !59, !alias.scope !504, !noalias !501
  %index.next.3 = add i64 %index, 128
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !506

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.3, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil.preheader

vector.body.epil.preheader:                       ; preds = %middle.block.unr-lcssa
  br label %vector.body.epil

vector.body.epil:                                 ; preds = %vector.body.epil, %vector.body.epil.preheader
  %index.epil = phi i64 [ %index.unr, %vector.body.epil.preheader ], [ %index.next.epil, %vector.body.epil ]
  %epil.iter = phi i64 [ %xtraiter, %vector.body.epil.preheader ], [ %epil.iter.sub, %vector.body.epil ]
  %99 = add i64 %__begin.0177.ls.dac.lcssa, %index.epil
  %100 = getelementptr inbounds [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %99
  %101 = bitcast i32* %100 to <8 x i32>*
  %wide.load.epil = load <8 x i32>, <8 x i32>* %101, align 4, !tbaa !59, !alias.scope !501
  %102 = getelementptr i32, i32* %100, i64 8
  %103 = bitcast i32* %102 to <8 x i32>*
  %wide.load13.epil = load <8 x i32>, <8 x i32>* %103, align 4, !tbaa !59, !alias.scope !501
  %104 = getelementptr i32, i32* %100, i64 16
  %105 = bitcast i32* %104 to <8 x i32>*
  %wide.load14.epil = load <8 x i32>, <8 x i32>* %105, align 4, !tbaa !59, !alias.scope !501
  %106 = getelementptr i32, i32* %100, i64 24
  %107 = bitcast i32* %106 to <8 x i32>*
  %wide.load15.epil = load <8 x i32>, <8 x i32>* %107, align 4, !tbaa !59, !alias.scope !501
  %108 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %99
  %109 = bitcast i32* %108 to <8 x i32>*
  store <8 x i32> %wide.load.epil, <8 x i32>* %109, align 4, !tbaa !59, !alias.scope !504, !noalias !501
  %110 = getelementptr i32, i32* %108, i64 8
  %111 = bitcast i32* %110 to <8 x i32>*
  store <8 x i32> %wide.load13.epil, <8 x i32>* %111, align 4, !tbaa !59, !alias.scope !504, !noalias !501
  %112 = getelementptr i32, i32* %108, i64 16
  %113 = bitcast i32* %112 to <8 x i32>*
  store <8 x i32> %wide.load14.epil, <8 x i32>* %113, align 4, !tbaa !59, !alias.scope !504, !noalias !501
  %114 = getelementptr i32, i32* %108, i64 24
  %115 = bitcast i32* %114 to <8 x i32>*
  store <8 x i32> %wide.load15.epil, <8 x i32>* %115, align 4, !tbaa !59, !alias.scope !504, !noalias !501
  %index.next.epil = add i64 %index.epil, 32
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block, label %vector.body.epil, !llvm.loop !507

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %24, %n.vec
  br i1 %cmp.n, label %pfor.cond.cleanup.loopexit.ls, label %pfor.detach.ls.preheader

pfor.cond.cleanup.loopexit.ls:                    ; preds = %pfor.detach.ls, %middle.block
  %116 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %117 = load atomic i32, i32* %116 acquire, align 8
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %120 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %121 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %122 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %121, i16* nonnull %122) #2
  %123 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %124 = call i8* @llvm.frameaddress(i32 0) #2
  %125 = getelementptr inbounds [5 x i8*], [5 x i8*]* %123, i64 0, i64 0
  store volatile i8* %124, i8** %125, align 8
  %126 = call i8* @llvm.stacksave() #2
  %127 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %126, i8** %127, align 8
  %128 = bitcast [5 x i8*]* %123 to i8*
  %129 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %128) #24
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %131 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %132 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %131, i64 0, i32 12, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 1
  store i64 %134, i64* %132, align 8
  %135 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %136 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %135, i64 0, i32 9
  %139 = bitcast %struct.__cilkrts_stack_frame** %138 to i64*
  store atomic i64 %137, i64* %139 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %140 = load atomic i32, i32* %116 acquire, align 8
  %141 = icmp eq i32 %140, 16777216
  br i1 %141, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %pfor.detach.ls
  %__begin.0177.ls = phi i64 [ %inc.ls, %pfor.detach.ls ], [ %__begin.0177.ls.ph, %pfor.detach.ls.preheader ]
  %arrayidx13.ls = getelementptr inbounds [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %__begin.0177.ls
  %142 = load i32, i32* %arrayidx13.ls, align 4, !tbaa !59
  %arrayidx14.ls = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %__begin.0177.ls
  store i32 %142, i32* %arrayidx14.ls, align 4, !tbaa !59
  %143 = icmp ult i64 %__begin.0177.ls, %end.ls
  %inc.ls = add nuw nsw i64 %__begin.0177.ls, 1
  br i1 %143, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit.ls, !llvm.loop !508
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.ls(i64 %__begin.0156.start.ls, i64 %.ls, i64 %div4.ls, i64 %n.ls, %"struct.std::pair.23"* nocapture readonly align 1 %A.ls, i8* nocapture align 1 %Tmp.ls, i64 %m.ls, [256 x i32]* nocapture align 1 %BK.ls, i64 %mul5.ls, i32 %sh_prom.i.i.ls, i64 %agg.tmp28.sroa.2.0.copyload.ls, %"struct.std::pair.23"* nocapture align 1 %B.ls) unnamed_addr #15 {
pfor.detach.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount1 = sub i64 %.ls, %__begin.0156.start.ls
  %9 = icmp ugt i64 %itercount1, 1
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin.0156.ls.ph = phi i64 [ %__begin.0156.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount3 = phi i64 [ %itercount1, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin.0156.ls.dac2 = phi i64 [ %__begin.0156.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount3, 1
  %miditer = add nuw nsw i64 %__begin.0156.ls.dac2, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split4, label %.split.split

.split4:                                          ; preds = %16
  call fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.ls_.split.cilk(i64 %__begin.0156.ls.dac2, i64 %miditer, i64 %div4.ls, i64 %n.ls, %"struct.std::pair.23"* %A.ls, i8* %Tmp.ls, i64 %m.ls, [256 x i32]* %BK.ls, i64 %mul5.ls, i32 %sh_prom.i.i.ls, i64 %agg.tmp28.sroa.2.0.copyload.ls, %"struct.std::pair.23"* %B.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split4, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, 1
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.loopexit201.ls:                 ; preds = %pfor.inc.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit201.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit201.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %pfor.inc.ls
  %__begin.0156.ls = phi i64 [ %inc.ls, %pfor.inc.ls ], [ %__begin.0156.ls.ph, %pfor.detach.ls.preheader ]
  %48 = mul i64 %__begin.0156.ls, %div4.ls
  %49 = and i64 %48, 4294967295
  %50 = sub i64 %n.ls, %49
  %51 = icmp sgt i64 %50, 0
  %smax194.ls = select i1 %51, i64 %50, i64 0
  %52 = icmp slt i64 %smax194.ls, %div4.ls
  %53 = select i1 %52, i64 %smax194.ls, i64 %div4.ls
  %add.ptr21.ls = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A.ls, i64 %49
  %add.ptr23.ls = getelementptr inbounds i8, i8* %Tmp.ls, i64 %49
  %mul24.ls = mul nsw i64 %__begin.0156.ls, %m.ls
  %add.ptr25.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 0, i64 %mul24.ls
  %add.ptr27.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 %mul5.ls, i64 %mul24.ls
  %cmp272.i.ls = icmp sgt i64 %53, 0
  br i1 %cmp272.i.ls, label %for.body4.i.preheader.ls, label %pfor.inc.ls

for.body4.i.preheader.ls:                         ; preds = %pfor.detach.ls
  %xtraiter196.ls = and i64 %53, 1
  %54 = icmp eq i64 %53, 1
  br i1 %54, label %for.body4.i.epil.ls, label %for.body4.i.preheader.new.ls

for.body4.i.preheader.new.ls:                     ; preds = %for.body4.i.preheader.ls
  %unroll_iter198.ls = sub i64 %53, %xtraiter196.ls
  br label %for.body4.i.ls

for.body4.i.ls:                                   ; preds = %for.body4.i.ls, %for.body4.i.preheader.new.ls
  %j.073.i.ls = phi i64 [ 0, %for.body4.i.preheader.new.ls ], [ %inc11.i.1.ls, %for.body4.i.ls ]
  %niter199.ls = phi i64 [ %unroll_iter198.ls, %for.body4.i.preheader.new.ls ], [ %niter199.nsub.1.ls, %for.body4.i.ls ]
  %agg.tmp.sroa.0.0..sroa_idx.i.ls = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %add.ptr21.ls, i64 %j.073.i.ls, i32 0
  %agg.tmp.sroa.0.0.copyload.i.ls = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.ls, align 8
  %shr.i.i.ls = ashr i32 %agg.tmp.sroa.0.0.copyload.i.ls, %sh_prom.i.i.ls
  %conv.i.i120.ls = sext i32 %shr.i.i.ls to i64
  %and.i.i.ls = and i64 %conv.i.i120.ls, %agg.tmp28.sroa.2.0.copyload.ls
  %conv.i.ls = trunc i64 %and.i.i.ls to i8
  %arrayidx6.i.ls = getelementptr inbounds i8, i8* %add.ptr23.ls, i64 %j.073.i.ls
  store i8 %conv.i.ls, i8* %arrayidx6.i.ls, align 1, !tbaa !22
  %conv7.i.ls = and i64 %and.i.i.ls, 255
  %arrayidx8.i.ls = getelementptr inbounds i32, i32* %add.ptr25.ls, i64 %conv7.i.ls
  %55 = load i32, i32* %arrayidx8.i.ls, align 4, !tbaa !59
  %inc9.i.ls = add i32 %55, 1
  store i32 %inc9.i.ls, i32* %arrayidx8.i.ls, align 4, !tbaa !59
  %inc11.i.ls = or i64 %j.073.i.ls, 1
  %agg.tmp.sroa.0.0..sroa_idx.i.1.ls = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %add.ptr21.ls, i64 %inc11.i.ls, i32 0
  %agg.tmp.sroa.0.0.copyload.i.1.ls = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.1.ls, align 8
  %shr.i.i.1.ls = ashr i32 %agg.tmp.sroa.0.0.copyload.i.1.ls, %sh_prom.i.i.ls
  %conv.i.i120.1.ls = sext i32 %shr.i.i.1.ls to i64
  %and.i.i.1.ls = and i64 %conv.i.i120.1.ls, %agg.tmp28.sroa.2.0.copyload.ls
  %conv.i.1.ls = trunc i64 %and.i.i.1.ls to i8
  %arrayidx6.i.1.ls = getelementptr inbounds i8, i8* %add.ptr23.ls, i64 %inc11.i.ls
  store i8 %conv.i.1.ls, i8* %arrayidx6.i.1.ls, align 1, !tbaa !22
  %conv7.i.1.ls = and i64 %and.i.i.1.ls, 255
  %arrayidx8.i.1.ls = getelementptr inbounds i32, i32* %add.ptr25.ls, i64 %conv7.i.1.ls
  %56 = load i32, i32* %arrayidx8.i.1.ls, align 4, !tbaa !59
  %inc9.i.1.ls = add i32 %56, 1
  store i32 %inc9.i.1.ls, i32* %arrayidx8.i.1.ls, align 4, !tbaa !59
  %inc11.i.1.ls = add nuw nsw i64 %j.073.i.ls, 2
  %niter199.nsub.1.ls = add i64 %niter199.ls, -2
  %niter199.ncmp.1.ls = icmp eq i64 %niter199.nsub.1.ls, 0
  br i1 %niter199.ncmp.1.ls, label %for.body27.i.preheader.unr-lcssa.ls, label %for.body4.i.ls

for.body27.i.preheader.unr-lcssa.ls:              ; preds = %for.body4.i.ls
  %lcmp.mod197.ls = icmp eq i64 %xtraiter196.ls, 0
  br i1 %lcmp.mod197.ls, label %for.body27.i.ls.preheader, label %for.body4.i.epil.ls

for.body4.i.epil.ls:                              ; preds = %for.body4.i.preheader.ls, %for.body27.i.preheader.unr-lcssa.ls
  %j.073.i.unr.ls2 = phi i64 [ %inc11.i.1.ls, %for.body27.i.preheader.unr-lcssa.ls ], [ 0, %for.body4.i.preheader.ls ]
  %agg.tmp.sroa.0.0..sroa_idx.i.epil.ls = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %add.ptr21.ls, i64 %j.073.i.unr.ls2, i32 0
  %agg.tmp.sroa.0.0.copyload.i.epil.ls = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.epil.ls, align 8
  %shr.i.i.epil.ls = ashr i32 %agg.tmp.sroa.0.0.copyload.i.epil.ls, %sh_prom.i.i.ls
  %conv.i.i120.epil.ls = sext i32 %shr.i.i.epil.ls to i64
  %and.i.i.epil.ls = and i64 %conv.i.i120.epil.ls, %agg.tmp28.sroa.2.0.copyload.ls
  %conv.i.epil.ls = trunc i64 %and.i.i.epil.ls to i8
  %arrayidx6.i.epil.ls = getelementptr inbounds i8, i8* %add.ptr23.ls, i64 %j.073.i.unr.ls2
  store i8 %conv.i.epil.ls, i8* %arrayidx6.i.epil.ls, align 1, !tbaa !22
  %conv7.i.epil.ls = and i64 %and.i.i.epil.ls, 255
  %arrayidx8.i.epil.ls = getelementptr inbounds i32, i32* %add.ptr25.ls, i64 %conv7.i.epil.ls
  %57 = load i32, i32* %arrayidx8.i.epil.ls, align 4, !tbaa !59
  %inc9.i.epil.ls = add i32 %57, 1
  store i32 %inc9.i.epil.ls, i32* %arrayidx8.i.epil.ls, align 4, !tbaa !59
  br label %for.body27.i.ls.preheader

for.body27.i.ls.preheader:                        ; preds = %for.body4.i.epil.ls, %for.body27.i.preheader.unr-lcssa.ls
  br label %for.body27.i.ls

for.body27.i.ls:                                  ; preds = %for.body27.i.ls.preheader, %for.body27.i.ls
  %j23.068.in.i.ls = phi i64 [ %j23.068.i.ls, %for.body27.i.ls ], [ %53, %for.body27.i.ls.preheader ]
  %j23.068.i.ls = add nsw i64 %j23.068.in.i.ls, -1
  %arrayidx28.i.ls = getelementptr inbounds i8, i8* %add.ptr23.ls, i64 %j23.068.i.ls
  %58 = load i8, i8* %arrayidx28.i.ls, align 1, !tbaa !22
  %idxprom29.i.ls = zext i8 %58 to i64
  %arrayidx30.i.ls = getelementptr inbounds i32, i32* %add.ptr27.ls, i64 %idxprom29.i.ls
  %59 = load i32, i32* %arrayidx30.i.ls, align 4, !tbaa !59
  %dec.i.ls = add i32 %59, -1
  store i32 %dec.i.ls, i32* %arrayidx30.i.ls, align 4, !tbaa !59
  %idxprom32.i.ls = zext i32 %dec.i.ls to i64
  %first.i.i122.ls = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %add.ptr21.ls, i64 %j23.068.i.ls, i32 0
  %60 = load i32, i32* %first.i.i122.ls, align 8, !tbaa !192
  %first2.i.i123.ls = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.ls, i64 %idxprom32.i.ls, i32 0
  store i32 %60, i32* %first2.i.i123.ls, align 8, !tbaa !192
  %second.i.i124.ls = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %add.ptr21.ls, i64 %j23.068.i.ls, i32 1
  %61 = bitcast %struct.vertex.16** %second.i.i124.ls to i64*
  %62 = load i64, i64* %61, align 8, !tbaa !194
  %second3.i.i125.ls = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.ls, i64 %idxprom32.i.ls, i32 1
  %63 = bitcast %struct.vertex.16** %second3.i.i125.ls to i64*
  store i64 %62, i64* %63, align 8, !tbaa !194
  %cmp25.i.ls = icmp sgt i64 %j23.068.in.i.ls, 1
  br i1 %cmp25.i.ls, label %for.body27.i.ls, label %pfor.inc.ls

pfor.inc.ls:                                      ; preds = %for.body27.i.ls, %pfor.detach.ls
  %64 = icmp ult i64 %__begin.0156.ls, %.ls
  %inc.ls = add nuw nsw i64 %__begin.0156.ls, 1
  br i1 %64, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit201.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.us.ls(i64 %__begin.0156.us.start.ls, i64 %.ls, i64 %div4.ls, i64 %n.ls, %"struct.std::pair.23"* nocapture readonly align 1 %A.ls, i8* nocapture align 1 %Tmp.ls, i64 %m.ls, [256 x i32]* nocapture align 1 %BK.ls, i64 %mul5.ls, i64 %.ls1, i32 %sh_prom.i.i.ls, i64 %agg.tmp28.sroa.2.0.copyload.ls, i1 %.ls2, i64 %unroll_iter192.ls, i1 %lcmp.mod191.ls, i64 %xtraiter189.ls, %"struct.std::pair.23"* nocapture align 1 %B.ls) unnamed_addr #15 {
pfor.detach.us.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.us.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.us.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.us.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.us.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount3 = sub i64 %.ls, %__begin.0156.us.start.ls
  %9 = icmp ugt i64 %itercount3, 1
  br i1 %9, label %.lr.ph, label %pfor.detach.us.ls.preheader

pfor.detach.us.ls.preheader:                      ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin.0156.us.ls.ph = phi i64 [ %__begin.0156.us.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.us.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount5 = phi i64 [ %itercount3, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin.0156.us.ls.dac4 = phi i64 [ %__begin.0156.us.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount5, 1
  %miditer = add nuw nsw i64 %__begin.0156.us.ls.dac4, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split6, label %.split.split

.split6:                                          ; preds = %16
  call fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.us.ls_.split.cilk(i64 %__begin.0156.us.ls.dac4, i64 %miditer, i64 %div4.ls, i64 %n.ls, %"struct.std::pair.23"* %A.ls, i8* %Tmp.ls, i64 %m.ls, [256 x i32]* %BK.ls, i64 %mul5.ls, i64 %.ls1, i32 %sh_prom.i.i.ls, i64 %agg.tmp28.sroa.2.0.copyload.ls, i1 %.ls2, i64 %unroll_iter192.ls, i1 %lcmp.mod191.ls, i64 %xtraiter189.ls, %"struct.std::pair.23"* %B.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split6, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, 1
  br i1 %21, label %16, label %pfor.detach.us.ls.preheader

pfor.cond.cleanup.loopexit.ls:                    ; preds = %pfor.inc.us.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.us.ls:                                ; preds = %pfor.detach.us.ls.preheader, %pfor.inc.us.ls
  %__begin.0156.us.ls = phi i64 [ %inc.us.ls, %pfor.inc.us.ls ], [ %__begin.0156.us.ls.ph, %pfor.detach.us.ls.preheader ]
  %48 = mul i64 %__begin.0156.us.ls, %div4.ls
  %49 = and i64 %48, 4294967295
  %50 = sub i64 %n.ls, %49
  %51 = icmp sgt i64 %50, 0
  %smax.ls = select i1 %51, i64 %50, i64 0
  %52 = icmp slt i64 %smax.ls, %div4.ls
  %53 = select i1 %52, i64 %smax.ls, i64 %div4.ls
  %conv.us.ls = trunc i64 %48 to i32
  %add.ptr21.us.ls = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A.ls, i64 %49
  %add.ptr23.us.ls = getelementptr inbounds i8, i8* %Tmp.ls, i64 %49
  %mul24.us.ls = mul nsw i64 %__begin.0156.us.ls, %m.ls
  %add.ptr25.us.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 0, i64 %mul24.us.ls
  %add.ptr27.us.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 %mul5.ls, i64 %mul24.us.ls
  %counts78.i.us.ls = bitcast i32* %add.ptr25.us.ls to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %counts78.i.us.ls, i8 0, i64 %.ls1, i32 4, i1 false) #2
  %cmp272.i.us.ls = icmp sgt i64 %53, 0
  br i1 %cmp272.i.us.ls, label %for.body4.i.us.preheader.ls, label %for.body17.i.us.preheader.ls

for.body4.i.us.preheader.ls:                      ; preds = %pfor.detach.us.ls
  %xtraiter185.ls = and i64 %53, 1
  %54 = icmp eq i64 %53, 1
  br i1 %54, label %for.body4.i.us.epil.ls, label %for.body4.i.us.preheader.new.ls

for.body4.i.us.preheader.new.ls:                  ; preds = %for.body4.i.us.preheader.ls
  %unroll_iter187.ls = sub i64 %53, %xtraiter185.ls
  br label %for.body4.i.us.ls

for.body4.i.us.ls:                                ; preds = %for.body4.i.us.ls, %for.body4.i.us.preheader.new.ls
  %j.073.i.us.ls = phi i64 [ 0, %for.body4.i.us.preheader.new.ls ], [ %inc11.i.us.1.ls, %for.body4.i.us.ls ]
  %niter188.ls = phi i64 [ %unroll_iter187.ls, %for.body4.i.us.preheader.new.ls ], [ %niter188.nsub.1.ls, %for.body4.i.us.ls ]
  %agg.tmp.sroa.0.0..sroa_idx.i.us.ls = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %add.ptr21.us.ls, i64 %j.073.i.us.ls, i32 0
  %agg.tmp.sroa.0.0.copyload.i.us.ls = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.us.ls, align 8
  %shr.i.i.us.ls = ashr i32 %agg.tmp.sroa.0.0.copyload.i.us.ls, %sh_prom.i.i.ls
  %conv.i.i120.us.ls = sext i32 %shr.i.i.us.ls to i64
  %and.i.i.us.ls = and i64 %conv.i.i120.us.ls, %agg.tmp28.sroa.2.0.copyload.ls
  %conv.i.us.ls = trunc i64 %and.i.i.us.ls to i8
  %arrayidx6.i.us.ls = getelementptr inbounds i8, i8* %add.ptr23.us.ls, i64 %j.073.i.us.ls
  store i8 %conv.i.us.ls, i8* %arrayidx6.i.us.ls, align 1, !tbaa !22
  %conv7.i.us.ls = and i64 %and.i.i.us.ls, 255
  %arrayidx8.i.us.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %conv7.i.us.ls
  %55 = load i32, i32* %arrayidx8.i.us.ls, align 4, !tbaa !59
  %inc9.i.us.ls = add i32 %55, 1
  store i32 %inc9.i.us.ls, i32* %arrayidx8.i.us.ls, align 4, !tbaa !59
  %inc11.i.us.ls = or i64 %j.073.i.us.ls, 1
  %agg.tmp.sroa.0.0..sroa_idx.i.us.1.ls = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %add.ptr21.us.ls, i64 %inc11.i.us.ls, i32 0
  %agg.tmp.sroa.0.0.copyload.i.us.1.ls = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.us.1.ls, align 8
  %shr.i.i.us.1.ls = ashr i32 %agg.tmp.sroa.0.0.copyload.i.us.1.ls, %sh_prom.i.i.ls
  %conv.i.i120.us.1.ls = sext i32 %shr.i.i.us.1.ls to i64
  %and.i.i.us.1.ls = and i64 %conv.i.i120.us.1.ls, %agg.tmp28.sroa.2.0.copyload.ls
  %conv.i.us.1.ls = trunc i64 %and.i.i.us.1.ls to i8
  %arrayidx6.i.us.1.ls = getelementptr inbounds i8, i8* %add.ptr23.us.ls, i64 %inc11.i.us.ls
  store i8 %conv.i.us.1.ls, i8* %arrayidx6.i.us.1.ls, align 1, !tbaa !22
  %conv7.i.us.1.ls = and i64 %and.i.i.us.1.ls, 255
  %arrayidx8.i.us.1.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %conv7.i.us.1.ls
  %56 = load i32, i32* %arrayidx8.i.us.1.ls, align 4, !tbaa !59
  %inc9.i.us.1.ls = add i32 %56, 1
  store i32 %inc9.i.us.1.ls, i32* %arrayidx8.i.us.1.ls, align 4, !tbaa !59
  %inc11.i.us.1.ls = add nuw nsw i64 %j.073.i.us.ls, 2
  %niter188.nsub.1.ls = add i64 %niter188.ls, -2
  %niter188.ncmp.1.ls = icmp eq i64 %niter188.nsub.1.ls, 0
  br i1 %niter188.ncmp.1.ls, label %for.body17.i.us.preheader.loopexit.unr-lcssa.ls, label %for.body4.i.us.ls

for.body17.i.us.preheader.loopexit.unr-lcssa.ls:  ; preds = %for.body4.i.us.ls
  %lcmp.mod186.ls = icmp eq i64 %xtraiter185.ls, 0
  br i1 %lcmp.mod186.ls, label %for.body17.i.us.preheader.ls, label %for.body4.i.us.epil.ls

for.body4.i.us.epil.ls:                           ; preds = %for.body4.i.us.preheader.ls, %for.body17.i.us.preheader.loopexit.unr-lcssa.ls
  %j.073.i.us.unr.ls2 = phi i64 [ %inc11.i.us.1.ls, %for.body17.i.us.preheader.loopexit.unr-lcssa.ls ], [ 0, %for.body4.i.us.preheader.ls ]
  %agg.tmp.sroa.0.0..sroa_idx.i.us.epil.ls = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %add.ptr21.us.ls, i64 %j.073.i.us.unr.ls2, i32 0
  %agg.tmp.sroa.0.0.copyload.i.us.epil.ls = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.us.epil.ls, align 8
  %shr.i.i.us.epil.ls = ashr i32 %agg.tmp.sroa.0.0.copyload.i.us.epil.ls, %sh_prom.i.i.ls
  %conv.i.i120.us.epil.ls = sext i32 %shr.i.i.us.epil.ls to i64
  %and.i.i.us.epil.ls = and i64 %conv.i.i120.us.epil.ls, %agg.tmp28.sroa.2.0.copyload.ls
  %conv.i.us.epil.ls = trunc i64 %and.i.i.us.epil.ls to i8
  %arrayidx6.i.us.epil.ls = getelementptr inbounds i8, i8* %add.ptr23.us.ls, i64 %j.073.i.us.unr.ls2
  store i8 %conv.i.us.epil.ls, i8* %arrayidx6.i.us.epil.ls, align 1, !tbaa !22
  %conv7.i.us.epil.ls = and i64 %and.i.i.us.epil.ls, 255
  %arrayidx8.i.us.epil.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %conv7.i.us.epil.ls
  %57 = load i32, i32* %arrayidx8.i.us.epil.ls, align 4, !tbaa !59
  %inc9.i.us.epil.ls = add i32 %57, 1
  store i32 %inc9.i.us.epil.ls, i32* %arrayidx8.i.us.epil.ls, align 4, !tbaa !59
  br label %for.body17.i.us.preheader.ls

for.body17.i.us.preheader.ls:                     ; preds = %for.body4.i.us.epil.ls, %for.body17.i.us.preheader.loopexit.unr-lcssa.ls, %pfor.detach.us.ls
  br i1 %.ls2, label %for.cond.cleanup16.i.loopexit.us.unr-lcssa.ls, label %for.body17.i.us.ls.preheader

for.body17.i.us.ls.preheader:                     ; preds = %for.body17.i.us.preheader.ls
  br label %for.body17.i.us.ls

for.body17.i.us.ls:                               ; preds = %for.body17.i.us.ls.preheader, %for.body17.i.us.ls
  %i13.071.i.us.ls = phi i64 [ %inc21.i.us.7.ls, %for.body17.i.us.ls ], [ 0, %for.body17.i.us.ls.preheader ]
  %s.070.i.us.ls = phi i32 [ %add.i.us.7.ls, %for.body17.i.us.ls ], [ %conv.us.ls, %for.body17.i.us.ls.preheader ]
  %niter193.ls = phi i64 [ %niter193.nsub.7.ls, %for.body17.i.us.ls ], [ %unroll_iter192.ls, %for.body17.i.us.ls.preheader ]
  %arrayidx18.i.us.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %i13.071.i.us.ls
  %58 = load i32, i32* %arrayidx18.i.us.ls, align 4, !tbaa !59
  %add.i.us.ls = add i32 %58, %s.070.i.us.ls
  %arrayidx19.i.us.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %i13.071.i.us.ls
  store i32 %add.i.us.ls, i32* %arrayidx19.i.us.ls, align 4, !tbaa !59
  %inc21.i.us.ls = or i64 %i13.071.i.us.ls, 1
  %arrayidx18.i.us.1.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.ls
  %59 = load i32, i32* %arrayidx18.i.us.1.ls, align 4, !tbaa !59
  %add.i.us.1.ls = add i32 %59, %add.i.us.ls
  %arrayidx19.i.us.1.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.ls
  store i32 %add.i.us.1.ls, i32* %arrayidx19.i.us.1.ls, align 4, !tbaa !59
  %inc21.i.us.1.ls = or i64 %i13.071.i.us.ls, 2
  %arrayidx18.i.us.2.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.1.ls
  %60 = load i32, i32* %arrayidx18.i.us.2.ls, align 4, !tbaa !59
  %add.i.us.2.ls = add i32 %60, %add.i.us.1.ls
  %arrayidx19.i.us.2.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.1.ls
  store i32 %add.i.us.2.ls, i32* %arrayidx19.i.us.2.ls, align 4, !tbaa !59
  %inc21.i.us.2.ls = or i64 %i13.071.i.us.ls, 3
  %arrayidx18.i.us.3.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.2.ls
  %61 = load i32, i32* %arrayidx18.i.us.3.ls, align 4, !tbaa !59
  %add.i.us.3.ls = add i32 %61, %add.i.us.2.ls
  %arrayidx19.i.us.3.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.2.ls
  store i32 %add.i.us.3.ls, i32* %arrayidx19.i.us.3.ls, align 4, !tbaa !59
  %inc21.i.us.3.ls = or i64 %i13.071.i.us.ls, 4
  %arrayidx18.i.us.4.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.3.ls
  %62 = load i32, i32* %arrayidx18.i.us.4.ls, align 4, !tbaa !59
  %add.i.us.4.ls = add i32 %62, %add.i.us.3.ls
  %arrayidx19.i.us.4.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.3.ls
  store i32 %add.i.us.4.ls, i32* %arrayidx19.i.us.4.ls, align 4, !tbaa !59
  %inc21.i.us.4.ls = or i64 %i13.071.i.us.ls, 5
  %arrayidx18.i.us.5.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.4.ls
  %63 = load i32, i32* %arrayidx18.i.us.5.ls, align 4, !tbaa !59
  %add.i.us.5.ls = add i32 %63, %add.i.us.4.ls
  %arrayidx19.i.us.5.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.4.ls
  store i32 %add.i.us.5.ls, i32* %arrayidx19.i.us.5.ls, align 4, !tbaa !59
  %inc21.i.us.5.ls = or i64 %i13.071.i.us.ls, 6
  %arrayidx18.i.us.6.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.5.ls
  %64 = load i32, i32* %arrayidx18.i.us.6.ls, align 4, !tbaa !59
  %add.i.us.6.ls = add i32 %64, %add.i.us.5.ls
  %arrayidx19.i.us.6.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.5.ls
  store i32 %add.i.us.6.ls, i32* %arrayidx19.i.us.6.ls, align 4, !tbaa !59
  %inc21.i.us.6.ls = or i64 %i13.071.i.us.ls, 7
  %arrayidx18.i.us.7.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.6.ls
  %65 = load i32, i32* %arrayidx18.i.us.7.ls, align 4, !tbaa !59
  %add.i.us.7.ls = add i32 %65, %add.i.us.6.ls
  %arrayidx19.i.us.7.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.6.ls
  store i32 %add.i.us.7.ls, i32* %arrayidx19.i.us.7.ls, align 4, !tbaa !59
  %inc21.i.us.7.ls = add nuw nsw i64 %i13.071.i.us.ls, 8
  %niter193.nsub.7.ls = add i64 %niter193.ls, -8
  %niter193.ncmp.7.ls = icmp eq i64 %niter193.nsub.7.ls, 0
  br i1 %niter193.ncmp.7.ls, label %for.cond.cleanup16.i.loopexit.us.unr-lcssa.ls, label %for.body17.i.us.ls

for.cond.cleanup16.i.loopexit.us.unr-lcssa.ls:    ; preds = %for.body17.i.us.ls, %for.body17.i.us.preheader.ls
  %i13.071.i.us.unr.ls = phi i64 [ 0, %for.body17.i.us.preheader.ls ], [ %inc21.i.us.7.ls, %for.body17.i.us.ls ]
  %s.070.i.us.unr.ls = phi i32 [ %conv.us.ls, %for.body17.i.us.preheader.ls ], [ %add.i.us.7.ls, %for.body17.i.us.ls ]
  br i1 %lcmp.mod191.ls, label %for.cond.cleanup16.i.loopexit.us.ls, label %for.body17.i.us.epil.ls.preheader

for.body17.i.us.epil.ls.preheader:                ; preds = %for.cond.cleanup16.i.loopexit.us.unr-lcssa.ls
  br label %for.body17.i.us.epil.ls

for.body17.i.us.epil.ls:                          ; preds = %for.body17.i.us.epil.ls.preheader, %for.body17.i.us.epil.ls
  %i13.071.i.us.epil.ls = phi i64 [ %inc21.i.us.epil.ls, %for.body17.i.us.epil.ls ], [ %i13.071.i.us.unr.ls, %for.body17.i.us.epil.ls.preheader ]
  %s.070.i.us.epil.ls = phi i32 [ %add.i.us.epil.ls, %for.body17.i.us.epil.ls ], [ %s.070.i.us.unr.ls, %for.body17.i.us.epil.ls.preheader ]
  %epil.iter190.ls = phi i64 [ %epil.iter190.sub.ls, %for.body17.i.us.epil.ls ], [ %xtraiter189.ls, %for.body17.i.us.epil.ls.preheader ]
  %arrayidx18.i.us.epil.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %i13.071.i.us.epil.ls
  %66 = load i32, i32* %arrayidx18.i.us.epil.ls, align 4, !tbaa !59
  %add.i.us.epil.ls = add i32 %66, %s.070.i.us.epil.ls
  %arrayidx19.i.us.epil.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %i13.071.i.us.epil.ls
  store i32 %add.i.us.epil.ls, i32* %arrayidx19.i.us.epil.ls, align 4, !tbaa !59
  %inc21.i.us.epil.ls = add nuw nsw i64 %i13.071.i.us.epil.ls, 1
  %epil.iter190.sub.ls = add nsw i64 %epil.iter190.ls, -1
  %epil.iter190.cmp.ls = icmp eq i64 %epil.iter190.sub.ls, 0
  br i1 %epil.iter190.cmp.ls, label %for.cond.cleanup16.i.loopexit.us.ls, label %for.body17.i.us.epil.ls, !llvm.loop !509

for.cond.cleanup16.i.loopexit.us.ls:              ; preds = %for.body17.i.us.epil.ls, %for.cond.cleanup16.i.loopexit.us.unr-lcssa.ls
  br i1 %cmp272.i.us.ls, label %for.body27.i.us.ls.preheader, label %pfor.inc.us.ls

for.body27.i.us.ls.preheader:                     ; preds = %for.cond.cleanup16.i.loopexit.us.ls
  br label %for.body27.i.us.ls

for.body27.i.us.ls:                               ; preds = %for.body27.i.us.ls.preheader, %for.body27.i.us.ls
  %j23.068.in.i.us.ls = phi i64 [ %j23.068.i.us.ls, %for.body27.i.us.ls ], [ %53, %for.body27.i.us.ls.preheader ]
  %j23.068.i.us.ls = add nsw i64 %j23.068.in.i.us.ls, -1
  %arrayidx28.i.us.ls = getelementptr inbounds i8, i8* %add.ptr23.us.ls, i64 %j23.068.i.us.ls
  %67 = load i8, i8* %arrayidx28.i.us.ls, align 1, !tbaa !22
  %idxprom29.i.us.ls = zext i8 %67 to i64
  %arrayidx30.i.us.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %idxprom29.i.us.ls
  %68 = load i32, i32* %arrayidx30.i.us.ls, align 4, !tbaa !59
  %dec.i.us.ls = add i32 %68, -1
  store i32 %dec.i.us.ls, i32* %arrayidx30.i.us.ls, align 4, !tbaa !59
  %idxprom32.i.us.ls = zext i32 %dec.i.us.ls to i64
  %first.i.i122.us.ls = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %add.ptr21.us.ls, i64 %j23.068.i.us.ls, i32 0
  %69 = load i32, i32* %first.i.i122.us.ls, align 8, !tbaa !192
  %first2.i.i123.us.ls = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.ls, i64 %idxprom32.i.us.ls, i32 0
  store i32 %69, i32* %first2.i.i123.us.ls, align 8, !tbaa !192
  %second.i.i124.us.ls = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %add.ptr21.us.ls, i64 %j23.068.i.us.ls, i32 1
  %70 = bitcast %struct.vertex.16** %second.i.i124.us.ls to i64*
  %71 = load i64, i64* %70, align 8, !tbaa !194
  %second3.i.i125.us.ls = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.ls, i64 %idxprom32.i.us.ls, i32 1
  %72 = bitcast %struct.vertex.16** %second3.i.i125.us.ls to i64*
  store i64 %71, i64* %72, align 8, !tbaa !194
  %cmp25.i.us.ls = icmp sgt i64 %j23.068.in.i.us.ls, 1
  br i1 %cmp25.i.us.ls, label %for.body27.i.us.ls, label %pfor.inc.us.ls

pfor.inc.us.ls:                                   ; preds = %for.body27.i.us.ls, %for.cond.cleanup16.i.loopexit.us.ls
  %73 = icmp ult i64 %__begin.0156.us.ls, %.ls
  %inc.us.ls = add nuw nsw i64 %__begin.0156.us.ls, 1
  br i1 %73, label %pfor.detach.us.ls, label %pfor.cond.cleanup.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0__pfor.detach.ls(i64 %indvars.iv.start.ls, i64 %end.ls, i64 %.ls, [256 x i32]* align 1 %BK.ls, float %conv10.ls, i64 %n.ls, float %div.ls, %"struct.std::pair.23"* align 1 %A.ls, %"struct.std::pair.23"* align 1 %B.ls, i8* align 1 %Tmp.ls, i64 %sub.ls) unnamed_addr #15 {
if.then5.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %if.then5.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %if.then5.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %if.then5.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %if.then5.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount1 = sub i64 %end.ls, %indvars.iv.start.ls
  %9 = icmp ugt i64 %itercount1, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv.ls.ph = phi i64 [ %indvars.iv.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount3 = phi i64 [ %itercount1, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv.ls.dac2 = phi i64 [ %indvars.iv.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount3, 1
  %miditer = add nuw nsw i64 %indvars.iv.ls.dac2, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split4, label %.split.split

.split4:                                          ; preds = %16
  call fastcc void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0__pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac2, i64 %miditer, i64 %.ls, [256 x i32]* %BK.ls, float %conv10.ls, i64 %n.ls, float %div.ls, %"struct.std::pair.23"* %A.ls, %"struct.std::pair.23"* %B.ls, i8* %Tmp.ls, i64 %sub.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split4, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.ls:                             ; preds = %cond.end.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %cond.end.ls
  %indvars.iv.ls = phi i64 [ %indvars.iv.next.ls.pre-phi, %cond.end.ls ], [ %indvars.iv.ls.ph, %pfor.detach.ls.preheader ]
  %arrayidx12.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 0, i64 %indvars.iv.ls
  %48 = load i32, i32* %arrayidx12.ls, align 4, !tbaa !59
  %conv13.ls = zext i32 %48 to i64
  %cmp14.ls = icmp eq i64 %indvars.iv.ls, 255
  br i1 %cmp14.ls, label %cond.end.ls, label %cond.false.ls

cond.false.ls:                                    ; preds = %pfor.detach.ls
  %49 = add nuw nsw i64 %indvars.iv.ls, 1
  %arrayidx17.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 0, i64 %49
  %50 = load i32, i32* %arrayidx17.ls, align 4, !tbaa !59
  %conv18.ls = zext i32 %50 to i64
  %.pre.ls = uitofp i32 %50 to float
  br label %cond.end.ls

cond.end.ls:                                      ; preds = %pfor.detach.ls, %cond.false.ls
  %indvars.iv.next.ls.pre-phi = phi i64 [ %49, %cond.false.ls ], [ 256, %pfor.detach.ls ]
  %conv26.pre-phi.ls = phi float [ %.pre.ls, %cond.false.ls ], [ %conv10.ls, %pfor.detach.ls ]
  %cond.ls = phi i64 [ %conv18.ls, %cond.false.ls ], [ %n.ls, %pfor.detach.ls ]
  %sub19.ls = sub nsw i64 %cond.ls, %conv13.ls
  %conv20.ls = uitofp i32 %48 to float
  %mul21.ls = fmul fast float %conv20.ls, %div.ls
  %51 = call fast float @llvm.floor.f32(float %mul21.ls) #2
  %conv22.ls = fptosi float %51 to i64
  %add25.ls = add i64 %indvars.iv.next.ls.pre-phi, %conv22.ls
  %mul27.ls = fmul fast float %conv26.pre-phi.ls, %div.ls
  %52 = call fast float @llvm.floor.f32(float %mul27.ls) #2
  %conv29.ls = fptosi float %52 to i64
  %add31.ls = add nuw nsw i64 %indvars.iv.ls, 2
  %add32.ls = sub i64 %add31.ls, %add25.ls
  %sub33.ls = add i64 %add32.ls, %conv29.ls
  %add.ptr.ls = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %A.ls, i64 %conv13.ls
  %add.ptr34.ls = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %B.ls, i64 %conv13.ls
  %add.ptr35.ls = getelementptr inbounds i8, i8* %Tmp.ls, i64 %conv13.ls
  %add.ptr36.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 %add25.ls
  call void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0_(%"struct.std::pair.23"* %add.ptr.ls, %"struct.std::pair.23"* %add.ptr34.ls, i8* %add.ptr35.ls, [256 x i32]* %add.ptr36.ls, i64 %sub33.ls, i64 %sub19.ls, i64 %sub.ls)
  %53 = icmp ult i64 %indvars.iv.ls, %end.ls
  br i1 %53, label %pfor.detach.ls, label %pfor.cond.cleanup.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_Z3ANNILi1E6vertexI8_point3dIdELi1EEEvPPT0_ii_pfor.detach.ls(i64 %indvars.iv55.start.ls, i64 %.ls, %struct.vertex.29** nocapture readonly align 1 %.ls1, i32 %k.ls, %class.gTreeNode.31* align 1 %call.i.ls) unnamed_addr #15 {
pfor.detach.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %nn.i.ls = alloca %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", align 8
  %itercount2 = sub i64 %.ls, %indvars.iv55.start.ls
  %9 = icmp ugt i64 %itercount2, 1
  br i1 %9, label %.lr.ph, label %pfor.detach.preheader.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount4 = phi i64 [ %itercount2, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv55.ls.dac3 = phi i64 [ %indvars.iv55.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount4, 1
  %miditer = add nuw nsw i64 %indvars.iv55.ls.dac3, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split5, label %.split.split

.split5:                                          ; preds = %16
  call fastcc void @_Z3ANNILi1E6vertexI8_point3dIdELi1EEEvPPT0_ii_pfor.detach.ls_.split.cilk(i64 %indvars.iv55.ls.dac3, i64 %miditer, %struct.vertex.29** %.ls1, i32 %k.ls, %class.gTreeNode.31* %call.i.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split5, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, 1
  br i1 %21, label %16, label %pfor.detach.preheader.ls.split._crit_edge

pfor.detach.preheader.ls.split._crit_edge:        ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv55.ls.dac.lcssa = phi i64 [ %indvars.iv55.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  %22 = bitcast %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.ls to i8*
  %k.i.i.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.ls, i64 0, i32 4
  %quads.i.i.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.ls, i64 0, i32 3
  %23 = bitcast %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.ls to i64*
  br label %pfor.detach.ls

pfor.cond.cleanup.loopexit86.ls:                  ; preds = %pfor.detach.ls
  %24 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %25 = load atomic i32, i32* %24 acquire, align 8
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit86.ls
  %28 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %30 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %29, i16* nonnull %30) #2
  %31 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %32 = call i8* @llvm.frameaddress(i32 0) #2
  %33 = getelementptr inbounds [5 x i8*], [5 x i8*]* %31, i64 0, i64 0
  store volatile i8* %32, i8** %33, align 8
  %34 = call i8* @llvm.stacksave() #2
  %35 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %34, i8** %35, align 8
  %36 = bitcast [5 x i8*]* %31 to i8*
  %37 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %36) #24
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit86.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %39 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %40 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %39, i64 0, i32 12, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %40, align 8
  %43 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %44 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %43, i64 0, i32 9
  %47 = bitcast %struct.__cilkrts_stack_frame** %46 to i64*
  store atomic i64 %45, i64* %47 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %48 = load atomic i32, i32* %24 acquire, align 8
  %49 = icmp eq i32 %48, 16777216
  br i1 %49, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.preheader.ls.split._crit_edge, %pfor.detach.ls
  %indvars.iv55.ls = phi i64 [ %indvars.iv.next56.ls, %pfor.detach.ls ], [ %indvars.iv55.ls.dac.lcssa, %pfor.detach.preheader.ls.split._crit_edge ]
  %arrayidx.ls = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %.ls1, i64 %indvars.iv55.ls
  %50 = bitcast %struct.vertex.29** %arrayidx.ls to i64*
  %51 = load i64, i64* %50, align 8, !tbaa !53
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #2
  store i32 %k.ls, i32* %k.i.i.ls, align 4, !tbaa !278
  store i32 8, i32* %quads.i.i.ls, align 8, !tbaa !279
  store i64 %51, i64* %23, align 8, !tbaa !273
  call void @_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNN10nearestNghEP9gTreeNodeIS2_7_vect3dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* nonnull %nn.i.ls, %class.gTreeNode.31* %call.i.ls) #2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #2
  %52 = icmp ult i64 %indvars.iv55.ls, %.ls
  %indvars.iv.next56.ls = add nuw nsw i64 %indvars.iv55.ls, 1
  br i1 %52, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit86.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_Z3ANNILi1E6vertexI8_point3dIdELi1EEEvPPT0_ii_pfor.detach.us26.ls(i64 %indvars.iv.start.ls, i64 %.ls, %struct.vertex.29** nocapture readonly align 1 %.ls1, %class.gTreeNode.31* align 1 %call.i.ls, i64 %.ls2, i64 %.ls8, i1 %lcmp.mod85.ls, i64 %xtraiter84.ls, i64 %.ls9) unnamed_addr #15 {
pfor.detach.lr.ph.split.split.us.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.split.split.us.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.split.split.us.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.split.split.us.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.split.split.us.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %nn.i.us29.ls = alloca %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", align 8
  %itercount10 = sub i64 %.ls, %indvars.iv.start.ls
  %9 = icmp ugt i64 %itercount10, 1
  br i1 %9, label %.lr.ph, label %pfor.detach.lr.ph.split.split.us.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount12 = phi i64 [ %itercount10, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv.ls.dac11 = phi i64 [ %indvars.iv.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount12, 1
  %miditer = add nuw nsw i64 %indvars.iv.ls.dac11, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split13, label %.split.split

.split13:                                         ; preds = %16
  call fastcc void @_Z3ANNILi1E6vertexI8_point3dIdELi1EEEvPPT0_ii_pfor.detach.us26.ls_.split.cilk(i64 %indvars.iv.ls.dac11, i64 %miditer, %struct.vertex.29** %.ls1, %class.gTreeNode.31* %call.i.ls, i64 %.ls2, i64 %.ls8, i1 %lcmp.mod85.ls, i64 %xtraiter84.ls, i64 %.ls9)
  br label %.split.split

.split.split:                                     ; preds = %.split13, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, 1
  br i1 %21, label %16, label %pfor.detach.lr.ph.split.split.us.ls.split._crit_edge

pfor.detach.lr.ph.split.split.us.ls.split._crit_edge: ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv.ls.dac.lcssa = phi i64 [ %indvars.iv.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  %22 = bitcast %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls to i8*
  %k.i.i.us34.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 4
  %quads.i.i.us35.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 3
  %ps.i.i.us36.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 0
  %arrayidx.i.i.us39.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 0
  %arrayidx8.i.i.us40.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 2, i64 0
  %23 = icmp ult i64 %.ls8, 7
  br i1 %lcmp.mod85.ls, label %pfor.detach.us26.ls.us.preheader, label %pfor.detach.lr.ph.split.split.us.ls.split._crit_edge.split

pfor.detach.us26.ls.us.preheader:                 ; preds = %pfor.detach.lr.ph.split.split.us.ls.split._crit_edge
  br label %pfor.detach.us26.ls.us

pfor.detach.us26.ls.us:                           ; preds = %pfor.detach.us26.ls.us.preheader, %_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE8kNearestEPS3_PS5_i.exit.loopexit.us53.ls.us
  %indvars.iv.ls.us = phi i64 [ %indvars.iv.next.ls.us, %_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE8kNearestEPS3_PS5_i.exit.loopexit.us53.ls.us ], [ %indvars.iv.ls.dac.lcssa, %pfor.detach.us26.ls.us.preheader ]
  %arrayidx.us30.ls.us = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %.ls1, i64 %indvars.iv.ls.us
  %24 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx.us30.ls.us, align 8, !tbaa !53
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #2
  %arraydecay.us31.ls.us = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %24, i64 0, i32 2, i64 0
  %result33.i.us32.ls.us = bitcast %struct.vertex.29** %arraydecay.us31.ls.us to i8*
  store i32 1, i32* %k.i.i.us34.ls, align 4, !tbaa !278
  store i32 8, i32* %quads.i.i.us35.ls, align 8, !tbaa !279
  store %struct.vertex.29* %24, %struct.vertex.29** %ps.i.i.us36.ls, align 8, !tbaa !273
  store %struct.vertex.29* null, %struct.vertex.29** %arrayidx.i.i.us39.ls, align 8, !tbaa !53
  store double 0x7FEFFFFFFFFFFFFF, double* %arrayidx8.i.i.us40.ls, align 8, !tbaa !18
  call void @_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNN10nearestNghEP9gTreeNodeIS2_7_vect3dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* nonnull %nn.i.us29.ls, %class.gTreeNode.31* %call.i.ls) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull %result33.i.us32.ls.us, i8 0, i64 %.ls2, i32 8, i1 false) #2
  %25 = load i32, i32* %k.i.i.us34.ls, align 4, !tbaa !278
  br i1 %23, label %_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE8kNearestEPS3_PS5_i.exit.loopexit.us53.ls.us, label %for.body6.i.us41.ls.us.preheader

for.body6.i.us41.ls.us.preheader:                 ; preds = %pfor.detach.us26.ls.us
  br label %for.body6.i.us41.ls.us

for.body6.i.us41.ls.us:                           ; preds = %for.body6.i.us41.ls.us.preheader, %for.body6.i.us41.ls.us
  %indvars.iv.i.us42.ls.us = phi i64 [ %indvars.iv.next.i.us47.7.ls.us, %for.body6.i.us41.ls.us ], [ 0, %for.body6.i.us41.ls.us.preheader ]
  %26 = trunc i64 %indvars.iv.i.us42.ls.us to i32
  %27 = xor i32 %26, -1
  %sub2.i.i.us43.ls.us = add i32 %25, %27
  %idxprom.i.i.us44.ls.us = sext i32 %sub2.i.i.us43.ls.us to i64
  %arrayidx.i23.i.us45.ls.us = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.ls.us
  %28 = bitcast %struct.vertex.29** %arrayidx.i23.i.us45.ls.us to i64*
  %29 = load i64, i64* %28, align 8, !tbaa !53
  %arrayidx8.i.us46.ls.us = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %24, i64 0, i32 2, i64 %indvars.iv.i.us42.ls.us
  %30 = bitcast %struct.vertex.29** %arrayidx8.i.us46.ls.us to i64*
  store i64 %29, i64* %30, align 8, !tbaa !53
  %indvars.iv.next.i.us47.ls.us = or i64 %indvars.iv.i.us42.ls.us, 1
  %31 = trunc i64 %indvars.iv.next.i.us47.ls.us to i32
  %32 = xor i32 %31, -1
  %sub2.i.i.us43.1.ls.us = add i32 %25, %32
  %idxprom.i.i.us44.1.ls.us = sext i32 %sub2.i.i.us43.1.ls.us to i64
  %arrayidx.i23.i.us45.1.ls.us = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.1.ls.us
  %33 = bitcast %struct.vertex.29** %arrayidx.i23.i.us45.1.ls.us to i64*
  %34 = load i64, i64* %33, align 8, !tbaa !53
  %arrayidx8.i.us46.1.ls.us = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %24, i64 0, i32 2, i64 %indvars.iv.next.i.us47.ls.us
  %35 = bitcast %struct.vertex.29** %arrayidx8.i.us46.1.ls.us to i64*
  store i64 %34, i64* %35, align 8, !tbaa !53
  %indvars.iv.next.i.us47.1.ls.us = or i64 %indvars.iv.i.us42.ls.us, 2
  %36 = trunc i64 %indvars.iv.next.i.us47.1.ls.us to i32
  %37 = xor i32 %36, -1
  %sub2.i.i.us43.2.ls.us = add i32 %25, %37
  %idxprom.i.i.us44.2.ls.us = sext i32 %sub2.i.i.us43.2.ls.us to i64
  %arrayidx.i23.i.us45.2.ls.us = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.2.ls.us
  %38 = bitcast %struct.vertex.29** %arrayidx.i23.i.us45.2.ls.us to i64*
  %39 = load i64, i64* %38, align 8, !tbaa !53
  %arrayidx8.i.us46.2.ls.us = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %24, i64 0, i32 2, i64 %indvars.iv.next.i.us47.1.ls.us
  %40 = bitcast %struct.vertex.29** %arrayidx8.i.us46.2.ls.us to i64*
  store i64 %39, i64* %40, align 8, !tbaa !53
  %indvars.iv.next.i.us47.2.ls.us = or i64 %indvars.iv.i.us42.ls.us, 3
  %41 = trunc i64 %indvars.iv.next.i.us47.2.ls.us to i32
  %42 = xor i32 %41, -1
  %sub2.i.i.us43.3.ls.us = add i32 %25, %42
  %idxprom.i.i.us44.3.ls.us = sext i32 %sub2.i.i.us43.3.ls.us to i64
  %arrayidx.i23.i.us45.3.ls.us = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.3.ls.us
  %43 = bitcast %struct.vertex.29** %arrayidx.i23.i.us45.3.ls.us to i64*
  %44 = load i64, i64* %43, align 8, !tbaa !53
  %arrayidx8.i.us46.3.ls.us = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %24, i64 0, i32 2, i64 %indvars.iv.next.i.us47.2.ls.us
  %45 = bitcast %struct.vertex.29** %arrayidx8.i.us46.3.ls.us to i64*
  store i64 %44, i64* %45, align 8, !tbaa !53
  %indvars.iv.next.i.us47.3.ls.us = or i64 %indvars.iv.i.us42.ls.us, 4
  %46 = trunc i64 %indvars.iv.next.i.us47.3.ls.us to i32
  %47 = xor i32 %46, -1
  %sub2.i.i.us43.4.ls.us = add i32 %25, %47
  %idxprom.i.i.us44.4.ls.us = sext i32 %sub2.i.i.us43.4.ls.us to i64
  %arrayidx.i23.i.us45.4.ls.us = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.4.ls.us
  %48 = bitcast %struct.vertex.29** %arrayidx.i23.i.us45.4.ls.us to i64*
  %49 = load i64, i64* %48, align 8, !tbaa !53
  %arrayidx8.i.us46.4.ls.us = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %24, i64 0, i32 2, i64 %indvars.iv.next.i.us47.3.ls.us
  %50 = bitcast %struct.vertex.29** %arrayidx8.i.us46.4.ls.us to i64*
  store i64 %49, i64* %50, align 8, !tbaa !53
  %indvars.iv.next.i.us47.4.ls.us = or i64 %indvars.iv.i.us42.ls.us, 5
  %51 = trunc i64 %indvars.iv.next.i.us47.4.ls.us to i32
  %52 = xor i32 %51, -1
  %sub2.i.i.us43.5.ls.us = add i32 %25, %52
  %idxprom.i.i.us44.5.ls.us = sext i32 %sub2.i.i.us43.5.ls.us to i64
  %arrayidx.i23.i.us45.5.ls.us = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.5.ls.us
  %53 = bitcast %struct.vertex.29** %arrayidx.i23.i.us45.5.ls.us to i64*
  %54 = load i64, i64* %53, align 8, !tbaa !53
  %arrayidx8.i.us46.5.ls.us = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %24, i64 0, i32 2, i64 %indvars.iv.next.i.us47.4.ls.us
  %55 = bitcast %struct.vertex.29** %arrayidx8.i.us46.5.ls.us to i64*
  store i64 %54, i64* %55, align 8, !tbaa !53
  %indvars.iv.next.i.us47.5.ls.us = or i64 %indvars.iv.i.us42.ls.us, 6
  %56 = trunc i64 %indvars.iv.next.i.us47.5.ls.us to i32
  %57 = xor i32 %56, -1
  %sub2.i.i.us43.6.ls.us = add i32 %25, %57
  %idxprom.i.i.us44.6.ls.us = sext i32 %sub2.i.i.us43.6.ls.us to i64
  %arrayidx.i23.i.us45.6.ls.us = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.6.ls.us
  %58 = bitcast %struct.vertex.29** %arrayidx.i23.i.us45.6.ls.us to i64*
  %59 = load i64, i64* %58, align 8, !tbaa !53
  %arrayidx8.i.us46.6.ls.us = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %24, i64 0, i32 2, i64 %indvars.iv.next.i.us47.5.ls.us
  %60 = bitcast %struct.vertex.29** %arrayidx8.i.us46.6.ls.us to i64*
  store i64 %59, i64* %60, align 8, !tbaa !53
  %indvars.iv.next.i.us47.6.ls.us = or i64 %indvars.iv.i.us42.ls.us, 7
  %61 = trunc i64 %indvars.iv.next.i.us47.6.ls.us to i32
  %62 = xor i32 %61, -1
  %sub2.i.i.us43.7.ls.us = add i32 %25, %62
  %idxprom.i.i.us44.7.ls.us = sext i32 %sub2.i.i.us43.7.ls.us to i64
  %arrayidx.i23.i.us45.7.ls.us = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.7.ls.us
  %63 = bitcast %struct.vertex.29** %arrayidx.i23.i.us45.7.ls.us to i64*
  %64 = load i64, i64* %63, align 8, !tbaa !53
  %arrayidx8.i.us46.7.ls.us = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %24, i64 0, i32 2, i64 %indvars.iv.next.i.us47.6.ls.us
  %65 = bitcast %struct.vertex.29** %arrayidx8.i.us46.7.ls.us to i64*
  store i64 %64, i64* %65, align 8, !tbaa !53
  %indvars.iv.next.i.us47.7.ls.us = add nuw nsw i64 %indvars.iv.i.us42.ls.us, 8
  %exitcond.i.us48.7.ls.us = icmp eq i64 %indvars.iv.next.i.us47.7.ls.us, %.ls9
  br i1 %exitcond.i.us48.7.ls.us, label %_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE8kNearestEPS3_PS5_i.exit.loopexit.us53.ls.us, label %for.body6.i.us41.ls.us, !llvm.loop !510

_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE8kNearestEPS3_PS5_i.exit.loopexit.us53.ls.us: ; preds = %for.body6.i.us41.ls.us, %pfor.detach.us26.ls.us
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #2
  %66 = icmp ult i64 %indvars.iv.ls.us, %.ls
  %indvars.iv.next.ls.us = add nuw nsw i64 %indvars.iv.ls.us, 1
  br i1 %66, label %pfor.detach.us26.ls.us, label %pfor.cond.cleanup.loopexit.ls

pfor.detach.lr.ph.split.split.us.ls.split._crit_edge.split: ; preds = %pfor.detach.lr.ph.split.split.us.ls.split._crit_edge
  %67 = add i64 %xtraiter84.ls, -1
  %68 = shl i64 %xtraiter84.ls, 3
  %69 = add i64 %68, 32
  %70 = sub i64 0, %xtraiter84.ls
  %scevgep5 = getelementptr %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 2, i64 %70
  %min.iters.check = icmp ult i64 %xtraiter84.ls, 16
  %71 = trunc i64 %67 to i32
  %72 = icmp ugt i64 %67, 4294967295
  %n.vec = and i64 %xtraiter84.ls, -16
  %ind.end = sub i64 %xtraiter84.ls, %n.vec
  %cmp.n = icmp eq i64 %n.vec, %xtraiter84.ls
  br label %pfor.detach.us26.ls

pfor.cond.cleanup.loopexit.ls:                    ; preds = %_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE8kNearestEPS3_PS5_i.exit.loopexit.us53.ls, %_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE8kNearestEPS3_PS5_i.exit.loopexit.us53.ls.us
  %73 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %74 = load atomic i32, i32* %73 acquire, align 8
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %77 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %78 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %79 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %78, i16* nonnull %79) #2
  %80 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %81 = call i8* @llvm.frameaddress(i32 0) #2
  %82 = getelementptr inbounds [5 x i8*], [5 x i8*]* %80, i64 0, i64 0
  store volatile i8* %81, i8** %82, align 8
  %83 = call i8* @llvm.stacksave() #2
  %84 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %83, i8** %84, align 8
  %85 = bitcast [5 x i8*]* %80 to i8*
  %86 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %85) #24
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %88 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %89 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %88, i64 0, i32 12, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, 1
  store i64 %91, i64* %89, align 8
  %92 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %93 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %92, i64 0, i32 9
  %96 = bitcast %struct.__cilkrts_stack_frame** %95 to i64*
  store atomic i64 %94, i64* %96 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %97 = load atomic i32, i32* %73 acquire, align 8
  %98 = icmp eq i32 %97, 16777216
  br i1 %98, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.us26.ls:                              ; preds = %pfor.detach.lr.ph.split.split.us.ls.split._crit_edge.split, %_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE8kNearestEPS3_PS5_i.exit.loopexit.us53.ls
  %indvars.iv.ls = phi i64 [ %indvars.iv.next.ls, %_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE8kNearestEPS3_PS5_i.exit.loopexit.us53.ls ], [ %indvars.iv.ls.dac.lcssa, %pfor.detach.lr.ph.split.split.us.ls.split._crit_edge.split ]
  %arrayidx.us30.ls = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %.ls1, i64 %indvars.iv.ls
  %99 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx.us30.ls, align 8, !tbaa !53
  %100 = bitcast %struct.vertex.29* %99 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #2
  %arraydecay.us31.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %99, i64 0, i32 2, i64 0
  %result33.i.us32.ls = bitcast %struct.vertex.29** %arraydecay.us31.ls to i8*
  store i32 1, i32* %k.i.i.us34.ls, align 4, !tbaa !278
  store i32 8, i32* %quads.i.i.us35.ls, align 8, !tbaa !279
  store %struct.vertex.29* %99, %struct.vertex.29** %ps.i.i.us36.ls, align 8, !tbaa !273
  store %struct.vertex.29* null, %struct.vertex.29** %arrayidx.i.i.us39.ls, align 8, !tbaa !53
  store double 0x7FEFFFFFFFFFFFFF, double* %arrayidx8.i.i.us40.ls, align 8, !tbaa !18
  call void @_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNN10nearestNghEP9gTreeNodeIS2_7_vect3dIdES3_5nDataIS3_EE(%"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* nonnull %nn.i.us29.ls, %class.gTreeNode.31* %call.i.ls) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull %result33.i.us32.ls, i8 0, i64 %.ls2, i32 8, i1 false) #2
  %101 = load i32, i32* %k.i.i.us34.ls, align 4, !tbaa !278
  br i1 %min.iters.check, label %for.body6.i.us41.prol.ls.preheader, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %pfor.detach.us26.ls
  %102 = add i32 %101, -1
  %103 = sub i32 %102, %71
  %104 = icmp sgt i32 %103, %102
  %105 = or i1 %104, %72
  br i1 %105, label %for.body6.i.us41.prol.ls.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %vector.scevcheck
  %scevgep = getelementptr %struct.vertex.29, %struct.vertex.29* %99, i64 0, i32 2, i64 0
  %uglygep = getelementptr i8, i8* %100, i64 %69
  %106 = add i32 %101, -1
  %107 = sext i32 %106 to i64
  %scevgep6 = getelementptr double, double* %scevgep5, i64 %107
  %scevgep67 = bitcast double* %scevgep6 to i8*
  %scevgep9 = getelementptr %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 2, i64 %107
  %108 = bitcast double* %scevgep9 to %struct.vertex.29**
  %bound0 = icmp ult %struct.vertex.29** %scevgep, %108
  %bound1 = icmp ugt i8* %uglygep, %scevgep67
  %memcheck.conflict = and i1 %bound0, %bound1
  br i1 %memcheck.conflict, label %for.body6.i.us41.prol.ls.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %109 = trunc i64 %index to i32
  %110 = xor i32 %109, -1
  %111 = add i32 %101, %110
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %112
  %114 = getelementptr %struct.vertex.29*, %struct.vertex.29** %113, i64 -3
  %115 = bitcast %struct.vertex.29** %114 to <4 x i64>*
  %wide.load = load <4 x i64>, <4 x i64>* %115, align 8, !tbaa !53, !alias.scope !511
  %reverse = shufflevector <4 x i64> %wide.load, <4 x i64> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %116 = getelementptr %struct.vertex.29*, %struct.vertex.29** %113, i64 -7
  %117 = bitcast %struct.vertex.29** %116 to <4 x i64>*
  %wide.load27 = load <4 x i64>, <4 x i64>* %117, align 8, !tbaa !53, !alias.scope !511
  %reverse28 = shufflevector <4 x i64> %wide.load27, <4 x i64> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %118 = getelementptr %struct.vertex.29*, %struct.vertex.29** %113, i64 -11
  %119 = bitcast %struct.vertex.29** %118 to <4 x i64>*
  %wide.load29 = load <4 x i64>, <4 x i64>* %119, align 8, !tbaa !53, !alias.scope !511
  %reverse30 = shufflevector <4 x i64> %wide.load29, <4 x i64> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %120 = getelementptr %struct.vertex.29*, %struct.vertex.29** %113, i64 -15
  %121 = bitcast %struct.vertex.29** %120 to <4 x i64>*
  %wide.load31 = load <4 x i64>, <4 x i64>* %121, align 8, !tbaa !53, !alias.scope !511
  %reverse32 = shufflevector <4 x i64> %wide.load31, <4 x i64> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %122 = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %99, i64 0, i32 2, i64 %index
  %123 = bitcast %struct.vertex.29** %122 to <4 x i64>*
  store <4 x i64> %reverse, <4 x i64>* %123, align 8, !tbaa !53, !alias.scope !514, !noalias !511
  %124 = getelementptr %struct.vertex.29*, %struct.vertex.29** %122, i64 4
  %125 = bitcast %struct.vertex.29** %124 to <4 x i64>*
  store <4 x i64> %reverse28, <4 x i64>* %125, align 8, !tbaa !53, !alias.scope !514, !noalias !511
  %126 = getelementptr %struct.vertex.29*, %struct.vertex.29** %122, i64 8
  %127 = bitcast %struct.vertex.29** %126 to <4 x i64>*
  store <4 x i64> %reverse30, <4 x i64>* %127, align 8, !tbaa !53, !alias.scope !514, !noalias !511
  %128 = getelementptr %struct.vertex.29*, %struct.vertex.29** %122, i64 12
  %129 = bitcast %struct.vertex.29** %128 to <4 x i64>*
  store <4 x i64> %reverse32, <4 x i64>* %129, align 8, !tbaa !53, !alias.scope !514, !noalias !511
  %index.next = add i64 %index, 16
  %130 = icmp eq i64 %index.next, %n.vec
  br i1 %130, label %middle.block, label %vector.body, !llvm.loop !516

middle.block:                                     ; preds = %vector.body
  br i1 %cmp.n, label %for.body6.i.us41.prol.loopexit.ls, label %for.body6.i.us41.prol.ls.preheader

for.body6.i.us41.prol.ls.preheader:               ; preds = %middle.block, %vector.memcheck, %vector.scevcheck, %pfor.detach.us26.ls
  %indvars.iv.i.us42.prol.ls.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %vector.scevcheck ], [ 0, %pfor.detach.us26.ls ], [ %n.vec, %middle.block ]
  %prol.iter.ls.ph = phi i64 [ %xtraiter84.ls, %vector.memcheck ], [ %xtraiter84.ls, %vector.scevcheck ], [ %xtraiter84.ls, %pfor.detach.us26.ls ], [ %ind.end, %middle.block ]
  br label %for.body6.i.us41.prol.ls

for.body6.i.us41.prol.ls:                         ; preds = %for.body6.i.us41.prol.ls.preheader, %for.body6.i.us41.prol.ls
  %indvars.iv.i.us42.prol.ls = phi i64 [ %indvars.iv.next.i.us47.prol.ls, %for.body6.i.us41.prol.ls ], [ %indvars.iv.i.us42.prol.ls.ph, %for.body6.i.us41.prol.ls.preheader ]
  %prol.iter.ls = phi i64 [ %prol.iter.sub.ls, %for.body6.i.us41.prol.ls ], [ %prol.iter.ls.ph, %for.body6.i.us41.prol.ls.preheader ]
  %131 = trunc i64 %indvars.iv.i.us42.prol.ls to i32
  %132 = xor i32 %131, -1
  %sub2.i.i.us43.prol.ls = add i32 %101, %132
  %idxprom.i.i.us44.prol.ls = sext i32 %sub2.i.i.us43.prol.ls to i64
  %arrayidx.i23.i.us45.prol.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.prol.ls
  %133 = bitcast %struct.vertex.29** %arrayidx.i23.i.us45.prol.ls to i64*
  %134 = load i64, i64* %133, align 8, !tbaa !53
  %arrayidx8.i.us46.prol.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %99, i64 0, i32 2, i64 %indvars.iv.i.us42.prol.ls
  %135 = bitcast %struct.vertex.29** %arrayidx8.i.us46.prol.ls to i64*
  store i64 %134, i64* %135, align 8, !tbaa !53
  %indvars.iv.next.i.us47.prol.ls = add nuw nsw i64 %indvars.iv.i.us42.prol.ls, 1
  %prol.iter.sub.ls = add nsw i64 %prol.iter.ls, -1
  %prol.iter.cmp.ls = icmp eq i64 %prol.iter.sub.ls, 0
  br i1 %prol.iter.cmp.ls, label %for.body6.i.us41.prol.loopexit.ls, label %for.body6.i.us41.prol.ls, !llvm.loop !517

for.body6.i.us41.prol.loopexit.ls:                ; preds = %for.body6.i.us41.prol.ls, %middle.block
  br i1 %23, label %_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE8kNearestEPS3_PS5_i.exit.loopexit.us53.ls, label %for.body6.i.us41.ls.preheader

for.body6.i.us41.ls.preheader:                    ; preds = %for.body6.i.us41.prol.loopexit.ls
  br label %for.body6.i.us41.ls

for.body6.i.us41.ls:                              ; preds = %for.body6.i.us41.ls.preheader, %for.body6.i.us41.ls
  %indvars.iv.i.us42.ls = phi i64 [ %indvars.iv.next.i.us47.7.ls, %for.body6.i.us41.ls ], [ %xtraiter84.ls, %for.body6.i.us41.ls.preheader ]
  %136 = trunc i64 %indvars.iv.i.us42.ls to i32
  %137 = xor i32 %136, -1
  %sub2.i.i.us43.ls = add i32 %101, %137
  %idxprom.i.i.us44.ls = sext i32 %sub2.i.i.us43.ls to i64
  %arrayidx.i23.i.us45.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.ls
  %138 = bitcast %struct.vertex.29** %arrayidx.i23.i.us45.ls to i64*
  %139 = load i64, i64* %138, align 8, !tbaa !53
  %arrayidx8.i.us46.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %99, i64 0, i32 2, i64 %indvars.iv.i.us42.ls
  %140 = bitcast %struct.vertex.29** %arrayidx8.i.us46.ls to i64*
  store i64 %139, i64* %140, align 8, !tbaa !53
  %indvars.iv.next.i.us47.ls = add nuw nsw i64 %indvars.iv.i.us42.ls, 1
  %141 = trunc i64 %indvars.iv.next.i.us47.ls to i32
  %142 = xor i32 %141, -1
  %sub2.i.i.us43.1.ls = add i32 %101, %142
  %idxprom.i.i.us44.1.ls = sext i32 %sub2.i.i.us43.1.ls to i64
  %arrayidx.i23.i.us45.1.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.1.ls
  %143 = bitcast %struct.vertex.29** %arrayidx.i23.i.us45.1.ls to i64*
  %144 = load i64, i64* %143, align 8, !tbaa !53
  %arrayidx8.i.us46.1.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %99, i64 0, i32 2, i64 %indvars.iv.next.i.us47.ls
  %145 = bitcast %struct.vertex.29** %arrayidx8.i.us46.1.ls to i64*
  store i64 %144, i64* %145, align 8, !tbaa !53
  %indvars.iv.next.i.us47.1.ls = add nsw i64 %indvars.iv.i.us42.ls, 2
  %146 = trunc i64 %indvars.iv.next.i.us47.1.ls to i32
  %147 = xor i32 %146, -1
  %sub2.i.i.us43.2.ls = add i32 %101, %147
  %idxprom.i.i.us44.2.ls = sext i32 %sub2.i.i.us43.2.ls to i64
  %arrayidx.i23.i.us45.2.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.2.ls
  %148 = bitcast %struct.vertex.29** %arrayidx.i23.i.us45.2.ls to i64*
  %149 = load i64, i64* %148, align 8, !tbaa !53
  %arrayidx8.i.us46.2.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %99, i64 0, i32 2, i64 %indvars.iv.next.i.us47.1.ls
  %150 = bitcast %struct.vertex.29** %arrayidx8.i.us46.2.ls to i64*
  store i64 %149, i64* %150, align 8, !tbaa !53
  %indvars.iv.next.i.us47.2.ls = add nsw i64 %indvars.iv.i.us42.ls, 3
  %151 = trunc i64 %indvars.iv.next.i.us47.2.ls to i32
  %152 = xor i32 %151, -1
  %sub2.i.i.us43.3.ls = add i32 %101, %152
  %idxprom.i.i.us44.3.ls = sext i32 %sub2.i.i.us43.3.ls to i64
  %arrayidx.i23.i.us45.3.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.3.ls
  %153 = bitcast %struct.vertex.29** %arrayidx.i23.i.us45.3.ls to i64*
  %154 = load i64, i64* %153, align 8, !tbaa !53
  %arrayidx8.i.us46.3.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %99, i64 0, i32 2, i64 %indvars.iv.next.i.us47.2.ls
  %155 = bitcast %struct.vertex.29** %arrayidx8.i.us46.3.ls to i64*
  store i64 %154, i64* %155, align 8, !tbaa !53
  %indvars.iv.next.i.us47.3.ls = add nsw i64 %indvars.iv.i.us42.ls, 4
  %156 = trunc i64 %indvars.iv.next.i.us47.3.ls to i32
  %157 = xor i32 %156, -1
  %sub2.i.i.us43.4.ls = add i32 %101, %157
  %idxprom.i.i.us44.4.ls = sext i32 %sub2.i.i.us43.4.ls to i64
  %arrayidx.i23.i.us45.4.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.4.ls
  %158 = bitcast %struct.vertex.29** %arrayidx.i23.i.us45.4.ls to i64*
  %159 = load i64, i64* %158, align 8, !tbaa !53
  %arrayidx8.i.us46.4.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %99, i64 0, i32 2, i64 %indvars.iv.next.i.us47.3.ls
  %160 = bitcast %struct.vertex.29** %arrayidx8.i.us46.4.ls to i64*
  store i64 %159, i64* %160, align 8, !tbaa !53
  %indvars.iv.next.i.us47.4.ls = add nsw i64 %indvars.iv.i.us42.ls, 5
  %161 = trunc i64 %indvars.iv.next.i.us47.4.ls to i32
  %162 = xor i32 %161, -1
  %sub2.i.i.us43.5.ls = add i32 %101, %162
  %idxprom.i.i.us44.5.ls = sext i32 %sub2.i.i.us43.5.ls to i64
  %arrayidx.i23.i.us45.5.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.5.ls
  %163 = bitcast %struct.vertex.29** %arrayidx.i23.i.us45.5.ls to i64*
  %164 = load i64, i64* %163, align 8, !tbaa !53
  %arrayidx8.i.us46.5.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %99, i64 0, i32 2, i64 %indvars.iv.next.i.us47.4.ls
  %165 = bitcast %struct.vertex.29** %arrayidx8.i.us46.5.ls to i64*
  store i64 %164, i64* %165, align 8, !tbaa !53
  %indvars.iv.next.i.us47.5.ls = add nsw i64 %indvars.iv.i.us42.ls, 6
  %166 = trunc i64 %indvars.iv.next.i.us47.5.ls to i32
  %167 = xor i32 %166, -1
  %sub2.i.i.us43.6.ls = add i32 %101, %167
  %idxprom.i.i.us44.6.ls = sext i32 %sub2.i.i.us43.6.ls to i64
  %arrayidx.i23.i.us45.6.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.6.ls
  %168 = bitcast %struct.vertex.29** %arrayidx.i23.i.us45.6.ls to i64*
  %169 = load i64, i64* %168, align 8, !tbaa !53
  %arrayidx8.i.us46.6.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %99, i64 0, i32 2, i64 %indvars.iv.next.i.us47.5.ls
  %170 = bitcast %struct.vertex.29** %arrayidx8.i.us46.6.ls to i64*
  store i64 %169, i64* %170, align 8, !tbaa !53
  %indvars.iv.next.i.us47.6.ls = add nsw i64 %indvars.iv.i.us42.ls, 7
  %171 = trunc i64 %indvars.iv.next.i.us47.6.ls to i32
  %172 = xor i32 %171, -1
  %sub2.i.i.us43.7.ls = add i32 %101, %172
  %idxprom.i.i.us44.7.ls = sext i32 %sub2.i.i.us43.7.ls to i64
  %arrayidx.i23.i.us45.7.ls = getelementptr inbounds %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN", %"struct.kNearestNeighbor<vertex<_point3d<double>, 1>, 1>::kNN"* %nn.i.us29.ls, i64 0, i32 1, i64 %idxprom.i.i.us44.7.ls
  %173 = bitcast %struct.vertex.29** %arrayidx.i23.i.us45.7.ls to i64*
  %174 = load i64, i64* %173, align 8, !tbaa !53
  %arrayidx8.i.us46.7.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %99, i64 0, i32 2, i64 %indvars.iv.next.i.us47.6.ls
  %175 = bitcast %struct.vertex.29** %arrayidx8.i.us46.7.ls to i64*
  store i64 %174, i64* %175, align 8, !tbaa !53
  %indvars.iv.next.i.us47.7.ls = add nsw i64 %indvars.iv.i.us42.ls, 8
  %exitcond.i.us48.7.ls = icmp eq i64 %indvars.iv.next.i.us47.7.ls, %.ls9
  br i1 %exitcond.i.us48.7.ls, label %_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE8kNearestEPS3_PS5_i.exit.loopexit.us53.ls, label %for.body6.i.us41.ls, !llvm.loop !510

_ZN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE8kNearestEPS3_PS5_i.exit.loopexit.us53.ls: ; preds = %for.body6.i.us41.ls, %for.body6.i.us41.prol.loopexit.ls
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #2
  %176 = icmp ult i64 %indvars.iv.ls, %.ls
  %indvars.iv.next.ls = add nuw nsw i64 %indvars.iv.ls, 1
  br i1 %176, label %pfor.detach.us26.ls, label %pfor.cond.cleanup.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE5gTreeEPPS5_i_pfor.detach.ls(i64 %indvars.iv.start.ls, i64 %end.ls, i64 %.ls, %struct.vertex.29** nocapture readonly align 1 %vv.ls, %struct.vertex.29** nocapture align 1 %.ls1) unnamed_addr #15 align 2 {
pfor.detach.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount3 = sub i64 %end.ls, %indvars.iv.start.ls
  %9 = icmp ugt i64 %itercount3, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.lr.ph.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount5 = phi i64 [ %itercount3, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv.ls.dac4 = phi i64 [ %indvars.iv.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount5, 1
  %miditer = add nuw nsw i64 %indvars.iv.ls.dac4, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split6, label %.split.split

.split6:                                          ; preds = %16
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE5gTreeEPPS5_i_pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac4, i64 %miditer, i64 %.ls, %struct.vertex.29** %vv.ls, %struct.vertex.29** %.ls1)
  br label %.split.split

.split.split:                                     ; preds = %.split6, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.lr.ph.ls.split._crit_edge

pfor.detach.lr.ph.ls.split._crit_edge:            ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv.ls.dac.lcssa = phi i64 [ %indvars.iv.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  %22 = icmp ugt i64 %indvars.iv.ls.dac.lcssa, %end.ls
  %umax = select i1 %22, i64 %indvars.iv.ls.dac.lcssa, i64 %end.ls
  %23 = add i64 %umax, 1
  %24 = sub i64 %23, %indvars.iv.ls.dac.lcssa
  %min.iters.check = icmp ult i64 %24, 16
  br i1 %min.iters.check, label %pfor.detach.ls.preheader, label %vector.memcheck

pfor.detach.ls.preheader:                         ; preds = %middle.block, %vector.memcheck, %pfor.detach.lr.ph.ls.split._crit_edge
  %indvars.iv.ls.ph = phi i64 [ %indvars.iv.ls.dac.lcssa, %vector.memcheck ], [ %indvars.iv.ls.dac.lcssa, %pfor.detach.lr.ph.ls.split._crit_edge ], [ %ind.end, %middle.block ]
  br label %pfor.detach.ls

vector.memcheck:                                  ; preds = %pfor.detach.lr.ph.ls.split._crit_edge
  %scevgep = getelementptr %struct.vertex.29*, %struct.vertex.29** %.ls1, i64 %indvars.iv.ls.dac.lcssa
  %25 = icmp ugt i64 %indvars.iv.ls.dac.lcssa, %end.ls
  %umax3 = select i1 %25, i64 %indvars.iv.ls.dac.lcssa, i64 %end.ls
  %26 = add i64 %umax3, 1
  %scevgep4 = getelementptr %struct.vertex.29*, %struct.vertex.29** %.ls1, i64 %26
  %scevgep6 = getelementptr %struct.vertex.29*, %struct.vertex.29** %vv.ls, i64 %indvars.iv.ls.dac.lcssa
  %scevgep8 = getelementptr %struct.vertex.29*, %struct.vertex.29** %vv.ls, i64 %26
  %bound0 = icmp ult %struct.vertex.29** %scevgep, %scevgep8
  %bound1 = icmp ult %struct.vertex.29** %scevgep6, %scevgep4
  %memcheck.conflict = and i1 %bound0, %bound1
  br i1 %memcheck.conflict, label %pfor.detach.ls.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %24, -16
  %ind.end = add i64 %indvars.iv.ls.dac.lcssa, %n.vec
  %27 = add i64 %n.vec, -16
  %28 = lshr exact i64 %27, 4
  %29 = add nuw nsw i64 %28, 1
  %xtraiter = and i64 %29, 3
  %30 = icmp ult i64 %27, 48
  br i1 %30, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nsw i64 %29, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.3, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.3, %vector.body ]
  %31 = add i64 %indvars.iv.ls.dac.lcssa, %index
  %32 = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %vv.ls, i64 %31
  %33 = bitcast %struct.vertex.29** %32 to <4 x i64>*
  %wide.load = load <4 x i64>, <4 x i64>* %33, align 8, !tbaa !53, !alias.scope !518
  %34 = getelementptr %struct.vertex.29*, %struct.vertex.29** %32, i64 4
  %35 = bitcast %struct.vertex.29** %34 to <4 x i64>*
  %wide.load13 = load <4 x i64>, <4 x i64>* %35, align 8, !tbaa !53, !alias.scope !518
  %36 = getelementptr %struct.vertex.29*, %struct.vertex.29** %32, i64 8
  %37 = bitcast %struct.vertex.29** %36 to <4 x i64>*
  %wide.load14 = load <4 x i64>, <4 x i64>* %37, align 8, !tbaa !53, !alias.scope !518
  %38 = getelementptr %struct.vertex.29*, %struct.vertex.29** %32, i64 12
  %39 = bitcast %struct.vertex.29** %38 to <4 x i64>*
  %wide.load15 = load <4 x i64>, <4 x i64>* %39, align 8, !tbaa !53, !alias.scope !518
  %40 = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %.ls1, i64 %31
  %41 = bitcast %struct.vertex.29** %40 to <4 x i64>*
  store <4 x i64> %wide.load, <4 x i64>* %41, align 8, !tbaa !53, !alias.scope !521, !noalias !518
  %42 = getelementptr %struct.vertex.29*, %struct.vertex.29** %40, i64 4
  %43 = bitcast %struct.vertex.29** %42 to <4 x i64>*
  store <4 x i64> %wide.load13, <4 x i64>* %43, align 8, !tbaa !53, !alias.scope !521, !noalias !518
  %44 = getelementptr %struct.vertex.29*, %struct.vertex.29** %40, i64 8
  %45 = bitcast %struct.vertex.29** %44 to <4 x i64>*
  store <4 x i64> %wide.load14, <4 x i64>* %45, align 8, !tbaa !53, !alias.scope !521, !noalias !518
  %46 = getelementptr %struct.vertex.29*, %struct.vertex.29** %40, i64 12
  %47 = bitcast %struct.vertex.29** %46 to <4 x i64>*
  store <4 x i64> %wide.load15, <4 x i64>* %47, align 8, !tbaa !53, !alias.scope !521, !noalias !518
  %index.next = or i64 %index, 16
  %48 = add i64 %indvars.iv.ls.dac.lcssa, %index.next
  %49 = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %vv.ls, i64 %48
  %50 = bitcast %struct.vertex.29** %49 to <4 x i64>*
  %wide.load.1 = load <4 x i64>, <4 x i64>* %50, align 8, !tbaa !53, !alias.scope !518
  %51 = getelementptr %struct.vertex.29*, %struct.vertex.29** %49, i64 4
  %52 = bitcast %struct.vertex.29** %51 to <4 x i64>*
  %wide.load13.1 = load <4 x i64>, <4 x i64>* %52, align 8, !tbaa !53, !alias.scope !518
  %53 = getelementptr %struct.vertex.29*, %struct.vertex.29** %49, i64 8
  %54 = bitcast %struct.vertex.29** %53 to <4 x i64>*
  %wide.load14.1 = load <4 x i64>, <4 x i64>* %54, align 8, !tbaa !53, !alias.scope !518
  %55 = getelementptr %struct.vertex.29*, %struct.vertex.29** %49, i64 12
  %56 = bitcast %struct.vertex.29** %55 to <4 x i64>*
  %wide.load15.1 = load <4 x i64>, <4 x i64>* %56, align 8, !tbaa !53, !alias.scope !518
  %57 = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %.ls1, i64 %48
  %58 = bitcast %struct.vertex.29** %57 to <4 x i64>*
  store <4 x i64> %wide.load.1, <4 x i64>* %58, align 8, !tbaa !53, !alias.scope !521, !noalias !518
  %59 = getelementptr %struct.vertex.29*, %struct.vertex.29** %57, i64 4
  %60 = bitcast %struct.vertex.29** %59 to <4 x i64>*
  store <4 x i64> %wide.load13.1, <4 x i64>* %60, align 8, !tbaa !53, !alias.scope !521, !noalias !518
  %61 = getelementptr %struct.vertex.29*, %struct.vertex.29** %57, i64 8
  %62 = bitcast %struct.vertex.29** %61 to <4 x i64>*
  store <4 x i64> %wide.load14.1, <4 x i64>* %62, align 8, !tbaa !53, !alias.scope !521, !noalias !518
  %63 = getelementptr %struct.vertex.29*, %struct.vertex.29** %57, i64 12
  %64 = bitcast %struct.vertex.29** %63 to <4 x i64>*
  store <4 x i64> %wide.load15.1, <4 x i64>* %64, align 8, !tbaa !53, !alias.scope !521, !noalias !518
  %index.next.1 = or i64 %index, 32
  %65 = add i64 %indvars.iv.ls.dac.lcssa, %index.next.1
  %66 = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %vv.ls, i64 %65
  %67 = bitcast %struct.vertex.29** %66 to <4 x i64>*
  %wide.load.2 = load <4 x i64>, <4 x i64>* %67, align 8, !tbaa !53, !alias.scope !518
  %68 = getelementptr %struct.vertex.29*, %struct.vertex.29** %66, i64 4
  %69 = bitcast %struct.vertex.29** %68 to <4 x i64>*
  %wide.load13.2 = load <4 x i64>, <4 x i64>* %69, align 8, !tbaa !53, !alias.scope !518
  %70 = getelementptr %struct.vertex.29*, %struct.vertex.29** %66, i64 8
  %71 = bitcast %struct.vertex.29** %70 to <4 x i64>*
  %wide.load14.2 = load <4 x i64>, <4 x i64>* %71, align 8, !tbaa !53, !alias.scope !518
  %72 = getelementptr %struct.vertex.29*, %struct.vertex.29** %66, i64 12
  %73 = bitcast %struct.vertex.29** %72 to <4 x i64>*
  %wide.load15.2 = load <4 x i64>, <4 x i64>* %73, align 8, !tbaa !53, !alias.scope !518
  %74 = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %.ls1, i64 %65
  %75 = bitcast %struct.vertex.29** %74 to <4 x i64>*
  store <4 x i64> %wide.load.2, <4 x i64>* %75, align 8, !tbaa !53, !alias.scope !521, !noalias !518
  %76 = getelementptr %struct.vertex.29*, %struct.vertex.29** %74, i64 4
  %77 = bitcast %struct.vertex.29** %76 to <4 x i64>*
  store <4 x i64> %wide.load13.2, <4 x i64>* %77, align 8, !tbaa !53, !alias.scope !521, !noalias !518
  %78 = getelementptr %struct.vertex.29*, %struct.vertex.29** %74, i64 8
  %79 = bitcast %struct.vertex.29** %78 to <4 x i64>*
  store <4 x i64> %wide.load14.2, <4 x i64>* %79, align 8, !tbaa !53, !alias.scope !521, !noalias !518
  %80 = getelementptr %struct.vertex.29*, %struct.vertex.29** %74, i64 12
  %81 = bitcast %struct.vertex.29** %80 to <4 x i64>*
  store <4 x i64> %wide.load15.2, <4 x i64>* %81, align 8, !tbaa !53, !alias.scope !521, !noalias !518
  %index.next.2 = or i64 %index, 48
  %82 = add i64 %indvars.iv.ls.dac.lcssa, %index.next.2
  %83 = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %vv.ls, i64 %82
  %84 = bitcast %struct.vertex.29** %83 to <4 x i64>*
  %wide.load.3 = load <4 x i64>, <4 x i64>* %84, align 8, !tbaa !53, !alias.scope !518
  %85 = getelementptr %struct.vertex.29*, %struct.vertex.29** %83, i64 4
  %86 = bitcast %struct.vertex.29** %85 to <4 x i64>*
  %wide.load13.3 = load <4 x i64>, <4 x i64>* %86, align 8, !tbaa !53, !alias.scope !518
  %87 = getelementptr %struct.vertex.29*, %struct.vertex.29** %83, i64 8
  %88 = bitcast %struct.vertex.29** %87 to <4 x i64>*
  %wide.load14.3 = load <4 x i64>, <4 x i64>* %88, align 8, !tbaa !53, !alias.scope !518
  %89 = getelementptr %struct.vertex.29*, %struct.vertex.29** %83, i64 12
  %90 = bitcast %struct.vertex.29** %89 to <4 x i64>*
  %wide.load15.3 = load <4 x i64>, <4 x i64>* %90, align 8, !tbaa !53, !alias.scope !518
  %91 = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %.ls1, i64 %82
  %92 = bitcast %struct.vertex.29** %91 to <4 x i64>*
  store <4 x i64> %wide.load.3, <4 x i64>* %92, align 8, !tbaa !53, !alias.scope !521, !noalias !518
  %93 = getelementptr %struct.vertex.29*, %struct.vertex.29** %91, i64 4
  %94 = bitcast %struct.vertex.29** %93 to <4 x i64>*
  store <4 x i64> %wide.load13.3, <4 x i64>* %94, align 8, !tbaa !53, !alias.scope !521, !noalias !518
  %95 = getelementptr %struct.vertex.29*, %struct.vertex.29** %91, i64 8
  %96 = bitcast %struct.vertex.29** %95 to <4 x i64>*
  store <4 x i64> %wide.load14.3, <4 x i64>* %96, align 8, !tbaa !53, !alias.scope !521, !noalias !518
  %97 = getelementptr %struct.vertex.29*, %struct.vertex.29** %91, i64 12
  %98 = bitcast %struct.vertex.29** %97 to <4 x i64>*
  store <4 x i64> %wide.load15.3, <4 x i64>* %98, align 8, !tbaa !53, !alias.scope !521, !noalias !518
  %index.next.3 = add i64 %index, 64
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !523

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.3, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil.preheader

vector.body.epil.preheader:                       ; preds = %middle.block.unr-lcssa
  br label %vector.body.epil

vector.body.epil:                                 ; preds = %vector.body.epil, %vector.body.epil.preheader
  %index.epil = phi i64 [ %index.unr, %vector.body.epil.preheader ], [ %index.next.epil, %vector.body.epil ]
  %epil.iter = phi i64 [ %xtraiter, %vector.body.epil.preheader ], [ %epil.iter.sub, %vector.body.epil ]
  %99 = add i64 %indvars.iv.ls.dac.lcssa, %index.epil
  %100 = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %vv.ls, i64 %99
  %101 = bitcast %struct.vertex.29** %100 to <4 x i64>*
  %wide.load.epil = load <4 x i64>, <4 x i64>* %101, align 8, !tbaa !53, !alias.scope !518
  %102 = getelementptr %struct.vertex.29*, %struct.vertex.29** %100, i64 4
  %103 = bitcast %struct.vertex.29** %102 to <4 x i64>*
  %wide.load13.epil = load <4 x i64>, <4 x i64>* %103, align 8, !tbaa !53, !alias.scope !518
  %104 = getelementptr %struct.vertex.29*, %struct.vertex.29** %100, i64 8
  %105 = bitcast %struct.vertex.29** %104 to <4 x i64>*
  %wide.load14.epil = load <4 x i64>, <4 x i64>* %105, align 8, !tbaa !53, !alias.scope !518
  %106 = getelementptr %struct.vertex.29*, %struct.vertex.29** %100, i64 12
  %107 = bitcast %struct.vertex.29** %106 to <4 x i64>*
  %wide.load15.epil = load <4 x i64>, <4 x i64>* %107, align 8, !tbaa !53, !alias.scope !518
  %108 = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %.ls1, i64 %99
  %109 = bitcast %struct.vertex.29** %108 to <4 x i64>*
  store <4 x i64> %wide.load.epil, <4 x i64>* %109, align 8, !tbaa !53, !alias.scope !521, !noalias !518
  %110 = getelementptr %struct.vertex.29*, %struct.vertex.29** %108, i64 4
  %111 = bitcast %struct.vertex.29** %110 to <4 x i64>*
  store <4 x i64> %wide.load13.epil, <4 x i64>* %111, align 8, !tbaa !53, !alias.scope !521, !noalias !518
  %112 = getelementptr %struct.vertex.29*, %struct.vertex.29** %108, i64 8
  %113 = bitcast %struct.vertex.29** %112 to <4 x i64>*
  store <4 x i64> %wide.load14.epil, <4 x i64>* %113, align 8, !tbaa !53, !alias.scope !521, !noalias !518
  %114 = getelementptr %struct.vertex.29*, %struct.vertex.29** %108, i64 12
  %115 = bitcast %struct.vertex.29** %114 to <4 x i64>*
  store <4 x i64> %wide.load15.epil, <4 x i64>* %115, align 8, !tbaa !53, !alias.scope !521, !noalias !518
  %index.next.epil = add i64 %index.epil, 16
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block, label %vector.body.epil, !llvm.loop !524

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %24, %n.vec
  br i1 %cmp.n, label %pfor.cond.cleanup.loopexit.ls, label %pfor.detach.ls.preheader

pfor.cond.cleanup.loopexit.ls:                    ; preds = %pfor.detach.ls, %middle.block
  %116 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %117 = load atomic i32, i32* %116 acquire, align 8
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %120 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %121 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %122 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %121, i16* nonnull %122) #2
  %123 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %124 = call i8* @llvm.frameaddress(i32 0) #2
  %125 = getelementptr inbounds [5 x i8*], [5 x i8*]* %123, i64 0, i64 0
  store volatile i8* %124, i8** %125, align 8
  %126 = call i8* @llvm.stacksave() #2
  %127 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %126, i8** %127, align 8
  %128 = bitcast [5 x i8*]* %123 to i8*
  %129 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %128) #24
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %131 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %132 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %131, i64 0, i32 12, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 1
  store i64 %134, i64* %132, align 8
  %135 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %136 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %135, i64 0, i32 9
  %139 = bitcast %struct.__cilkrts_stack_frame** %138 to i64*
  store atomic i64 %137, i64* %139 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %140 = load atomic i32, i32* %116 acquire, align 8
  %141 = icmp eq i32 %140, 16777216
  br i1 %141, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %pfor.detach.ls
  %indvars.iv.ls = phi i64 [ %indvars.iv.next.ls, %pfor.detach.ls ], [ %indvars.iv.ls.ph, %pfor.detach.ls.preheader ]
  %arrayidx.ls = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %vv.ls, i64 %indvars.iv.ls
  %142 = bitcast %struct.vertex.29** %arrayidx.ls to i64*
  %143 = load i64, i64* %142, align 8, !tbaa !53
  %arrayidx8.ls = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %.ls1, i64 %indvars.iv.ls
  %144 = bitcast %struct.vertex.29** %arrayidx8.ls to i64*
  store i64 %143, i64* %144, align 8, !tbaa !53
  %145 = icmp ult i64 %indvars.iv.ls, %end.ls
  %indvars.iv.next.ls = add nuw nsw i64 %indvars.iv.ls, 1
  br i1 %145, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit.ls, !llvm.loop !525
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2__pfor.detach.ls(i64 %indvars.iv.start.ls, i64 %end.ls, i64 %.ls, i64 %.ls1, i32 %.ls2, i64 %.ls3, i64 %.ls4, i32 %e.ls, %struct.vertex.29** nocapture readonly align 1 %g.coerce.ls, i32 %.ls5, %"struct.std::pair.33"* nocapture align 1 %.ls6) unnamed_addr #15 {
pfor.detach.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount14 = sub i64 %end.ls, %indvars.iv.start.ls
  %9 = icmp ugt i64 %itercount14, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv.ls.ph = phi i64 [ %indvars.iv.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount16 = phi i64 [ %itercount14, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv.ls.dac15 = phi i64 [ %indvars.iv.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount16, 1
  %miditer = add nuw nsw i64 %indvars.iv.ls.dac15, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split17, label %.split.split

.split17:                                         ; preds = %16
  call fastcc void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2__pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac15, i64 %miditer, i64 %.ls, i64 %.ls1, i32 %.ls2, i64 %.ls3, i64 %.ls4, i32 %e.ls, %struct.vertex.29** %g.coerce.ls, i32 %.ls5, %"struct.std::pair.33"* %.ls6)
  br label %.split.split

.split.split:                                     ; preds = %.split17, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.ls:                             ; preds = %_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls
  %indvars.iv.ls = phi i64 [ %indvars.iv.next.ls, %_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls ], [ %indvars.iv.ls.ph, %pfor.detach.ls.preheader ]
  %48 = shl i64 %indvars.iv.ls, 10
  %49 = add i64 %48, %.ls1
  %50 = add nsw i64 %48, %.ls3
  %51 = add nsw i64 %50, 1024
  %cmp.i.ls = icmp sgt i64 %51, %.ls4
  %52 = trunc i64 %51 to i32
  %.sroa.speculated.ls = select i1 %cmp.i.ls, i32 %e.ls, i32 %52
  %arrayidx.i.i58.ls = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %g.coerce.ls, i64 %50
  %53 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx.i.i58.ls, align 8, !tbaa !53, !noalias !526
  %ref.tmp21.sroa.0.0..sroa_idx97.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %53, i64 0, i32 1, i32 0
  %54 = bitcast double* %ref.tmp21.sroa.0.0..sroa_idx97.ls to <2 x double>*
  %55 = load <2 x double>, <2 x double>* %54, align 8
  %ref.tmp21.sroa.8.0..sroa_idx105.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %53, i64 0, i32 1, i32 2
  %ref.tmp21.sroa.8.0.copyload106.ls = load double, double* %ref.tmp21.sroa.8.0..sroa_idx105.ls, align 8
  %56 = add nsw i64 %50, 1
  %57 = sext i32 %.sroa.speculated.ls to i64
  %cmp56.i62.ls = icmp slt i64 %56, %57
  br i1 %cmp56.i62.ls, label %for.body.i94.preheader.ls, label %_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls

for.body.i94.preheader.ls:                        ; preds = %pfor.detach.ls
  %58 = trunc i64 %indvars.iv.ls to i32
  %59 = mul i32 %58, -1024
  %60 = add i32 %59, %.ls2
  %61 = add i32 %.sroa.speculated.ls, %.ls5
  %62 = add i32 %60, %.sroa.speculated.ls
  %xtraiter184.ls = and i32 %61, 3
  %lcmp.mod185.ls = icmp eq i32 %xtraiter184.ls, 0
  br i1 %lcmp.mod185.ls, label %for.body.i94.prol.loopexit.ls, label %for.body.i94.prol.ls.preheader

for.body.i94.prol.ls.preheader:                   ; preds = %for.body.i94.preheader.ls
  br label %for.body.i94.prol.ls

for.body.i94.prol.ls:                             ; preds = %for.body.i94.prol.ls.preheader, %for.body.i94.prol.ls
  %indvars.iv.i77.prol.ls = phi i64 [ %indvars.iv.next.i91.prol.ls, %for.body.i94.prol.ls ], [ %56, %for.body.i94.prol.ls.preheader ]
  %63 = phi double [ %75, %for.body.i94.prol.ls ], [ %ref.tmp21.sroa.8.0.copyload106.ls, %for.body.i94.prol.ls.preheader ]
  %64 = phi double [ %72, %for.body.i94.prol.ls ], [ %ref.tmp21.sroa.8.0.copyload106.ls, %for.body.i94.prol.ls.preheader ]
  %65 = phi <2 x double> [ %71, %for.body.i94.prol.ls ], [ %55, %for.body.i94.prol.ls.preheader ]
  %66 = phi <2 x double> [ %74, %for.body.i94.prol.ls ], [ %55, %for.body.i94.prol.ls.preheader ]
  %prol.iter186.ls = phi i32 [ %prol.iter186.sub.ls, %for.body.i94.prol.ls ], [ %xtraiter184.ls, %for.body.i94.prol.ls.preheader ]
  %arrayidx.i10.i78.prol.ls = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %g.coerce.ls, i64 %indvars.iv.i77.prol.ls
  %67 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx.i10.i78.prol.ls, align 8, !tbaa !53, !noalias !531
  %agg.tmp1.sroa.0.0..sroa_idx.i79.prol.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %67, i64 0, i32 1, i32 0
  %68 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i79.prol.ls to <2 x double>*
  %69 = load <2 x double>, <2 x double>* %68, align 8, !noalias !534
  %agg.tmp1.sroa.3.0..sroa_idx52.i83.prol.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %67, i64 0, i32 1, i32 2
  %agg.tmp1.sroa.3.0.copyload.i84.prol.ls = load double, double* %agg.tmp1.sroa.3.0..sroa_idx52.i83.prol.ls, align 8, !noalias !534
  %70 = fcmp fast olt <2 x double> %69, %65
  %71 = select <2 x i1> %70, <2 x double> %69, <2 x double> %65
  %cmp.i7.i.i.i87.prol.ls = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i84.prol.ls, %64
  %72 = select i1 %cmp.i7.i.i.i87.prol.ls, double %agg.tmp1.sroa.3.0.copyload.i84.prol.ls, double %64
  %73 = fcmp fast olt <2 x double> %66, %69
  %74 = select <2 x i1> %73, <2 x double> %69, <2 x double> %66
  %cmp.i7.i16.i.i90.prol.ls = fcmp fast olt double %63, %agg.tmp1.sroa.3.0.copyload.i84.prol.ls
  %75 = select i1 %cmp.i7.i16.i.i90.prol.ls, double %agg.tmp1.sroa.3.0.copyload.i84.prol.ls, double %63
  %indvars.iv.next.i91.prol.ls = add nsw i64 %indvars.iv.i77.prol.ls, 1
  %prol.iter186.sub.ls = add nsw i32 %prol.iter186.ls, -1
  %prol.iter186.cmp.ls = icmp eq i32 %prol.iter186.sub.ls, 0
  br i1 %prol.iter186.cmp.ls, label %for.body.i94.prol.loopexit.loopexit.ls, label %for.body.i94.prol.ls, !llvm.loop !535

for.body.i94.prol.loopexit.ls:                    ; preds = %for.body.i94.prol.loopexit.loopexit.ls, %for.body.i94.preheader.ls
  %.lcssa180.unr.ls = phi <2 x double> [ undef, %for.body.i94.preheader.ls ], [ %71, %for.body.i94.prol.loopexit.loopexit.ls ]
  %.lcssa179.unr.ls = phi double [ undef, %for.body.i94.preheader.ls ], [ %72, %for.body.i94.prol.loopexit.loopexit.ls ]
  %.lcssa178.unr.ls = phi <2 x double> [ undef, %for.body.i94.preheader.ls ], [ %74, %for.body.i94.prol.loopexit.loopexit.ls ]
  %.lcssa177.unr.ls = phi double [ undef, %for.body.i94.preheader.ls ], [ %75, %for.body.i94.prol.loopexit.loopexit.ls ]
  %indvars.iv.i77.unr.ls = phi i64 [ %56, %for.body.i94.preheader.ls ], [ %124, %for.body.i94.prol.loopexit.loopexit.ls ]
  %.unr187.ls = phi double [ %ref.tmp21.sroa.8.0.copyload106.ls, %for.body.i94.preheader.ls ], [ %75, %for.body.i94.prol.loopexit.loopexit.ls ]
  %.unr188.ls = phi double [ %ref.tmp21.sroa.8.0.copyload106.ls, %for.body.i94.preheader.ls ], [ %72, %for.body.i94.prol.loopexit.loopexit.ls ]
  %.unr189.ls = phi <2 x double> [ %55, %for.body.i94.preheader.ls ], [ %71, %for.body.i94.prol.loopexit.loopexit.ls ]
  %.unr190.ls = phi <2 x double> [ %55, %for.body.i94.preheader.ls ], [ %74, %for.body.i94.prol.loopexit.loopexit.ls ]
  %76 = icmp ult i32 %62, 3
  br i1 %76, label %_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls, label %for.body.i94.ls.preheader

for.body.i94.ls.preheader:                        ; preds = %for.body.i94.prol.loopexit.ls
  br label %for.body.i94.ls

for.body.i94.ls:                                  ; preds = %for.body.i94.ls.preheader, %for.body.i94.ls
  %indvars.iv.i77.ls = phi i64 [ %indvars.iv.next.i91.3.ls, %for.body.i94.ls ], [ %indvars.iv.i77.unr.ls, %for.body.i94.ls.preheader ]
  %77 = phi double [ %116, %for.body.i94.ls ], [ %.unr187.ls, %for.body.i94.ls.preheader ]
  %78 = phi double [ %113, %for.body.i94.ls ], [ %.unr188.ls, %for.body.i94.ls.preheader ]
  %79 = phi <2 x double> [ %112, %for.body.i94.ls ], [ %.unr189.ls, %for.body.i94.ls.preheader ]
  %80 = phi <2 x double> [ %115, %for.body.i94.ls ], [ %.unr190.ls, %for.body.i94.ls.preheader ]
  %arrayidx.i10.i78.ls = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %g.coerce.ls, i64 %indvars.iv.i77.ls
  %81 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx.i10.i78.ls, align 8, !tbaa !53, !noalias !531
  %agg.tmp1.sroa.0.0..sroa_idx.i79.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %81, i64 0, i32 1, i32 0
  %82 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i79.ls to <2 x double>*
  %83 = load <2 x double>, <2 x double>* %82, align 8, !noalias !534
  %agg.tmp1.sroa.3.0..sroa_idx52.i83.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %81, i64 0, i32 1, i32 2
  %agg.tmp1.sroa.3.0.copyload.i84.ls = load double, double* %agg.tmp1.sroa.3.0..sroa_idx52.i83.ls, align 8, !noalias !534
  %84 = fcmp fast olt <2 x double> %83, %79
  %85 = select <2 x i1> %84, <2 x double> %83, <2 x double> %79
  %cmp.i7.i.i.i87.ls = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i84.ls, %78
  %86 = select i1 %cmp.i7.i.i.i87.ls, double %agg.tmp1.sroa.3.0.copyload.i84.ls, double %78
  %87 = fcmp fast olt <2 x double> %80, %83
  %88 = select <2 x i1> %87, <2 x double> %83, <2 x double> %80
  %cmp.i7.i16.i.i90.ls = fcmp fast olt double %77, %agg.tmp1.sroa.3.0.copyload.i84.ls
  %89 = select i1 %cmp.i7.i16.i.i90.ls, double %agg.tmp1.sroa.3.0.copyload.i84.ls, double %77
  %indvars.iv.next.i91.ls = add nsw i64 %indvars.iv.i77.ls, 1
  %arrayidx.i10.i78.1.ls = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %g.coerce.ls, i64 %indvars.iv.next.i91.ls
  %90 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx.i10.i78.1.ls, align 8, !tbaa !53, !noalias !531
  %agg.tmp1.sroa.0.0..sroa_idx.i79.1.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %90, i64 0, i32 1, i32 0
  %91 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i79.1.ls to <2 x double>*
  %92 = load <2 x double>, <2 x double>* %91, align 8, !noalias !534
  %agg.tmp1.sroa.3.0..sroa_idx52.i83.1.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %90, i64 0, i32 1, i32 2
  %agg.tmp1.sroa.3.0.copyload.i84.1.ls = load double, double* %agg.tmp1.sroa.3.0..sroa_idx52.i83.1.ls, align 8, !noalias !534
  %93 = fcmp fast olt <2 x double> %92, %85
  %94 = select <2 x i1> %93, <2 x double> %92, <2 x double> %85
  %cmp.i7.i.i.i87.1.ls = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i84.1.ls, %86
  %95 = select i1 %cmp.i7.i.i.i87.1.ls, double %agg.tmp1.sroa.3.0.copyload.i84.1.ls, double %86
  %96 = fcmp fast olt <2 x double> %88, %92
  %97 = select <2 x i1> %96, <2 x double> %92, <2 x double> %88
  %cmp.i7.i16.i.i90.1.ls = fcmp fast olt double %89, %agg.tmp1.sroa.3.0.copyload.i84.1.ls
  %98 = select i1 %cmp.i7.i16.i.i90.1.ls, double %agg.tmp1.sroa.3.0.copyload.i84.1.ls, double %89
  %indvars.iv.next.i91.1.ls = add nsw i64 %indvars.iv.i77.ls, 2
  %arrayidx.i10.i78.2.ls = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %g.coerce.ls, i64 %indvars.iv.next.i91.1.ls
  %99 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx.i10.i78.2.ls, align 8, !tbaa !53, !noalias !531
  %agg.tmp1.sroa.0.0..sroa_idx.i79.2.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %99, i64 0, i32 1, i32 0
  %100 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i79.2.ls to <2 x double>*
  %101 = load <2 x double>, <2 x double>* %100, align 8, !noalias !534
  %agg.tmp1.sroa.3.0..sroa_idx52.i83.2.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %99, i64 0, i32 1, i32 2
  %agg.tmp1.sroa.3.0.copyload.i84.2.ls = load double, double* %agg.tmp1.sroa.3.0..sroa_idx52.i83.2.ls, align 8, !noalias !534
  %102 = fcmp fast olt <2 x double> %101, %94
  %103 = select <2 x i1> %102, <2 x double> %101, <2 x double> %94
  %cmp.i7.i.i.i87.2.ls = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i84.2.ls, %95
  %104 = select i1 %cmp.i7.i.i.i87.2.ls, double %agg.tmp1.sroa.3.0.copyload.i84.2.ls, double %95
  %105 = fcmp fast olt <2 x double> %97, %101
  %106 = select <2 x i1> %105, <2 x double> %101, <2 x double> %97
  %cmp.i7.i16.i.i90.2.ls = fcmp fast olt double %98, %agg.tmp1.sroa.3.0.copyload.i84.2.ls
  %107 = select i1 %cmp.i7.i16.i.i90.2.ls, double %agg.tmp1.sroa.3.0.copyload.i84.2.ls, double %98
  %indvars.iv.next.i91.2.ls = add nsw i64 %indvars.iv.i77.ls, 3
  %arrayidx.i10.i78.3.ls = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %g.coerce.ls, i64 %indvars.iv.next.i91.2.ls
  %108 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx.i10.i78.3.ls, align 8, !tbaa !53, !noalias !531
  %agg.tmp1.sroa.0.0..sroa_idx.i79.3.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %108, i64 0, i32 1, i32 0
  %109 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i79.3.ls to <2 x double>*
  %110 = load <2 x double>, <2 x double>* %109, align 8, !noalias !534
  %agg.tmp1.sroa.3.0..sroa_idx52.i83.3.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %108, i64 0, i32 1, i32 2
  %agg.tmp1.sroa.3.0.copyload.i84.3.ls = load double, double* %agg.tmp1.sroa.3.0..sroa_idx52.i83.3.ls, align 8, !noalias !534
  %111 = fcmp fast olt <2 x double> %110, %103
  %112 = select <2 x i1> %111, <2 x double> %110, <2 x double> %103
  %cmp.i7.i.i.i87.3.ls = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i84.3.ls, %104
  %113 = select i1 %cmp.i7.i.i.i87.3.ls, double %agg.tmp1.sroa.3.0.copyload.i84.3.ls, double %104
  %114 = fcmp fast olt <2 x double> %106, %110
  %115 = select <2 x i1> %114, <2 x double> %110, <2 x double> %106
  %cmp.i7.i16.i.i90.3.ls = fcmp fast olt double %107, %agg.tmp1.sroa.3.0.copyload.i84.3.ls
  %116 = select i1 %cmp.i7.i16.i.i90.3.ls, double %agg.tmp1.sroa.3.0.copyload.i84.3.ls, double %107
  %indvars.iv.next.i91.3.ls = add nsw i64 %indvars.iv.i77.ls, 4
  %lftr.wideiv.i92.3.ls = trunc i64 %indvars.iv.next.i91.3.ls to i32
  %exitcond.i93.3.ls = icmp eq i32 %.sroa.speculated.ls, %lftr.wideiv.i92.3.ls
  br i1 %exitcond.i93.3.ls, label %_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls, label %for.body.i94.ls

_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls: ; preds = %for.body.i94.ls, %for.body.i94.prol.loopexit.ls, %pfor.detach.ls
  %ref.tmp21.sroa.16.0.ls = phi double [ %ref.tmp21.sroa.8.0.copyload106.ls, %pfor.detach.ls ], [ %.lcssa177.unr.ls, %for.body.i94.prol.loopexit.ls ], [ %116, %for.body.i94.ls ]
  %ref.tmp21.sroa.8.0.ls = phi double [ %ref.tmp21.sroa.8.0.copyload106.ls, %pfor.detach.ls ], [ %.lcssa179.unr.ls, %for.body.i94.prol.loopexit.ls ], [ %113, %for.body.i94.ls ]
  %117 = phi <2 x double> [ %55, %pfor.detach.ls ], [ %.lcssa180.unr.ls, %for.body.i94.prol.loopexit.ls ], [ %112, %for.body.i94.ls ]
  %118 = phi <2 x double> [ %55, %pfor.detach.ls ], [ %.lcssa178.unr.ls, %for.body.i94.prol.loopexit.ls ], [ %115, %for.body.i94.ls ]
  %ref.tmp21.sroa.0.0..sroa_idx.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %.ls6, i64 %indvars.iv.ls, i32 0, i32 0
  %119 = bitcast double* %ref.tmp21.sroa.0.0..sroa_idx.ls to <2 x double>*
  store <2 x double> %117, <2 x double>* %119, align 8
  %ref.tmp21.sroa.8.0..sroa_idx104.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %.ls6, i64 %indvars.iv.ls, i32 0, i32 2
  store double %ref.tmp21.sroa.8.0.ls, double* %ref.tmp21.sroa.8.0..sroa_idx104.ls, align 8
  %ref.tmp21.sroa.10.24..sroa_idx108.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %.ls6, i64 %indvars.iv.ls, i32 1, i32 0
  %120 = bitcast double* %ref.tmp21.sroa.10.24..sroa_idx108.ls to <2 x double>*
  store <2 x double> %118, <2 x double>* %120, align 8
  %ref.tmp21.sroa.16.24..sroa_idx116.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %.ls6, i64 %indvars.iv.ls, i32 1, i32 2
  store double %ref.tmp21.sroa.16.0.ls, double* %ref.tmp21.sroa.16.24..sroa_idx116.ls, align 8
  %121 = icmp ult i64 %indvars.iv.ls, %end.ls
  %indvars.iv.next.ls = add nuw nsw i64 %indvars.iv.ls, 1
  br i1 %121, label %pfor.detach.ls, label %pfor.cond.cleanup.ls

for.body.i94.prol.loopexit.loopexit.ls:           ; preds = %for.body.i94.prol.ls
  %122 = add nsw i32 %xtraiter184.ls, -1
  %123 = zext i32 %122 to i64
  %124 = add i64 %49, %123
  br label %for.body.i94.prol.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2__pfor.detach.ls(i64 %indvars.iv.start.ls, i64 %end.ls, i64 %.ls, i32 %.ls1, i64 %.ls2, i64 %.ls3, i32 %e.ls, %"struct.std::pair.33"* nocapture readonly align 1 %g.coerce.ls, i32 %.ls4, %"struct.std::pair.33"* nocapture align 1 %.ls5) unnamed_addr #15 {
pfor.detach.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount9 = sub i64 %end.ls, %indvars.iv.start.ls
  %9 = icmp ugt i64 %itercount9, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv.ls.ph = phi i64 [ %indvars.iv.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount11 = phi i64 [ %itercount9, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv.ls.dac10 = phi i64 [ %indvars.iv.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount11, 1
  %miditer = add nuw nsw i64 %indvars.iv.ls.dac10, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split12, label %.split.split

.split12:                                         ; preds = %16
  call fastcc void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2__pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac10, i64 %miditer, i64 %.ls, i32 %.ls1, i64 %.ls2, i64 %.ls3, i32 %e.ls, %"struct.std::pair.33"* %g.coerce.ls, i32 %.ls4, %"struct.std::pair.33"* %.ls5)
  br label %.split.split

.split.split:                                     ; preds = %.split12, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.ls:                             ; preds = %_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit95.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit95.ls
  %indvars.iv.ls = phi i64 [ %indvars.iv.next.ls, %_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit95.ls ], [ %indvars.iv.ls.ph, %pfor.detach.ls.preheader ]
  %48 = trunc i64 %indvars.iv.ls to i32
  %49 = mul i32 %48, -1024
  %50 = add i32 %49, %.ls1
  %51 = shl nsw i64 %indvars.iv.ls, 10
  %52 = add nsw i64 %51, %.ls2
  %53 = add nsw i64 %52, 1024
  %cmp.i.ls = icmp sgt i64 %53, %.ls3
  %54 = trunc i64 %53 to i32
  %.sroa.speculated.ls = select i1 %cmp.i.ls, i32 %e.ls, i32 %54
  %ref.tmp21.sroa.0.0..sroa_idx.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %52, i32 0, i32 0
  %55 = bitcast double* %ref.tmp21.sroa.0.0..sroa_idx.ls to <2 x double>*
  %56 = load <2 x double>, <2 x double>* %55, align 8
  %ref.tmp21.sroa.8.0..sroa_idx104.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %52, i32 0, i32 2
  %ref.tmp21.sroa.8.0.copyload.ls = load double, double* %ref.tmp21.sroa.8.0..sroa_idx104.ls, align 8
  %ref.tmp21.sroa.10.0..sroa_idx108.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %52, i32 1, i32 0
  %57 = bitcast double* %ref.tmp21.sroa.10.0..sroa_idx108.ls to <2 x double>*
  %58 = load <2 x double>, <2 x double>* %57, align 8
  %ref.tmp21.sroa.15.0..sroa_idx113.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %52, i32 1, i32 2
  %ref.tmp21.sroa.15.0.copyload.ls = load double, double* %ref.tmp21.sroa.15.0..sroa_idx113.ls, align 8
  %59 = add nsw i64 %52, 1
  %60 = sext i32 %.sroa.speculated.ls to i64
  %cmp55.i57.ls = icmp slt i64 %59, %60
  br i1 %cmp55.i57.ls, label %for.body.i94.preheader.ls, label %_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit95.ls

for.body.i94.preheader.ls:                        ; preds = %pfor.detach.ls
  %61 = add i32 %.sroa.speculated.ls, %.ls4
  %xtraiter181.ls = and i32 %61, 1
  %lcmp.mod182.ls = icmp eq i32 %xtraiter181.ls, 0
  br i1 %lcmp.mod182.ls, label %for.body.i94.prol.loopexit.ls, label %for.body.i94.prol.ls

for.body.i94.prol.ls:                             ; preds = %for.body.i94.preheader.ls
  %agg.tmp1.sroa.0.0..sroa_idx.i73.prol.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %59, i32 0, i32 0
  %62 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i73.prol.ls to <2 x double>*
  %63 = load <2 x double>, <2 x double>* %62, align 8, !noalias !536
  %agg.tmp1.sroa.3.0..sroa_idx50.i77.prol.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %59, i32 0, i32 2
  %agg.tmp1.sroa.3.0.copyload.i78.prol.ls = load double, double* %agg.tmp1.sroa.3.0..sroa_idx50.i77.prol.ls, align 8, !noalias !536
  %agg.tmp1.sroa.4.0..sroa_idx51.i79.prol.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %59, i32 1, i32 0
  %64 = bitcast double* %agg.tmp1.sroa.4.0..sroa_idx51.i79.prol.ls to <2 x double>*
  %65 = load <2 x double>, <2 x double>* %64, align 8, !noalias !536
  %agg.tmp1.sroa.6.0..sroa_idx53.i83.prol.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %59, i32 1, i32 2
  %agg.tmp1.sroa.6.0.copyload.i84.prol.ls = load double, double* %agg.tmp1.sroa.6.0..sroa_idx53.i83.prol.ls, align 8, !noalias !536
  %66 = fcmp fast olt <2 x double> %63, %56
  %67 = select <2 x i1> %66, <2 x double> %63, <2 x double> %56
  %cmp.i7.i.i.i87.prol.ls = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i78.prol.ls, %ref.tmp21.sroa.8.0.copyload.ls
  %68 = select i1 %cmp.i7.i.i.i87.prol.ls, double %agg.tmp1.sroa.3.0.copyload.i78.prol.ls, double %ref.tmp21.sroa.8.0.copyload.ls
  %69 = fcmp fast olt <2 x double> %58, %65
  %70 = select <2 x i1> %69, <2 x double> %65, <2 x double> %58
  %cmp.i7.i16.i.i90.prol.ls = fcmp fast olt double %ref.tmp21.sroa.15.0.copyload.ls, %agg.tmp1.sroa.6.0.copyload.i84.prol.ls
  %71 = select i1 %cmp.i7.i16.i.i90.prol.ls, double %agg.tmp1.sroa.6.0.copyload.i84.prol.ls, double %ref.tmp21.sroa.15.0.copyload.ls
  %indvars.iv.next.i91.prol.ls = add nsw i64 %52, 2
  br label %for.body.i94.prol.loopexit.ls

for.body.i94.prol.loopexit.ls:                    ; preds = %for.body.i94.prol.ls, %for.body.i94.preheader.ls
  %.lcssa177.unr.ph.ls = phi <2 x double> [ %67, %for.body.i94.prol.ls ], [ undef, %for.body.i94.preheader.ls ]
  %.lcssa176.unr.ph.ls = phi double [ %68, %for.body.i94.prol.ls ], [ undef, %for.body.i94.preheader.ls ]
  %.lcssa175.unr.ph.ls = phi <2 x double> [ %70, %for.body.i94.prol.ls ], [ undef, %for.body.i94.preheader.ls ]
  %.lcssa174.unr.ph.ls = phi double [ %71, %for.body.i94.prol.ls ], [ undef, %for.body.i94.preheader.ls ]
  %indvars.iv.i72.unr.ph.ls = phi i64 [ %indvars.iv.next.i91.prol.ls, %for.body.i94.prol.ls ], [ %59, %for.body.i94.preheader.ls ]
  %.unr183.ph.ls = phi double [ %71, %for.body.i94.prol.ls ], [ %ref.tmp21.sroa.15.0.copyload.ls, %for.body.i94.preheader.ls ]
  %.unr184.ph.ls = phi double [ %68, %for.body.i94.prol.ls ], [ %ref.tmp21.sroa.8.0.copyload.ls, %for.body.i94.preheader.ls ]
  %.unr185.ph.ls = phi <2 x double> [ %67, %for.body.i94.prol.ls ], [ %56, %for.body.i94.preheader.ls ]
  %.unr186.ph.ls = phi <2 x double> [ %70, %for.body.i94.prol.ls ], [ %58, %for.body.i94.preheader.ls ]
  %72 = sub i32 0, %50
  %73 = icmp eq i32 %.sroa.speculated.ls, %72
  br i1 %73, label %_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit95.ls, label %for.body.i94.ls.preheader

for.body.i94.ls.preheader:                        ; preds = %for.body.i94.prol.loopexit.ls
  br label %for.body.i94.ls

for.body.i94.ls:                                  ; preds = %for.body.i94.ls.preheader, %for.body.i94.ls
  %indvars.iv.i72.ls = phi i64 [ %indvars.iv.next.i91.1.ls, %for.body.i94.ls ], [ %indvars.iv.i72.unr.ph.ls, %for.body.i94.ls.preheader ]
  %74 = phi double [ %97, %for.body.i94.ls ], [ %.unr183.ph.ls, %for.body.i94.ls.preheader ]
  %75 = phi double [ %94, %for.body.i94.ls ], [ %.unr184.ph.ls, %for.body.i94.ls.preheader ]
  %76 = phi <2 x double> [ %93, %for.body.i94.ls ], [ %.unr185.ph.ls, %for.body.i94.ls.preheader ]
  %77 = phi <2 x double> [ %96, %for.body.i94.ls ], [ %.unr186.ph.ls, %for.body.i94.ls.preheader ]
  %agg.tmp1.sroa.0.0..sroa_idx.i73.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %indvars.iv.i72.ls, i32 0, i32 0
  %78 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i73.ls to <2 x double>*
  %79 = load <2 x double>, <2 x double>* %78, align 8, !noalias !536
  %agg.tmp1.sroa.3.0..sroa_idx50.i77.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %indvars.iv.i72.ls, i32 0, i32 2
  %agg.tmp1.sroa.3.0.copyload.i78.ls = load double, double* %agg.tmp1.sroa.3.0..sroa_idx50.i77.ls, align 8, !noalias !536
  %agg.tmp1.sroa.4.0..sroa_idx51.i79.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %indvars.iv.i72.ls, i32 1, i32 0
  %80 = bitcast double* %agg.tmp1.sroa.4.0..sroa_idx51.i79.ls to <2 x double>*
  %81 = load <2 x double>, <2 x double>* %80, align 8, !noalias !536
  %agg.tmp1.sroa.6.0..sroa_idx53.i83.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %indvars.iv.i72.ls, i32 1, i32 2
  %agg.tmp1.sroa.6.0.copyload.i84.ls = load double, double* %agg.tmp1.sroa.6.0..sroa_idx53.i83.ls, align 8, !noalias !536
  %82 = fcmp fast olt <2 x double> %79, %76
  %83 = select <2 x i1> %82, <2 x double> %79, <2 x double> %76
  %cmp.i7.i.i.i87.ls = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i78.ls, %75
  %84 = select i1 %cmp.i7.i.i.i87.ls, double %agg.tmp1.sroa.3.0.copyload.i78.ls, double %75
  %85 = fcmp fast olt <2 x double> %77, %81
  %86 = select <2 x i1> %85, <2 x double> %81, <2 x double> %77
  %cmp.i7.i16.i.i90.ls = fcmp fast olt double %74, %agg.tmp1.sroa.6.0.copyload.i84.ls
  %87 = select i1 %cmp.i7.i16.i.i90.ls, double %agg.tmp1.sroa.6.0.copyload.i84.ls, double %74
  %indvars.iv.next.i91.ls = add nsw i64 %indvars.iv.i72.ls, 1
  %agg.tmp1.sroa.0.0..sroa_idx.i73.1.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %indvars.iv.next.i91.ls, i32 0, i32 0
  %88 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i73.1.ls to <2 x double>*
  %89 = load <2 x double>, <2 x double>* %88, align 8, !noalias !536
  %agg.tmp1.sroa.3.0..sroa_idx50.i77.1.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %indvars.iv.next.i91.ls, i32 0, i32 2
  %agg.tmp1.sroa.3.0.copyload.i78.1.ls = load double, double* %agg.tmp1.sroa.3.0..sroa_idx50.i77.1.ls, align 8, !noalias !536
  %agg.tmp1.sroa.4.0..sroa_idx51.i79.1.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %indvars.iv.next.i91.ls, i32 1, i32 0
  %90 = bitcast double* %agg.tmp1.sroa.4.0..sroa_idx51.i79.1.ls to <2 x double>*
  %91 = load <2 x double>, <2 x double>* %90, align 8, !noalias !536
  %agg.tmp1.sroa.6.0..sroa_idx53.i83.1.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %indvars.iv.next.i91.ls, i32 1, i32 2
  %agg.tmp1.sroa.6.0.copyload.i84.1.ls = load double, double* %agg.tmp1.sroa.6.0..sroa_idx53.i83.1.ls, align 8, !noalias !536
  %92 = fcmp fast olt <2 x double> %89, %83
  %93 = select <2 x i1> %92, <2 x double> %89, <2 x double> %83
  %cmp.i7.i.i.i87.1.ls = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i78.1.ls, %84
  %94 = select i1 %cmp.i7.i.i.i87.1.ls, double %agg.tmp1.sroa.3.0.copyload.i78.1.ls, double %84
  %95 = fcmp fast olt <2 x double> %86, %91
  %96 = select <2 x i1> %95, <2 x double> %91, <2 x double> %86
  %cmp.i7.i16.i.i90.1.ls = fcmp fast olt double %87, %agg.tmp1.sroa.6.0.copyload.i84.1.ls
  %97 = select i1 %cmp.i7.i16.i.i90.1.ls, double %agg.tmp1.sroa.6.0.copyload.i84.1.ls, double %87
  %indvars.iv.next.i91.1.ls = add nsw i64 %indvars.iv.i72.ls, 2
  %lftr.wideiv.i92.1.ls = trunc i64 %indvars.iv.next.i91.1.ls to i32
  %exitcond.i93.1.ls = icmp eq i32 %.sroa.speculated.ls, %lftr.wideiv.i92.1.ls
  br i1 %exitcond.i93.1.ls, label %_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit95.ls, label %for.body.i94.ls

_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit95.ls: ; preds = %for.body.i94.ls, %for.body.i94.prol.loopexit.ls, %pfor.detach.ls
  %ref.tmp21.sroa.15.0.ls = phi double [ %ref.tmp21.sroa.15.0.copyload.ls, %pfor.detach.ls ], [ %.lcssa174.unr.ph.ls, %for.body.i94.prol.loopexit.ls ], [ %97, %for.body.i94.ls ]
  %ref.tmp21.sroa.8.0.ls = phi double [ %ref.tmp21.sroa.8.0.copyload.ls, %pfor.detach.ls ], [ %.lcssa176.unr.ph.ls, %for.body.i94.prol.loopexit.ls ], [ %94, %for.body.i94.ls ]
  %98 = phi <2 x double> [ %56, %pfor.detach.ls ], [ %.lcssa177.unr.ph.ls, %for.body.i94.prol.loopexit.ls ], [ %93, %for.body.i94.ls ]
  %99 = phi <2 x double> [ %58, %pfor.detach.ls ], [ %.lcssa175.unr.ph.ls, %for.body.i94.prol.loopexit.ls ], [ %96, %for.body.i94.ls ]
  %ref.tmp21.sroa.0.0..sroa_idx97.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %.ls5, i64 %indvars.iv.ls, i32 0, i32 0
  %100 = bitcast double* %ref.tmp21.sroa.0.0..sroa_idx97.ls to <2 x double>*
  store <2 x double> %98, <2 x double>* %100, align 8
  %ref.tmp21.sroa.8.0..sroa_idx105.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %.ls5, i64 %indvars.iv.ls, i32 0, i32 2
  store double %ref.tmp21.sroa.8.0.ls, double* %ref.tmp21.sroa.8.0..sroa_idx105.ls, align 8
  %ref.tmp21.sroa.10.24..sroa_idx.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %.ls5, i64 %indvars.iv.ls, i32 1, i32 0
  %101 = bitcast double* %ref.tmp21.sroa.10.24..sroa_idx.ls to <2 x double>*
  store <2 x double> %99, <2 x double>* %101, align 8
  %ref.tmp21.sroa.15.24..sroa_idx114.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %.ls5, i64 %indvars.iv.ls, i32 1, i32 2
  store double %ref.tmp21.sroa.15.0.ls, double* %ref.tmp21.sroa.15.24..sroa_idx114.ls, align 8
  %102 = icmp ult i64 %indvars.iv.ls, %end.ls
  %indvars.iv.next.ls = add nuw nsw i64 %indvars.iv.ls, 1
  br i1 %102, label %pfor.detach.ls, label %pfor.cond.cleanup.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.ls(i64 %indvars.iv101.start.ls, i64 %end.ls, i64 %.ls, %struct.vertex.29** nocapture readonly align 1 %S.ls, %"struct.std::pair.38"* nocapture align 1 %.ls1) unnamed_addr #15 align 2 {
pfor.detach.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount3 = sub i64 %end.ls, %indvars.iv101.start.ls
  %9 = icmp ugt i64 %itercount3, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv101.ls.ph = phi i64 [ %indvars.iv101.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount5 = phi i64 [ %itercount3, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv101.ls.dac4 = phi i64 [ %indvars.iv101.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount5, 1
  %miditer = add nuw nsw i64 %indvars.iv101.ls.dac4, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split6, label %.split.split

.split6:                                          ; preds = %16
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.ls_.split.cilk(i64 %indvars.iv101.ls.dac4, i64 %miditer, i64 %.ls, %struct.vertex.29** %S.ls, %"struct.std::pair.38"* %.ls1)
  br label %.split.split

.split.split:                                     ; preds = %.split6, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.loopexit129.ls:                 ; preds = %pfor.detach.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit129.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit129.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %pfor.detach.ls
  %indvars.iv101.ls = phi i64 [ %indvars.iv.next102.ls, %pfor.detach.ls ], [ %indvars.iv101.ls.ph, %pfor.detach.ls.preheader ]
  %arrayidx.ls = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %S.ls, i64 %indvars.iv101.ls
  %48 = bitcast %struct.vertex.29** %arrayidx.ls to i64*
  %49 = load i64, i64* %48, align 8, !tbaa !53
  %first2.i.ls = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %.ls1, i64 %indvars.iv101.ls, i32 0
  store i32 0, i32* %first2.i.ls, align 8, !tbaa !250
  %second4.i.ls = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %.ls1, i64 %indvars.iv101.ls, i32 1
  %50 = bitcast %struct.vertex.29** %second4.i.ls to i64*
  store i64 %49, i64* %50, align 8, !tbaa !252
  %51 = icmp ult i64 %indvars.iv101.ls, %end.ls
  %indvars.iv.next102.ls = add nuw nsw i64 %indvars.iv101.ls, 1
  br i1 %51, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit129.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.us.ls(i64 %indvars.iv97.start.ls, i64 %end.ls, i64 %.ls, %struct.vertex.29** nocapture readonly align 1 %S.ls, double %add.i.neg.ls, double %.ls1, i32 %sub3.i.ls, double %add9.i.neg.ls, double %add17.i.neg.ls, i1 %min.iters.check.ls, i32 %n.vec.ls, i1 %cmp.n.ls, i32 %logdivs.ls, %"struct.std::pair.38"* nocapture align 1 %.ls2) unnamed_addr #15 align 2 {
pfor.detach.us.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.us.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.us.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.us.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.us.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount5 = sub i64 %end.ls, %indvars.iv97.start.ls
  %9 = icmp ugt i64 %itercount5, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.us.preheader.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount7 = phi i64 [ %itercount5, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv97.ls.dac6 = phi i64 [ %indvars.iv97.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount7, 1
  %miditer = add nuw nsw i64 %indvars.iv97.ls.dac6, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split8, label %.split.split

.split8:                                          ; preds = %16
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.us.ls_.split.cilk(i64 %indvars.iv97.ls.dac6, i64 %miditer, i64 %.ls, %struct.vertex.29** %S.ls, double %add.i.neg.ls, double %.ls1, i32 %sub3.i.ls, double %add9.i.neg.ls, double %add17.i.neg.ls, i1 %min.iters.check.ls, i32 %n.vec.ls, i1 %cmp.n.ls, i32 %logdivs.ls, %"struct.std::pair.38"* %.ls2)
  br label %.split.split

.split.split:                                     ; preds = %.split8, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.us.preheader.ls.split._crit_edge

pfor.detach.us.preheader.ls.split._crit_edge:     ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv97.ls.dac.lcssa = phi i64 [ %indvars.iv97.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br i1 %min.iters.check.ls, label %pfor.detach.us.ls.us.preheader, label %pfor.detach.us.ls.preheader

pfor.detach.us.ls.preheader:                      ; preds = %pfor.detach.us.preheader.ls.split._crit_edge
  br label %pfor.detach.us.ls

pfor.detach.us.ls.us.preheader:                   ; preds = %pfor.detach.us.preheader.ls.split._crit_edge
  br label %pfor.detach.us.ls.us

pfor.detach.us.ls.us:                             ; preds = %pfor.detach.us.ls.us.preheader, %_Z11ptFindBlock8_point3dIdEdiS0_.exit.loopexit.us.ls.loopexit.us
  %indvars.iv97.ls.us = phi i64 [ %indvars.iv.next98.ls.us, %_Z11ptFindBlock8_point3dIdEdiS0_.exit.loopexit.us.ls.loopexit.us ], [ %indvars.iv97.ls.dac.lcssa, %pfor.detach.us.ls.us.preheader ]
  %arrayidx.us.ls.us = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %S.ls, i64 %indvars.iv97.ls.us
  %22 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx.us.ls.us, align 8, !tbaa !53
  %agg.tmp8.sroa.0.0..sroa_idx.us.ls.us = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %22, i64 0, i32 1, i32 0
  %agg.tmp8.sroa.0.0.copyload.us.ls.us = load double, double* %agg.tmp8.sroa.0.0..sroa_idx.us.ls.us, align 8
  %agg.tmp8.sroa.2.0..sroa_idx78.us.ls.us = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %22, i64 0, i32 1, i32 1
  %agg.tmp8.sroa.2.0.copyload.us.ls.us = load double, double* %agg.tmp8.sroa.2.0..sroa_idx78.us.ls.us, align 8
  %agg.tmp8.sroa.3.0..sroa_idx79.us.ls.us = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %22, i64 0, i32 1, i32 2
  %agg.tmp8.sroa.3.0.copyload.us.ls.us = load double, double* %agg.tmp8.sroa.3.0..sroa_idx79.us.ls.us, align 8
  %sub.i72.us.ls.us = fadd fast double %agg.tmp8.sroa.0.0.copyload.us.ls.us, %add.i.neg.ls
  %23 = fmul fast double %sub.i72.us.ls.us, %.ls1
  %conv.i.us.ls.us = fptosi double %23 to i32
  %cmp.i.i.us.ls.us = icmp sgt i32 %conv.i.us.ls.us, %sub3.i.ls
  %.sroa.speculated70.i.us.ls.us = select i1 %cmp.i.i.us.ls.us, i32 %sub3.i.ls, i32 %conv.i.us.ls.us
  %sub6.i.us.ls.us = fadd fast double %agg.tmp8.sroa.2.0.copyload.us.ls.us, %add9.i.neg.ls
  %24 = fmul fast double %sub6.i.us.ls.us, %.ls1
  %conv8.i.us.ls.us = fptosi double %24 to i32
  %cmp.i56.i.us.ls.us = icmp sgt i32 %conv8.i.us.ls.us, %sub3.i.ls
  %.sroa.speculated64.i.us.ls.us = select i1 %cmp.i56.i.us.ls.us, i32 %sub3.i.ls, i32 %conv8.i.us.ls.us
  %sub14.i.us.ls.us = fadd fast double %agg.tmp8.sroa.3.0.copyload.us.ls.us, %add17.i.neg.ls
  %25 = fmul fast double %sub14.i.us.ls.us, %.ls1
  %conv16.i.us.ls.us = fptosi double %25 to i32
  %cmp.i54.i.us.ls.us = icmp sgt i32 %conv16.i.us.ls.us, %sub3.i.ls
  %.sroa.speculated.i.us.ls.us = select i1 %cmp.i54.i.us.ls.us, i32 %sub3.i.ls, i32 %conv16.i.us.ls.us
  br label %for.body.i.us.ls.us

for.body.i.us.ls.us:                              ; preds = %for.body.i.us.ls.us, %pfor.detach.us.ls.us
  %result.077.i.us.ls.us = phi i32 [ %add31.i.us.ls.us, %for.body.i.us.ls.us ], [ 0, %pfor.detach.us.ls.us ]
  %i.076.i.us.ls.us = phi i32 [ %inc.i.us.ls.us, %for.body.i.us.ls.us ], [ 0, %pfor.detach.us.ls.us ]
  %shl20.i.us.ls.us = shl i32 1, %i.076.i.us.ls.us
  %and.i.us.ls.us = and i32 %shl20.i.us.ls.us, %.sroa.speculated70.i.us.ls.us
  %mul.i.us.ls.us = shl nuw nsw i32 %i.076.i.us.ls.us, 1
  %shl21.i.us.ls.us = shl i32 %and.i.us.ls.us, %mul.i.us.ls.us
  %add.i75.us.ls.us = add nsw i32 %shl21.i.us.ls.us, %result.077.i.us.ls.us
  %and22.i.us.ls.us = and i32 %shl20.i.us.ls.us, %.sroa.speculated64.i.us.ls.us
  %add24.i.us.ls.us = or i32 %mul.i.us.ls.us, 1
  %shl25.i.us.ls.us = shl i32 %and22.i.us.ls.us, %add24.i.us.ls.us
  %add26.i.us.ls.us = add nsw i32 %add.i75.us.ls.us, %shl25.i.us.ls.us
  %and27.i.us.ls.us = and i32 %shl20.i.us.ls.us, %.sroa.speculated.i.us.ls.us
  %add29.i.us.ls.us = add nuw nsw i32 %mul.i.us.ls.us, 2
  %shl30.i.us.ls.us = shl i32 %and27.i.us.ls.us, %add29.i.us.ls.us
  %add31.i.us.ls.us = add nsw i32 %add26.i.us.ls.us, %shl30.i.us.ls.us
  %inc.i.us.ls.us = add nuw nsw i32 %i.076.i.us.ls.us, 1
  %exitcond.i.us.ls.us = icmp eq i32 %inc.i.us.ls.us, %logdivs.ls
  br i1 %exitcond.i.us.ls.us, label %_Z11ptFindBlock8_point3dIdEdiS0_.exit.loopexit.us.ls.loopexit.us, label %for.body.i.us.ls.us, !llvm.loop !539

_Z11ptFindBlock8_point3dIdEdiS0_.exit.loopexit.us.ls.loopexit.us: ; preds = %for.body.i.us.ls.us
  %26 = ptrtoint %struct.vertex.29* %22 to i64
  %first2.i.us.ls.us = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %.ls2, i64 %indvars.iv97.ls.us, i32 0
  store i32 %add31.i.us.ls.us, i32* %first2.i.us.ls.us, align 8, !tbaa !250
  %second4.i.us.ls.us = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %.ls2, i64 %indvars.iv97.ls.us, i32 1
  %27 = bitcast %struct.vertex.29** %second4.i.us.ls.us to i64*
  store i64 %26, i64* %27, align 8, !tbaa !252
  %28 = icmp ult i64 %indvars.iv97.ls.us, %end.ls
  %indvars.iv.next98.ls.us = add nuw nsw i64 %indvars.iv97.ls.us, 1
  br i1 %28, label %pfor.detach.us.ls.us, label %pfor.cond.cleanup.loopexit.ls

pfor.cond.cleanup.loopexit.ls:                    ; preds = %_Z11ptFindBlock8_point3dIdEdiS0_.exit.loopexit.us.ls, %_Z11ptFindBlock8_point3dIdEdiS0_.exit.loopexit.us.ls.loopexit.us
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %30 = load atomic i32, i32* %29 acquire, align 8
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %33 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %34 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %35 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %34, i16* nonnull %35) #2
  %36 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %37 = call i8* @llvm.frameaddress(i32 0) #2
  %38 = getelementptr inbounds [5 x i8*], [5 x i8*]* %36, i64 0, i64 0
  store volatile i8* %37, i8** %38, align 8
  %39 = call i8* @llvm.stacksave() #2
  %40 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %39, i8** %40, align 8
  %41 = bitcast [5 x i8*]* %36 to i8*
  %42 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %41) #24
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %44 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %45 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %44, i64 0, i32 12, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, 1
  store i64 %47, i64* %45, align 8
  %48 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %49 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %48, i64 0, i32 9
  %52 = bitcast %struct.__cilkrts_stack_frame** %51 to i64*
  store atomic i64 %50, i64* %52 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %53 = load atomic i32, i32* %29 acquire, align 8
  %54 = icmp eq i32 %53, 16777216
  br i1 %54, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.us.ls:                                ; preds = %pfor.detach.us.ls.preheader, %_Z11ptFindBlock8_point3dIdEdiS0_.exit.loopexit.us.ls
  %indvars.iv97.ls = phi i64 [ %indvars.iv.next98.ls, %_Z11ptFindBlock8_point3dIdEdiS0_.exit.loopexit.us.ls ], [ %indvars.iv97.ls.dac.lcssa, %pfor.detach.us.ls.preheader ]
  %arrayidx.us.ls = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %S.ls, i64 %indvars.iv97.ls
  %55 = load %struct.vertex.29*, %struct.vertex.29** %arrayidx.us.ls, align 8, !tbaa !53
  %agg.tmp8.sroa.0.0..sroa_idx.us.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %55, i64 0, i32 1, i32 0
  %agg.tmp8.sroa.0.0.copyload.us.ls = load double, double* %agg.tmp8.sroa.0.0..sroa_idx.us.ls, align 8
  %agg.tmp8.sroa.2.0..sroa_idx78.us.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %55, i64 0, i32 1, i32 1
  %agg.tmp8.sroa.2.0.copyload.us.ls = load double, double* %agg.tmp8.sroa.2.0..sroa_idx78.us.ls, align 8
  %agg.tmp8.sroa.3.0..sroa_idx79.us.ls = getelementptr inbounds %struct.vertex.29, %struct.vertex.29* %55, i64 0, i32 1, i32 2
  %agg.tmp8.sroa.3.0.copyload.us.ls = load double, double* %agg.tmp8.sroa.3.0..sroa_idx79.us.ls, align 8
  %sub.i72.us.ls = fadd fast double %agg.tmp8.sroa.0.0.copyload.us.ls, %add.i.neg.ls
  %56 = fmul fast double %sub.i72.us.ls, %.ls1
  %conv.i.us.ls = fptosi double %56 to i32
  %cmp.i.i.us.ls = icmp sgt i32 %conv.i.us.ls, %sub3.i.ls
  %.sroa.speculated70.i.us.ls = select i1 %cmp.i.i.us.ls, i32 %sub3.i.ls, i32 %conv.i.us.ls
  %sub6.i.us.ls = fadd fast double %agg.tmp8.sroa.2.0.copyload.us.ls, %add9.i.neg.ls
  %57 = fmul fast double %sub6.i.us.ls, %.ls1
  %conv8.i.us.ls = fptosi double %57 to i32
  %cmp.i56.i.us.ls = icmp sgt i32 %conv8.i.us.ls, %sub3.i.ls
  %.sroa.speculated64.i.us.ls = select i1 %cmp.i56.i.us.ls, i32 %sub3.i.ls, i32 %conv8.i.us.ls
  %sub14.i.us.ls = fadd fast double %agg.tmp8.sroa.3.0.copyload.us.ls, %add17.i.neg.ls
  %58 = fmul fast double %sub14.i.us.ls, %.ls1
  %conv16.i.us.ls = fptosi double %58 to i32
  %cmp.i54.i.us.ls = icmp sgt i32 %conv16.i.us.ls, %sub3.i.ls
  %.sroa.speculated.i.us.ls = select i1 %cmp.i54.i.us.ls, i32 %sub3.i.ls, i32 %conv16.i.us.ls
  %broadcast.splatinsert.ls = insertelement <8 x i32> undef, i32 %.sroa.speculated70.i.us.ls, i32 0
  %broadcast.splat.ls = shufflevector <8 x i32> %broadcast.splatinsert.ls, <8 x i32> undef, <8 x i32> zeroinitializer
  %broadcast.splatinsert111.ls = insertelement <8 x i32> undef, i32 %.sroa.speculated64.i.us.ls, i32 0
  %broadcast.splat112.ls = shufflevector <8 x i32> %broadcast.splatinsert111.ls, <8 x i32> undef, <8 x i32> zeroinitializer
  %broadcast.splatinsert115.ls = insertelement <8 x i32> undef, i32 %.sroa.speculated.i.us.ls, i32 0
  %broadcast.splat116.ls = shufflevector <8 x i32> %broadcast.splatinsert115.ls, <8 x i32> undef, <8 x i32> zeroinitializer
  br label %vector.body.ls

vector.body.ls:                                   ; preds = %vector.body.ls, %pfor.detach.us.ls
  %index.ls = phi i32 [ 0, %pfor.detach.us.ls ], [ %index.next.ls, %vector.body.ls ]
  %vec.phi.ls = phi <8 x i32> [ zeroinitializer, %pfor.detach.us.ls ], [ %83, %vector.body.ls ]
  %vec.phi107.ls = phi <8 x i32> [ zeroinitializer, %pfor.detach.us.ls ], [ %84, %vector.body.ls ]
  %vec.ind.ls = phi <8 x i32> [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, %pfor.detach.us.ls ], [ %vec.ind.next.ls, %vector.body.ls ]
  %step.add.ls = add <8 x i32> %vec.ind.ls, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %59 = shl <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %vec.ind.ls
  %60 = shl <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %step.add.ls
  %61 = and <8 x i32> %59, %broadcast.splat.ls
  %62 = and <8 x i32> %60, %broadcast.splat.ls
  %63 = shl nuw nsw <8 x i32> %vec.ind.ls, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %64 = shl nuw nsw <8 x i32> %step.add.ls, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %65 = shl <8 x i32> %61, %63
  %66 = shl <8 x i32> %62, %64
  %67 = add nsw <8 x i32> %65, %vec.phi.ls
  %68 = add nsw <8 x i32> %66, %vec.phi107.ls
  %69 = and <8 x i32> %59, %broadcast.splat112.ls
  %70 = and <8 x i32> %60, %broadcast.splat112.ls
  %71 = or <8 x i32> %63, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %72 = or <8 x i32> %64, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %73 = shl <8 x i32> %69, %71
  %74 = shl <8 x i32> %70, %72
  %75 = add nsw <8 x i32> %67, %73
  %76 = add nsw <8 x i32> %68, %74
  %77 = and <8 x i32> %59, %broadcast.splat116.ls
  %78 = and <8 x i32> %60, %broadcast.splat116.ls
  %79 = add nuw nsw <8 x i32> %63, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %80 = add nuw nsw <8 x i32> %64, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %81 = shl <8 x i32> %77, %79
  %82 = shl <8 x i32> %78, %80
  %83 = add nsw <8 x i32> %75, %81
  %84 = add nsw <8 x i32> %76, %82
  %index.next.ls = add i32 %index.ls, 16
  %vec.ind.next.ls = add <8 x i32> %vec.ind.ls, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %85 = icmp eq i32 %index.next.ls, %n.vec.ls
  br i1 %85, label %middle.block.ls, label %vector.body.ls, !llvm.loop !540

middle.block.ls:                                  ; preds = %vector.body.ls
  %86 = ptrtoint %struct.vertex.29* %55 to i64
  %bin.rdx.ls = add <8 x i32> %84, %83
  %rdx.shuf.ls = shufflevector <8 x i32> %bin.rdx.ls, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx119.ls = add <8 x i32> %rdx.shuf.ls, %bin.rdx.ls
  %rdx.shuf120.ls = shufflevector <8 x i32> %bin.rdx119.ls, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx121.ls = add <8 x i32> %rdx.shuf120.ls, %bin.rdx119.ls
  %rdx.shuf122.ls = shufflevector <8 x i32> %bin.rdx121.ls, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx123.ls = add <8 x i32> %rdx.shuf122.ls, %bin.rdx121.ls
  %87 = extractelement <8 x i32> %bin.rdx123.ls, i32 0
  br i1 %cmp.n.ls, label %_Z11ptFindBlock8_point3dIdEdiS0_.exit.loopexit.us.ls, label %for.body.i.us.ls.preheader

for.body.i.us.ls.preheader:                       ; preds = %middle.block.ls
  br label %for.body.i.us.ls

for.body.i.us.ls:                                 ; preds = %for.body.i.us.ls.preheader, %for.body.i.us.ls
  %result.077.i.us.ls = phi i32 [ %add31.i.us.ls, %for.body.i.us.ls ], [ %87, %for.body.i.us.ls.preheader ]
  %i.076.i.us.ls = phi i32 [ %inc.i.us.ls, %for.body.i.us.ls ], [ %n.vec.ls, %for.body.i.us.ls.preheader ]
  %shl20.i.us.ls = shl i32 1, %i.076.i.us.ls
  %and.i.us.ls = and i32 %shl20.i.us.ls, %.sroa.speculated70.i.us.ls
  %mul.i.us.ls = shl nuw nsw i32 %i.076.i.us.ls, 1
  %shl21.i.us.ls = shl i32 %and.i.us.ls, %mul.i.us.ls
  %add.i75.us.ls = add nsw i32 %shl21.i.us.ls, %result.077.i.us.ls
  %and22.i.us.ls = and i32 %shl20.i.us.ls, %.sroa.speculated64.i.us.ls
  %add24.i.us.ls = or i32 %mul.i.us.ls, 1
  %shl25.i.us.ls = shl i32 %and22.i.us.ls, %add24.i.us.ls
  %add26.i.us.ls = add nsw i32 %add.i75.us.ls, %shl25.i.us.ls
  %and27.i.us.ls = and i32 %shl20.i.us.ls, %.sroa.speculated.i.us.ls
  %add29.i.us.ls = add nuw nsw i32 %mul.i.us.ls, 2
  %shl30.i.us.ls = shl i32 %and27.i.us.ls, %add29.i.us.ls
  %add31.i.us.ls = add nsw i32 %add26.i.us.ls, %shl30.i.us.ls
  %inc.i.us.ls = add nuw nsw i32 %i.076.i.us.ls, 1
  %exitcond.i.us.ls = icmp eq i32 %inc.i.us.ls, %logdivs.ls
  br i1 %exitcond.i.us.ls, label %_Z11ptFindBlock8_point3dIdEdiS0_.exit.loopexit.us.ls, label %for.body.i.us.ls, !llvm.loop !539

_Z11ptFindBlock8_point3dIdEdiS0_.exit.loopexit.us.ls: ; preds = %for.body.i.us.ls, %middle.block.ls
  %add31.i.us.lcssa.ls = phi i32 [ %87, %middle.block.ls ], [ %add31.i.us.ls, %for.body.i.us.ls ]
  %first2.i.us.ls = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %.ls2, i64 %indvars.iv97.ls, i32 0
  store i32 %add31.i.us.lcssa.ls, i32* %first2.i.us.ls, align 8, !tbaa !250
  %second4.i.us.ls = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %.ls2, i64 %indvars.iv97.ls, i32 1
  %88 = bitcast %struct.vertex.29** %second4.i.us.ls to i64*
  store i64 %86, i64* %88, align 8, !tbaa !252
  %89 = icmp ult i64 %indvars.iv97.ls, %end.ls
  %indvars.iv.next98.ls = add nuw nsw i64 %indvars.iv97.ls, 1
  br i1 %89, label %pfor.detach.us.ls, label %pfor.cond.cleanup.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach29.ls(i64 %indvars.iv.start.ls, i64 %end.ls, i64 %.ls, %"struct.std::pair.38"* nocapture readonly align 1 %.ls1, %struct.vertex.29** nocapture align 1 %S.ls) unnamed_addr #15 align 2 {
pfor.detach29.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach29.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach29.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach29.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach29.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount3 = sub i64 %end.ls, %indvars.iv.start.ls
  %9 = icmp ugt i64 %itercount3, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach29.lr.ph.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount5 = phi i64 [ %itercount3, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv.ls.dac4 = phi i64 [ %indvars.iv.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount5, 1
  %miditer = add nuw nsw i64 %indvars.iv.ls.dac4, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split6, label %.split.split

.split6:                                          ; preds = %16
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach29.ls_.split.cilk(i64 %indvars.iv.ls.dac4, i64 %miditer, i64 %.ls, %"struct.std::pair.38"* %.ls1, %struct.vertex.29** %S.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split6, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach29.lr.ph.ls.split._crit_edge

pfor.detach29.lr.ph.ls.split._crit_edge:          ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv.ls.dac.lcssa = phi i64 [ %indvars.iv.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  %22 = icmp ugt i64 %indvars.iv.ls.dac.lcssa, %end.ls
  %umax = select i1 %22, i64 %indvars.iv.ls.dac.lcssa, i64 %end.ls
  %23 = add i64 %umax, 1
  %24 = sub i64 %23, %indvars.iv.ls.dac.lcssa
  %min.iters.check = icmp ult i64 %24, 17
  br i1 %min.iters.check, label %pfor.detach29.ls.preheader, label %vector.memcheck

pfor.detach29.ls.preheader:                       ; preds = %vector.body, %vector.memcheck, %pfor.detach29.lr.ph.ls.split._crit_edge
  %indvars.iv.ls.ph = phi i64 [ %indvars.iv.ls.dac.lcssa, %vector.memcheck ], [ %indvars.iv.ls.dac.lcssa, %pfor.detach29.lr.ph.ls.split._crit_edge ], [ %ind.end, %vector.body ]
  br label %pfor.detach29.ls

vector.memcheck:                                  ; preds = %pfor.detach29.lr.ph.ls.split._crit_edge
  %scevgep = getelementptr %struct.vertex.29*, %struct.vertex.29** %S.ls, i64 %indvars.iv.ls.dac.lcssa
  %25 = icmp ugt i64 %indvars.iv.ls.dac.lcssa, %end.ls
  %umax2 = select i1 %25, i64 %indvars.iv.ls.dac.lcssa, i64 %end.ls
  %26 = add i64 %umax2, 1
  %scevgep3 = getelementptr %struct.vertex.29*, %struct.vertex.29** %S.ls, i64 %26
  %scevgep5 = getelementptr %"struct.std::pair.38", %"struct.std::pair.38"* %.ls1, i64 %indvars.iv.ls.dac.lcssa, i32 1
  %scevgep7 = getelementptr %"struct.std::pair.38", %"struct.std::pair.38"* %.ls1, i64 %26
  %27 = bitcast %"struct.std::pair.38"* %scevgep7 to %struct.vertex.29**
  %bound0 = icmp ult %struct.vertex.29** %scevgep, %27
  %bound1 = icmp ult %struct.vertex.29** %scevgep5, %scevgep3
  %memcheck.conflict = and i1 %bound0, %bound1
  br i1 %memcheck.conflict, label %pfor.detach29.ls.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.mod.vf = and i64 %24, 15
  %28 = icmp eq i64 %n.mod.vf, 0
  %29 = select i1 %28, i64 16, i64 %n.mod.vf
  %n.vec = sub i64 %24, %29
  %ind.end = add i64 %indvars.iv.ls.dac.lcssa, %n.vec
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %offset.idx = add i64 %indvars.iv.ls.dac.lcssa, %index
  %30 = add i64 %indvars.iv.ls.dac.lcssa, %index
  %31 = add i64 %offset.idx, 4
  %32 = add i64 %offset.idx, 8
  %33 = add i64 %offset.idx, 12
  %34 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %.ls1, i64 %30, i32 1
  %35 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %.ls1, i64 %31, i32 1
  %36 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %.ls1, i64 %32, i32 1
  %37 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %.ls1, i64 %33, i32 1
  %38 = bitcast %struct.vertex.29** %34 to <8 x i64>*
  %39 = bitcast %struct.vertex.29** %35 to <8 x i64>*
  %40 = bitcast %struct.vertex.29** %36 to <8 x i64>*
  %41 = bitcast %struct.vertex.29** %37 to <8 x i64>*
  %wide.vec = load <8 x i64>, <8 x i64>* %38, align 8, !tbaa !252
  %wide.vec12 = load <8 x i64>, <8 x i64>* %39, align 8, !tbaa !252
  %wide.vec13 = load <8 x i64>, <8 x i64>* %40, align 8, !tbaa !252
  %wide.vec14 = load <8 x i64>, <8 x i64>* %41, align 8, !tbaa !252
  %strided.vec = shufflevector <8 x i64> %wide.vec, <8 x i64> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec15 = shufflevector <8 x i64> %wide.vec12, <8 x i64> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec16 = shufflevector <8 x i64> %wide.vec13, <8 x i64> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec17 = shufflevector <8 x i64> %wide.vec14, <8 x i64> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %42 = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %S.ls, i64 %30
  %43 = bitcast %struct.vertex.29** %42 to <4 x i64>*
  store <4 x i64> %strided.vec, <4 x i64>* %43, align 8, !tbaa !53, !alias.scope !541, !noalias !544
  %44 = getelementptr %struct.vertex.29*, %struct.vertex.29** %42, i64 4
  %45 = bitcast %struct.vertex.29** %44 to <4 x i64>*
  store <4 x i64> %strided.vec15, <4 x i64>* %45, align 8, !tbaa !53, !alias.scope !541, !noalias !544
  %46 = getelementptr %struct.vertex.29*, %struct.vertex.29** %42, i64 8
  %47 = bitcast %struct.vertex.29** %46 to <4 x i64>*
  store <4 x i64> %strided.vec16, <4 x i64>* %47, align 8, !tbaa !53, !alias.scope !541, !noalias !544
  %48 = getelementptr %struct.vertex.29*, %struct.vertex.29** %42, i64 12
  %49 = bitcast %struct.vertex.29** %48 to <4 x i64>*
  store <4 x i64> %strided.vec17, <4 x i64>* %49, align 8, !tbaa !53, !alias.scope !541, !noalias !544
  %index.next = add i64 %index, 16
  %50 = icmp eq i64 %index.next, %n.vec
  br i1 %50, label %pfor.detach29.ls.preheader, label %vector.body, !llvm.loop !546

pfor.cond.cleanup28.loopexit.ls:                  ; preds = %pfor.detach29.ls
  %51 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %52 = load atomic i32, i32* %51 acquire, align 8
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup28.loopexit.ls
  %55 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %56 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %57 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %56, i16* nonnull %57) #2
  %58 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %59 = call i8* @llvm.frameaddress(i32 0) #2
  %60 = getelementptr inbounds [5 x i8*], [5 x i8*]* %58, i64 0, i64 0
  store volatile i8* %59, i8** %60, align 8
  %61 = call i8* @llvm.stacksave() #2
  %62 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %61, i8** %62, align 8
  %63 = bitcast [5 x i8*]* %58 to i8*
  %64 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %63) #24
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup28.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %66 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %67 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %66, i64 0, i32 12, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  store i64 %69, i64* %67, align 8
  %70 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %71 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %70, i64 0, i32 9
  %74 = bitcast %struct.__cilkrts_stack_frame** %73 to i64*
  store atomic i64 %72, i64* %74 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %75 = load atomic i32, i32* %51 acquire, align 8
  %76 = icmp eq i32 %75, 16777216
  br i1 %76, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach29.ls:                                 ; preds = %pfor.detach29.ls.preheader, %pfor.detach29.ls
  %indvars.iv.ls = phi i64 [ %indvars.iv.next.ls, %pfor.detach29.ls ], [ %indvars.iv.ls.ph, %pfor.detach29.ls.preheader ]
  %second.ls = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %.ls1, i64 %indvars.iv.ls, i32 1
  %77 = bitcast %struct.vertex.29** %second.ls to i64*
  %78 = load i64, i64* %77, align 8, !tbaa !252
  %arrayidx38.ls = getelementptr inbounds %struct.vertex.29*, %struct.vertex.29** %S.ls, i64 %indvars.iv.ls
  %79 = bitcast %struct.vertex.29** %arrayidx38.ls to i64*
  store i64 %78, i64* %79, align 8, !tbaa !53
  %80 = icmp ult i64 %indvars.iv.ls, %end.ls
  %indvars.iv.next.ls = add nuw nsw i64 %indvars.iv.ls, 1
  br i1 %80, label %pfor.detach29.ls, label %pfor.cond.cleanup28.loopexit.ls, !llvm.loop !547
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach34.ls(i64 %__begin25.0181.start.ls, i64 %end.ls, i64 %.ls, i32* nocapture align 1 %bucketOffsets.ls, i32 %conv40.ls) unnamed_addr #15 {
pfor.detach34.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach34.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach34.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach34.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach34.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount2 = sub i64 %end.ls, %__begin25.0181.start.ls
  %9 = icmp ugt i64 %itercount2, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach34.lr.ph.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount4 = phi i64 [ %itercount2, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin25.0181.ls.dac3 = phi i64 [ %__begin25.0181.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount4, 1
  %miditer = add nuw nsw i64 %__begin25.0181.ls.dac3, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split5, label %.split.split

.split5:                                          ; preds = %16
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach34.ls_.split.cilk(i64 %__begin25.0181.ls.dac3, i64 %miditer, i64 %.ls, i32* %bucketOffsets.ls, i32 %conv40.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split5, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach34.lr.ph.ls.split._crit_edge

pfor.detach34.lr.ph.ls.split._crit_edge:          ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin25.0181.ls.dac.lcssa = phi i64 [ %__begin25.0181.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  %22 = icmp ugt i64 %__begin25.0181.ls.dac.lcssa, %end.ls
  %umax = select i1 %22, i64 %__begin25.0181.ls.dac.lcssa, i64 %end.ls
  %23 = add i64 %umax, 1
  %24 = sub i64 %23, %__begin25.0181.ls.dac.lcssa
  %min.iters.check = icmp ult i64 %24, 32
  br i1 %min.iters.check, label %pfor.detach34.ls.preheader, label %vector.ph

pfor.detach34.ls.preheader:                       ; preds = %middle.block, %pfor.detach34.lr.ph.ls.split._crit_edge
  %__begin25.0181.ls.ph = phi i64 [ %__begin25.0181.ls.dac.lcssa, %pfor.detach34.lr.ph.ls.split._crit_edge ], [ %ind.end, %middle.block ]
  br label %pfor.detach34.ls

vector.ph:                                        ; preds = %pfor.detach34.lr.ph.ls.split._crit_edge
  %n.vec = and i64 %24, -32
  %ind.end = add i64 %__begin25.0181.ls.dac.lcssa, %n.vec
  %broadcast.splatinsert4 = insertelement <8 x i32> undef, i32 %conv40.ls, i32 0
  %broadcast.splat5 = shufflevector <8 x i32> %broadcast.splatinsert4, <8 x i32> undef, <8 x i32> zeroinitializer
  %broadcast.splatinsert6 = insertelement <8 x i32> undef, i32 %conv40.ls, i32 0
  %broadcast.splat7 = shufflevector <8 x i32> %broadcast.splatinsert6, <8 x i32> undef, <8 x i32> zeroinitializer
  %broadcast.splatinsert8 = insertelement <8 x i32> undef, i32 %conv40.ls, i32 0
  %broadcast.splat9 = shufflevector <8 x i32> %broadcast.splatinsert8, <8 x i32> undef, <8 x i32> zeroinitializer
  %broadcast.splatinsert10 = insertelement <8 x i32> undef, i32 %conv40.ls, i32 0
  %broadcast.splat11 = shufflevector <8 x i32> %broadcast.splatinsert10, <8 x i32> undef, <8 x i32> zeroinitializer
  %25 = add i64 %n.vec, -32
  %26 = lshr exact i64 %25, 5
  %27 = add nuw nsw i64 %26, 1
  %xtraiter = and i64 %27, 7
  %28 = icmp ult i64 %25, 224
  br i1 %28, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nsw i64 %27, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.7, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.7, %vector.body ]
  %29 = add i64 %__begin25.0181.ls.dac.lcssa, %index
  %30 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %29
  %31 = bitcast i32* %30 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %31, align 4, !tbaa !59
  %32 = getelementptr i32, i32* %30, i64 8
  %33 = bitcast i32* %32 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %33, align 4, !tbaa !59
  %34 = getelementptr i32, i32* %30, i64 16
  %35 = bitcast i32* %34 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %35, align 4, !tbaa !59
  %36 = getelementptr i32, i32* %30, i64 24
  %37 = bitcast i32* %36 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %37, align 4, !tbaa !59
  %index.next = or i64 %index, 32
  %38 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next
  %39 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %38
  %40 = bitcast i32* %39 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %40, align 4, !tbaa !59
  %41 = getelementptr i32, i32* %39, i64 8
  %42 = bitcast i32* %41 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %42, align 4, !tbaa !59
  %43 = getelementptr i32, i32* %39, i64 16
  %44 = bitcast i32* %43 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %44, align 4, !tbaa !59
  %45 = getelementptr i32, i32* %39, i64 24
  %46 = bitcast i32* %45 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %46, align 4, !tbaa !59
  %index.next.1 = or i64 %index, 64
  %47 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next.1
  %48 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %47
  %49 = bitcast i32* %48 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %49, align 4, !tbaa !59
  %50 = getelementptr i32, i32* %48, i64 8
  %51 = bitcast i32* %50 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %51, align 4, !tbaa !59
  %52 = getelementptr i32, i32* %48, i64 16
  %53 = bitcast i32* %52 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %53, align 4, !tbaa !59
  %54 = getelementptr i32, i32* %48, i64 24
  %55 = bitcast i32* %54 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %55, align 4, !tbaa !59
  %index.next.2 = or i64 %index, 96
  %56 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next.2
  %57 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %56
  %58 = bitcast i32* %57 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %58, align 4, !tbaa !59
  %59 = getelementptr i32, i32* %57, i64 8
  %60 = bitcast i32* %59 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %60, align 4, !tbaa !59
  %61 = getelementptr i32, i32* %57, i64 16
  %62 = bitcast i32* %61 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %62, align 4, !tbaa !59
  %63 = getelementptr i32, i32* %57, i64 24
  %64 = bitcast i32* %63 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %64, align 4, !tbaa !59
  %index.next.3 = or i64 %index, 128
  %65 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next.3
  %66 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %65
  %67 = bitcast i32* %66 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %67, align 4, !tbaa !59
  %68 = getelementptr i32, i32* %66, i64 8
  %69 = bitcast i32* %68 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %69, align 4, !tbaa !59
  %70 = getelementptr i32, i32* %66, i64 16
  %71 = bitcast i32* %70 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %71, align 4, !tbaa !59
  %72 = getelementptr i32, i32* %66, i64 24
  %73 = bitcast i32* %72 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %73, align 4, !tbaa !59
  %index.next.4 = or i64 %index, 160
  %74 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next.4
  %75 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %74
  %76 = bitcast i32* %75 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %76, align 4, !tbaa !59
  %77 = getelementptr i32, i32* %75, i64 8
  %78 = bitcast i32* %77 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %78, align 4, !tbaa !59
  %79 = getelementptr i32, i32* %75, i64 16
  %80 = bitcast i32* %79 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %80, align 4, !tbaa !59
  %81 = getelementptr i32, i32* %75, i64 24
  %82 = bitcast i32* %81 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %82, align 4, !tbaa !59
  %index.next.5 = or i64 %index, 192
  %83 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next.5
  %84 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %83
  %85 = bitcast i32* %84 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %85, align 4, !tbaa !59
  %86 = getelementptr i32, i32* %84, i64 8
  %87 = bitcast i32* %86 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %87, align 4, !tbaa !59
  %88 = getelementptr i32, i32* %84, i64 16
  %89 = bitcast i32* %88 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %89, align 4, !tbaa !59
  %90 = getelementptr i32, i32* %84, i64 24
  %91 = bitcast i32* %90 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %91, align 4, !tbaa !59
  %index.next.6 = or i64 %index, 224
  %92 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next.6
  %93 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %92
  %94 = bitcast i32* %93 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %94, align 4, !tbaa !59
  %95 = getelementptr i32, i32* %93, i64 8
  %96 = bitcast i32* %95 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %96, align 4, !tbaa !59
  %97 = getelementptr i32, i32* %93, i64 16
  %98 = bitcast i32* %97 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %98, align 4, !tbaa !59
  %99 = getelementptr i32, i32* %93, i64 24
  %100 = bitcast i32* %99 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %100, align 4, !tbaa !59
  %index.next.7 = add i64 %index, 256
  %niter.nsub.7 = add i64 %niter, -8
  %niter.ncmp.7 = icmp eq i64 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !548

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.7, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil.preheader

vector.body.epil.preheader:                       ; preds = %middle.block.unr-lcssa
  br label %vector.body.epil

vector.body.epil:                                 ; preds = %vector.body.epil, %vector.body.epil.preheader
  %index.epil = phi i64 [ %index.unr, %vector.body.epil.preheader ], [ %index.next.epil, %vector.body.epil ]
  %epil.iter = phi i64 [ %xtraiter, %vector.body.epil.preheader ], [ %epil.iter.sub, %vector.body.epil ]
  %101 = add i64 %__begin25.0181.ls.dac.lcssa, %index.epil
  %102 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %101
  %103 = bitcast i32* %102 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %103, align 4, !tbaa !59
  %104 = getelementptr i32, i32* %102, i64 8
  %105 = bitcast i32* %104 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %105, align 4, !tbaa !59
  %106 = getelementptr i32, i32* %102, i64 16
  %107 = bitcast i32* %106 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %107, align 4, !tbaa !59
  %108 = getelementptr i32, i32* %102, i64 24
  %109 = bitcast i32* %108 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %109, align 4, !tbaa !59
  %index.next.epil = add i64 %index.epil, 32
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block, label %vector.body.epil, !llvm.loop !549

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %24, %n.vec
  br i1 %cmp.n, label %pfor.cond.cleanup33.loopexit.ls, label %pfor.detach34.ls.preheader

pfor.cond.cleanup33.loopexit.ls:                  ; preds = %pfor.detach34.ls, %middle.block
  %110 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %111 = load atomic i32, i32* %110 acquire, align 8
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup33.loopexit.ls
  %114 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %115 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %116 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %115, i16* nonnull %116) #2
  %117 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %118 = call i8* @llvm.frameaddress(i32 0) #2
  %119 = getelementptr inbounds [5 x i8*], [5 x i8*]* %117, i64 0, i64 0
  store volatile i8* %118, i8** %119, align 8
  %120 = call i8* @llvm.stacksave() #2
  %121 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %120, i8** %121, align 8
  %122 = bitcast [5 x i8*]* %117 to i8*
  %123 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %122) #24
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup33.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %125 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %126 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %125, i64 0, i32 12, i32 0
  %127 = load i64, i64* %126, align 8
  %128 = add i64 %127, 1
  store i64 %128, i64* %126, align 8
  %129 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %130 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %129, i64 0, i32 9
  %133 = bitcast %struct.__cilkrts_stack_frame** %132 to i64*
  store atomic i64 %131, i64* %133 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %134 = load atomic i32, i32* %110 acquire, align 8
  %135 = icmp eq i32 %134, 16777216
  br i1 %135, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach34.ls:                                 ; preds = %pfor.detach34.ls.preheader, %pfor.detach34.ls
  %__begin25.0181.ls = phi i64 [ %inc44.ls, %pfor.detach34.ls ], [ %__begin25.0181.ls.ph, %pfor.detach34.ls.preheader ]
  %arrayidx41.ls = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %__begin25.0181.ls
  store i32 %conv40.ls, i32* %arrayidx41.ls, align 4, !tbaa !59
  %136 = icmp ult i64 %__begin25.0181.ls, %end.ls
  %inc44.ls = add nuw nsw i64 %__begin25.0181.ls, 1
  br i1 %136, label %pfor.detach34.ls, label %pfor.cond.cleanup33.loopexit.ls, !llvm.loop !550
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach59.ls(i64 %__begin49.0179.start.ls, i64 %end.ls, i64 %.ls, %"struct.std::pair.38"* nocapture readonly align 1 %A.ls, i32* nocapture align 1 %bucketOffsets.ls) unnamed_addr #15 {
pfor.detach59.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach59.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach59.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach59.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach59.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount2 = sub i64 %end.ls, %__begin49.0179.start.ls
  %9 = icmp ugt i64 %itercount2, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach59.ls.preheader

pfor.detach59.ls.preheader:                       ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin49.0179.ls.ph = phi i64 [ %__begin49.0179.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach59.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount4 = phi i64 [ %itercount2, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin49.0179.ls.dac3 = phi i64 [ %__begin49.0179.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount4, 1
  %miditer = add nuw nsw i64 %__begin49.0179.ls.dac3, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split5, label %.split.split

.split5:                                          ; preds = %16
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach59.ls_.split.cilk(i64 %__begin49.0179.ls.dac3, i64 %miditer, i64 %.ls, %"struct.std::pair.38"* %A.ls, i32* %bucketOffsets.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split5, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach59.ls.preheader

pfor.cond.cleanup58.loopexit.ls:                  ; preds = %pfor.inc81.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup58.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup58.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach59.ls:                                 ; preds = %pfor.detach59.ls.preheader, %pfor.inc81.ls
  %__begin49.0179.ls = phi i64 [ %add70.ls, %pfor.inc81.ls ], [ %__begin49.0179.ls.ph, %pfor.detach59.ls.preheader ]
  %agg.tmp65.sroa.0.0..sroa_idx.ls = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %A.ls, i64 %__begin49.0179.ls, i32 0
  %agg.tmp65.sroa.0.0.copyload.ls = load i32, i32* %agg.tmp65.sroa.0.0..sroa_idx.ls, align 8
  %add70.ls = add nuw nsw i64 %__begin49.0179.ls, 1
  %agg.tmp69.sroa.0.0..sroa_idx.ls = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %A.ls, i64 %add70.ls, i32 0
  %agg.tmp69.sroa.0.0.copyload.ls = load i32, i32* %agg.tmp69.sroa.0.0..sroa_idx.ls, align 8
  %cmp74.ls = icmp eq i32 %agg.tmp65.sroa.0.0.copyload.ls, %agg.tmp69.sroa.0.0.copyload.ls
  br i1 %cmp74.ls, label %pfor.inc81.ls, label %if.then75.ls

if.then75.ls:                                     ; preds = %pfor.detach59.ls
  %conv73.ls = sext i32 %agg.tmp69.sroa.0.0.copyload.ls to i64
  %conv77.ls = trunc i64 %add70.ls to i32
  %arrayidx78.ls = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %conv73.ls
  store i32 %conv77.ls, i32* %arrayidx78.ls, align 4, !tbaa !59
  br label %pfor.inc81.ls

pfor.inc81.ls:                                    ; preds = %pfor.detach59.ls, %if.then75.ls
  %48 = icmp ult i64 %__begin49.0179.ls, %end.ls
  br i1 %48, label %pfor.detach59.ls, label %pfor.cond.cleanup58.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach.ls(i64 %__begin.0177.start.ls, i64 %end.ls, i64 %.ls, [256 x i32]* nocapture readonly align 1 %.ls1, i32* nocapture align 1 %bucketOffsets.ls) unnamed_addr #15 {
pfor.detach.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount3 = sub i64 %end.ls, %__begin.0177.start.ls
  %9 = icmp ugt i64 %itercount3, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.preheader.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount5 = phi i64 [ %itercount3, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin.0177.ls.dac4 = phi i64 [ %__begin.0177.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount5, 1
  %miditer = add nuw nsw i64 %__begin.0177.ls.dac4, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split6, label %.split.split

.split6:                                          ; preds = %16
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach.ls_.split.cilk(i64 %__begin.0177.ls.dac4, i64 %miditer, i64 %.ls, [256 x i32]* %.ls1, i32* %bucketOffsets.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split6, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.preheader.ls.split._crit_edge

pfor.detach.preheader.ls.split._crit_edge:        ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin.0177.ls.dac.lcssa = phi i64 [ %__begin.0177.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  %22 = icmp ugt i64 %__begin.0177.ls.dac.lcssa, %end.ls
  %umax = select i1 %22, i64 %__begin.0177.ls.dac.lcssa, i64 %end.ls
  %23 = add i64 %umax, 1
  %24 = sub i64 %23, %__begin.0177.ls.dac.lcssa
  %min.iters.check = icmp ult i64 %24, 32
  br i1 %min.iters.check, label %pfor.detach.ls.preheader, label %vector.memcheck

pfor.detach.ls.preheader:                         ; preds = %middle.block, %vector.memcheck, %pfor.detach.preheader.ls.split._crit_edge
  %__begin.0177.ls.ph = phi i64 [ %__begin.0177.ls.dac.lcssa, %vector.memcheck ], [ %__begin.0177.ls.dac.lcssa, %pfor.detach.preheader.ls.split._crit_edge ], [ %ind.end, %middle.block ]
  br label %pfor.detach.ls

vector.memcheck:                                  ; preds = %pfor.detach.preheader.ls.split._crit_edge
  %scevgep = getelementptr i32, i32* %bucketOffsets.ls, i64 %__begin.0177.ls.dac.lcssa
  %25 = icmp ugt i64 %__begin.0177.ls.dac.lcssa, %end.ls
  %umax3 = select i1 %25, i64 %__begin.0177.ls.dac.lcssa, i64 %end.ls
  %26 = add i64 %umax3, 1
  %scevgep4 = getelementptr i32, i32* %bucketOffsets.ls, i64 %26
  %scevgep6 = getelementptr [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %__begin.0177.ls.dac.lcssa
  %scevgep8 = getelementptr [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %26
  %bound0 = icmp ult i32* %scevgep, %scevgep8
  %bound1 = icmp ult i32* %scevgep6, %scevgep4
  %memcheck.conflict = and i1 %bound0, %bound1
  br i1 %memcheck.conflict, label %pfor.detach.ls.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %24, -32
  %ind.end = add i64 %__begin.0177.ls.dac.lcssa, %n.vec
  %27 = add i64 %n.vec, -32
  %28 = lshr exact i64 %27, 5
  %29 = add nuw nsw i64 %28, 1
  %xtraiter = and i64 %29, 3
  %30 = icmp ult i64 %27, 96
  br i1 %30, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nsw i64 %29, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.3, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.3, %vector.body ]
  %31 = add i64 %__begin.0177.ls.dac.lcssa, %index
  %32 = getelementptr inbounds [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %31
  %33 = bitcast i32* %32 to <8 x i32>*
  %wide.load = load <8 x i32>, <8 x i32>* %33, align 4, !tbaa !59, !alias.scope !551
  %34 = getelementptr i32, i32* %32, i64 8
  %35 = bitcast i32* %34 to <8 x i32>*
  %wide.load13 = load <8 x i32>, <8 x i32>* %35, align 4, !tbaa !59, !alias.scope !551
  %36 = getelementptr i32, i32* %32, i64 16
  %37 = bitcast i32* %36 to <8 x i32>*
  %wide.load14 = load <8 x i32>, <8 x i32>* %37, align 4, !tbaa !59, !alias.scope !551
  %38 = getelementptr i32, i32* %32, i64 24
  %39 = bitcast i32* %38 to <8 x i32>*
  %wide.load15 = load <8 x i32>, <8 x i32>* %39, align 4, !tbaa !59, !alias.scope !551
  %40 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %31
  %41 = bitcast i32* %40 to <8 x i32>*
  store <8 x i32> %wide.load, <8 x i32>* %41, align 4, !tbaa !59, !alias.scope !554, !noalias !551
  %42 = getelementptr i32, i32* %40, i64 8
  %43 = bitcast i32* %42 to <8 x i32>*
  store <8 x i32> %wide.load13, <8 x i32>* %43, align 4, !tbaa !59, !alias.scope !554, !noalias !551
  %44 = getelementptr i32, i32* %40, i64 16
  %45 = bitcast i32* %44 to <8 x i32>*
  store <8 x i32> %wide.load14, <8 x i32>* %45, align 4, !tbaa !59, !alias.scope !554, !noalias !551
  %46 = getelementptr i32, i32* %40, i64 24
  %47 = bitcast i32* %46 to <8 x i32>*
  store <8 x i32> %wide.load15, <8 x i32>* %47, align 4, !tbaa !59, !alias.scope !554, !noalias !551
  %index.next = or i64 %index, 32
  %48 = add i64 %__begin.0177.ls.dac.lcssa, %index.next
  %49 = getelementptr inbounds [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %48
  %50 = bitcast i32* %49 to <8 x i32>*
  %wide.load.1 = load <8 x i32>, <8 x i32>* %50, align 4, !tbaa !59, !alias.scope !551
  %51 = getelementptr i32, i32* %49, i64 8
  %52 = bitcast i32* %51 to <8 x i32>*
  %wide.load13.1 = load <8 x i32>, <8 x i32>* %52, align 4, !tbaa !59, !alias.scope !551
  %53 = getelementptr i32, i32* %49, i64 16
  %54 = bitcast i32* %53 to <8 x i32>*
  %wide.load14.1 = load <8 x i32>, <8 x i32>* %54, align 4, !tbaa !59, !alias.scope !551
  %55 = getelementptr i32, i32* %49, i64 24
  %56 = bitcast i32* %55 to <8 x i32>*
  %wide.load15.1 = load <8 x i32>, <8 x i32>* %56, align 4, !tbaa !59, !alias.scope !551
  %57 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %48
  %58 = bitcast i32* %57 to <8 x i32>*
  store <8 x i32> %wide.load.1, <8 x i32>* %58, align 4, !tbaa !59, !alias.scope !554, !noalias !551
  %59 = getelementptr i32, i32* %57, i64 8
  %60 = bitcast i32* %59 to <8 x i32>*
  store <8 x i32> %wide.load13.1, <8 x i32>* %60, align 4, !tbaa !59, !alias.scope !554, !noalias !551
  %61 = getelementptr i32, i32* %57, i64 16
  %62 = bitcast i32* %61 to <8 x i32>*
  store <8 x i32> %wide.load14.1, <8 x i32>* %62, align 4, !tbaa !59, !alias.scope !554, !noalias !551
  %63 = getelementptr i32, i32* %57, i64 24
  %64 = bitcast i32* %63 to <8 x i32>*
  store <8 x i32> %wide.load15.1, <8 x i32>* %64, align 4, !tbaa !59, !alias.scope !554, !noalias !551
  %index.next.1 = or i64 %index, 64
  %65 = add i64 %__begin.0177.ls.dac.lcssa, %index.next.1
  %66 = getelementptr inbounds [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %65
  %67 = bitcast i32* %66 to <8 x i32>*
  %wide.load.2 = load <8 x i32>, <8 x i32>* %67, align 4, !tbaa !59, !alias.scope !551
  %68 = getelementptr i32, i32* %66, i64 8
  %69 = bitcast i32* %68 to <8 x i32>*
  %wide.load13.2 = load <8 x i32>, <8 x i32>* %69, align 4, !tbaa !59, !alias.scope !551
  %70 = getelementptr i32, i32* %66, i64 16
  %71 = bitcast i32* %70 to <8 x i32>*
  %wide.load14.2 = load <8 x i32>, <8 x i32>* %71, align 4, !tbaa !59, !alias.scope !551
  %72 = getelementptr i32, i32* %66, i64 24
  %73 = bitcast i32* %72 to <8 x i32>*
  %wide.load15.2 = load <8 x i32>, <8 x i32>* %73, align 4, !tbaa !59, !alias.scope !551
  %74 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %65
  %75 = bitcast i32* %74 to <8 x i32>*
  store <8 x i32> %wide.load.2, <8 x i32>* %75, align 4, !tbaa !59, !alias.scope !554, !noalias !551
  %76 = getelementptr i32, i32* %74, i64 8
  %77 = bitcast i32* %76 to <8 x i32>*
  store <8 x i32> %wide.load13.2, <8 x i32>* %77, align 4, !tbaa !59, !alias.scope !554, !noalias !551
  %78 = getelementptr i32, i32* %74, i64 16
  %79 = bitcast i32* %78 to <8 x i32>*
  store <8 x i32> %wide.load14.2, <8 x i32>* %79, align 4, !tbaa !59, !alias.scope !554, !noalias !551
  %80 = getelementptr i32, i32* %74, i64 24
  %81 = bitcast i32* %80 to <8 x i32>*
  store <8 x i32> %wide.load15.2, <8 x i32>* %81, align 4, !tbaa !59, !alias.scope !554, !noalias !551
  %index.next.2 = or i64 %index, 96
  %82 = add i64 %__begin.0177.ls.dac.lcssa, %index.next.2
  %83 = getelementptr inbounds [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %82
  %84 = bitcast i32* %83 to <8 x i32>*
  %wide.load.3 = load <8 x i32>, <8 x i32>* %84, align 4, !tbaa !59, !alias.scope !551
  %85 = getelementptr i32, i32* %83, i64 8
  %86 = bitcast i32* %85 to <8 x i32>*
  %wide.load13.3 = load <8 x i32>, <8 x i32>* %86, align 4, !tbaa !59, !alias.scope !551
  %87 = getelementptr i32, i32* %83, i64 16
  %88 = bitcast i32* %87 to <8 x i32>*
  %wide.load14.3 = load <8 x i32>, <8 x i32>* %88, align 4, !tbaa !59, !alias.scope !551
  %89 = getelementptr i32, i32* %83, i64 24
  %90 = bitcast i32* %89 to <8 x i32>*
  %wide.load15.3 = load <8 x i32>, <8 x i32>* %90, align 4, !tbaa !59, !alias.scope !551
  %91 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %82
  %92 = bitcast i32* %91 to <8 x i32>*
  store <8 x i32> %wide.load.3, <8 x i32>* %92, align 4, !tbaa !59, !alias.scope !554, !noalias !551
  %93 = getelementptr i32, i32* %91, i64 8
  %94 = bitcast i32* %93 to <8 x i32>*
  store <8 x i32> %wide.load13.3, <8 x i32>* %94, align 4, !tbaa !59, !alias.scope !554, !noalias !551
  %95 = getelementptr i32, i32* %91, i64 16
  %96 = bitcast i32* %95 to <8 x i32>*
  store <8 x i32> %wide.load14.3, <8 x i32>* %96, align 4, !tbaa !59, !alias.scope !554, !noalias !551
  %97 = getelementptr i32, i32* %91, i64 24
  %98 = bitcast i32* %97 to <8 x i32>*
  store <8 x i32> %wide.load15.3, <8 x i32>* %98, align 4, !tbaa !59, !alias.scope !554, !noalias !551
  %index.next.3 = add i64 %index, 128
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !556

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.3, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil.preheader

vector.body.epil.preheader:                       ; preds = %middle.block.unr-lcssa
  br label %vector.body.epil

vector.body.epil:                                 ; preds = %vector.body.epil, %vector.body.epil.preheader
  %index.epil = phi i64 [ %index.unr, %vector.body.epil.preheader ], [ %index.next.epil, %vector.body.epil ]
  %epil.iter = phi i64 [ %xtraiter, %vector.body.epil.preheader ], [ %epil.iter.sub, %vector.body.epil ]
  %99 = add i64 %__begin.0177.ls.dac.lcssa, %index.epil
  %100 = getelementptr inbounds [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %99
  %101 = bitcast i32* %100 to <8 x i32>*
  %wide.load.epil = load <8 x i32>, <8 x i32>* %101, align 4, !tbaa !59, !alias.scope !551
  %102 = getelementptr i32, i32* %100, i64 8
  %103 = bitcast i32* %102 to <8 x i32>*
  %wide.load13.epil = load <8 x i32>, <8 x i32>* %103, align 4, !tbaa !59, !alias.scope !551
  %104 = getelementptr i32, i32* %100, i64 16
  %105 = bitcast i32* %104 to <8 x i32>*
  %wide.load14.epil = load <8 x i32>, <8 x i32>* %105, align 4, !tbaa !59, !alias.scope !551
  %106 = getelementptr i32, i32* %100, i64 24
  %107 = bitcast i32* %106 to <8 x i32>*
  %wide.load15.epil = load <8 x i32>, <8 x i32>* %107, align 4, !tbaa !59, !alias.scope !551
  %108 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %99
  %109 = bitcast i32* %108 to <8 x i32>*
  store <8 x i32> %wide.load.epil, <8 x i32>* %109, align 4, !tbaa !59, !alias.scope !554, !noalias !551
  %110 = getelementptr i32, i32* %108, i64 8
  %111 = bitcast i32* %110 to <8 x i32>*
  store <8 x i32> %wide.load13.epil, <8 x i32>* %111, align 4, !tbaa !59, !alias.scope !554, !noalias !551
  %112 = getelementptr i32, i32* %108, i64 16
  %113 = bitcast i32* %112 to <8 x i32>*
  store <8 x i32> %wide.load14.epil, <8 x i32>* %113, align 4, !tbaa !59, !alias.scope !554, !noalias !551
  %114 = getelementptr i32, i32* %108, i64 24
  %115 = bitcast i32* %114 to <8 x i32>*
  store <8 x i32> %wide.load15.epil, <8 x i32>* %115, align 4, !tbaa !59, !alias.scope !554, !noalias !551
  %index.next.epil = add i64 %index.epil, 32
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block, label %vector.body.epil, !llvm.loop !557

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %24, %n.vec
  br i1 %cmp.n, label %pfor.cond.cleanup.loopexit.ls, label %pfor.detach.ls.preheader

pfor.cond.cleanup.loopexit.ls:                    ; preds = %pfor.detach.ls, %middle.block
  %116 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %117 = load atomic i32, i32* %116 acquire, align 8
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %120 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %121 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %122 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %121, i16* nonnull %122) #2
  %123 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %124 = call i8* @llvm.frameaddress(i32 0) #2
  %125 = getelementptr inbounds [5 x i8*], [5 x i8*]* %123, i64 0, i64 0
  store volatile i8* %124, i8** %125, align 8
  %126 = call i8* @llvm.stacksave() #2
  %127 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %126, i8** %127, align 8
  %128 = bitcast [5 x i8*]* %123 to i8*
  %129 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %128) #24
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %131 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %132 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %131, i64 0, i32 12, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 1
  store i64 %134, i64* %132, align 8
  %135 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %136 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %135, i64 0, i32 9
  %139 = bitcast %struct.__cilkrts_stack_frame** %138 to i64*
  store atomic i64 %137, i64* %139 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %140 = load atomic i32, i32* %116 acquire, align 8
  %141 = icmp eq i32 %140, 16777216
  br i1 %141, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %pfor.detach.ls
  %__begin.0177.ls = phi i64 [ %inc.ls, %pfor.detach.ls ], [ %__begin.0177.ls.ph, %pfor.detach.ls.preheader ]
  %arrayidx13.ls = getelementptr inbounds [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %__begin.0177.ls
  %142 = load i32, i32* %arrayidx13.ls, align 4, !tbaa !59
  %arrayidx14.ls = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %__begin.0177.ls
  store i32 %142, i32* %arrayidx14.ls, align 4, !tbaa !59
  %143 = icmp ult i64 %__begin.0177.ls, %end.ls
  %inc.ls = add nuw nsw i64 %__begin.0177.ls, 1
  br i1 %143, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit.ls, !llvm.loop !558
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.ls(i64 %__begin.0156.start.ls, i64 %.ls, i64 %div4.ls, i64 %n.ls, %"struct.std::pair.38"* nocapture readonly align 1 %A.ls, i8* nocapture align 1 %Tmp.ls, i64 %m.ls, [256 x i32]* nocapture align 1 %BK.ls, i64 %mul5.ls, i32 %sh_prom.i.i.ls, i64 %agg.tmp28.sroa.2.0.copyload.ls, %"struct.std::pair.38"* nocapture align 1 %B.ls) unnamed_addr #15 {
pfor.detach.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount1 = sub i64 %.ls, %__begin.0156.start.ls
  %9 = icmp ugt i64 %itercount1, 1
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin.0156.ls.ph = phi i64 [ %__begin.0156.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount3 = phi i64 [ %itercount1, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin.0156.ls.dac2 = phi i64 [ %__begin.0156.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount3, 1
  %miditer = add nuw nsw i64 %__begin.0156.ls.dac2, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split4, label %.split.split

.split4:                                          ; preds = %16
  call fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.ls_.split.cilk(i64 %__begin.0156.ls.dac2, i64 %miditer, i64 %div4.ls, i64 %n.ls, %"struct.std::pair.38"* %A.ls, i8* %Tmp.ls, i64 %m.ls, [256 x i32]* %BK.ls, i64 %mul5.ls, i32 %sh_prom.i.i.ls, i64 %agg.tmp28.sroa.2.0.copyload.ls, %"struct.std::pair.38"* %B.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split4, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, 1
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.loopexit201.ls:                 ; preds = %pfor.inc.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit201.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit201.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %pfor.inc.ls
  %__begin.0156.ls = phi i64 [ %inc.ls, %pfor.inc.ls ], [ %__begin.0156.ls.ph, %pfor.detach.ls.preheader ]
  %48 = mul i64 %__begin.0156.ls, %div4.ls
  %49 = and i64 %48, 4294967295
  %50 = sub i64 %n.ls, %49
  %51 = icmp sgt i64 %50, 0
  %smax194.ls = select i1 %51, i64 %50, i64 0
  %52 = icmp slt i64 %smax194.ls, %div4.ls
  %53 = select i1 %52, i64 %smax194.ls, i64 %div4.ls
  %add.ptr21.ls = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %A.ls, i64 %49
  %add.ptr23.ls = getelementptr inbounds i8, i8* %Tmp.ls, i64 %49
  %mul24.ls = mul nsw i64 %__begin.0156.ls, %m.ls
  %add.ptr25.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 0, i64 %mul24.ls
  %add.ptr27.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 %mul5.ls, i64 %mul24.ls
  %cmp272.i.ls = icmp sgt i64 %53, 0
  br i1 %cmp272.i.ls, label %for.body4.i.preheader.ls, label %pfor.inc.ls

for.body4.i.preheader.ls:                         ; preds = %pfor.detach.ls
  %xtraiter196.ls = and i64 %53, 1
  %54 = icmp eq i64 %53, 1
  br i1 %54, label %for.body4.i.epil.ls, label %for.body4.i.preheader.new.ls

for.body4.i.preheader.new.ls:                     ; preds = %for.body4.i.preheader.ls
  %unroll_iter198.ls = sub i64 %53, %xtraiter196.ls
  br label %for.body4.i.ls

for.body4.i.ls:                                   ; preds = %for.body4.i.ls, %for.body4.i.preheader.new.ls
  %j.073.i.ls = phi i64 [ 0, %for.body4.i.preheader.new.ls ], [ %inc11.i.1.ls, %for.body4.i.ls ]
  %niter199.ls = phi i64 [ %unroll_iter198.ls, %for.body4.i.preheader.new.ls ], [ %niter199.nsub.1.ls, %for.body4.i.ls ]
  %agg.tmp.sroa.0.0..sroa_idx.i.ls = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %add.ptr21.ls, i64 %j.073.i.ls, i32 0
  %agg.tmp.sroa.0.0.copyload.i.ls = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.ls, align 8
  %shr.i.i.ls = ashr i32 %agg.tmp.sroa.0.0.copyload.i.ls, %sh_prom.i.i.ls
  %conv.i.i120.ls = sext i32 %shr.i.i.ls to i64
  %and.i.i.ls = and i64 %conv.i.i120.ls, %agg.tmp28.sroa.2.0.copyload.ls
  %conv.i.ls = trunc i64 %and.i.i.ls to i8
  %arrayidx6.i.ls = getelementptr inbounds i8, i8* %add.ptr23.ls, i64 %j.073.i.ls
  store i8 %conv.i.ls, i8* %arrayidx6.i.ls, align 1, !tbaa !22
  %conv7.i.ls = and i64 %and.i.i.ls, 255
  %arrayidx8.i.ls = getelementptr inbounds i32, i32* %add.ptr25.ls, i64 %conv7.i.ls
  %55 = load i32, i32* %arrayidx8.i.ls, align 4, !tbaa !59
  %inc9.i.ls = add i32 %55, 1
  store i32 %inc9.i.ls, i32* %arrayidx8.i.ls, align 4, !tbaa !59
  %inc11.i.ls = or i64 %j.073.i.ls, 1
  %agg.tmp.sroa.0.0..sroa_idx.i.1.ls = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %add.ptr21.ls, i64 %inc11.i.ls, i32 0
  %agg.tmp.sroa.0.0.copyload.i.1.ls = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.1.ls, align 8
  %shr.i.i.1.ls = ashr i32 %agg.tmp.sroa.0.0.copyload.i.1.ls, %sh_prom.i.i.ls
  %conv.i.i120.1.ls = sext i32 %shr.i.i.1.ls to i64
  %and.i.i.1.ls = and i64 %conv.i.i120.1.ls, %agg.tmp28.sroa.2.0.copyload.ls
  %conv.i.1.ls = trunc i64 %and.i.i.1.ls to i8
  %arrayidx6.i.1.ls = getelementptr inbounds i8, i8* %add.ptr23.ls, i64 %inc11.i.ls
  store i8 %conv.i.1.ls, i8* %arrayidx6.i.1.ls, align 1, !tbaa !22
  %conv7.i.1.ls = and i64 %and.i.i.1.ls, 255
  %arrayidx8.i.1.ls = getelementptr inbounds i32, i32* %add.ptr25.ls, i64 %conv7.i.1.ls
  %56 = load i32, i32* %arrayidx8.i.1.ls, align 4, !tbaa !59
  %inc9.i.1.ls = add i32 %56, 1
  store i32 %inc9.i.1.ls, i32* %arrayidx8.i.1.ls, align 4, !tbaa !59
  %inc11.i.1.ls = add nuw nsw i64 %j.073.i.ls, 2
  %niter199.nsub.1.ls = add i64 %niter199.ls, -2
  %niter199.ncmp.1.ls = icmp eq i64 %niter199.nsub.1.ls, 0
  br i1 %niter199.ncmp.1.ls, label %for.body27.i.preheader.unr-lcssa.ls, label %for.body4.i.ls

for.body27.i.preheader.unr-lcssa.ls:              ; preds = %for.body4.i.ls
  %lcmp.mod197.ls = icmp eq i64 %xtraiter196.ls, 0
  br i1 %lcmp.mod197.ls, label %for.body27.i.ls.preheader, label %for.body4.i.epil.ls

for.body4.i.epil.ls:                              ; preds = %for.body4.i.preheader.ls, %for.body27.i.preheader.unr-lcssa.ls
  %j.073.i.unr.ls2 = phi i64 [ %inc11.i.1.ls, %for.body27.i.preheader.unr-lcssa.ls ], [ 0, %for.body4.i.preheader.ls ]
  %agg.tmp.sroa.0.0..sroa_idx.i.epil.ls = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %add.ptr21.ls, i64 %j.073.i.unr.ls2, i32 0
  %agg.tmp.sroa.0.0.copyload.i.epil.ls = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.epil.ls, align 8
  %shr.i.i.epil.ls = ashr i32 %agg.tmp.sroa.0.0.copyload.i.epil.ls, %sh_prom.i.i.ls
  %conv.i.i120.epil.ls = sext i32 %shr.i.i.epil.ls to i64
  %and.i.i.epil.ls = and i64 %conv.i.i120.epil.ls, %agg.tmp28.sroa.2.0.copyload.ls
  %conv.i.epil.ls = trunc i64 %and.i.i.epil.ls to i8
  %arrayidx6.i.epil.ls = getelementptr inbounds i8, i8* %add.ptr23.ls, i64 %j.073.i.unr.ls2
  store i8 %conv.i.epil.ls, i8* %arrayidx6.i.epil.ls, align 1, !tbaa !22
  %conv7.i.epil.ls = and i64 %and.i.i.epil.ls, 255
  %arrayidx8.i.epil.ls = getelementptr inbounds i32, i32* %add.ptr25.ls, i64 %conv7.i.epil.ls
  %57 = load i32, i32* %arrayidx8.i.epil.ls, align 4, !tbaa !59
  %inc9.i.epil.ls = add i32 %57, 1
  store i32 %inc9.i.epil.ls, i32* %arrayidx8.i.epil.ls, align 4, !tbaa !59
  br label %for.body27.i.ls.preheader

for.body27.i.ls.preheader:                        ; preds = %for.body4.i.epil.ls, %for.body27.i.preheader.unr-lcssa.ls
  br label %for.body27.i.ls

for.body27.i.ls:                                  ; preds = %for.body27.i.ls.preheader, %for.body27.i.ls
  %j23.068.in.i.ls = phi i64 [ %j23.068.i.ls, %for.body27.i.ls ], [ %53, %for.body27.i.ls.preheader ]
  %j23.068.i.ls = add nsw i64 %j23.068.in.i.ls, -1
  %arrayidx28.i.ls = getelementptr inbounds i8, i8* %add.ptr23.ls, i64 %j23.068.i.ls
  %58 = load i8, i8* %arrayidx28.i.ls, align 1, !tbaa !22
  %idxprom29.i.ls = zext i8 %58 to i64
  %arrayidx30.i.ls = getelementptr inbounds i32, i32* %add.ptr27.ls, i64 %idxprom29.i.ls
  %59 = load i32, i32* %arrayidx30.i.ls, align 4, !tbaa !59
  %dec.i.ls = add i32 %59, -1
  store i32 %dec.i.ls, i32* %arrayidx30.i.ls, align 4, !tbaa !59
  %idxprom32.i.ls = zext i32 %dec.i.ls to i64
  %first.i.i122.ls = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %add.ptr21.ls, i64 %j23.068.i.ls, i32 0
  %60 = load i32, i32* %first.i.i122.ls, align 8, !tbaa !250
  %first2.i.i123.ls = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B.ls, i64 %idxprom32.i.ls, i32 0
  store i32 %60, i32* %first2.i.i123.ls, align 8, !tbaa !250
  %second.i.i124.ls = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %add.ptr21.ls, i64 %j23.068.i.ls, i32 1
  %61 = bitcast %struct.vertex.29** %second.i.i124.ls to i64*
  %62 = load i64, i64* %61, align 8, !tbaa !252
  %second3.i.i125.ls = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B.ls, i64 %idxprom32.i.ls, i32 1
  %63 = bitcast %struct.vertex.29** %second3.i.i125.ls to i64*
  store i64 %62, i64* %63, align 8, !tbaa !252
  %cmp25.i.ls = icmp sgt i64 %j23.068.in.i.ls, 1
  br i1 %cmp25.i.ls, label %for.body27.i.ls, label %pfor.inc.ls

pfor.inc.ls:                                      ; preds = %for.body27.i.ls, %pfor.detach.ls
  %64 = icmp ult i64 %__begin.0156.ls, %.ls
  %inc.ls = add nuw nsw i64 %__begin.0156.ls, 1
  br i1 %64, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit201.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.us.ls(i64 %__begin.0156.us.start.ls, i64 %.ls, i64 %div4.ls, i64 %n.ls, %"struct.std::pair.38"* nocapture readonly align 1 %A.ls, i8* nocapture align 1 %Tmp.ls, i64 %m.ls, [256 x i32]* nocapture align 1 %BK.ls, i64 %mul5.ls, i64 %.ls1, i32 %sh_prom.i.i.ls, i64 %agg.tmp28.sroa.2.0.copyload.ls, i1 %.ls2, i64 %unroll_iter192.ls, i1 %lcmp.mod191.ls, i64 %xtraiter189.ls, %"struct.std::pair.38"* nocapture align 1 %B.ls) unnamed_addr #15 {
pfor.detach.us.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.us.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.us.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.us.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.us.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount3 = sub i64 %.ls, %__begin.0156.us.start.ls
  %9 = icmp ugt i64 %itercount3, 1
  br i1 %9, label %.lr.ph, label %pfor.detach.us.ls.preheader

pfor.detach.us.ls.preheader:                      ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin.0156.us.ls.ph = phi i64 [ %__begin.0156.us.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.us.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount5 = phi i64 [ %itercount3, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin.0156.us.ls.dac4 = phi i64 [ %__begin.0156.us.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount5, 1
  %miditer = add nuw nsw i64 %__begin.0156.us.ls.dac4, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split6, label %.split.split

.split6:                                          ; preds = %16
  call fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.us.ls_.split.cilk(i64 %__begin.0156.us.ls.dac4, i64 %miditer, i64 %div4.ls, i64 %n.ls, %"struct.std::pair.38"* %A.ls, i8* %Tmp.ls, i64 %m.ls, [256 x i32]* %BK.ls, i64 %mul5.ls, i64 %.ls1, i32 %sh_prom.i.i.ls, i64 %agg.tmp28.sroa.2.0.copyload.ls, i1 %.ls2, i64 %unroll_iter192.ls, i1 %lcmp.mod191.ls, i64 %xtraiter189.ls, %"struct.std::pair.38"* %B.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split6, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, 1
  br i1 %21, label %16, label %pfor.detach.us.ls.preheader

pfor.cond.cleanup.loopexit.ls:                    ; preds = %pfor.inc.us.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.us.ls:                                ; preds = %pfor.detach.us.ls.preheader, %pfor.inc.us.ls
  %__begin.0156.us.ls = phi i64 [ %inc.us.ls, %pfor.inc.us.ls ], [ %__begin.0156.us.ls.ph, %pfor.detach.us.ls.preheader ]
  %48 = mul i64 %__begin.0156.us.ls, %div4.ls
  %49 = and i64 %48, 4294967295
  %50 = sub i64 %n.ls, %49
  %51 = icmp sgt i64 %50, 0
  %smax.ls = select i1 %51, i64 %50, i64 0
  %52 = icmp slt i64 %smax.ls, %div4.ls
  %53 = select i1 %52, i64 %smax.ls, i64 %div4.ls
  %conv.us.ls = trunc i64 %48 to i32
  %add.ptr21.us.ls = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %A.ls, i64 %49
  %add.ptr23.us.ls = getelementptr inbounds i8, i8* %Tmp.ls, i64 %49
  %mul24.us.ls = mul nsw i64 %__begin.0156.us.ls, %m.ls
  %add.ptr25.us.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 0, i64 %mul24.us.ls
  %add.ptr27.us.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 %mul5.ls, i64 %mul24.us.ls
  %counts78.i.us.ls = bitcast i32* %add.ptr25.us.ls to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %counts78.i.us.ls, i8 0, i64 %.ls1, i32 4, i1 false) #2
  %cmp272.i.us.ls = icmp sgt i64 %53, 0
  br i1 %cmp272.i.us.ls, label %for.body4.i.us.preheader.ls, label %for.body17.i.us.preheader.ls

for.body4.i.us.preheader.ls:                      ; preds = %pfor.detach.us.ls
  %xtraiter185.ls = and i64 %53, 1
  %54 = icmp eq i64 %53, 1
  br i1 %54, label %for.body4.i.us.epil.ls, label %for.body4.i.us.preheader.new.ls

for.body4.i.us.preheader.new.ls:                  ; preds = %for.body4.i.us.preheader.ls
  %unroll_iter187.ls = sub i64 %53, %xtraiter185.ls
  br label %for.body4.i.us.ls

for.body4.i.us.ls:                                ; preds = %for.body4.i.us.ls, %for.body4.i.us.preheader.new.ls
  %j.073.i.us.ls = phi i64 [ 0, %for.body4.i.us.preheader.new.ls ], [ %inc11.i.us.1.ls, %for.body4.i.us.ls ]
  %niter188.ls = phi i64 [ %unroll_iter187.ls, %for.body4.i.us.preheader.new.ls ], [ %niter188.nsub.1.ls, %for.body4.i.us.ls ]
  %agg.tmp.sroa.0.0..sroa_idx.i.us.ls = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %add.ptr21.us.ls, i64 %j.073.i.us.ls, i32 0
  %agg.tmp.sroa.0.0.copyload.i.us.ls = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.us.ls, align 8
  %shr.i.i.us.ls = ashr i32 %agg.tmp.sroa.0.0.copyload.i.us.ls, %sh_prom.i.i.ls
  %conv.i.i120.us.ls = sext i32 %shr.i.i.us.ls to i64
  %and.i.i.us.ls = and i64 %conv.i.i120.us.ls, %agg.tmp28.sroa.2.0.copyload.ls
  %conv.i.us.ls = trunc i64 %and.i.i.us.ls to i8
  %arrayidx6.i.us.ls = getelementptr inbounds i8, i8* %add.ptr23.us.ls, i64 %j.073.i.us.ls
  store i8 %conv.i.us.ls, i8* %arrayidx6.i.us.ls, align 1, !tbaa !22
  %conv7.i.us.ls = and i64 %and.i.i.us.ls, 255
  %arrayidx8.i.us.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %conv7.i.us.ls
  %55 = load i32, i32* %arrayidx8.i.us.ls, align 4, !tbaa !59
  %inc9.i.us.ls = add i32 %55, 1
  store i32 %inc9.i.us.ls, i32* %arrayidx8.i.us.ls, align 4, !tbaa !59
  %inc11.i.us.ls = or i64 %j.073.i.us.ls, 1
  %agg.tmp.sroa.0.0..sroa_idx.i.us.1.ls = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %add.ptr21.us.ls, i64 %inc11.i.us.ls, i32 0
  %agg.tmp.sroa.0.0.copyload.i.us.1.ls = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.us.1.ls, align 8
  %shr.i.i.us.1.ls = ashr i32 %agg.tmp.sroa.0.0.copyload.i.us.1.ls, %sh_prom.i.i.ls
  %conv.i.i120.us.1.ls = sext i32 %shr.i.i.us.1.ls to i64
  %and.i.i.us.1.ls = and i64 %conv.i.i120.us.1.ls, %agg.tmp28.sroa.2.0.copyload.ls
  %conv.i.us.1.ls = trunc i64 %and.i.i.us.1.ls to i8
  %arrayidx6.i.us.1.ls = getelementptr inbounds i8, i8* %add.ptr23.us.ls, i64 %inc11.i.us.ls
  store i8 %conv.i.us.1.ls, i8* %arrayidx6.i.us.1.ls, align 1, !tbaa !22
  %conv7.i.us.1.ls = and i64 %and.i.i.us.1.ls, 255
  %arrayidx8.i.us.1.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %conv7.i.us.1.ls
  %56 = load i32, i32* %arrayidx8.i.us.1.ls, align 4, !tbaa !59
  %inc9.i.us.1.ls = add i32 %56, 1
  store i32 %inc9.i.us.1.ls, i32* %arrayidx8.i.us.1.ls, align 4, !tbaa !59
  %inc11.i.us.1.ls = add nuw nsw i64 %j.073.i.us.ls, 2
  %niter188.nsub.1.ls = add i64 %niter188.ls, -2
  %niter188.ncmp.1.ls = icmp eq i64 %niter188.nsub.1.ls, 0
  br i1 %niter188.ncmp.1.ls, label %for.body17.i.us.preheader.loopexit.unr-lcssa.ls, label %for.body4.i.us.ls

for.body17.i.us.preheader.loopexit.unr-lcssa.ls:  ; preds = %for.body4.i.us.ls
  %lcmp.mod186.ls = icmp eq i64 %xtraiter185.ls, 0
  br i1 %lcmp.mod186.ls, label %for.body17.i.us.preheader.ls, label %for.body4.i.us.epil.ls

for.body4.i.us.epil.ls:                           ; preds = %for.body4.i.us.preheader.ls, %for.body17.i.us.preheader.loopexit.unr-lcssa.ls
  %j.073.i.us.unr.ls2 = phi i64 [ %inc11.i.us.1.ls, %for.body17.i.us.preheader.loopexit.unr-lcssa.ls ], [ 0, %for.body4.i.us.preheader.ls ]
  %agg.tmp.sroa.0.0..sroa_idx.i.us.epil.ls = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %add.ptr21.us.ls, i64 %j.073.i.us.unr.ls2, i32 0
  %agg.tmp.sroa.0.0.copyload.i.us.epil.ls = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.us.epil.ls, align 8
  %shr.i.i.us.epil.ls = ashr i32 %agg.tmp.sroa.0.0.copyload.i.us.epil.ls, %sh_prom.i.i.ls
  %conv.i.i120.us.epil.ls = sext i32 %shr.i.i.us.epil.ls to i64
  %and.i.i.us.epil.ls = and i64 %conv.i.i120.us.epil.ls, %agg.tmp28.sroa.2.0.copyload.ls
  %conv.i.us.epil.ls = trunc i64 %and.i.i.us.epil.ls to i8
  %arrayidx6.i.us.epil.ls = getelementptr inbounds i8, i8* %add.ptr23.us.ls, i64 %j.073.i.us.unr.ls2
  store i8 %conv.i.us.epil.ls, i8* %arrayidx6.i.us.epil.ls, align 1, !tbaa !22
  %conv7.i.us.epil.ls = and i64 %and.i.i.us.epil.ls, 255
  %arrayidx8.i.us.epil.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %conv7.i.us.epil.ls
  %57 = load i32, i32* %arrayidx8.i.us.epil.ls, align 4, !tbaa !59
  %inc9.i.us.epil.ls = add i32 %57, 1
  store i32 %inc9.i.us.epil.ls, i32* %arrayidx8.i.us.epil.ls, align 4, !tbaa !59
  br label %for.body17.i.us.preheader.ls

for.body17.i.us.preheader.ls:                     ; preds = %for.body4.i.us.epil.ls, %for.body17.i.us.preheader.loopexit.unr-lcssa.ls, %pfor.detach.us.ls
  br i1 %.ls2, label %for.cond.cleanup16.i.loopexit.us.unr-lcssa.ls, label %for.body17.i.us.ls.preheader

for.body17.i.us.ls.preheader:                     ; preds = %for.body17.i.us.preheader.ls
  br label %for.body17.i.us.ls

for.body17.i.us.ls:                               ; preds = %for.body17.i.us.ls.preheader, %for.body17.i.us.ls
  %i13.071.i.us.ls = phi i64 [ %inc21.i.us.7.ls, %for.body17.i.us.ls ], [ 0, %for.body17.i.us.ls.preheader ]
  %s.070.i.us.ls = phi i32 [ %add.i.us.7.ls, %for.body17.i.us.ls ], [ %conv.us.ls, %for.body17.i.us.ls.preheader ]
  %niter193.ls = phi i64 [ %niter193.nsub.7.ls, %for.body17.i.us.ls ], [ %unroll_iter192.ls, %for.body17.i.us.ls.preheader ]
  %arrayidx18.i.us.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %i13.071.i.us.ls
  %58 = load i32, i32* %arrayidx18.i.us.ls, align 4, !tbaa !59
  %add.i.us.ls = add i32 %58, %s.070.i.us.ls
  %arrayidx19.i.us.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %i13.071.i.us.ls
  store i32 %add.i.us.ls, i32* %arrayidx19.i.us.ls, align 4, !tbaa !59
  %inc21.i.us.ls = or i64 %i13.071.i.us.ls, 1
  %arrayidx18.i.us.1.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.ls
  %59 = load i32, i32* %arrayidx18.i.us.1.ls, align 4, !tbaa !59
  %add.i.us.1.ls = add i32 %59, %add.i.us.ls
  %arrayidx19.i.us.1.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.ls
  store i32 %add.i.us.1.ls, i32* %arrayidx19.i.us.1.ls, align 4, !tbaa !59
  %inc21.i.us.1.ls = or i64 %i13.071.i.us.ls, 2
  %arrayidx18.i.us.2.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.1.ls
  %60 = load i32, i32* %arrayidx18.i.us.2.ls, align 4, !tbaa !59
  %add.i.us.2.ls = add i32 %60, %add.i.us.1.ls
  %arrayidx19.i.us.2.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.1.ls
  store i32 %add.i.us.2.ls, i32* %arrayidx19.i.us.2.ls, align 4, !tbaa !59
  %inc21.i.us.2.ls = or i64 %i13.071.i.us.ls, 3
  %arrayidx18.i.us.3.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.2.ls
  %61 = load i32, i32* %arrayidx18.i.us.3.ls, align 4, !tbaa !59
  %add.i.us.3.ls = add i32 %61, %add.i.us.2.ls
  %arrayidx19.i.us.3.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.2.ls
  store i32 %add.i.us.3.ls, i32* %arrayidx19.i.us.3.ls, align 4, !tbaa !59
  %inc21.i.us.3.ls = or i64 %i13.071.i.us.ls, 4
  %arrayidx18.i.us.4.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.3.ls
  %62 = load i32, i32* %arrayidx18.i.us.4.ls, align 4, !tbaa !59
  %add.i.us.4.ls = add i32 %62, %add.i.us.3.ls
  %arrayidx19.i.us.4.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.3.ls
  store i32 %add.i.us.4.ls, i32* %arrayidx19.i.us.4.ls, align 4, !tbaa !59
  %inc21.i.us.4.ls = or i64 %i13.071.i.us.ls, 5
  %arrayidx18.i.us.5.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.4.ls
  %63 = load i32, i32* %arrayidx18.i.us.5.ls, align 4, !tbaa !59
  %add.i.us.5.ls = add i32 %63, %add.i.us.4.ls
  %arrayidx19.i.us.5.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.4.ls
  store i32 %add.i.us.5.ls, i32* %arrayidx19.i.us.5.ls, align 4, !tbaa !59
  %inc21.i.us.5.ls = or i64 %i13.071.i.us.ls, 6
  %arrayidx18.i.us.6.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.5.ls
  %64 = load i32, i32* %arrayidx18.i.us.6.ls, align 4, !tbaa !59
  %add.i.us.6.ls = add i32 %64, %add.i.us.5.ls
  %arrayidx19.i.us.6.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.5.ls
  store i32 %add.i.us.6.ls, i32* %arrayidx19.i.us.6.ls, align 4, !tbaa !59
  %inc21.i.us.6.ls = or i64 %i13.071.i.us.ls, 7
  %arrayidx18.i.us.7.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.6.ls
  %65 = load i32, i32* %arrayidx18.i.us.7.ls, align 4, !tbaa !59
  %add.i.us.7.ls = add i32 %65, %add.i.us.6.ls
  %arrayidx19.i.us.7.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.6.ls
  store i32 %add.i.us.7.ls, i32* %arrayidx19.i.us.7.ls, align 4, !tbaa !59
  %inc21.i.us.7.ls = add nuw nsw i64 %i13.071.i.us.ls, 8
  %niter193.nsub.7.ls = add i64 %niter193.ls, -8
  %niter193.ncmp.7.ls = icmp eq i64 %niter193.nsub.7.ls, 0
  br i1 %niter193.ncmp.7.ls, label %for.cond.cleanup16.i.loopexit.us.unr-lcssa.ls, label %for.body17.i.us.ls

for.cond.cleanup16.i.loopexit.us.unr-lcssa.ls:    ; preds = %for.body17.i.us.ls, %for.body17.i.us.preheader.ls
  %i13.071.i.us.unr.ls = phi i64 [ 0, %for.body17.i.us.preheader.ls ], [ %inc21.i.us.7.ls, %for.body17.i.us.ls ]
  %s.070.i.us.unr.ls = phi i32 [ %conv.us.ls, %for.body17.i.us.preheader.ls ], [ %add.i.us.7.ls, %for.body17.i.us.ls ]
  br i1 %lcmp.mod191.ls, label %for.cond.cleanup16.i.loopexit.us.ls, label %for.body17.i.us.epil.ls.preheader

for.body17.i.us.epil.ls.preheader:                ; preds = %for.cond.cleanup16.i.loopexit.us.unr-lcssa.ls
  br label %for.body17.i.us.epil.ls

for.body17.i.us.epil.ls:                          ; preds = %for.body17.i.us.epil.ls.preheader, %for.body17.i.us.epil.ls
  %i13.071.i.us.epil.ls = phi i64 [ %inc21.i.us.epil.ls, %for.body17.i.us.epil.ls ], [ %i13.071.i.us.unr.ls, %for.body17.i.us.epil.ls.preheader ]
  %s.070.i.us.epil.ls = phi i32 [ %add.i.us.epil.ls, %for.body17.i.us.epil.ls ], [ %s.070.i.us.unr.ls, %for.body17.i.us.epil.ls.preheader ]
  %epil.iter190.ls = phi i64 [ %epil.iter190.sub.ls, %for.body17.i.us.epil.ls ], [ %xtraiter189.ls, %for.body17.i.us.epil.ls.preheader ]
  %arrayidx18.i.us.epil.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %i13.071.i.us.epil.ls
  %66 = load i32, i32* %arrayidx18.i.us.epil.ls, align 4, !tbaa !59
  %add.i.us.epil.ls = add i32 %66, %s.070.i.us.epil.ls
  %arrayidx19.i.us.epil.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %i13.071.i.us.epil.ls
  store i32 %add.i.us.epil.ls, i32* %arrayidx19.i.us.epil.ls, align 4, !tbaa !59
  %inc21.i.us.epil.ls = add nuw nsw i64 %i13.071.i.us.epil.ls, 1
  %epil.iter190.sub.ls = add nsw i64 %epil.iter190.ls, -1
  %epil.iter190.cmp.ls = icmp eq i64 %epil.iter190.sub.ls, 0
  br i1 %epil.iter190.cmp.ls, label %for.cond.cleanup16.i.loopexit.us.ls, label %for.body17.i.us.epil.ls, !llvm.loop !559

for.cond.cleanup16.i.loopexit.us.ls:              ; preds = %for.body17.i.us.epil.ls, %for.cond.cleanup16.i.loopexit.us.unr-lcssa.ls
  br i1 %cmp272.i.us.ls, label %for.body27.i.us.ls.preheader, label %pfor.inc.us.ls

for.body27.i.us.ls.preheader:                     ; preds = %for.cond.cleanup16.i.loopexit.us.ls
  br label %for.body27.i.us.ls

for.body27.i.us.ls:                               ; preds = %for.body27.i.us.ls.preheader, %for.body27.i.us.ls
  %j23.068.in.i.us.ls = phi i64 [ %j23.068.i.us.ls, %for.body27.i.us.ls ], [ %53, %for.body27.i.us.ls.preheader ]
  %j23.068.i.us.ls = add nsw i64 %j23.068.in.i.us.ls, -1
  %arrayidx28.i.us.ls = getelementptr inbounds i8, i8* %add.ptr23.us.ls, i64 %j23.068.i.us.ls
  %67 = load i8, i8* %arrayidx28.i.us.ls, align 1, !tbaa !22
  %idxprom29.i.us.ls = zext i8 %67 to i64
  %arrayidx30.i.us.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %idxprom29.i.us.ls
  %68 = load i32, i32* %arrayidx30.i.us.ls, align 4, !tbaa !59
  %dec.i.us.ls = add i32 %68, -1
  store i32 %dec.i.us.ls, i32* %arrayidx30.i.us.ls, align 4, !tbaa !59
  %idxprom32.i.us.ls = zext i32 %dec.i.us.ls to i64
  %first.i.i122.us.ls = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %add.ptr21.us.ls, i64 %j23.068.i.us.ls, i32 0
  %69 = load i32, i32* %first.i.i122.us.ls, align 8, !tbaa !250
  %first2.i.i123.us.ls = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B.ls, i64 %idxprom32.i.us.ls, i32 0
  store i32 %69, i32* %first2.i.i123.us.ls, align 8, !tbaa !250
  %second.i.i124.us.ls = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %add.ptr21.us.ls, i64 %j23.068.i.us.ls, i32 1
  %70 = bitcast %struct.vertex.29** %second.i.i124.us.ls to i64*
  %71 = load i64, i64* %70, align 8, !tbaa !252
  %second3.i.i125.us.ls = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B.ls, i64 %idxprom32.i.us.ls, i32 1
  %72 = bitcast %struct.vertex.29** %second3.i.i125.us.ls to i64*
  store i64 %71, i64* %72, align 8, !tbaa !252
  %cmp25.i.us.ls = icmp sgt i64 %j23.068.in.i.us.ls, 1
  br i1 %cmp25.i.us.ls, label %for.body27.i.us.ls, label %pfor.inc.us.ls

pfor.inc.us.ls:                                   ; preds = %for.body27.i.us.ls, %for.cond.cleanup16.i.loopexit.us.ls
  %73 = icmp ult i64 %__begin.0156.us.ls, %.ls
  %inc.us.ls = add nuw nsw i64 %__begin.0156.us.ls, 1
  br i1 %73, label %pfor.detach.us.ls, label %pfor.cond.cleanup.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0__pfor.detach.ls(i64 %indvars.iv.start.ls, i64 %end.ls, i64 %.ls, [256 x i32]* align 1 %BK.ls, float %conv10.ls, i64 %n.ls, float %div.ls, %"struct.std::pair.38"* align 1 %A.ls, %"struct.std::pair.38"* align 1 %B.ls, i8* align 1 %Tmp.ls, i64 %sub.ls) unnamed_addr #15 {
if.then5.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %if.then5.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %if.then5.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %if.then5.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %if.then5.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount1 = sub i64 %end.ls, %indvars.iv.start.ls
  %9 = icmp ugt i64 %itercount1, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv.ls.ph = phi i64 [ %indvars.iv.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount3 = phi i64 [ %itercount1, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv.ls.dac2 = phi i64 [ %indvars.iv.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount3, 1
  %miditer = add nuw nsw i64 %indvars.iv.ls.dac2, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split4, label %.split.split

.split4:                                          ; preds = %16
  call fastcc void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0__pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac2, i64 %miditer, i64 %.ls, [256 x i32]* %BK.ls, float %conv10.ls, i64 %n.ls, float %div.ls, %"struct.std::pair.38"* %A.ls, %"struct.std::pair.38"* %B.ls, i8* %Tmp.ls, i64 %sub.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split4, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.ls:                             ; preds = %cond.end.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %cond.end.ls
  %indvars.iv.ls = phi i64 [ %indvars.iv.next.ls.pre-phi, %cond.end.ls ], [ %indvars.iv.ls.ph, %pfor.detach.ls.preheader ]
  %arrayidx12.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 0, i64 %indvars.iv.ls
  %48 = load i32, i32* %arrayidx12.ls, align 4, !tbaa !59
  %conv13.ls = zext i32 %48 to i64
  %cmp14.ls = icmp eq i64 %indvars.iv.ls, 255
  br i1 %cmp14.ls, label %cond.end.ls, label %cond.false.ls

cond.false.ls:                                    ; preds = %pfor.detach.ls
  %49 = add nuw nsw i64 %indvars.iv.ls, 1
  %arrayidx17.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 0, i64 %49
  %50 = load i32, i32* %arrayidx17.ls, align 4, !tbaa !59
  %conv18.ls = zext i32 %50 to i64
  %.pre.ls = uitofp i32 %50 to float
  br label %cond.end.ls

cond.end.ls:                                      ; preds = %pfor.detach.ls, %cond.false.ls
  %indvars.iv.next.ls.pre-phi = phi i64 [ %49, %cond.false.ls ], [ 256, %pfor.detach.ls ]
  %conv26.pre-phi.ls = phi float [ %.pre.ls, %cond.false.ls ], [ %conv10.ls, %pfor.detach.ls ]
  %cond.ls = phi i64 [ %conv18.ls, %cond.false.ls ], [ %n.ls, %pfor.detach.ls ]
  %sub19.ls = sub nsw i64 %cond.ls, %conv13.ls
  %conv20.ls = uitofp i32 %48 to float
  %mul21.ls = fmul fast float %conv20.ls, %div.ls
  %51 = call fast float @llvm.floor.f32(float %mul21.ls) #2
  %conv22.ls = fptosi float %51 to i64
  %add25.ls = add i64 %indvars.iv.next.ls.pre-phi, %conv22.ls
  %mul27.ls = fmul fast float %conv26.pre-phi.ls, %div.ls
  %52 = call fast float @llvm.floor.f32(float %mul27.ls) #2
  %conv29.ls = fptosi float %52 to i64
  %add31.ls = add nuw nsw i64 %indvars.iv.ls, 2
  %add32.ls = sub i64 %add31.ls, %add25.ls
  %sub33.ls = add i64 %add32.ls, %conv29.ls
  %add.ptr.ls = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %A.ls, i64 %conv13.ls
  %add.ptr34.ls = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %B.ls, i64 %conv13.ls
  %add.ptr35.ls = getelementptr inbounds i8, i8* %Tmp.ls, i64 %conv13.ls
  %add.ptr36.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 %add25.ls
  call void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0_(%"struct.std::pair.38"* %add.ptr.ls, %"struct.std::pair.38"* %add.ptr34.ls, i8* %add.ptr35.ls, [256 x i32]* %add.ptr36.ls, i64 %sub33.ls, i64 %sub19.ls, i64 %sub.ls)
  %53 = icmp ult i64 %indvars.iv.ls, %end.ls
  br i1 %53, label %pfor.detach.ls, label %pfor.cond.cleanup.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_Z3ANNILi10E6vertexI8_point3dIdELi10EEEvPPT0_ii_pfor.detach.ls(i64 %indvars.iv.start.ls, i64 %.ls, %struct.vertex.44** nocapture readonly align 1 %.ls1, %struct.kNearestNeighbor.45* align 8 %T.ls, i32 %k.ls) unnamed_addr #15 {
pfor.detach.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount2 = sub i64 %.ls, %indvars.iv.start.ls
  %9 = icmp ugt i64 %itercount2, 1
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv.ls.ph = phi i64 [ %indvars.iv.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount4 = phi i64 [ %itercount2, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv.ls.dac3 = phi i64 [ %indvars.iv.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount4, 1
  %miditer = add nuw nsw i64 %indvars.iv.ls.dac3, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split5, label %.split.split

.split5:                                          ; preds = %16
  call fastcc void @_Z3ANNILi10E6vertexI8_point3dIdELi10EEEvPPT0_ii_pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac3, i64 %miditer, %struct.vertex.44** %.ls1, %struct.kNearestNeighbor.45* %T.ls, i32 %k.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split5, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, 1
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.loopexit.ls:                    ; preds = %pfor.detach.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %pfor.detach.ls
  %indvars.iv.ls = phi i64 [ %indvars.iv.next.ls, %pfor.detach.ls ], [ %indvars.iv.ls.ph, %pfor.detach.ls.preheader ]
  %arrayidx.ls = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %.ls1, i64 %indvars.iv.ls
  %48 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx.ls, align 8, !tbaa !53
  %arraydecay.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %48, i64 0, i32 2, i64 0
  call void @_ZN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE8kNearestEPS3_PS5_i(%struct.kNearestNeighbor.45* nonnull %T.ls, %struct.vertex.44* %48, %struct.vertex.44** nonnull %arraydecay.ls, i32 %k.ls)
  %49 = icmp ult i64 %indvars.iv.ls, %.ls
  %indvars.iv.next.ls = add nuw nsw i64 %indvars.iv.ls, 1
  br i1 %49, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE5gTreeEPPS5_i_pfor.detach.ls(i64 %indvars.iv.start.ls, i64 %end.ls, i64 %.ls, %struct.vertex.44** nocapture readonly align 1 %vv.ls, %struct.vertex.44** nocapture align 1 %.ls1) unnamed_addr #15 align 2 {
pfor.detach.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount3 = sub i64 %end.ls, %indvars.iv.start.ls
  %9 = icmp ugt i64 %itercount3, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.lr.ph.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount5 = phi i64 [ %itercount3, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv.ls.dac4 = phi i64 [ %indvars.iv.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount5, 1
  %miditer = add nuw nsw i64 %indvars.iv.ls.dac4, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split6, label %.split.split

.split6:                                          ; preds = %16
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE5gTreeEPPS5_i_pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac4, i64 %miditer, i64 %.ls, %struct.vertex.44** %vv.ls, %struct.vertex.44** %.ls1)
  br label %.split.split

.split.split:                                     ; preds = %.split6, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.lr.ph.ls.split._crit_edge

pfor.detach.lr.ph.ls.split._crit_edge:            ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv.ls.dac.lcssa = phi i64 [ %indvars.iv.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  %22 = icmp ugt i64 %indvars.iv.ls.dac.lcssa, %end.ls
  %umax = select i1 %22, i64 %indvars.iv.ls.dac.lcssa, i64 %end.ls
  %23 = add i64 %umax, 1
  %24 = sub i64 %23, %indvars.iv.ls.dac.lcssa
  %min.iters.check = icmp ult i64 %24, 16
  br i1 %min.iters.check, label %pfor.detach.ls.preheader, label %vector.memcheck

pfor.detach.ls.preheader:                         ; preds = %middle.block, %vector.memcheck, %pfor.detach.lr.ph.ls.split._crit_edge
  %indvars.iv.ls.ph = phi i64 [ %indvars.iv.ls.dac.lcssa, %vector.memcheck ], [ %indvars.iv.ls.dac.lcssa, %pfor.detach.lr.ph.ls.split._crit_edge ], [ %ind.end, %middle.block ]
  br label %pfor.detach.ls

vector.memcheck:                                  ; preds = %pfor.detach.lr.ph.ls.split._crit_edge
  %scevgep = getelementptr %struct.vertex.44*, %struct.vertex.44** %.ls1, i64 %indvars.iv.ls.dac.lcssa
  %25 = icmp ugt i64 %indvars.iv.ls.dac.lcssa, %end.ls
  %umax3 = select i1 %25, i64 %indvars.iv.ls.dac.lcssa, i64 %end.ls
  %26 = add i64 %umax3, 1
  %scevgep4 = getelementptr %struct.vertex.44*, %struct.vertex.44** %.ls1, i64 %26
  %scevgep6 = getelementptr %struct.vertex.44*, %struct.vertex.44** %vv.ls, i64 %indvars.iv.ls.dac.lcssa
  %scevgep8 = getelementptr %struct.vertex.44*, %struct.vertex.44** %vv.ls, i64 %26
  %bound0 = icmp ult %struct.vertex.44** %scevgep, %scevgep8
  %bound1 = icmp ult %struct.vertex.44** %scevgep6, %scevgep4
  %memcheck.conflict = and i1 %bound0, %bound1
  br i1 %memcheck.conflict, label %pfor.detach.ls.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %24, -16
  %ind.end = add i64 %indvars.iv.ls.dac.lcssa, %n.vec
  %27 = add i64 %n.vec, -16
  %28 = lshr exact i64 %27, 4
  %29 = add nuw nsw i64 %28, 1
  %xtraiter = and i64 %29, 3
  %30 = icmp ult i64 %27, 48
  br i1 %30, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nsw i64 %29, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.3, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.3, %vector.body ]
  %31 = add i64 %indvars.iv.ls.dac.lcssa, %index
  %32 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %vv.ls, i64 %31
  %33 = bitcast %struct.vertex.44** %32 to <4 x i64>*
  %wide.load = load <4 x i64>, <4 x i64>* %33, align 8, !tbaa !53, !alias.scope !560
  %34 = getelementptr %struct.vertex.44*, %struct.vertex.44** %32, i64 4
  %35 = bitcast %struct.vertex.44** %34 to <4 x i64>*
  %wide.load13 = load <4 x i64>, <4 x i64>* %35, align 8, !tbaa !53, !alias.scope !560
  %36 = getelementptr %struct.vertex.44*, %struct.vertex.44** %32, i64 8
  %37 = bitcast %struct.vertex.44** %36 to <4 x i64>*
  %wide.load14 = load <4 x i64>, <4 x i64>* %37, align 8, !tbaa !53, !alias.scope !560
  %38 = getelementptr %struct.vertex.44*, %struct.vertex.44** %32, i64 12
  %39 = bitcast %struct.vertex.44** %38 to <4 x i64>*
  %wide.load15 = load <4 x i64>, <4 x i64>* %39, align 8, !tbaa !53, !alias.scope !560
  %40 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %.ls1, i64 %31
  %41 = bitcast %struct.vertex.44** %40 to <4 x i64>*
  store <4 x i64> %wide.load, <4 x i64>* %41, align 8, !tbaa !53, !alias.scope !563, !noalias !560
  %42 = getelementptr %struct.vertex.44*, %struct.vertex.44** %40, i64 4
  %43 = bitcast %struct.vertex.44** %42 to <4 x i64>*
  store <4 x i64> %wide.load13, <4 x i64>* %43, align 8, !tbaa !53, !alias.scope !563, !noalias !560
  %44 = getelementptr %struct.vertex.44*, %struct.vertex.44** %40, i64 8
  %45 = bitcast %struct.vertex.44** %44 to <4 x i64>*
  store <4 x i64> %wide.load14, <4 x i64>* %45, align 8, !tbaa !53, !alias.scope !563, !noalias !560
  %46 = getelementptr %struct.vertex.44*, %struct.vertex.44** %40, i64 12
  %47 = bitcast %struct.vertex.44** %46 to <4 x i64>*
  store <4 x i64> %wide.load15, <4 x i64>* %47, align 8, !tbaa !53, !alias.scope !563, !noalias !560
  %index.next = or i64 %index, 16
  %48 = add i64 %indvars.iv.ls.dac.lcssa, %index.next
  %49 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %vv.ls, i64 %48
  %50 = bitcast %struct.vertex.44** %49 to <4 x i64>*
  %wide.load.1 = load <4 x i64>, <4 x i64>* %50, align 8, !tbaa !53, !alias.scope !560
  %51 = getelementptr %struct.vertex.44*, %struct.vertex.44** %49, i64 4
  %52 = bitcast %struct.vertex.44** %51 to <4 x i64>*
  %wide.load13.1 = load <4 x i64>, <4 x i64>* %52, align 8, !tbaa !53, !alias.scope !560
  %53 = getelementptr %struct.vertex.44*, %struct.vertex.44** %49, i64 8
  %54 = bitcast %struct.vertex.44** %53 to <4 x i64>*
  %wide.load14.1 = load <4 x i64>, <4 x i64>* %54, align 8, !tbaa !53, !alias.scope !560
  %55 = getelementptr %struct.vertex.44*, %struct.vertex.44** %49, i64 12
  %56 = bitcast %struct.vertex.44** %55 to <4 x i64>*
  %wide.load15.1 = load <4 x i64>, <4 x i64>* %56, align 8, !tbaa !53, !alias.scope !560
  %57 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %.ls1, i64 %48
  %58 = bitcast %struct.vertex.44** %57 to <4 x i64>*
  store <4 x i64> %wide.load.1, <4 x i64>* %58, align 8, !tbaa !53, !alias.scope !563, !noalias !560
  %59 = getelementptr %struct.vertex.44*, %struct.vertex.44** %57, i64 4
  %60 = bitcast %struct.vertex.44** %59 to <4 x i64>*
  store <4 x i64> %wide.load13.1, <4 x i64>* %60, align 8, !tbaa !53, !alias.scope !563, !noalias !560
  %61 = getelementptr %struct.vertex.44*, %struct.vertex.44** %57, i64 8
  %62 = bitcast %struct.vertex.44** %61 to <4 x i64>*
  store <4 x i64> %wide.load14.1, <4 x i64>* %62, align 8, !tbaa !53, !alias.scope !563, !noalias !560
  %63 = getelementptr %struct.vertex.44*, %struct.vertex.44** %57, i64 12
  %64 = bitcast %struct.vertex.44** %63 to <4 x i64>*
  store <4 x i64> %wide.load15.1, <4 x i64>* %64, align 8, !tbaa !53, !alias.scope !563, !noalias !560
  %index.next.1 = or i64 %index, 32
  %65 = add i64 %indvars.iv.ls.dac.lcssa, %index.next.1
  %66 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %vv.ls, i64 %65
  %67 = bitcast %struct.vertex.44** %66 to <4 x i64>*
  %wide.load.2 = load <4 x i64>, <4 x i64>* %67, align 8, !tbaa !53, !alias.scope !560
  %68 = getelementptr %struct.vertex.44*, %struct.vertex.44** %66, i64 4
  %69 = bitcast %struct.vertex.44** %68 to <4 x i64>*
  %wide.load13.2 = load <4 x i64>, <4 x i64>* %69, align 8, !tbaa !53, !alias.scope !560
  %70 = getelementptr %struct.vertex.44*, %struct.vertex.44** %66, i64 8
  %71 = bitcast %struct.vertex.44** %70 to <4 x i64>*
  %wide.load14.2 = load <4 x i64>, <4 x i64>* %71, align 8, !tbaa !53, !alias.scope !560
  %72 = getelementptr %struct.vertex.44*, %struct.vertex.44** %66, i64 12
  %73 = bitcast %struct.vertex.44** %72 to <4 x i64>*
  %wide.load15.2 = load <4 x i64>, <4 x i64>* %73, align 8, !tbaa !53, !alias.scope !560
  %74 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %.ls1, i64 %65
  %75 = bitcast %struct.vertex.44** %74 to <4 x i64>*
  store <4 x i64> %wide.load.2, <4 x i64>* %75, align 8, !tbaa !53, !alias.scope !563, !noalias !560
  %76 = getelementptr %struct.vertex.44*, %struct.vertex.44** %74, i64 4
  %77 = bitcast %struct.vertex.44** %76 to <4 x i64>*
  store <4 x i64> %wide.load13.2, <4 x i64>* %77, align 8, !tbaa !53, !alias.scope !563, !noalias !560
  %78 = getelementptr %struct.vertex.44*, %struct.vertex.44** %74, i64 8
  %79 = bitcast %struct.vertex.44** %78 to <4 x i64>*
  store <4 x i64> %wide.load14.2, <4 x i64>* %79, align 8, !tbaa !53, !alias.scope !563, !noalias !560
  %80 = getelementptr %struct.vertex.44*, %struct.vertex.44** %74, i64 12
  %81 = bitcast %struct.vertex.44** %80 to <4 x i64>*
  store <4 x i64> %wide.load15.2, <4 x i64>* %81, align 8, !tbaa !53, !alias.scope !563, !noalias !560
  %index.next.2 = or i64 %index, 48
  %82 = add i64 %indvars.iv.ls.dac.lcssa, %index.next.2
  %83 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %vv.ls, i64 %82
  %84 = bitcast %struct.vertex.44** %83 to <4 x i64>*
  %wide.load.3 = load <4 x i64>, <4 x i64>* %84, align 8, !tbaa !53, !alias.scope !560
  %85 = getelementptr %struct.vertex.44*, %struct.vertex.44** %83, i64 4
  %86 = bitcast %struct.vertex.44** %85 to <4 x i64>*
  %wide.load13.3 = load <4 x i64>, <4 x i64>* %86, align 8, !tbaa !53, !alias.scope !560
  %87 = getelementptr %struct.vertex.44*, %struct.vertex.44** %83, i64 8
  %88 = bitcast %struct.vertex.44** %87 to <4 x i64>*
  %wide.load14.3 = load <4 x i64>, <4 x i64>* %88, align 8, !tbaa !53, !alias.scope !560
  %89 = getelementptr %struct.vertex.44*, %struct.vertex.44** %83, i64 12
  %90 = bitcast %struct.vertex.44** %89 to <4 x i64>*
  %wide.load15.3 = load <4 x i64>, <4 x i64>* %90, align 8, !tbaa !53, !alias.scope !560
  %91 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %.ls1, i64 %82
  %92 = bitcast %struct.vertex.44** %91 to <4 x i64>*
  store <4 x i64> %wide.load.3, <4 x i64>* %92, align 8, !tbaa !53, !alias.scope !563, !noalias !560
  %93 = getelementptr %struct.vertex.44*, %struct.vertex.44** %91, i64 4
  %94 = bitcast %struct.vertex.44** %93 to <4 x i64>*
  store <4 x i64> %wide.load13.3, <4 x i64>* %94, align 8, !tbaa !53, !alias.scope !563, !noalias !560
  %95 = getelementptr %struct.vertex.44*, %struct.vertex.44** %91, i64 8
  %96 = bitcast %struct.vertex.44** %95 to <4 x i64>*
  store <4 x i64> %wide.load14.3, <4 x i64>* %96, align 8, !tbaa !53, !alias.scope !563, !noalias !560
  %97 = getelementptr %struct.vertex.44*, %struct.vertex.44** %91, i64 12
  %98 = bitcast %struct.vertex.44** %97 to <4 x i64>*
  store <4 x i64> %wide.load15.3, <4 x i64>* %98, align 8, !tbaa !53, !alias.scope !563, !noalias !560
  %index.next.3 = add i64 %index, 64
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !565

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.3, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil.preheader

vector.body.epil.preheader:                       ; preds = %middle.block.unr-lcssa
  br label %vector.body.epil

vector.body.epil:                                 ; preds = %vector.body.epil, %vector.body.epil.preheader
  %index.epil = phi i64 [ %index.unr, %vector.body.epil.preheader ], [ %index.next.epil, %vector.body.epil ]
  %epil.iter = phi i64 [ %xtraiter, %vector.body.epil.preheader ], [ %epil.iter.sub, %vector.body.epil ]
  %99 = add i64 %indvars.iv.ls.dac.lcssa, %index.epil
  %100 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %vv.ls, i64 %99
  %101 = bitcast %struct.vertex.44** %100 to <4 x i64>*
  %wide.load.epil = load <4 x i64>, <4 x i64>* %101, align 8, !tbaa !53, !alias.scope !560
  %102 = getelementptr %struct.vertex.44*, %struct.vertex.44** %100, i64 4
  %103 = bitcast %struct.vertex.44** %102 to <4 x i64>*
  %wide.load13.epil = load <4 x i64>, <4 x i64>* %103, align 8, !tbaa !53, !alias.scope !560
  %104 = getelementptr %struct.vertex.44*, %struct.vertex.44** %100, i64 8
  %105 = bitcast %struct.vertex.44** %104 to <4 x i64>*
  %wide.load14.epil = load <4 x i64>, <4 x i64>* %105, align 8, !tbaa !53, !alias.scope !560
  %106 = getelementptr %struct.vertex.44*, %struct.vertex.44** %100, i64 12
  %107 = bitcast %struct.vertex.44** %106 to <4 x i64>*
  %wide.load15.epil = load <4 x i64>, <4 x i64>* %107, align 8, !tbaa !53, !alias.scope !560
  %108 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %.ls1, i64 %99
  %109 = bitcast %struct.vertex.44** %108 to <4 x i64>*
  store <4 x i64> %wide.load.epil, <4 x i64>* %109, align 8, !tbaa !53, !alias.scope !563, !noalias !560
  %110 = getelementptr %struct.vertex.44*, %struct.vertex.44** %108, i64 4
  %111 = bitcast %struct.vertex.44** %110 to <4 x i64>*
  store <4 x i64> %wide.load13.epil, <4 x i64>* %111, align 8, !tbaa !53, !alias.scope !563, !noalias !560
  %112 = getelementptr %struct.vertex.44*, %struct.vertex.44** %108, i64 8
  %113 = bitcast %struct.vertex.44** %112 to <4 x i64>*
  store <4 x i64> %wide.load14.epil, <4 x i64>* %113, align 8, !tbaa !53, !alias.scope !563, !noalias !560
  %114 = getelementptr %struct.vertex.44*, %struct.vertex.44** %108, i64 12
  %115 = bitcast %struct.vertex.44** %114 to <4 x i64>*
  store <4 x i64> %wide.load15.epil, <4 x i64>* %115, align 8, !tbaa !53, !alias.scope !563, !noalias !560
  %index.next.epil = add i64 %index.epil, 16
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block, label %vector.body.epil, !llvm.loop !566

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %24, %n.vec
  br i1 %cmp.n, label %pfor.cond.cleanup.loopexit.ls, label %pfor.detach.ls.preheader

pfor.cond.cleanup.loopexit.ls:                    ; preds = %pfor.detach.ls, %middle.block
  %116 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %117 = load atomic i32, i32* %116 acquire, align 8
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %120 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %121 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %122 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %121, i16* nonnull %122) #2
  %123 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %124 = call i8* @llvm.frameaddress(i32 0) #2
  %125 = getelementptr inbounds [5 x i8*], [5 x i8*]* %123, i64 0, i64 0
  store volatile i8* %124, i8** %125, align 8
  %126 = call i8* @llvm.stacksave() #2
  %127 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %126, i8** %127, align 8
  %128 = bitcast [5 x i8*]* %123 to i8*
  %129 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %128) #24
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %131 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %132 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %131, i64 0, i32 12, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 1
  store i64 %134, i64* %132, align 8
  %135 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %136 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %135, i64 0, i32 9
  %139 = bitcast %struct.__cilkrts_stack_frame** %138 to i64*
  store atomic i64 %137, i64* %139 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %140 = load atomic i32, i32* %116 acquire, align 8
  %141 = icmp eq i32 %140, 16777216
  br i1 %141, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %pfor.detach.ls
  %indvars.iv.ls = phi i64 [ %indvars.iv.next.ls, %pfor.detach.ls ], [ %indvars.iv.ls.ph, %pfor.detach.ls.preheader ]
  %arrayidx.ls = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %vv.ls, i64 %indvars.iv.ls
  %142 = bitcast %struct.vertex.44** %arrayidx.ls to i64*
  %143 = load i64, i64* %142, align 8, !tbaa !53
  %arrayidx8.ls = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %.ls1, i64 %indvars.iv.ls
  %144 = bitcast %struct.vertex.44** %arrayidx8.ls to i64*
  store i64 %143, i64* %144, align 8, !tbaa !53
  %145 = icmp ult i64 %indvars.iv.ls, %end.ls
  %indvars.iv.next.ls = add nuw nsw i64 %indvars.iv.ls, 1
  br i1 %145, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit.ls, !llvm.loop !567
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2__pfor.detach.ls(i64 %indvars.iv.start.ls, i64 %end.ls, i64 %.ls, i64 %.ls1, i32 %.ls2, i64 %.ls3, i64 %.ls4, i32 %e.ls, %struct.vertex.44** nocapture readonly align 1 %g.coerce.ls, i32 %.ls5, %"struct.std::pair.33"* nocapture align 1 %.ls6) unnamed_addr #15 {
pfor.detach.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount14 = sub i64 %end.ls, %indvars.iv.start.ls
  %9 = icmp ugt i64 %itercount14, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv.ls.ph = phi i64 [ %indvars.iv.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount16 = phi i64 [ %itercount14, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv.ls.dac15 = phi i64 [ %indvars.iv.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount16, 1
  %miditer = add nuw nsw i64 %indvars.iv.ls.dac15, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split17, label %.split.split

.split17:                                         ; preds = %16
  call fastcc void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2__pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac15, i64 %miditer, i64 %.ls, i64 %.ls1, i32 %.ls2, i64 %.ls3, i64 %.ls4, i32 %e.ls, %struct.vertex.44** %g.coerce.ls, i32 %.ls5, %"struct.std::pair.33"* %.ls6)
  br label %.split.split

.split.split:                                     ; preds = %.split17, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.ls:                             ; preds = %_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls
  %indvars.iv.ls = phi i64 [ %indvars.iv.next.ls, %_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls ], [ %indvars.iv.ls.ph, %pfor.detach.ls.preheader ]
  %48 = shl i64 %indvars.iv.ls, 10
  %49 = add i64 %48, %.ls1
  %50 = add nsw i64 %48, %.ls3
  %51 = add nsw i64 %50, 1024
  %cmp.i.ls = icmp sgt i64 %51, %.ls4
  %52 = trunc i64 %51 to i32
  %.sroa.speculated.ls = select i1 %cmp.i.ls, i32 %e.ls, i32 %52
  %arrayidx.i.i58.ls = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %g.coerce.ls, i64 %50
  %53 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx.i.i58.ls, align 8, !tbaa !53, !noalias !568
  %ref.tmp21.sroa.0.0..sroa_idx97.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %53, i64 0, i32 1, i32 0
  %54 = bitcast double* %ref.tmp21.sroa.0.0..sroa_idx97.ls to <2 x double>*
  %55 = load <2 x double>, <2 x double>* %54, align 8
  %ref.tmp21.sroa.8.0..sroa_idx105.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %53, i64 0, i32 1, i32 2
  %ref.tmp21.sroa.8.0.copyload106.ls = load double, double* %ref.tmp21.sroa.8.0..sroa_idx105.ls, align 8
  %56 = add nsw i64 %50, 1
  %57 = sext i32 %.sroa.speculated.ls to i64
  %cmp56.i62.ls = icmp slt i64 %56, %57
  br i1 %cmp56.i62.ls, label %for.body.i94.preheader.ls, label %_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls

for.body.i94.preheader.ls:                        ; preds = %pfor.detach.ls
  %58 = trunc i64 %indvars.iv.ls to i32
  %59 = mul i32 %58, -1024
  %60 = add i32 %59, %.ls2
  %61 = add i32 %.sroa.speculated.ls, %.ls5
  %62 = add i32 %60, %.sroa.speculated.ls
  %xtraiter184.ls = and i32 %61, 3
  %lcmp.mod185.ls = icmp eq i32 %xtraiter184.ls, 0
  br i1 %lcmp.mod185.ls, label %for.body.i94.prol.loopexit.ls, label %for.body.i94.prol.ls.preheader

for.body.i94.prol.ls.preheader:                   ; preds = %for.body.i94.preheader.ls
  br label %for.body.i94.prol.ls

for.body.i94.prol.ls:                             ; preds = %for.body.i94.prol.ls.preheader, %for.body.i94.prol.ls
  %indvars.iv.i77.prol.ls = phi i64 [ %indvars.iv.next.i91.prol.ls, %for.body.i94.prol.ls ], [ %56, %for.body.i94.prol.ls.preheader ]
  %63 = phi double [ %75, %for.body.i94.prol.ls ], [ %ref.tmp21.sroa.8.0.copyload106.ls, %for.body.i94.prol.ls.preheader ]
  %64 = phi double [ %72, %for.body.i94.prol.ls ], [ %ref.tmp21.sroa.8.0.copyload106.ls, %for.body.i94.prol.ls.preheader ]
  %65 = phi <2 x double> [ %71, %for.body.i94.prol.ls ], [ %55, %for.body.i94.prol.ls.preheader ]
  %66 = phi <2 x double> [ %74, %for.body.i94.prol.ls ], [ %55, %for.body.i94.prol.ls.preheader ]
  %prol.iter186.ls = phi i32 [ %prol.iter186.sub.ls, %for.body.i94.prol.ls ], [ %xtraiter184.ls, %for.body.i94.prol.ls.preheader ]
  %arrayidx.i10.i78.prol.ls = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %g.coerce.ls, i64 %indvars.iv.i77.prol.ls
  %67 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx.i10.i78.prol.ls, align 8, !tbaa !53, !noalias !573
  %agg.tmp1.sroa.0.0..sroa_idx.i79.prol.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %67, i64 0, i32 1, i32 0
  %68 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i79.prol.ls to <2 x double>*
  %69 = load <2 x double>, <2 x double>* %68, align 8, !noalias !576
  %agg.tmp1.sroa.3.0..sroa_idx52.i83.prol.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %67, i64 0, i32 1, i32 2
  %agg.tmp1.sroa.3.0.copyload.i84.prol.ls = load double, double* %agg.tmp1.sroa.3.0..sroa_idx52.i83.prol.ls, align 8, !noalias !576
  %70 = fcmp fast olt <2 x double> %69, %65
  %71 = select <2 x i1> %70, <2 x double> %69, <2 x double> %65
  %cmp.i7.i.i.i87.prol.ls = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i84.prol.ls, %64
  %72 = select i1 %cmp.i7.i.i.i87.prol.ls, double %agg.tmp1.sroa.3.0.copyload.i84.prol.ls, double %64
  %73 = fcmp fast olt <2 x double> %66, %69
  %74 = select <2 x i1> %73, <2 x double> %69, <2 x double> %66
  %cmp.i7.i16.i.i90.prol.ls = fcmp fast olt double %63, %agg.tmp1.sroa.3.0.copyload.i84.prol.ls
  %75 = select i1 %cmp.i7.i16.i.i90.prol.ls, double %agg.tmp1.sroa.3.0.copyload.i84.prol.ls, double %63
  %indvars.iv.next.i91.prol.ls = add nsw i64 %indvars.iv.i77.prol.ls, 1
  %prol.iter186.sub.ls = add nsw i32 %prol.iter186.ls, -1
  %prol.iter186.cmp.ls = icmp eq i32 %prol.iter186.sub.ls, 0
  br i1 %prol.iter186.cmp.ls, label %for.body.i94.prol.loopexit.loopexit.ls, label %for.body.i94.prol.ls, !llvm.loop !577

for.body.i94.prol.loopexit.ls:                    ; preds = %for.body.i94.prol.loopexit.loopexit.ls, %for.body.i94.preheader.ls
  %.lcssa180.unr.ls = phi <2 x double> [ undef, %for.body.i94.preheader.ls ], [ %71, %for.body.i94.prol.loopexit.loopexit.ls ]
  %.lcssa179.unr.ls = phi double [ undef, %for.body.i94.preheader.ls ], [ %72, %for.body.i94.prol.loopexit.loopexit.ls ]
  %.lcssa178.unr.ls = phi <2 x double> [ undef, %for.body.i94.preheader.ls ], [ %74, %for.body.i94.prol.loopexit.loopexit.ls ]
  %.lcssa177.unr.ls = phi double [ undef, %for.body.i94.preheader.ls ], [ %75, %for.body.i94.prol.loopexit.loopexit.ls ]
  %indvars.iv.i77.unr.ls = phi i64 [ %56, %for.body.i94.preheader.ls ], [ %124, %for.body.i94.prol.loopexit.loopexit.ls ]
  %.unr187.ls = phi double [ %ref.tmp21.sroa.8.0.copyload106.ls, %for.body.i94.preheader.ls ], [ %75, %for.body.i94.prol.loopexit.loopexit.ls ]
  %.unr188.ls = phi double [ %ref.tmp21.sroa.8.0.copyload106.ls, %for.body.i94.preheader.ls ], [ %72, %for.body.i94.prol.loopexit.loopexit.ls ]
  %.unr189.ls = phi <2 x double> [ %55, %for.body.i94.preheader.ls ], [ %71, %for.body.i94.prol.loopexit.loopexit.ls ]
  %.unr190.ls = phi <2 x double> [ %55, %for.body.i94.preheader.ls ], [ %74, %for.body.i94.prol.loopexit.loopexit.ls ]
  %76 = icmp ult i32 %62, 3
  br i1 %76, label %_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls, label %for.body.i94.ls.preheader

for.body.i94.ls.preheader:                        ; preds = %for.body.i94.prol.loopexit.ls
  br label %for.body.i94.ls

for.body.i94.ls:                                  ; preds = %for.body.i94.ls.preheader, %for.body.i94.ls
  %indvars.iv.i77.ls = phi i64 [ %indvars.iv.next.i91.3.ls, %for.body.i94.ls ], [ %indvars.iv.i77.unr.ls, %for.body.i94.ls.preheader ]
  %77 = phi double [ %116, %for.body.i94.ls ], [ %.unr187.ls, %for.body.i94.ls.preheader ]
  %78 = phi double [ %113, %for.body.i94.ls ], [ %.unr188.ls, %for.body.i94.ls.preheader ]
  %79 = phi <2 x double> [ %112, %for.body.i94.ls ], [ %.unr189.ls, %for.body.i94.ls.preheader ]
  %80 = phi <2 x double> [ %115, %for.body.i94.ls ], [ %.unr190.ls, %for.body.i94.ls.preheader ]
  %arrayidx.i10.i78.ls = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %g.coerce.ls, i64 %indvars.iv.i77.ls
  %81 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx.i10.i78.ls, align 8, !tbaa !53, !noalias !573
  %agg.tmp1.sroa.0.0..sroa_idx.i79.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %81, i64 0, i32 1, i32 0
  %82 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i79.ls to <2 x double>*
  %83 = load <2 x double>, <2 x double>* %82, align 8, !noalias !576
  %agg.tmp1.sroa.3.0..sroa_idx52.i83.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %81, i64 0, i32 1, i32 2
  %agg.tmp1.sroa.3.0.copyload.i84.ls = load double, double* %agg.tmp1.sroa.3.0..sroa_idx52.i83.ls, align 8, !noalias !576
  %84 = fcmp fast olt <2 x double> %83, %79
  %85 = select <2 x i1> %84, <2 x double> %83, <2 x double> %79
  %cmp.i7.i.i.i87.ls = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i84.ls, %78
  %86 = select i1 %cmp.i7.i.i.i87.ls, double %agg.tmp1.sroa.3.0.copyload.i84.ls, double %78
  %87 = fcmp fast olt <2 x double> %80, %83
  %88 = select <2 x i1> %87, <2 x double> %83, <2 x double> %80
  %cmp.i7.i16.i.i90.ls = fcmp fast olt double %77, %agg.tmp1.sroa.3.0.copyload.i84.ls
  %89 = select i1 %cmp.i7.i16.i.i90.ls, double %agg.tmp1.sroa.3.0.copyload.i84.ls, double %77
  %indvars.iv.next.i91.ls = add nsw i64 %indvars.iv.i77.ls, 1
  %arrayidx.i10.i78.1.ls = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %g.coerce.ls, i64 %indvars.iv.next.i91.ls
  %90 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx.i10.i78.1.ls, align 8, !tbaa !53, !noalias !573
  %agg.tmp1.sroa.0.0..sroa_idx.i79.1.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %90, i64 0, i32 1, i32 0
  %91 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i79.1.ls to <2 x double>*
  %92 = load <2 x double>, <2 x double>* %91, align 8, !noalias !576
  %agg.tmp1.sroa.3.0..sroa_idx52.i83.1.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %90, i64 0, i32 1, i32 2
  %agg.tmp1.sroa.3.0.copyload.i84.1.ls = load double, double* %agg.tmp1.sroa.3.0..sroa_idx52.i83.1.ls, align 8, !noalias !576
  %93 = fcmp fast olt <2 x double> %92, %85
  %94 = select <2 x i1> %93, <2 x double> %92, <2 x double> %85
  %cmp.i7.i.i.i87.1.ls = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i84.1.ls, %86
  %95 = select i1 %cmp.i7.i.i.i87.1.ls, double %agg.tmp1.sroa.3.0.copyload.i84.1.ls, double %86
  %96 = fcmp fast olt <2 x double> %88, %92
  %97 = select <2 x i1> %96, <2 x double> %92, <2 x double> %88
  %cmp.i7.i16.i.i90.1.ls = fcmp fast olt double %89, %agg.tmp1.sroa.3.0.copyload.i84.1.ls
  %98 = select i1 %cmp.i7.i16.i.i90.1.ls, double %agg.tmp1.sroa.3.0.copyload.i84.1.ls, double %89
  %indvars.iv.next.i91.1.ls = add nsw i64 %indvars.iv.i77.ls, 2
  %arrayidx.i10.i78.2.ls = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %g.coerce.ls, i64 %indvars.iv.next.i91.1.ls
  %99 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx.i10.i78.2.ls, align 8, !tbaa !53, !noalias !573
  %agg.tmp1.sroa.0.0..sroa_idx.i79.2.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %99, i64 0, i32 1, i32 0
  %100 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i79.2.ls to <2 x double>*
  %101 = load <2 x double>, <2 x double>* %100, align 8, !noalias !576
  %agg.tmp1.sroa.3.0..sroa_idx52.i83.2.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %99, i64 0, i32 1, i32 2
  %agg.tmp1.sroa.3.0.copyload.i84.2.ls = load double, double* %agg.tmp1.sroa.3.0..sroa_idx52.i83.2.ls, align 8, !noalias !576
  %102 = fcmp fast olt <2 x double> %101, %94
  %103 = select <2 x i1> %102, <2 x double> %101, <2 x double> %94
  %cmp.i7.i.i.i87.2.ls = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i84.2.ls, %95
  %104 = select i1 %cmp.i7.i.i.i87.2.ls, double %agg.tmp1.sroa.3.0.copyload.i84.2.ls, double %95
  %105 = fcmp fast olt <2 x double> %97, %101
  %106 = select <2 x i1> %105, <2 x double> %101, <2 x double> %97
  %cmp.i7.i16.i.i90.2.ls = fcmp fast olt double %98, %agg.tmp1.sroa.3.0.copyload.i84.2.ls
  %107 = select i1 %cmp.i7.i16.i.i90.2.ls, double %agg.tmp1.sroa.3.0.copyload.i84.2.ls, double %98
  %indvars.iv.next.i91.2.ls = add nsw i64 %indvars.iv.i77.ls, 3
  %arrayidx.i10.i78.3.ls = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %g.coerce.ls, i64 %indvars.iv.next.i91.2.ls
  %108 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx.i10.i78.3.ls, align 8, !tbaa !53, !noalias !573
  %agg.tmp1.sroa.0.0..sroa_idx.i79.3.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %108, i64 0, i32 1, i32 0
  %109 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i79.3.ls to <2 x double>*
  %110 = load <2 x double>, <2 x double>* %109, align 8, !noalias !576
  %agg.tmp1.sroa.3.0..sroa_idx52.i83.3.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %108, i64 0, i32 1, i32 2
  %agg.tmp1.sroa.3.0.copyload.i84.3.ls = load double, double* %agg.tmp1.sroa.3.0..sroa_idx52.i83.3.ls, align 8, !noalias !576
  %111 = fcmp fast olt <2 x double> %110, %103
  %112 = select <2 x i1> %111, <2 x double> %110, <2 x double> %103
  %cmp.i7.i.i.i87.3.ls = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i84.3.ls, %104
  %113 = select i1 %cmp.i7.i.i.i87.3.ls, double %agg.tmp1.sroa.3.0.copyload.i84.3.ls, double %104
  %114 = fcmp fast olt <2 x double> %106, %110
  %115 = select <2 x i1> %114, <2 x double> %110, <2 x double> %106
  %cmp.i7.i16.i.i90.3.ls = fcmp fast olt double %107, %agg.tmp1.sroa.3.0.copyload.i84.3.ls
  %116 = select i1 %cmp.i7.i16.i.i90.3.ls, double %agg.tmp1.sroa.3.0.copyload.i84.3.ls, double %107
  %indvars.iv.next.i91.3.ls = add nsw i64 %indvars.iv.i77.ls, 4
  %lftr.wideiv.i92.3.ls = trunc i64 %indvars.iv.next.i91.3.ls to i32
  %exitcond.i93.3.ls = icmp eq i32 %.sroa.speculated.ls, %lftr.wideiv.i92.3.ls
  br i1 %exitcond.i93.3.ls, label %_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls, label %for.body.i94.ls

_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_.exit95.ls: ; preds = %for.body.i94.ls, %for.body.i94.prol.loopexit.ls, %pfor.detach.ls
  %ref.tmp21.sroa.16.0.ls = phi double [ %ref.tmp21.sroa.8.0.copyload106.ls, %pfor.detach.ls ], [ %.lcssa177.unr.ls, %for.body.i94.prol.loopexit.ls ], [ %116, %for.body.i94.ls ]
  %ref.tmp21.sroa.8.0.ls = phi double [ %ref.tmp21.sroa.8.0.copyload106.ls, %pfor.detach.ls ], [ %.lcssa179.unr.ls, %for.body.i94.prol.loopexit.ls ], [ %113, %for.body.i94.ls ]
  %117 = phi <2 x double> [ %55, %pfor.detach.ls ], [ %.lcssa180.unr.ls, %for.body.i94.prol.loopexit.ls ], [ %112, %for.body.i94.ls ]
  %118 = phi <2 x double> [ %55, %pfor.detach.ls ], [ %.lcssa178.unr.ls, %for.body.i94.prol.loopexit.ls ], [ %115, %for.body.i94.ls ]
  %ref.tmp21.sroa.0.0..sroa_idx.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %.ls6, i64 %indvars.iv.ls, i32 0, i32 0
  %119 = bitcast double* %ref.tmp21.sroa.0.0..sroa_idx.ls to <2 x double>*
  store <2 x double> %117, <2 x double>* %119, align 8
  %ref.tmp21.sroa.8.0..sroa_idx104.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %.ls6, i64 %indvars.iv.ls, i32 0, i32 2
  store double %ref.tmp21.sroa.8.0.ls, double* %ref.tmp21.sroa.8.0..sroa_idx104.ls, align 8
  %ref.tmp21.sroa.10.24..sroa_idx108.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %.ls6, i64 %indvars.iv.ls, i32 1, i32 0
  %120 = bitcast double* %ref.tmp21.sroa.10.24..sroa_idx108.ls to <2 x double>*
  store <2 x double> %118, <2 x double>* %120, align 8
  %ref.tmp21.sroa.16.24..sroa_idx116.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %.ls6, i64 %indvars.iv.ls, i32 1, i32 2
  store double %ref.tmp21.sroa.16.0.ls, double* %ref.tmp21.sroa.16.24..sroa_idx116.ls, align 8
  %121 = icmp ult i64 %indvars.iv.ls, %end.ls
  %indvars.iv.next.ls = add nuw nsw i64 %indvars.iv.ls, 1
  br i1 %121, label %pfor.detach.ls, label %pfor.cond.cleanup.ls

for.body.i94.prol.loopexit.loopexit.ls:           ; preds = %for.body.i94.prol.ls
  %122 = add nsw i32 %xtraiter184.ls, -1
  %123 = zext i32 %122 to i64
  %124 = add i64 %49, %123
  br label %for.body.i94.prol.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2__pfor.detach.ls(i64 %indvars.iv.start.ls, i64 %end.ls, i64 %.ls, i32 %.ls1, i64 %.ls2, i64 %.ls3, i32 %e.ls, %"struct.std::pair.33"* nocapture readonly align 1 %g.coerce.ls, i32 %.ls4, %"struct.std::pair.33"* nocapture align 1 %.ls5) unnamed_addr #15 {
pfor.detach.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount9 = sub i64 %end.ls, %indvars.iv.start.ls
  %9 = icmp ugt i64 %itercount9, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv.ls.ph = phi i64 [ %indvars.iv.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount11 = phi i64 [ %itercount9, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv.ls.dac10 = phi i64 [ %indvars.iv.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount11, 1
  %miditer = add nuw nsw i64 %indvars.iv.ls.dac10, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split12, label %.split.split

.split12:                                         ; preds = %16
  call fastcc void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2__pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac10, i64 %miditer, i64 %.ls, i32 %.ls1, i64 %.ls2, i64 %.ls3, i32 %e.ls, %"struct.std::pair.33"* %g.coerce.ls, i32 %.ls4, %"struct.std::pair.33"* %.ls5)
  br label %.split.split

.split.split:                                     ; preds = %.split12, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.ls:                             ; preds = %_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit95.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit95.ls
  %indvars.iv.ls = phi i64 [ %indvars.iv.next.ls, %_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit95.ls ], [ %indvars.iv.ls.ph, %pfor.detach.ls.preheader ]
  %48 = trunc i64 %indvars.iv.ls to i32
  %49 = mul i32 %48, -1024
  %50 = add i32 %49, %.ls1
  %51 = shl nsw i64 %indvars.iv.ls, 10
  %52 = add nsw i64 %51, %.ls2
  %53 = add nsw i64 %52, 1024
  %cmp.i.ls = icmp sgt i64 %53, %.ls3
  %54 = trunc i64 %53 to i32
  %.sroa.speculated.ls = select i1 %cmp.i.ls, i32 %e.ls, i32 %54
  %ref.tmp21.sroa.0.0..sroa_idx.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %52, i32 0, i32 0
  %55 = bitcast double* %ref.tmp21.sroa.0.0..sroa_idx.ls to <2 x double>*
  %56 = load <2 x double>, <2 x double>* %55, align 8
  %ref.tmp21.sroa.8.0..sroa_idx104.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %52, i32 0, i32 2
  %ref.tmp21.sroa.8.0.copyload.ls = load double, double* %ref.tmp21.sroa.8.0..sroa_idx104.ls, align 8
  %ref.tmp21.sroa.10.0..sroa_idx108.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %52, i32 1, i32 0
  %57 = bitcast double* %ref.tmp21.sroa.10.0..sroa_idx108.ls to <2 x double>*
  %58 = load <2 x double>, <2 x double>* %57, align 8
  %ref.tmp21.sroa.15.0..sroa_idx113.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %52, i32 1, i32 2
  %ref.tmp21.sroa.15.0.copyload.ls = load double, double* %ref.tmp21.sroa.15.0..sroa_idx113.ls, align 8
  %59 = add nsw i64 %52, 1
  %60 = sext i32 %.sroa.speculated.ls to i64
  %cmp55.i57.ls = icmp slt i64 %59, %60
  br i1 %cmp55.i57.ls, label %for.body.i94.preheader.ls, label %_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit95.ls

for.body.i94.preheader.ls:                        ; preds = %pfor.detach.ls
  %61 = add i32 %.sroa.speculated.ls, %.ls4
  %xtraiter181.ls = and i32 %61, 1
  %lcmp.mod182.ls = icmp eq i32 %xtraiter181.ls, 0
  br i1 %lcmp.mod182.ls, label %for.body.i94.prol.loopexit.ls, label %for.body.i94.prol.ls

for.body.i94.prol.ls:                             ; preds = %for.body.i94.preheader.ls
  %agg.tmp1.sroa.0.0..sroa_idx.i73.prol.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %59, i32 0, i32 0
  %62 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i73.prol.ls to <2 x double>*
  %63 = load <2 x double>, <2 x double>* %62, align 8, !noalias !578
  %agg.tmp1.sroa.3.0..sroa_idx50.i77.prol.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %59, i32 0, i32 2
  %agg.tmp1.sroa.3.0.copyload.i78.prol.ls = load double, double* %agg.tmp1.sroa.3.0..sroa_idx50.i77.prol.ls, align 8, !noalias !578
  %agg.tmp1.sroa.4.0..sroa_idx51.i79.prol.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %59, i32 1, i32 0
  %64 = bitcast double* %agg.tmp1.sroa.4.0..sroa_idx51.i79.prol.ls to <2 x double>*
  %65 = load <2 x double>, <2 x double>* %64, align 8, !noalias !578
  %agg.tmp1.sroa.6.0..sroa_idx53.i83.prol.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %59, i32 1, i32 2
  %agg.tmp1.sroa.6.0.copyload.i84.prol.ls = load double, double* %agg.tmp1.sroa.6.0..sroa_idx53.i83.prol.ls, align 8, !noalias !578
  %66 = fcmp fast olt <2 x double> %63, %56
  %67 = select <2 x i1> %66, <2 x double> %63, <2 x double> %56
  %cmp.i7.i.i.i87.prol.ls = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i78.prol.ls, %ref.tmp21.sroa.8.0.copyload.ls
  %68 = select i1 %cmp.i7.i.i.i87.prol.ls, double %agg.tmp1.sroa.3.0.copyload.i78.prol.ls, double %ref.tmp21.sroa.8.0.copyload.ls
  %69 = fcmp fast olt <2 x double> %58, %65
  %70 = select <2 x i1> %69, <2 x double> %65, <2 x double> %58
  %cmp.i7.i16.i.i90.prol.ls = fcmp fast olt double %ref.tmp21.sroa.15.0.copyload.ls, %agg.tmp1.sroa.6.0.copyload.i84.prol.ls
  %71 = select i1 %cmp.i7.i16.i.i90.prol.ls, double %agg.tmp1.sroa.6.0.copyload.i84.prol.ls, double %ref.tmp21.sroa.15.0.copyload.ls
  %indvars.iv.next.i91.prol.ls = add nsw i64 %52, 2
  br label %for.body.i94.prol.loopexit.ls

for.body.i94.prol.loopexit.ls:                    ; preds = %for.body.i94.prol.ls, %for.body.i94.preheader.ls
  %.lcssa177.unr.ph.ls = phi <2 x double> [ %67, %for.body.i94.prol.ls ], [ undef, %for.body.i94.preheader.ls ]
  %.lcssa176.unr.ph.ls = phi double [ %68, %for.body.i94.prol.ls ], [ undef, %for.body.i94.preheader.ls ]
  %.lcssa175.unr.ph.ls = phi <2 x double> [ %70, %for.body.i94.prol.ls ], [ undef, %for.body.i94.preheader.ls ]
  %.lcssa174.unr.ph.ls = phi double [ %71, %for.body.i94.prol.ls ], [ undef, %for.body.i94.preheader.ls ]
  %indvars.iv.i72.unr.ph.ls = phi i64 [ %indvars.iv.next.i91.prol.ls, %for.body.i94.prol.ls ], [ %59, %for.body.i94.preheader.ls ]
  %.unr183.ph.ls = phi double [ %71, %for.body.i94.prol.ls ], [ %ref.tmp21.sroa.15.0.copyload.ls, %for.body.i94.preheader.ls ]
  %.unr184.ph.ls = phi double [ %68, %for.body.i94.prol.ls ], [ %ref.tmp21.sroa.8.0.copyload.ls, %for.body.i94.preheader.ls ]
  %.unr185.ph.ls = phi <2 x double> [ %67, %for.body.i94.prol.ls ], [ %56, %for.body.i94.preheader.ls ]
  %.unr186.ph.ls = phi <2 x double> [ %70, %for.body.i94.prol.ls ], [ %58, %for.body.i94.preheader.ls ]
  %72 = sub i32 0, %50
  %73 = icmp eq i32 %.sroa.speculated.ls, %72
  br i1 %73, label %_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit95.ls, label %for.body.i94.ls.preheader

for.body.i94.ls.preheader:                        ; preds = %for.body.i94.prol.loopexit.ls
  br label %for.body.i94.ls

for.body.i94.ls:                                  ; preds = %for.body.i94.ls.preheader, %for.body.i94.ls
  %indvars.iv.i72.ls = phi i64 [ %indvars.iv.next.i91.1.ls, %for.body.i94.ls ], [ %indvars.iv.i72.unr.ph.ls, %for.body.i94.ls.preheader ]
  %74 = phi double [ %97, %for.body.i94.ls ], [ %.unr183.ph.ls, %for.body.i94.ls.preheader ]
  %75 = phi double [ %94, %for.body.i94.ls ], [ %.unr184.ph.ls, %for.body.i94.ls.preheader ]
  %76 = phi <2 x double> [ %93, %for.body.i94.ls ], [ %.unr185.ph.ls, %for.body.i94.ls.preheader ]
  %77 = phi <2 x double> [ %96, %for.body.i94.ls ], [ %.unr186.ph.ls, %for.body.i94.ls.preheader ]
  %agg.tmp1.sroa.0.0..sroa_idx.i73.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %indvars.iv.i72.ls, i32 0, i32 0
  %78 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i73.ls to <2 x double>*
  %79 = load <2 x double>, <2 x double>* %78, align 8, !noalias !578
  %agg.tmp1.sroa.3.0..sroa_idx50.i77.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %indvars.iv.i72.ls, i32 0, i32 2
  %agg.tmp1.sroa.3.0.copyload.i78.ls = load double, double* %agg.tmp1.sroa.3.0..sroa_idx50.i77.ls, align 8, !noalias !578
  %agg.tmp1.sroa.4.0..sroa_idx51.i79.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %indvars.iv.i72.ls, i32 1, i32 0
  %80 = bitcast double* %agg.tmp1.sroa.4.0..sroa_idx51.i79.ls to <2 x double>*
  %81 = load <2 x double>, <2 x double>* %80, align 8, !noalias !578
  %agg.tmp1.sroa.6.0..sroa_idx53.i83.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %indvars.iv.i72.ls, i32 1, i32 2
  %agg.tmp1.sroa.6.0.copyload.i84.ls = load double, double* %agg.tmp1.sroa.6.0..sroa_idx53.i83.ls, align 8, !noalias !578
  %82 = fcmp fast olt <2 x double> %79, %76
  %83 = select <2 x i1> %82, <2 x double> %79, <2 x double> %76
  %cmp.i7.i.i.i87.ls = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i78.ls, %75
  %84 = select i1 %cmp.i7.i.i.i87.ls, double %agg.tmp1.sroa.3.0.copyload.i78.ls, double %75
  %85 = fcmp fast olt <2 x double> %77, %81
  %86 = select <2 x i1> %85, <2 x double> %81, <2 x double> %77
  %cmp.i7.i16.i.i90.ls = fcmp fast olt double %74, %agg.tmp1.sroa.6.0.copyload.i84.ls
  %87 = select i1 %cmp.i7.i16.i.i90.ls, double %agg.tmp1.sroa.6.0.copyload.i84.ls, double %74
  %indvars.iv.next.i91.ls = add nsw i64 %indvars.iv.i72.ls, 1
  %agg.tmp1.sroa.0.0..sroa_idx.i73.1.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %indvars.iv.next.i91.ls, i32 0, i32 0
  %88 = bitcast double* %agg.tmp1.sroa.0.0..sroa_idx.i73.1.ls to <2 x double>*
  %89 = load <2 x double>, <2 x double>* %88, align 8, !noalias !578
  %agg.tmp1.sroa.3.0..sroa_idx50.i77.1.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %indvars.iv.next.i91.ls, i32 0, i32 2
  %agg.tmp1.sroa.3.0.copyload.i78.1.ls = load double, double* %agg.tmp1.sroa.3.0..sroa_idx50.i77.1.ls, align 8, !noalias !578
  %agg.tmp1.sroa.4.0..sroa_idx51.i79.1.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %indvars.iv.next.i91.ls, i32 1, i32 0
  %90 = bitcast double* %agg.tmp1.sroa.4.0..sroa_idx51.i79.1.ls to <2 x double>*
  %91 = load <2 x double>, <2 x double>* %90, align 8, !noalias !578
  %agg.tmp1.sroa.6.0..sroa_idx53.i83.1.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %g.coerce.ls, i64 %indvars.iv.next.i91.ls, i32 1, i32 2
  %agg.tmp1.sroa.6.0.copyload.i84.1.ls = load double, double* %agg.tmp1.sroa.6.0..sroa_idx53.i83.1.ls, align 8, !noalias !578
  %92 = fcmp fast olt <2 x double> %89, %83
  %93 = select <2 x i1> %92, <2 x double> %89, <2 x double> %83
  %cmp.i7.i.i.i87.1.ls = fcmp fast olt double %agg.tmp1.sroa.3.0.copyload.i78.1.ls, %84
  %94 = select i1 %cmp.i7.i.i.i87.1.ls, double %agg.tmp1.sroa.3.0.copyload.i78.1.ls, double %84
  %95 = fcmp fast olt <2 x double> %86, %91
  %96 = select <2 x i1> %95, <2 x double> %91, <2 x double> %86
  %cmp.i7.i16.i.i90.1.ls = fcmp fast olt double %87, %agg.tmp1.sroa.6.0.copyload.i84.1.ls
  %97 = select i1 %cmp.i7.i16.i.i90.1.ls, double %agg.tmp1.sroa.6.0.copyload.i84.1.ls, double %87
  %indvars.iv.next.i91.1.ls = add nsw i64 %indvars.iv.i72.ls, 2
  %lftr.wideiv.i92.1.ls = trunc i64 %indvars.iv.next.i91.1.ls to i32
  %exitcond.i93.1.ls = icmp eq i32 %.sroa.speculated.ls, %lftr.wideiv.i92.1.ls
  br i1 %exitcond.i93.1.ls, label %_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit95.ls, label %for.body.i94.ls

_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_.exit95.ls: ; preds = %for.body.i94.ls, %for.body.i94.prol.loopexit.ls, %pfor.detach.ls
  %ref.tmp21.sroa.15.0.ls = phi double [ %ref.tmp21.sroa.15.0.copyload.ls, %pfor.detach.ls ], [ %.lcssa174.unr.ph.ls, %for.body.i94.prol.loopexit.ls ], [ %97, %for.body.i94.ls ]
  %ref.tmp21.sroa.8.0.ls = phi double [ %ref.tmp21.sroa.8.0.copyload.ls, %pfor.detach.ls ], [ %.lcssa176.unr.ph.ls, %for.body.i94.prol.loopexit.ls ], [ %94, %for.body.i94.ls ]
  %98 = phi <2 x double> [ %56, %pfor.detach.ls ], [ %.lcssa177.unr.ph.ls, %for.body.i94.prol.loopexit.ls ], [ %93, %for.body.i94.ls ]
  %99 = phi <2 x double> [ %58, %pfor.detach.ls ], [ %.lcssa175.unr.ph.ls, %for.body.i94.prol.loopexit.ls ], [ %96, %for.body.i94.ls ]
  %ref.tmp21.sroa.0.0..sroa_idx97.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %.ls5, i64 %indvars.iv.ls, i32 0, i32 0
  %100 = bitcast double* %ref.tmp21.sroa.0.0..sroa_idx97.ls to <2 x double>*
  store <2 x double> %98, <2 x double>* %100, align 8
  %ref.tmp21.sroa.8.0..sroa_idx105.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %.ls5, i64 %indvars.iv.ls, i32 0, i32 2
  store double %ref.tmp21.sroa.8.0.ls, double* %ref.tmp21.sroa.8.0..sroa_idx105.ls, align 8
  %ref.tmp21.sroa.10.24..sroa_idx.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %.ls5, i64 %indvars.iv.ls, i32 1, i32 0
  %101 = bitcast double* %ref.tmp21.sroa.10.24..sroa_idx.ls to <2 x double>*
  store <2 x double> %99, <2 x double>* %101, align 8
  %ref.tmp21.sroa.15.24..sroa_idx114.ls = getelementptr inbounds %"struct.std::pair.33", %"struct.std::pair.33"* %.ls5, i64 %indvars.iv.ls, i32 1, i32 2
  store double %ref.tmp21.sroa.15.0.ls, double* %ref.tmp21.sroa.15.24..sroa_idx114.ls, align 8
  %102 = icmp ult i64 %indvars.iv.ls, %end.ls
  %indvars.iv.next.ls = add nuw nsw i64 %indvars.iv.ls, 1
  br i1 %102, label %pfor.detach.ls, label %pfor.cond.cleanup.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.ls(i64 %indvars.iv101.start.ls, i64 %end.ls, i64 %.ls, %struct.vertex.44** nocapture readonly align 1 %S.ls, %"struct.std::pair.51"* nocapture align 1 %.ls1) unnamed_addr #15 align 2 {
pfor.detach.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount3 = sub i64 %end.ls, %indvars.iv101.start.ls
  %9 = icmp ugt i64 %itercount3, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv101.ls.ph = phi i64 [ %indvars.iv101.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount5 = phi i64 [ %itercount3, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv101.ls.dac4 = phi i64 [ %indvars.iv101.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount5, 1
  %miditer = add nuw nsw i64 %indvars.iv101.ls.dac4, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split6, label %.split.split

.split6:                                          ; preds = %16
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.ls_.split.cilk(i64 %indvars.iv101.ls.dac4, i64 %miditer, i64 %.ls, %struct.vertex.44** %S.ls, %"struct.std::pair.51"* %.ls1)
  br label %.split.split

.split.split:                                     ; preds = %.split6, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.loopexit129.ls:                 ; preds = %pfor.detach.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit129.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit129.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %pfor.detach.ls
  %indvars.iv101.ls = phi i64 [ %indvars.iv.next102.ls, %pfor.detach.ls ], [ %indvars.iv101.ls.ph, %pfor.detach.ls.preheader ]
  %arrayidx.ls = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %S.ls, i64 %indvars.iv101.ls
  %48 = bitcast %struct.vertex.44** %arrayidx.ls to i64*
  %49 = load i64, i64* %48, align 8, !tbaa !53
  %first2.i.ls = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %.ls1, i64 %indvars.iv101.ls, i32 0
  store i32 0, i32* %first2.i.ls, align 8, !tbaa !325
  %second4.i.ls = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %.ls1, i64 %indvars.iv101.ls, i32 1
  %50 = bitcast %struct.vertex.44** %second4.i.ls to i64*
  store i64 %49, i64* %50, align 8, !tbaa !327
  %51 = icmp ult i64 %indvars.iv101.ls, %end.ls
  %indvars.iv.next102.ls = add nuw nsw i64 %indvars.iv101.ls, 1
  br i1 %51, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit129.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.us.ls(i64 %indvars.iv97.start.ls, i64 %end.ls, i64 %.ls, %struct.vertex.44** nocapture readonly align 1 %S.ls, double %add.i.neg.ls, double %.ls1, i32 %sub3.i.ls, double %add9.i.neg.ls, double %add17.i.neg.ls, i1 %min.iters.check.ls, i32 %n.vec.ls, i1 %cmp.n.ls, i32 %logdivs.ls, %"struct.std::pair.51"* nocapture align 1 %.ls2) unnamed_addr #15 align 2 {
pfor.detach.us.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.us.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.us.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.us.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.us.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount5 = sub i64 %end.ls, %indvars.iv97.start.ls
  %9 = icmp ugt i64 %itercount5, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.us.preheader.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount7 = phi i64 [ %itercount5, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv97.ls.dac6 = phi i64 [ %indvars.iv97.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount7, 1
  %miditer = add nuw nsw i64 %indvars.iv97.ls.dac6, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split8, label %.split.split

.split8:                                          ; preds = %16
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.us.ls_.split.cilk(i64 %indvars.iv97.ls.dac6, i64 %miditer, i64 %.ls, %struct.vertex.44** %S.ls, double %add.i.neg.ls, double %.ls1, i32 %sub3.i.ls, double %add9.i.neg.ls, double %add17.i.neg.ls, i1 %min.iters.check.ls, i32 %n.vec.ls, i1 %cmp.n.ls, i32 %logdivs.ls, %"struct.std::pair.51"* %.ls2)
  br label %.split.split

.split.split:                                     ; preds = %.split8, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.us.preheader.ls.split._crit_edge

pfor.detach.us.preheader.ls.split._crit_edge:     ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv97.ls.dac.lcssa = phi i64 [ %indvars.iv97.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br i1 %min.iters.check.ls, label %pfor.detach.us.ls.us.preheader, label %pfor.detach.us.ls.preheader

pfor.detach.us.ls.preheader:                      ; preds = %pfor.detach.us.preheader.ls.split._crit_edge
  br label %pfor.detach.us.ls

pfor.detach.us.ls.us.preheader:                   ; preds = %pfor.detach.us.preheader.ls.split._crit_edge
  br label %pfor.detach.us.ls.us

pfor.detach.us.ls.us:                             ; preds = %pfor.detach.us.ls.us.preheader, %_Z11ptFindBlock8_point3dIdEdiS0_.exit.loopexit.us.ls.loopexit.us
  %indvars.iv97.ls.us = phi i64 [ %indvars.iv.next98.ls.us, %_Z11ptFindBlock8_point3dIdEdiS0_.exit.loopexit.us.ls.loopexit.us ], [ %indvars.iv97.ls.dac.lcssa, %pfor.detach.us.ls.us.preheader ]
  %arrayidx.us.ls.us = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %S.ls, i64 %indvars.iv97.ls.us
  %22 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx.us.ls.us, align 8, !tbaa !53
  %agg.tmp8.sroa.0.0..sroa_idx.us.ls.us = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %22, i64 0, i32 1, i32 0
  %agg.tmp8.sroa.0.0.copyload.us.ls.us = load double, double* %agg.tmp8.sroa.0.0..sroa_idx.us.ls.us, align 8
  %agg.tmp8.sroa.2.0..sroa_idx78.us.ls.us = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %22, i64 0, i32 1, i32 1
  %agg.tmp8.sroa.2.0.copyload.us.ls.us = load double, double* %agg.tmp8.sroa.2.0..sroa_idx78.us.ls.us, align 8
  %agg.tmp8.sroa.3.0..sroa_idx79.us.ls.us = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %22, i64 0, i32 1, i32 2
  %agg.tmp8.sroa.3.0.copyload.us.ls.us = load double, double* %agg.tmp8.sroa.3.0..sroa_idx79.us.ls.us, align 8
  %sub.i72.us.ls.us = fadd fast double %agg.tmp8.sroa.0.0.copyload.us.ls.us, %add.i.neg.ls
  %23 = fmul fast double %sub.i72.us.ls.us, %.ls1
  %conv.i.us.ls.us = fptosi double %23 to i32
  %cmp.i.i.us.ls.us = icmp sgt i32 %conv.i.us.ls.us, %sub3.i.ls
  %.sroa.speculated70.i.us.ls.us = select i1 %cmp.i.i.us.ls.us, i32 %sub3.i.ls, i32 %conv.i.us.ls.us
  %sub6.i.us.ls.us = fadd fast double %agg.tmp8.sroa.2.0.copyload.us.ls.us, %add9.i.neg.ls
  %24 = fmul fast double %sub6.i.us.ls.us, %.ls1
  %conv8.i.us.ls.us = fptosi double %24 to i32
  %cmp.i56.i.us.ls.us = icmp sgt i32 %conv8.i.us.ls.us, %sub3.i.ls
  %.sroa.speculated64.i.us.ls.us = select i1 %cmp.i56.i.us.ls.us, i32 %sub3.i.ls, i32 %conv8.i.us.ls.us
  %sub14.i.us.ls.us = fadd fast double %agg.tmp8.sroa.3.0.copyload.us.ls.us, %add17.i.neg.ls
  %25 = fmul fast double %sub14.i.us.ls.us, %.ls1
  %conv16.i.us.ls.us = fptosi double %25 to i32
  %cmp.i54.i.us.ls.us = icmp sgt i32 %conv16.i.us.ls.us, %sub3.i.ls
  %.sroa.speculated.i.us.ls.us = select i1 %cmp.i54.i.us.ls.us, i32 %sub3.i.ls, i32 %conv16.i.us.ls.us
  br label %for.body.i.us.ls.us

for.body.i.us.ls.us:                              ; preds = %for.body.i.us.ls.us, %pfor.detach.us.ls.us
  %result.077.i.us.ls.us = phi i32 [ %add31.i.us.ls.us, %for.body.i.us.ls.us ], [ 0, %pfor.detach.us.ls.us ]
  %i.076.i.us.ls.us = phi i32 [ %inc.i.us.ls.us, %for.body.i.us.ls.us ], [ 0, %pfor.detach.us.ls.us ]
  %shl20.i.us.ls.us = shl i32 1, %i.076.i.us.ls.us
  %and.i.us.ls.us = and i32 %shl20.i.us.ls.us, %.sroa.speculated70.i.us.ls.us
  %mul.i.us.ls.us = shl nuw nsw i32 %i.076.i.us.ls.us, 1
  %shl21.i.us.ls.us = shl i32 %and.i.us.ls.us, %mul.i.us.ls.us
  %add.i75.us.ls.us = add nsw i32 %shl21.i.us.ls.us, %result.077.i.us.ls.us
  %and22.i.us.ls.us = and i32 %shl20.i.us.ls.us, %.sroa.speculated64.i.us.ls.us
  %add24.i.us.ls.us = or i32 %mul.i.us.ls.us, 1
  %shl25.i.us.ls.us = shl i32 %and22.i.us.ls.us, %add24.i.us.ls.us
  %add26.i.us.ls.us = add nsw i32 %add.i75.us.ls.us, %shl25.i.us.ls.us
  %and27.i.us.ls.us = and i32 %shl20.i.us.ls.us, %.sroa.speculated.i.us.ls.us
  %add29.i.us.ls.us = add nuw nsw i32 %mul.i.us.ls.us, 2
  %shl30.i.us.ls.us = shl i32 %and27.i.us.ls.us, %add29.i.us.ls.us
  %add31.i.us.ls.us = add nsw i32 %add26.i.us.ls.us, %shl30.i.us.ls.us
  %inc.i.us.ls.us = add nuw nsw i32 %i.076.i.us.ls.us, 1
  %exitcond.i.us.ls.us = icmp eq i32 %inc.i.us.ls.us, %logdivs.ls
  br i1 %exitcond.i.us.ls.us, label %_Z11ptFindBlock8_point3dIdEdiS0_.exit.loopexit.us.ls.loopexit.us, label %for.body.i.us.ls.us, !llvm.loop !581

_Z11ptFindBlock8_point3dIdEdiS0_.exit.loopexit.us.ls.loopexit.us: ; preds = %for.body.i.us.ls.us
  %26 = ptrtoint %struct.vertex.44* %22 to i64
  %first2.i.us.ls.us = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %.ls2, i64 %indvars.iv97.ls.us, i32 0
  store i32 %add31.i.us.ls.us, i32* %first2.i.us.ls.us, align 8, !tbaa !325
  %second4.i.us.ls.us = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %.ls2, i64 %indvars.iv97.ls.us, i32 1
  %27 = bitcast %struct.vertex.44** %second4.i.us.ls.us to i64*
  store i64 %26, i64* %27, align 8, !tbaa !327
  %28 = icmp ult i64 %indvars.iv97.ls.us, %end.ls
  %indvars.iv.next98.ls.us = add nuw nsw i64 %indvars.iv97.ls.us, 1
  br i1 %28, label %pfor.detach.us.ls.us, label %pfor.cond.cleanup.loopexit.ls

pfor.cond.cleanup.loopexit.ls:                    ; preds = %_Z11ptFindBlock8_point3dIdEdiS0_.exit.loopexit.us.ls, %_Z11ptFindBlock8_point3dIdEdiS0_.exit.loopexit.us.ls.loopexit.us
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %30 = load atomic i32, i32* %29 acquire, align 8
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %33 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %34 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %35 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %34, i16* nonnull %35) #2
  %36 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %37 = call i8* @llvm.frameaddress(i32 0) #2
  %38 = getelementptr inbounds [5 x i8*], [5 x i8*]* %36, i64 0, i64 0
  store volatile i8* %37, i8** %38, align 8
  %39 = call i8* @llvm.stacksave() #2
  %40 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %39, i8** %40, align 8
  %41 = bitcast [5 x i8*]* %36 to i8*
  %42 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %41) #24
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %44 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %45 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %44, i64 0, i32 12, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, 1
  store i64 %47, i64* %45, align 8
  %48 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %49 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %48, i64 0, i32 9
  %52 = bitcast %struct.__cilkrts_stack_frame** %51 to i64*
  store atomic i64 %50, i64* %52 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %53 = load atomic i32, i32* %29 acquire, align 8
  %54 = icmp eq i32 %53, 16777216
  br i1 %54, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.us.ls:                                ; preds = %pfor.detach.us.ls.preheader, %_Z11ptFindBlock8_point3dIdEdiS0_.exit.loopexit.us.ls
  %indvars.iv97.ls = phi i64 [ %indvars.iv.next98.ls, %_Z11ptFindBlock8_point3dIdEdiS0_.exit.loopexit.us.ls ], [ %indvars.iv97.ls.dac.lcssa, %pfor.detach.us.ls.preheader ]
  %arrayidx.us.ls = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %S.ls, i64 %indvars.iv97.ls
  %55 = load %struct.vertex.44*, %struct.vertex.44** %arrayidx.us.ls, align 8, !tbaa !53
  %agg.tmp8.sroa.0.0..sroa_idx.us.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %55, i64 0, i32 1, i32 0
  %agg.tmp8.sroa.0.0.copyload.us.ls = load double, double* %agg.tmp8.sroa.0.0..sroa_idx.us.ls, align 8
  %agg.tmp8.sroa.2.0..sroa_idx78.us.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %55, i64 0, i32 1, i32 1
  %agg.tmp8.sroa.2.0.copyload.us.ls = load double, double* %agg.tmp8.sroa.2.0..sroa_idx78.us.ls, align 8
  %agg.tmp8.sroa.3.0..sroa_idx79.us.ls = getelementptr inbounds %struct.vertex.44, %struct.vertex.44* %55, i64 0, i32 1, i32 2
  %agg.tmp8.sroa.3.0.copyload.us.ls = load double, double* %agg.tmp8.sroa.3.0..sroa_idx79.us.ls, align 8
  %sub.i72.us.ls = fadd fast double %agg.tmp8.sroa.0.0.copyload.us.ls, %add.i.neg.ls
  %56 = fmul fast double %sub.i72.us.ls, %.ls1
  %conv.i.us.ls = fptosi double %56 to i32
  %cmp.i.i.us.ls = icmp sgt i32 %conv.i.us.ls, %sub3.i.ls
  %.sroa.speculated70.i.us.ls = select i1 %cmp.i.i.us.ls, i32 %sub3.i.ls, i32 %conv.i.us.ls
  %sub6.i.us.ls = fadd fast double %agg.tmp8.sroa.2.0.copyload.us.ls, %add9.i.neg.ls
  %57 = fmul fast double %sub6.i.us.ls, %.ls1
  %conv8.i.us.ls = fptosi double %57 to i32
  %cmp.i56.i.us.ls = icmp sgt i32 %conv8.i.us.ls, %sub3.i.ls
  %.sroa.speculated64.i.us.ls = select i1 %cmp.i56.i.us.ls, i32 %sub3.i.ls, i32 %conv8.i.us.ls
  %sub14.i.us.ls = fadd fast double %agg.tmp8.sroa.3.0.copyload.us.ls, %add17.i.neg.ls
  %58 = fmul fast double %sub14.i.us.ls, %.ls1
  %conv16.i.us.ls = fptosi double %58 to i32
  %cmp.i54.i.us.ls = icmp sgt i32 %conv16.i.us.ls, %sub3.i.ls
  %.sroa.speculated.i.us.ls = select i1 %cmp.i54.i.us.ls, i32 %sub3.i.ls, i32 %conv16.i.us.ls
  %broadcast.splatinsert.ls = insertelement <8 x i32> undef, i32 %.sroa.speculated70.i.us.ls, i32 0
  %broadcast.splat.ls = shufflevector <8 x i32> %broadcast.splatinsert.ls, <8 x i32> undef, <8 x i32> zeroinitializer
  %broadcast.splatinsert111.ls = insertelement <8 x i32> undef, i32 %.sroa.speculated64.i.us.ls, i32 0
  %broadcast.splat112.ls = shufflevector <8 x i32> %broadcast.splatinsert111.ls, <8 x i32> undef, <8 x i32> zeroinitializer
  %broadcast.splatinsert115.ls = insertelement <8 x i32> undef, i32 %.sroa.speculated.i.us.ls, i32 0
  %broadcast.splat116.ls = shufflevector <8 x i32> %broadcast.splatinsert115.ls, <8 x i32> undef, <8 x i32> zeroinitializer
  br label %vector.body.ls

vector.body.ls:                                   ; preds = %vector.body.ls, %pfor.detach.us.ls
  %index.ls = phi i32 [ 0, %pfor.detach.us.ls ], [ %index.next.ls, %vector.body.ls ]
  %vec.phi.ls = phi <8 x i32> [ zeroinitializer, %pfor.detach.us.ls ], [ %83, %vector.body.ls ]
  %vec.phi107.ls = phi <8 x i32> [ zeroinitializer, %pfor.detach.us.ls ], [ %84, %vector.body.ls ]
  %vec.ind.ls = phi <8 x i32> [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, %pfor.detach.us.ls ], [ %vec.ind.next.ls, %vector.body.ls ]
  %step.add.ls = add <8 x i32> %vec.ind.ls, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %59 = shl <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %vec.ind.ls
  %60 = shl <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %step.add.ls
  %61 = and <8 x i32> %59, %broadcast.splat.ls
  %62 = and <8 x i32> %60, %broadcast.splat.ls
  %63 = shl nuw nsw <8 x i32> %vec.ind.ls, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %64 = shl nuw nsw <8 x i32> %step.add.ls, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %65 = shl <8 x i32> %61, %63
  %66 = shl <8 x i32> %62, %64
  %67 = add nsw <8 x i32> %65, %vec.phi.ls
  %68 = add nsw <8 x i32> %66, %vec.phi107.ls
  %69 = and <8 x i32> %59, %broadcast.splat112.ls
  %70 = and <8 x i32> %60, %broadcast.splat112.ls
  %71 = or <8 x i32> %63, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %72 = or <8 x i32> %64, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %73 = shl <8 x i32> %69, %71
  %74 = shl <8 x i32> %70, %72
  %75 = add nsw <8 x i32> %67, %73
  %76 = add nsw <8 x i32> %68, %74
  %77 = and <8 x i32> %59, %broadcast.splat116.ls
  %78 = and <8 x i32> %60, %broadcast.splat116.ls
  %79 = add nuw nsw <8 x i32> %63, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %80 = add nuw nsw <8 x i32> %64, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %81 = shl <8 x i32> %77, %79
  %82 = shl <8 x i32> %78, %80
  %83 = add nsw <8 x i32> %75, %81
  %84 = add nsw <8 x i32> %76, %82
  %index.next.ls = add i32 %index.ls, 16
  %vec.ind.next.ls = add <8 x i32> %vec.ind.ls, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %85 = icmp eq i32 %index.next.ls, %n.vec.ls
  br i1 %85, label %middle.block.ls, label %vector.body.ls, !llvm.loop !582

middle.block.ls:                                  ; preds = %vector.body.ls
  %86 = ptrtoint %struct.vertex.44* %55 to i64
  %bin.rdx.ls = add <8 x i32> %84, %83
  %rdx.shuf.ls = shufflevector <8 x i32> %bin.rdx.ls, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx119.ls = add <8 x i32> %rdx.shuf.ls, %bin.rdx.ls
  %rdx.shuf120.ls = shufflevector <8 x i32> %bin.rdx119.ls, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx121.ls = add <8 x i32> %rdx.shuf120.ls, %bin.rdx119.ls
  %rdx.shuf122.ls = shufflevector <8 x i32> %bin.rdx121.ls, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx123.ls = add <8 x i32> %rdx.shuf122.ls, %bin.rdx121.ls
  %87 = extractelement <8 x i32> %bin.rdx123.ls, i32 0
  br i1 %cmp.n.ls, label %_Z11ptFindBlock8_point3dIdEdiS0_.exit.loopexit.us.ls, label %for.body.i.us.ls.preheader

for.body.i.us.ls.preheader:                       ; preds = %middle.block.ls
  br label %for.body.i.us.ls

for.body.i.us.ls:                                 ; preds = %for.body.i.us.ls.preheader, %for.body.i.us.ls
  %result.077.i.us.ls = phi i32 [ %add31.i.us.ls, %for.body.i.us.ls ], [ %87, %for.body.i.us.ls.preheader ]
  %i.076.i.us.ls = phi i32 [ %inc.i.us.ls, %for.body.i.us.ls ], [ %n.vec.ls, %for.body.i.us.ls.preheader ]
  %shl20.i.us.ls = shl i32 1, %i.076.i.us.ls
  %and.i.us.ls = and i32 %shl20.i.us.ls, %.sroa.speculated70.i.us.ls
  %mul.i.us.ls = shl nuw nsw i32 %i.076.i.us.ls, 1
  %shl21.i.us.ls = shl i32 %and.i.us.ls, %mul.i.us.ls
  %add.i75.us.ls = add nsw i32 %shl21.i.us.ls, %result.077.i.us.ls
  %and22.i.us.ls = and i32 %shl20.i.us.ls, %.sroa.speculated64.i.us.ls
  %add24.i.us.ls = or i32 %mul.i.us.ls, 1
  %shl25.i.us.ls = shl i32 %and22.i.us.ls, %add24.i.us.ls
  %add26.i.us.ls = add nsw i32 %add.i75.us.ls, %shl25.i.us.ls
  %and27.i.us.ls = and i32 %shl20.i.us.ls, %.sroa.speculated.i.us.ls
  %add29.i.us.ls = add nuw nsw i32 %mul.i.us.ls, 2
  %shl30.i.us.ls = shl i32 %and27.i.us.ls, %add29.i.us.ls
  %add31.i.us.ls = add nsw i32 %add26.i.us.ls, %shl30.i.us.ls
  %inc.i.us.ls = add nuw nsw i32 %i.076.i.us.ls, 1
  %exitcond.i.us.ls = icmp eq i32 %inc.i.us.ls, %logdivs.ls
  br i1 %exitcond.i.us.ls, label %_Z11ptFindBlock8_point3dIdEdiS0_.exit.loopexit.us.ls, label %for.body.i.us.ls, !llvm.loop !581

_Z11ptFindBlock8_point3dIdEdiS0_.exit.loopexit.us.ls: ; preds = %for.body.i.us.ls, %middle.block.ls
  %add31.i.us.lcssa.ls = phi i32 [ %87, %middle.block.ls ], [ %add31.i.us.ls, %for.body.i.us.ls ]
  %first2.i.us.ls = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %.ls2, i64 %indvars.iv97.ls, i32 0
  store i32 %add31.i.us.lcssa.ls, i32* %first2.i.us.ls, align 8, !tbaa !325
  %second4.i.us.ls = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %.ls2, i64 %indvars.iv97.ls, i32 1
  %88 = bitcast %struct.vertex.44** %second4.i.us.ls to i64*
  store i64 %86, i64* %88, align 8, !tbaa !327
  %89 = icmp ult i64 %indvars.iv97.ls, %end.ls
  %indvars.iv.next98.ls = add nuw nsw i64 %indvars.iv97.ls, 1
  br i1 %89, label %pfor.detach.us.ls, label %pfor.cond.cleanup.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach29.ls(i64 %indvars.iv.start.ls, i64 %end.ls, i64 %.ls, %"struct.std::pair.51"* nocapture readonly align 1 %.ls1, %struct.vertex.44** nocapture align 1 %S.ls) unnamed_addr #15 align 2 {
pfor.detach29.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach29.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach29.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach29.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach29.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount3 = sub i64 %end.ls, %indvars.iv.start.ls
  %9 = icmp ugt i64 %itercount3, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach29.lr.ph.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount5 = phi i64 [ %itercount3, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv.ls.dac4 = phi i64 [ %indvars.iv.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount5, 1
  %miditer = add nuw nsw i64 %indvars.iv.ls.dac4, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split6, label %.split.split

.split6:                                          ; preds = %16
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach29.ls_.split.cilk(i64 %indvars.iv.ls.dac4, i64 %miditer, i64 %.ls, %"struct.std::pair.51"* %.ls1, %struct.vertex.44** %S.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split6, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach29.lr.ph.ls.split._crit_edge

pfor.detach29.lr.ph.ls.split._crit_edge:          ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv.ls.dac.lcssa = phi i64 [ %indvars.iv.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  %22 = icmp ugt i64 %indvars.iv.ls.dac.lcssa, %end.ls
  %umax = select i1 %22, i64 %indvars.iv.ls.dac.lcssa, i64 %end.ls
  %23 = add i64 %umax, 1
  %24 = sub i64 %23, %indvars.iv.ls.dac.lcssa
  %min.iters.check = icmp ult i64 %24, 17
  br i1 %min.iters.check, label %pfor.detach29.ls.preheader, label %vector.memcheck

pfor.detach29.ls.preheader:                       ; preds = %vector.body, %vector.memcheck, %pfor.detach29.lr.ph.ls.split._crit_edge
  %indvars.iv.ls.ph = phi i64 [ %indvars.iv.ls.dac.lcssa, %vector.memcheck ], [ %indvars.iv.ls.dac.lcssa, %pfor.detach29.lr.ph.ls.split._crit_edge ], [ %ind.end, %vector.body ]
  br label %pfor.detach29.ls

vector.memcheck:                                  ; preds = %pfor.detach29.lr.ph.ls.split._crit_edge
  %scevgep = getelementptr %struct.vertex.44*, %struct.vertex.44** %S.ls, i64 %indvars.iv.ls.dac.lcssa
  %25 = icmp ugt i64 %indvars.iv.ls.dac.lcssa, %end.ls
  %umax2 = select i1 %25, i64 %indvars.iv.ls.dac.lcssa, i64 %end.ls
  %26 = add i64 %umax2, 1
  %scevgep3 = getelementptr %struct.vertex.44*, %struct.vertex.44** %S.ls, i64 %26
  %scevgep5 = getelementptr %"struct.std::pair.51", %"struct.std::pair.51"* %.ls1, i64 %indvars.iv.ls.dac.lcssa, i32 1
  %scevgep7 = getelementptr %"struct.std::pair.51", %"struct.std::pair.51"* %.ls1, i64 %26
  %27 = bitcast %"struct.std::pair.51"* %scevgep7 to %struct.vertex.44**
  %bound0 = icmp ult %struct.vertex.44** %scevgep, %27
  %bound1 = icmp ult %struct.vertex.44** %scevgep5, %scevgep3
  %memcheck.conflict = and i1 %bound0, %bound1
  br i1 %memcheck.conflict, label %pfor.detach29.ls.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.mod.vf = and i64 %24, 15
  %28 = icmp eq i64 %n.mod.vf, 0
  %29 = select i1 %28, i64 16, i64 %n.mod.vf
  %n.vec = sub i64 %24, %29
  %ind.end = add i64 %indvars.iv.ls.dac.lcssa, %n.vec
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %offset.idx = add i64 %indvars.iv.ls.dac.lcssa, %index
  %30 = add i64 %indvars.iv.ls.dac.lcssa, %index
  %31 = add i64 %offset.idx, 4
  %32 = add i64 %offset.idx, 8
  %33 = add i64 %offset.idx, 12
  %34 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %.ls1, i64 %30, i32 1
  %35 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %.ls1, i64 %31, i32 1
  %36 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %.ls1, i64 %32, i32 1
  %37 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %.ls1, i64 %33, i32 1
  %38 = bitcast %struct.vertex.44** %34 to <8 x i64>*
  %39 = bitcast %struct.vertex.44** %35 to <8 x i64>*
  %40 = bitcast %struct.vertex.44** %36 to <8 x i64>*
  %41 = bitcast %struct.vertex.44** %37 to <8 x i64>*
  %wide.vec = load <8 x i64>, <8 x i64>* %38, align 8, !tbaa !327
  %wide.vec12 = load <8 x i64>, <8 x i64>* %39, align 8, !tbaa !327
  %wide.vec13 = load <8 x i64>, <8 x i64>* %40, align 8, !tbaa !327
  %wide.vec14 = load <8 x i64>, <8 x i64>* %41, align 8, !tbaa !327
  %strided.vec = shufflevector <8 x i64> %wide.vec, <8 x i64> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec15 = shufflevector <8 x i64> %wide.vec12, <8 x i64> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec16 = shufflevector <8 x i64> %wide.vec13, <8 x i64> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec17 = shufflevector <8 x i64> %wide.vec14, <8 x i64> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %42 = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %S.ls, i64 %30
  %43 = bitcast %struct.vertex.44** %42 to <4 x i64>*
  store <4 x i64> %strided.vec, <4 x i64>* %43, align 8, !tbaa !53, !alias.scope !583, !noalias !586
  %44 = getelementptr %struct.vertex.44*, %struct.vertex.44** %42, i64 4
  %45 = bitcast %struct.vertex.44** %44 to <4 x i64>*
  store <4 x i64> %strided.vec15, <4 x i64>* %45, align 8, !tbaa !53, !alias.scope !583, !noalias !586
  %46 = getelementptr %struct.vertex.44*, %struct.vertex.44** %42, i64 8
  %47 = bitcast %struct.vertex.44** %46 to <4 x i64>*
  store <4 x i64> %strided.vec16, <4 x i64>* %47, align 8, !tbaa !53, !alias.scope !583, !noalias !586
  %48 = getelementptr %struct.vertex.44*, %struct.vertex.44** %42, i64 12
  %49 = bitcast %struct.vertex.44** %48 to <4 x i64>*
  store <4 x i64> %strided.vec17, <4 x i64>* %49, align 8, !tbaa !53, !alias.scope !583, !noalias !586
  %index.next = add i64 %index, 16
  %50 = icmp eq i64 %index.next, %n.vec
  br i1 %50, label %pfor.detach29.ls.preheader, label %vector.body, !llvm.loop !588

pfor.cond.cleanup28.loopexit.ls:                  ; preds = %pfor.detach29.ls
  %51 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %52 = load atomic i32, i32* %51 acquire, align 8
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup28.loopexit.ls
  %55 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %56 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %57 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %56, i16* nonnull %57) #2
  %58 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %59 = call i8* @llvm.frameaddress(i32 0) #2
  %60 = getelementptr inbounds [5 x i8*], [5 x i8*]* %58, i64 0, i64 0
  store volatile i8* %59, i8** %60, align 8
  %61 = call i8* @llvm.stacksave() #2
  %62 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %61, i8** %62, align 8
  %63 = bitcast [5 x i8*]* %58 to i8*
  %64 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %63) #24
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup28.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %66 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %67 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %66, i64 0, i32 12, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  store i64 %69, i64* %67, align 8
  %70 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %71 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %70, i64 0, i32 9
  %74 = bitcast %struct.__cilkrts_stack_frame** %73 to i64*
  store atomic i64 %72, i64* %74 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %75 = load atomic i32, i32* %51 acquire, align 8
  %76 = icmp eq i32 %75, 16777216
  br i1 %76, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach29.ls:                                 ; preds = %pfor.detach29.ls.preheader, %pfor.detach29.ls
  %indvars.iv.ls = phi i64 [ %indvars.iv.next.ls, %pfor.detach29.ls ], [ %indvars.iv.ls.ph, %pfor.detach29.ls.preheader ]
  %second.ls = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %.ls1, i64 %indvars.iv.ls, i32 1
  %77 = bitcast %struct.vertex.44** %second.ls to i64*
  %78 = load i64, i64* %77, align 8, !tbaa !327
  %arrayidx38.ls = getelementptr inbounds %struct.vertex.44*, %struct.vertex.44** %S.ls, i64 %indvars.iv.ls
  %79 = bitcast %struct.vertex.44** %arrayidx38.ls to i64*
  store i64 %78, i64* %79, align 8, !tbaa !53
  %80 = icmp ult i64 %indvars.iv.ls, %end.ls
  %indvars.iv.next.ls = add nuw nsw i64 %indvars.iv.ls, 1
  br i1 %80, label %pfor.detach29.ls, label %pfor.cond.cleanup28.loopexit.ls, !llvm.loop !589
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach34.ls(i64 %__begin25.0181.start.ls, i64 %end.ls, i64 %.ls, i32* nocapture align 1 %bucketOffsets.ls, i32 %conv40.ls) unnamed_addr #15 {
pfor.detach34.lr.ph.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach34.lr.ph.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach34.lr.ph.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach34.lr.ph.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach34.lr.ph.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount2 = sub i64 %end.ls, %__begin25.0181.start.ls
  %9 = icmp ugt i64 %itercount2, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach34.lr.ph.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount4 = phi i64 [ %itercount2, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin25.0181.ls.dac3 = phi i64 [ %__begin25.0181.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount4, 1
  %miditer = add nuw nsw i64 %__begin25.0181.ls.dac3, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split5, label %.split.split

.split5:                                          ; preds = %16
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach34.ls_.split.cilk(i64 %__begin25.0181.ls.dac3, i64 %miditer, i64 %.ls, i32* %bucketOffsets.ls, i32 %conv40.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split5, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach34.lr.ph.ls.split._crit_edge

pfor.detach34.lr.ph.ls.split._crit_edge:          ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin25.0181.ls.dac.lcssa = phi i64 [ %__begin25.0181.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  %22 = icmp ugt i64 %__begin25.0181.ls.dac.lcssa, %end.ls
  %umax = select i1 %22, i64 %__begin25.0181.ls.dac.lcssa, i64 %end.ls
  %23 = add i64 %umax, 1
  %24 = sub i64 %23, %__begin25.0181.ls.dac.lcssa
  %min.iters.check = icmp ult i64 %24, 32
  br i1 %min.iters.check, label %pfor.detach34.ls.preheader, label %vector.ph

pfor.detach34.ls.preheader:                       ; preds = %middle.block, %pfor.detach34.lr.ph.ls.split._crit_edge
  %__begin25.0181.ls.ph = phi i64 [ %__begin25.0181.ls.dac.lcssa, %pfor.detach34.lr.ph.ls.split._crit_edge ], [ %ind.end, %middle.block ]
  br label %pfor.detach34.ls

vector.ph:                                        ; preds = %pfor.detach34.lr.ph.ls.split._crit_edge
  %n.vec = and i64 %24, -32
  %ind.end = add i64 %__begin25.0181.ls.dac.lcssa, %n.vec
  %broadcast.splatinsert4 = insertelement <8 x i32> undef, i32 %conv40.ls, i32 0
  %broadcast.splat5 = shufflevector <8 x i32> %broadcast.splatinsert4, <8 x i32> undef, <8 x i32> zeroinitializer
  %broadcast.splatinsert6 = insertelement <8 x i32> undef, i32 %conv40.ls, i32 0
  %broadcast.splat7 = shufflevector <8 x i32> %broadcast.splatinsert6, <8 x i32> undef, <8 x i32> zeroinitializer
  %broadcast.splatinsert8 = insertelement <8 x i32> undef, i32 %conv40.ls, i32 0
  %broadcast.splat9 = shufflevector <8 x i32> %broadcast.splatinsert8, <8 x i32> undef, <8 x i32> zeroinitializer
  %broadcast.splatinsert10 = insertelement <8 x i32> undef, i32 %conv40.ls, i32 0
  %broadcast.splat11 = shufflevector <8 x i32> %broadcast.splatinsert10, <8 x i32> undef, <8 x i32> zeroinitializer
  %25 = add i64 %n.vec, -32
  %26 = lshr exact i64 %25, 5
  %27 = add nuw nsw i64 %26, 1
  %xtraiter = and i64 %27, 7
  %28 = icmp ult i64 %25, 224
  br i1 %28, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nsw i64 %27, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.7, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.7, %vector.body ]
  %29 = add i64 %__begin25.0181.ls.dac.lcssa, %index
  %30 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %29
  %31 = bitcast i32* %30 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %31, align 4, !tbaa !59
  %32 = getelementptr i32, i32* %30, i64 8
  %33 = bitcast i32* %32 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %33, align 4, !tbaa !59
  %34 = getelementptr i32, i32* %30, i64 16
  %35 = bitcast i32* %34 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %35, align 4, !tbaa !59
  %36 = getelementptr i32, i32* %30, i64 24
  %37 = bitcast i32* %36 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %37, align 4, !tbaa !59
  %index.next = or i64 %index, 32
  %38 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next
  %39 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %38
  %40 = bitcast i32* %39 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %40, align 4, !tbaa !59
  %41 = getelementptr i32, i32* %39, i64 8
  %42 = bitcast i32* %41 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %42, align 4, !tbaa !59
  %43 = getelementptr i32, i32* %39, i64 16
  %44 = bitcast i32* %43 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %44, align 4, !tbaa !59
  %45 = getelementptr i32, i32* %39, i64 24
  %46 = bitcast i32* %45 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %46, align 4, !tbaa !59
  %index.next.1 = or i64 %index, 64
  %47 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next.1
  %48 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %47
  %49 = bitcast i32* %48 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %49, align 4, !tbaa !59
  %50 = getelementptr i32, i32* %48, i64 8
  %51 = bitcast i32* %50 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %51, align 4, !tbaa !59
  %52 = getelementptr i32, i32* %48, i64 16
  %53 = bitcast i32* %52 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %53, align 4, !tbaa !59
  %54 = getelementptr i32, i32* %48, i64 24
  %55 = bitcast i32* %54 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %55, align 4, !tbaa !59
  %index.next.2 = or i64 %index, 96
  %56 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next.2
  %57 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %56
  %58 = bitcast i32* %57 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %58, align 4, !tbaa !59
  %59 = getelementptr i32, i32* %57, i64 8
  %60 = bitcast i32* %59 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %60, align 4, !tbaa !59
  %61 = getelementptr i32, i32* %57, i64 16
  %62 = bitcast i32* %61 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %62, align 4, !tbaa !59
  %63 = getelementptr i32, i32* %57, i64 24
  %64 = bitcast i32* %63 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %64, align 4, !tbaa !59
  %index.next.3 = or i64 %index, 128
  %65 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next.3
  %66 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %65
  %67 = bitcast i32* %66 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %67, align 4, !tbaa !59
  %68 = getelementptr i32, i32* %66, i64 8
  %69 = bitcast i32* %68 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %69, align 4, !tbaa !59
  %70 = getelementptr i32, i32* %66, i64 16
  %71 = bitcast i32* %70 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %71, align 4, !tbaa !59
  %72 = getelementptr i32, i32* %66, i64 24
  %73 = bitcast i32* %72 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %73, align 4, !tbaa !59
  %index.next.4 = or i64 %index, 160
  %74 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next.4
  %75 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %74
  %76 = bitcast i32* %75 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %76, align 4, !tbaa !59
  %77 = getelementptr i32, i32* %75, i64 8
  %78 = bitcast i32* %77 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %78, align 4, !tbaa !59
  %79 = getelementptr i32, i32* %75, i64 16
  %80 = bitcast i32* %79 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %80, align 4, !tbaa !59
  %81 = getelementptr i32, i32* %75, i64 24
  %82 = bitcast i32* %81 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %82, align 4, !tbaa !59
  %index.next.5 = or i64 %index, 192
  %83 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next.5
  %84 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %83
  %85 = bitcast i32* %84 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %85, align 4, !tbaa !59
  %86 = getelementptr i32, i32* %84, i64 8
  %87 = bitcast i32* %86 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %87, align 4, !tbaa !59
  %88 = getelementptr i32, i32* %84, i64 16
  %89 = bitcast i32* %88 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %89, align 4, !tbaa !59
  %90 = getelementptr i32, i32* %84, i64 24
  %91 = bitcast i32* %90 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %91, align 4, !tbaa !59
  %index.next.6 = or i64 %index, 224
  %92 = add i64 %__begin25.0181.ls.dac.lcssa, %index.next.6
  %93 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %92
  %94 = bitcast i32* %93 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %94, align 4, !tbaa !59
  %95 = getelementptr i32, i32* %93, i64 8
  %96 = bitcast i32* %95 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %96, align 4, !tbaa !59
  %97 = getelementptr i32, i32* %93, i64 16
  %98 = bitcast i32* %97 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %98, align 4, !tbaa !59
  %99 = getelementptr i32, i32* %93, i64 24
  %100 = bitcast i32* %99 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %100, align 4, !tbaa !59
  %index.next.7 = add i64 %index, 256
  %niter.nsub.7 = add i64 %niter, -8
  %niter.ncmp.7 = icmp eq i64 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !590

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.7, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil.preheader

vector.body.epil.preheader:                       ; preds = %middle.block.unr-lcssa
  br label %vector.body.epil

vector.body.epil:                                 ; preds = %vector.body.epil, %vector.body.epil.preheader
  %index.epil = phi i64 [ %index.unr, %vector.body.epil.preheader ], [ %index.next.epil, %vector.body.epil ]
  %epil.iter = phi i64 [ %xtraiter, %vector.body.epil.preheader ], [ %epil.iter.sub, %vector.body.epil ]
  %101 = add i64 %__begin25.0181.ls.dac.lcssa, %index.epil
  %102 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %101
  %103 = bitcast i32* %102 to <8 x i32>*
  store <8 x i32> %broadcast.splat5, <8 x i32>* %103, align 4, !tbaa !59
  %104 = getelementptr i32, i32* %102, i64 8
  %105 = bitcast i32* %104 to <8 x i32>*
  store <8 x i32> %broadcast.splat7, <8 x i32>* %105, align 4, !tbaa !59
  %106 = getelementptr i32, i32* %102, i64 16
  %107 = bitcast i32* %106 to <8 x i32>*
  store <8 x i32> %broadcast.splat9, <8 x i32>* %107, align 4, !tbaa !59
  %108 = getelementptr i32, i32* %102, i64 24
  %109 = bitcast i32* %108 to <8 x i32>*
  store <8 x i32> %broadcast.splat11, <8 x i32>* %109, align 4, !tbaa !59
  %index.next.epil = add i64 %index.epil, 32
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block, label %vector.body.epil, !llvm.loop !591

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %24, %n.vec
  br i1 %cmp.n, label %pfor.cond.cleanup33.loopexit.ls, label %pfor.detach34.ls.preheader

pfor.cond.cleanup33.loopexit.ls:                  ; preds = %pfor.detach34.ls, %middle.block
  %110 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %111 = load atomic i32, i32* %110 acquire, align 8
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup33.loopexit.ls
  %114 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %115 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %116 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %115, i16* nonnull %116) #2
  %117 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %118 = call i8* @llvm.frameaddress(i32 0) #2
  %119 = getelementptr inbounds [5 x i8*], [5 x i8*]* %117, i64 0, i64 0
  store volatile i8* %118, i8** %119, align 8
  %120 = call i8* @llvm.stacksave() #2
  %121 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %120, i8** %121, align 8
  %122 = bitcast [5 x i8*]* %117 to i8*
  %123 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %122) #24
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup33.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %125 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %126 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %125, i64 0, i32 12, i32 0
  %127 = load i64, i64* %126, align 8
  %128 = add i64 %127, 1
  store i64 %128, i64* %126, align 8
  %129 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %130 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %129, i64 0, i32 9
  %133 = bitcast %struct.__cilkrts_stack_frame** %132 to i64*
  store atomic i64 %131, i64* %133 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %134 = load atomic i32, i32* %110 acquire, align 8
  %135 = icmp eq i32 %134, 16777216
  br i1 %135, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach34.ls:                                 ; preds = %pfor.detach34.ls.preheader, %pfor.detach34.ls
  %__begin25.0181.ls = phi i64 [ %inc44.ls, %pfor.detach34.ls ], [ %__begin25.0181.ls.ph, %pfor.detach34.ls.preheader ]
  %arrayidx41.ls = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %__begin25.0181.ls
  store i32 %conv40.ls, i32* %arrayidx41.ls, align 4, !tbaa !59
  %136 = icmp ult i64 %__begin25.0181.ls, %end.ls
  %inc44.ls = add nuw nsw i64 %__begin25.0181.ls, 1
  br i1 %136, label %pfor.detach34.ls, label %pfor.cond.cleanup33.loopexit.ls, !llvm.loop !592
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach59.ls(i64 %__begin49.0179.start.ls, i64 %end.ls, i64 %.ls, %"struct.std::pair.51"* nocapture readonly align 1 %A.ls, i32* nocapture align 1 %bucketOffsets.ls) unnamed_addr #15 {
pfor.detach59.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach59.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach59.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach59.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach59.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount2 = sub i64 %end.ls, %__begin49.0179.start.ls
  %9 = icmp ugt i64 %itercount2, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach59.ls.preheader

pfor.detach59.ls.preheader:                       ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin49.0179.ls.ph = phi i64 [ %__begin49.0179.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach59.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount4 = phi i64 [ %itercount2, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin49.0179.ls.dac3 = phi i64 [ %__begin49.0179.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount4, 1
  %miditer = add nuw nsw i64 %__begin49.0179.ls.dac3, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split5, label %.split.split

.split5:                                          ; preds = %16
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach59.ls_.split.cilk(i64 %__begin49.0179.ls.dac3, i64 %miditer, i64 %.ls, %"struct.std::pair.51"* %A.ls, i32* %bucketOffsets.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split5, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach59.ls.preheader

pfor.cond.cleanup58.loopexit.ls:                  ; preds = %pfor.inc81.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup58.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup58.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach59.ls:                                 ; preds = %pfor.detach59.ls.preheader, %pfor.inc81.ls
  %__begin49.0179.ls = phi i64 [ %add70.ls, %pfor.inc81.ls ], [ %__begin49.0179.ls.ph, %pfor.detach59.ls.preheader ]
  %agg.tmp65.sroa.0.0..sroa_idx.ls = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %A.ls, i64 %__begin49.0179.ls, i32 0
  %agg.tmp65.sroa.0.0.copyload.ls = load i32, i32* %agg.tmp65.sroa.0.0..sroa_idx.ls, align 8
  %add70.ls = add nuw nsw i64 %__begin49.0179.ls, 1
  %agg.tmp69.sroa.0.0..sroa_idx.ls = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %A.ls, i64 %add70.ls, i32 0
  %agg.tmp69.sroa.0.0.copyload.ls = load i32, i32* %agg.tmp69.sroa.0.0..sroa_idx.ls, align 8
  %cmp74.ls = icmp eq i32 %agg.tmp65.sroa.0.0.copyload.ls, %agg.tmp69.sroa.0.0.copyload.ls
  br i1 %cmp74.ls, label %pfor.inc81.ls, label %if.then75.ls

if.then75.ls:                                     ; preds = %pfor.detach59.ls
  %conv73.ls = sext i32 %agg.tmp69.sroa.0.0.copyload.ls to i64
  %conv77.ls = trunc i64 %add70.ls to i32
  %arrayidx78.ls = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %conv73.ls
  store i32 %conv77.ls, i32* %arrayidx78.ls, align 4, !tbaa !59
  br label %pfor.inc81.ls

pfor.inc81.ls:                                    ; preds = %pfor.detach59.ls, %if.then75.ls
  %48 = icmp ult i64 %__begin49.0179.ls, %end.ls
  br i1 %48, label %pfor.detach59.ls, label %pfor.cond.cleanup58.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach.ls(i64 %__begin.0177.start.ls, i64 %end.ls, i64 %.ls, [256 x i32]* nocapture readonly align 1 %.ls1, i32* nocapture align 1 %bucketOffsets.ls) unnamed_addr #15 {
pfor.detach.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount3 = sub i64 %end.ls, %__begin.0177.start.ls
  %9 = icmp ugt i64 %itercount3, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.preheader.ls.split._crit_edge

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount5 = phi i64 [ %itercount3, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin.0177.ls.dac4 = phi i64 [ %__begin.0177.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount5, 1
  %miditer = add nuw nsw i64 %__begin.0177.ls.dac4, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split6, label %.split.split

.split6:                                          ; preds = %16
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach.ls_.split.cilk(i64 %__begin.0177.ls.dac4, i64 %miditer, i64 %.ls, [256 x i32]* %.ls1, i32* %bucketOffsets.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split6, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.preheader.ls.split._crit_edge

pfor.detach.preheader.ls.split._crit_edge:        ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin.0177.ls.dac.lcssa = phi i64 [ %__begin.0177.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  %22 = icmp ugt i64 %__begin.0177.ls.dac.lcssa, %end.ls
  %umax = select i1 %22, i64 %__begin.0177.ls.dac.lcssa, i64 %end.ls
  %23 = add i64 %umax, 1
  %24 = sub i64 %23, %__begin.0177.ls.dac.lcssa
  %min.iters.check = icmp ult i64 %24, 32
  br i1 %min.iters.check, label %pfor.detach.ls.preheader, label %vector.memcheck

pfor.detach.ls.preheader:                         ; preds = %middle.block, %vector.memcheck, %pfor.detach.preheader.ls.split._crit_edge
  %__begin.0177.ls.ph = phi i64 [ %__begin.0177.ls.dac.lcssa, %vector.memcheck ], [ %__begin.0177.ls.dac.lcssa, %pfor.detach.preheader.ls.split._crit_edge ], [ %ind.end, %middle.block ]
  br label %pfor.detach.ls

vector.memcheck:                                  ; preds = %pfor.detach.preheader.ls.split._crit_edge
  %scevgep = getelementptr i32, i32* %bucketOffsets.ls, i64 %__begin.0177.ls.dac.lcssa
  %25 = icmp ugt i64 %__begin.0177.ls.dac.lcssa, %end.ls
  %umax3 = select i1 %25, i64 %__begin.0177.ls.dac.lcssa, i64 %end.ls
  %26 = add i64 %umax3, 1
  %scevgep4 = getelementptr i32, i32* %bucketOffsets.ls, i64 %26
  %scevgep6 = getelementptr [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %__begin.0177.ls.dac.lcssa
  %scevgep8 = getelementptr [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %26
  %bound0 = icmp ult i32* %scevgep, %scevgep8
  %bound1 = icmp ult i32* %scevgep6, %scevgep4
  %memcheck.conflict = and i1 %bound0, %bound1
  br i1 %memcheck.conflict, label %pfor.detach.ls.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %24, -32
  %ind.end = add i64 %__begin.0177.ls.dac.lcssa, %n.vec
  %27 = add i64 %n.vec, -32
  %28 = lshr exact i64 %27, 5
  %29 = add nuw nsw i64 %28, 1
  %xtraiter = and i64 %29, 3
  %30 = icmp ult i64 %27, 96
  br i1 %30, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nsw i64 %29, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.3, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.3, %vector.body ]
  %31 = add i64 %__begin.0177.ls.dac.lcssa, %index
  %32 = getelementptr inbounds [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %31
  %33 = bitcast i32* %32 to <8 x i32>*
  %wide.load = load <8 x i32>, <8 x i32>* %33, align 4, !tbaa !59, !alias.scope !593
  %34 = getelementptr i32, i32* %32, i64 8
  %35 = bitcast i32* %34 to <8 x i32>*
  %wide.load13 = load <8 x i32>, <8 x i32>* %35, align 4, !tbaa !59, !alias.scope !593
  %36 = getelementptr i32, i32* %32, i64 16
  %37 = bitcast i32* %36 to <8 x i32>*
  %wide.load14 = load <8 x i32>, <8 x i32>* %37, align 4, !tbaa !59, !alias.scope !593
  %38 = getelementptr i32, i32* %32, i64 24
  %39 = bitcast i32* %38 to <8 x i32>*
  %wide.load15 = load <8 x i32>, <8 x i32>* %39, align 4, !tbaa !59, !alias.scope !593
  %40 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %31
  %41 = bitcast i32* %40 to <8 x i32>*
  store <8 x i32> %wide.load, <8 x i32>* %41, align 4, !tbaa !59, !alias.scope !596, !noalias !593
  %42 = getelementptr i32, i32* %40, i64 8
  %43 = bitcast i32* %42 to <8 x i32>*
  store <8 x i32> %wide.load13, <8 x i32>* %43, align 4, !tbaa !59, !alias.scope !596, !noalias !593
  %44 = getelementptr i32, i32* %40, i64 16
  %45 = bitcast i32* %44 to <8 x i32>*
  store <8 x i32> %wide.load14, <8 x i32>* %45, align 4, !tbaa !59, !alias.scope !596, !noalias !593
  %46 = getelementptr i32, i32* %40, i64 24
  %47 = bitcast i32* %46 to <8 x i32>*
  store <8 x i32> %wide.load15, <8 x i32>* %47, align 4, !tbaa !59, !alias.scope !596, !noalias !593
  %index.next = or i64 %index, 32
  %48 = add i64 %__begin.0177.ls.dac.lcssa, %index.next
  %49 = getelementptr inbounds [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %48
  %50 = bitcast i32* %49 to <8 x i32>*
  %wide.load.1 = load <8 x i32>, <8 x i32>* %50, align 4, !tbaa !59, !alias.scope !593
  %51 = getelementptr i32, i32* %49, i64 8
  %52 = bitcast i32* %51 to <8 x i32>*
  %wide.load13.1 = load <8 x i32>, <8 x i32>* %52, align 4, !tbaa !59, !alias.scope !593
  %53 = getelementptr i32, i32* %49, i64 16
  %54 = bitcast i32* %53 to <8 x i32>*
  %wide.load14.1 = load <8 x i32>, <8 x i32>* %54, align 4, !tbaa !59, !alias.scope !593
  %55 = getelementptr i32, i32* %49, i64 24
  %56 = bitcast i32* %55 to <8 x i32>*
  %wide.load15.1 = load <8 x i32>, <8 x i32>* %56, align 4, !tbaa !59, !alias.scope !593
  %57 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %48
  %58 = bitcast i32* %57 to <8 x i32>*
  store <8 x i32> %wide.load.1, <8 x i32>* %58, align 4, !tbaa !59, !alias.scope !596, !noalias !593
  %59 = getelementptr i32, i32* %57, i64 8
  %60 = bitcast i32* %59 to <8 x i32>*
  store <8 x i32> %wide.load13.1, <8 x i32>* %60, align 4, !tbaa !59, !alias.scope !596, !noalias !593
  %61 = getelementptr i32, i32* %57, i64 16
  %62 = bitcast i32* %61 to <8 x i32>*
  store <8 x i32> %wide.load14.1, <8 x i32>* %62, align 4, !tbaa !59, !alias.scope !596, !noalias !593
  %63 = getelementptr i32, i32* %57, i64 24
  %64 = bitcast i32* %63 to <8 x i32>*
  store <8 x i32> %wide.load15.1, <8 x i32>* %64, align 4, !tbaa !59, !alias.scope !596, !noalias !593
  %index.next.1 = or i64 %index, 64
  %65 = add i64 %__begin.0177.ls.dac.lcssa, %index.next.1
  %66 = getelementptr inbounds [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %65
  %67 = bitcast i32* %66 to <8 x i32>*
  %wide.load.2 = load <8 x i32>, <8 x i32>* %67, align 4, !tbaa !59, !alias.scope !593
  %68 = getelementptr i32, i32* %66, i64 8
  %69 = bitcast i32* %68 to <8 x i32>*
  %wide.load13.2 = load <8 x i32>, <8 x i32>* %69, align 4, !tbaa !59, !alias.scope !593
  %70 = getelementptr i32, i32* %66, i64 16
  %71 = bitcast i32* %70 to <8 x i32>*
  %wide.load14.2 = load <8 x i32>, <8 x i32>* %71, align 4, !tbaa !59, !alias.scope !593
  %72 = getelementptr i32, i32* %66, i64 24
  %73 = bitcast i32* %72 to <8 x i32>*
  %wide.load15.2 = load <8 x i32>, <8 x i32>* %73, align 4, !tbaa !59, !alias.scope !593
  %74 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %65
  %75 = bitcast i32* %74 to <8 x i32>*
  store <8 x i32> %wide.load.2, <8 x i32>* %75, align 4, !tbaa !59, !alias.scope !596, !noalias !593
  %76 = getelementptr i32, i32* %74, i64 8
  %77 = bitcast i32* %76 to <8 x i32>*
  store <8 x i32> %wide.load13.2, <8 x i32>* %77, align 4, !tbaa !59, !alias.scope !596, !noalias !593
  %78 = getelementptr i32, i32* %74, i64 16
  %79 = bitcast i32* %78 to <8 x i32>*
  store <8 x i32> %wide.load14.2, <8 x i32>* %79, align 4, !tbaa !59, !alias.scope !596, !noalias !593
  %80 = getelementptr i32, i32* %74, i64 24
  %81 = bitcast i32* %80 to <8 x i32>*
  store <8 x i32> %wide.load15.2, <8 x i32>* %81, align 4, !tbaa !59, !alias.scope !596, !noalias !593
  %index.next.2 = or i64 %index, 96
  %82 = add i64 %__begin.0177.ls.dac.lcssa, %index.next.2
  %83 = getelementptr inbounds [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %82
  %84 = bitcast i32* %83 to <8 x i32>*
  %wide.load.3 = load <8 x i32>, <8 x i32>* %84, align 4, !tbaa !59, !alias.scope !593
  %85 = getelementptr i32, i32* %83, i64 8
  %86 = bitcast i32* %85 to <8 x i32>*
  %wide.load13.3 = load <8 x i32>, <8 x i32>* %86, align 4, !tbaa !59, !alias.scope !593
  %87 = getelementptr i32, i32* %83, i64 16
  %88 = bitcast i32* %87 to <8 x i32>*
  %wide.load14.3 = load <8 x i32>, <8 x i32>* %88, align 4, !tbaa !59, !alias.scope !593
  %89 = getelementptr i32, i32* %83, i64 24
  %90 = bitcast i32* %89 to <8 x i32>*
  %wide.load15.3 = load <8 x i32>, <8 x i32>* %90, align 4, !tbaa !59, !alias.scope !593
  %91 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %82
  %92 = bitcast i32* %91 to <8 x i32>*
  store <8 x i32> %wide.load.3, <8 x i32>* %92, align 4, !tbaa !59, !alias.scope !596, !noalias !593
  %93 = getelementptr i32, i32* %91, i64 8
  %94 = bitcast i32* %93 to <8 x i32>*
  store <8 x i32> %wide.load13.3, <8 x i32>* %94, align 4, !tbaa !59, !alias.scope !596, !noalias !593
  %95 = getelementptr i32, i32* %91, i64 16
  %96 = bitcast i32* %95 to <8 x i32>*
  store <8 x i32> %wide.load14.3, <8 x i32>* %96, align 4, !tbaa !59, !alias.scope !596, !noalias !593
  %97 = getelementptr i32, i32* %91, i64 24
  %98 = bitcast i32* %97 to <8 x i32>*
  store <8 x i32> %wide.load15.3, <8 x i32>* %98, align 4, !tbaa !59, !alias.scope !596, !noalias !593
  %index.next.3 = add i64 %index, 128
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !598

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.3, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil.preheader

vector.body.epil.preheader:                       ; preds = %middle.block.unr-lcssa
  br label %vector.body.epil

vector.body.epil:                                 ; preds = %vector.body.epil, %vector.body.epil.preheader
  %index.epil = phi i64 [ %index.unr, %vector.body.epil.preheader ], [ %index.next.epil, %vector.body.epil ]
  %epil.iter = phi i64 [ %xtraiter, %vector.body.epil.preheader ], [ %epil.iter.sub, %vector.body.epil ]
  %99 = add i64 %__begin.0177.ls.dac.lcssa, %index.epil
  %100 = getelementptr inbounds [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %99
  %101 = bitcast i32* %100 to <8 x i32>*
  %wide.load.epil = load <8 x i32>, <8 x i32>* %101, align 4, !tbaa !59, !alias.scope !593
  %102 = getelementptr i32, i32* %100, i64 8
  %103 = bitcast i32* %102 to <8 x i32>*
  %wide.load13.epil = load <8 x i32>, <8 x i32>* %103, align 4, !tbaa !59, !alias.scope !593
  %104 = getelementptr i32, i32* %100, i64 16
  %105 = bitcast i32* %104 to <8 x i32>*
  %wide.load14.epil = load <8 x i32>, <8 x i32>* %105, align 4, !tbaa !59, !alias.scope !593
  %106 = getelementptr i32, i32* %100, i64 24
  %107 = bitcast i32* %106 to <8 x i32>*
  %wide.load15.epil = load <8 x i32>, <8 x i32>* %107, align 4, !tbaa !59, !alias.scope !593
  %108 = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %99
  %109 = bitcast i32* %108 to <8 x i32>*
  store <8 x i32> %wide.load.epil, <8 x i32>* %109, align 4, !tbaa !59, !alias.scope !596, !noalias !593
  %110 = getelementptr i32, i32* %108, i64 8
  %111 = bitcast i32* %110 to <8 x i32>*
  store <8 x i32> %wide.load13.epil, <8 x i32>* %111, align 4, !tbaa !59, !alias.scope !596, !noalias !593
  %112 = getelementptr i32, i32* %108, i64 16
  %113 = bitcast i32* %112 to <8 x i32>*
  store <8 x i32> %wide.load14.epil, <8 x i32>* %113, align 4, !tbaa !59, !alias.scope !596, !noalias !593
  %114 = getelementptr i32, i32* %108, i64 24
  %115 = bitcast i32* %114 to <8 x i32>*
  store <8 x i32> %wide.load15.epil, <8 x i32>* %115, align 4, !tbaa !59, !alias.scope !596, !noalias !593
  %index.next.epil = add i64 %index.epil, 32
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block, label %vector.body.epil, !llvm.loop !599

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %24, %n.vec
  br i1 %cmp.n, label %pfor.cond.cleanup.loopexit.ls, label %pfor.detach.ls.preheader

pfor.cond.cleanup.loopexit.ls:                    ; preds = %pfor.detach.ls, %middle.block
  %116 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %117 = load atomic i32, i32* %116 acquire, align 8
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %120 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %121 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %122 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %121, i16* nonnull %122) #2
  %123 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %124 = call i8* @llvm.frameaddress(i32 0) #2
  %125 = getelementptr inbounds [5 x i8*], [5 x i8*]* %123, i64 0, i64 0
  store volatile i8* %124, i8** %125, align 8
  %126 = call i8* @llvm.stacksave() #2
  %127 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %126, i8** %127, align 8
  %128 = bitcast [5 x i8*]* %123 to i8*
  %129 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %128) #24
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %131 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %132 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %131, i64 0, i32 12, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 1
  store i64 %134, i64* %132, align 8
  %135 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %136 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %135, i64 0, i32 9
  %139 = bitcast %struct.__cilkrts_stack_frame** %138 to i64*
  store atomic i64 %137, i64* %139 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %140 = load atomic i32, i32* %116 acquire, align 8
  %141 = icmp eq i32 %140, 16777216
  br i1 %141, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %pfor.detach.ls
  %__begin.0177.ls = phi i64 [ %inc.ls, %pfor.detach.ls ], [ %__begin.0177.ls.ph, %pfor.detach.ls.preheader ]
  %arrayidx13.ls = getelementptr inbounds [256 x i32], [256 x i32]* %.ls1, i64 0, i64 %__begin.0177.ls
  %142 = load i32, i32* %arrayidx13.ls, align 4, !tbaa !59
  %arrayidx14.ls = getelementptr inbounds i32, i32* %bucketOffsets.ls, i64 %__begin.0177.ls
  store i32 %142, i32* %arrayidx14.ls, align 4, !tbaa !59
  %143 = icmp ult i64 %__begin.0177.ls, %end.ls
  %inc.ls = add nuw nsw i64 %__begin.0177.ls, 1
  br i1 %143, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit.ls, !llvm.loop !600
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.ls(i64 %__begin.0156.start.ls, i64 %.ls, i64 %div4.ls, i64 %n.ls, %"struct.std::pair.51"* nocapture readonly align 1 %A.ls, i8* nocapture align 1 %Tmp.ls, i64 %m.ls, [256 x i32]* nocapture align 1 %BK.ls, i64 %mul5.ls, i32 %sh_prom.i.i.ls, i64 %agg.tmp28.sroa.2.0.copyload.ls, %"struct.std::pair.51"* nocapture align 1 %B.ls) unnamed_addr #15 {
pfor.detach.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount1 = sub i64 %.ls, %__begin.0156.start.ls
  %9 = icmp ugt i64 %itercount1, 1
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin.0156.ls.ph = phi i64 [ %__begin.0156.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount3 = phi i64 [ %itercount1, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin.0156.ls.dac2 = phi i64 [ %__begin.0156.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount3, 1
  %miditer = add nuw nsw i64 %__begin.0156.ls.dac2, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split4, label %.split.split

.split4:                                          ; preds = %16
  call fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.ls_.split.cilk(i64 %__begin.0156.ls.dac2, i64 %miditer, i64 %div4.ls, i64 %n.ls, %"struct.std::pair.51"* %A.ls, i8* %Tmp.ls, i64 %m.ls, [256 x i32]* %BK.ls, i64 %mul5.ls, i32 %sh_prom.i.i.ls, i64 %agg.tmp28.sroa.2.0.copyload.ls, %"struct.std::pair.51"* %B.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split4, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, 1
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.loopexit201.ls:                 ; preds = %pfor.inc.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit201.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit201.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %pfor.inc.ls
  %__begin.0156.ls = phi i64 [ %inc.ls, %pfor.inc.ls ], [ %__begin.0156.ls.ph, %pfor.detach.ls.preheader ]
  %48 = mul i64 %__begin.0156.ls, %div4.ls
  %49 = and i64 %48, 4294967295
  %50 = sub i64 %n.ls, %49
  %51 = icmp sgt i64 %50, 0
  %smax194.ls = select i1 %51, i64 %50, i64 0
  %52 = icmp slt i64 %smax194.ls, %div4.ls
  %53 = select i1 %52, i64 %smax194.ls, i64 %div4.ls
  %add.ptr21.ls = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %A.ls, i64 %49
  %add.ptr23.ls = getelementptr inbounds i8, i8* %Tmp.ls, i64 %49
  %mul24.ls = mul nsw i64 %__begin.0156.ls, %m.ls
  %add.ptr25.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 0, i64 %mul24.ls
  %add.ptr27.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 %mul5.ls, i64 %mul24.ls
  %cmp272.i.ls = icmp sgt i64 %53, 0
  br i1 %cmp272.i.ls, label %for.body4.i.preheader.ls, label %pfor.inc.ls

for.body4.i.preheader.ls:                         ; preds = %pfor.detach.ls
  %xtraiter196.ls = and i64 %53, 1
  %54 = icmp eq i64 %53, 1
  br i1 %54, label %for.body4.i.epil.ls, label %for.body4.i.preheader.new.ls

for.body4.i.preheader.new.ls:                     ; preds = %for.body4.i.preheader.ls
  %unroll_iter198.ls = sub i64 %53, %xtraiter196.ls
  br label %for.body4.i.ls

for.body4.i.ls:                                   ; preds = %for.body4.i.ls, %for.body4.i.preheader.new.ls
  %j.073.i.ls = phi i64 [ 0, %for.body4.i.preheader.new.ls ], [ %inc11.i.1.ls, %for.body4.i.ls ]
  %niter199.ls = phi i64 [ %unroll_iter198.ls, %for.body4.i.preheader.new.ls ], [ %niter199.nsub.1.ls, %for.body4.i.ls ]
  %agg.tmp.sroa.0.0..sroa_idx.i.ls = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %add.ptr21.ls, i64 %j.073.i.ls, i32 0
  %agg.tmp.sroa.0.0.copyload.i.ls = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.ls, align 8
  %shr.i.i.ls = ashr i32 %agg.tmp.sroa.0.0.copyload.i.ls, %sh_prom.i.i.ls
  %conv.i.i120.ls = sext i32 %shr.i.i.ls to i64
  %and.i.i.ls = and i64 %conv.i.i120.ls, %agg.tmp28.sroa.2.0.copyload.ls
  %conv.i.ls = trunc i64 %and.i.i.ls to i8
  %arrayidx6.i.ls = getelementptr inbounds i8, i8* %add.ptr23.ls, i64 %j.073.i.ls
  store i8 %conv.i.ls, i8* %arrayidx6.i.ls, align 1, !tbaa !22
  %conv7.i.ls = and i64 %and.i.i.ls, 255
  %arrayidx8.i.ls = getelementptr inbounds i32, i32* %add.ptr25.ls, i64 %conv7.i.ls
  %55 = load i32, i32* %arrayidx8.i.ls, align 4, !tbaa !59
  %inc9.i.ls = add i32 %55, 1
  store i32 %inc9.i.ls, i32* %arrayidx8.i.ls, align 4, !tbaa !59
  %inc11.i.ls = or i64 %j.073.i.ls, 1
  %agg.tmp.sroa.0.0..sroa_idx.i.1.ls = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %add.ptr21.ls, i64 %inc11.i.ls, i32 0
  %agg.tmp.sroa.0.0.copyload.i.1.ls = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.1.ls, align 8
  %shr.i.i.1.ls = ashr i32 %agg.tmp.sroa.0.0.copyload.i.1.ls, %sh_prom.i.i.ls
  %conv.i.i120.1.ls = sext i32 %shr.i.i.1.ls to i64
  %and.i.i.1.ls = and i64 %conv.i.i120.1.ls, %agg.tmp28.sroa.2.0.copyload.ls
  %conv.i.1.ls = trunc i64 %and.i.i.1.ls to i8
  %arrayidx6.i.1.ls = getelementptr inbounds i8, i8* %add.ptr23.ls, i64 %inc11.i.ls
  store i8 %conv.i.1.ls, i8* %arrayidx6.i.1.ls, align 1, !tbaa !22
  %conv7.i.1.ls = and i64 %and.i.i.1.ls, 255
  %arrayidx8.i.1.ls = getelementptr inbounds i32, i32* %add.ptr25.ls, i64 %conv7.i.1.ls
  %56 = load i32, i32* %arrayidx8.i.1.ls, align 4, !tbaa !59
  %inc9.i.1.ls = add i32 %56, 1
  store i32 %inc9.i.1.ls, i32* %arrayidx8.i.1.ls, align 4, !tbaa !59
  %inc11.i.1.ls = add nuw nsw i64 %j.073.i.ls, 2
  %niter199.nsub.1.ls = add i64 %niter199.ls, -2
  %niter199.ncmp.1.ls = icmp eq i64 %niter199.nsub.1.ls, 0
  br i1 %niter199.ncmp.1.ls, label %for.body27.i.preheader.unr-lcssa.ls, label %for.body4.i.ls

for.body27.i.preheader.unr-lcssa.ls:              ; preds = %for.body4.i.ls
  %lcmp.mod197.ls = icmp eq i64 %xtraiter196.ls, 0
  br i1 %lcmp.mod197.ls, label %for.body27.i.ls.preheader, label %for.body4.i.epil.ls

for.body4.i.epil.ls:                              ; preds = %for.body4.i.preheader.ls, %for.body27.i.preheader.unr-lcssa.ls
  %j.073.i.unr.ls2 = phi i64 [ %inc11.i.1.ls, %for.body27.i.preheader.unr-lcssa.ls ], [ 0, %for.body4.i.preheader.ls ]
  %agg.tmp.sroa.0.0..sroa_idx.i.epil.ls = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %add.ptr21.ls, i64 %j.073.i.unr.ls2, i32 0
  %agg.tmp.sroa.0.0.copyload.i.epil.ls = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.epil.ls, align 8
  %shr.i.i.epil.ls = ashr i32 %agg.tmp.sroa.0.0.copyload.i.epil.ls, %sh_prom.i.i.ls
  %conv.i.i120.epil.ls = sext i32 %shr.i.i.epil.ls to i64
  %and.i.i.epil.ls = and i64 %conv.i.i120.epil.ls, %agg.tmp28.sroa.2.0.copyload.ls
  %conv.i.epil.ls = trunc i64 %and.i.i.epil.ls to i8
  %arrayidx6.i.epil.ls = getelementptr inbounds i8, i8* %add.ptr23.ls, i64 %j.073.i.unr.ls2
  store i8 %conv.i.epil.ls, i8* %arrayidx6.i.epil.ls, align 1, !tbaa !22
  %conv7.i.epil.ls = and i64 %and.i.i.epil.ls, 255
  %arrayidx8.i.epil.ls = getelementptr inbounds i32, i32* %add.ptr25.ls, i64 %conv7.i.epil.ls
  %57 = load i32, i32* %arrayidx8.i.epil.ls, align 4, !tbaa !59
  %inc9.i.epil.ls = add i32 %57, 1
  store i32 %inc9.i.epil.ls, i32* %arrayidx8.i.epil.ls, align 4, !tbaa !59
  br label %for.body27.i.ls.preheader

for.body27.i.ls.preheader:                        ; preds = %for.body4.i.epil.ls, %for.body27.i.preheader.unr-lcssa.ls
  br label %for.body27.i.ls

for.body27.i.ls:                                  ; preds = %for.body27.i.ls.preheader, %for.body27.i.ls
  %j23.068.in.i.ls = phi i64 [ %j23.068.i.ls, %for.body27.i.ls ], [ %53, %for.body27.i.ls.preheader ]
  %j23.068.i.ls = add nsw i64 %j23.068.in.i.ls, -1
  %arrayidx28.i.ls = getelementptr inbounds i8, i8* %add.ptr23.ls, i64 %j23.068.i.ls
  %58 = load i8, i8* %arrayidx28.i.ls, align 1, !tbaa !22
  %idxprom29.i.ls = zext i8 %58 to i64
  %arrayidx30.i.ls = getelementptr inbounds i32, i32* %add.ptr27.ls, i64 %idxprom29.i.ls
  %59 = load i32, i32* %arrayidx30.i.ls, align 4, !tbaa !59
  %dec.i.ls = add i32 %59, -1
  store i32 %dec.i.ls, i32* %arrayidx30.i.ls, align 4, !tbaa !59
  %idxprom32.i.ls = zext i32 %dec.i.ls to i64
  %first.i.i122.ls = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %add.ptr21.ls, i64 %j23.068.i.ls, i32 0
  %60 = load i32, i32* %first.i.i122.ls, align 8, !tbaa !325
  %first2.i.i123.ls = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B.ls, i64 %idxprom32.i.ls, i32 0
  store i32 %60, i32* %first2.i.i123.ls, align 8, !tbaa !325
  %second.i.i124.ls = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %add.ptr21.ls, i64 %j23.068.i.ls, i32 1
  %61 = bitcast %struct.vertex.44** %second.i.i124.ls to i64*
  %62 = load i64, i64* %61, align 8, !tbaa !327
  %second3.i.i125.ls = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B.ls, i64 %idxprom32.i.ls, i32 1
  %63 = bitcast %struct.vertex.44** %second3.i.i125.ls to i64*
  store i64 %62, i64* %63, align 8, !tbaa !327
  %cmp25.i.ls = icmp sgt i64 %j23.068.in.i.ls, 1
  br i1 %cmp25.i.ls, label %for.body27.i.ls, label %pfor.inc.ls

pfor.inc.ls:                                      ; preds = %for.body27.i.ls, %pfor.detach.ls
  %64 = icmp ult i64 %__begin.0156.ls, %.ls
  %inc.ls = add nuw nsw i64 %__begin.0156.ls, 1
  br i1 %64, label %pfor.detach.ls, label %pfor.cond.cleanup.loopexit201.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.us.ls(i64 %__begin.0156.us.start.ls, i64 %.ls, i64 %div4.ls, i64 %n.ls, %"struct.std::pair.51"* nocapture readonly align 1 %A.ls, i8* nocapture align 1 %Tmp.ls, i64 %m.ls, [256 x i32]* nocapture align 1 %BK.ls, i64 %mul5.ls, i64 %.ls1, i32 %sh_prom.i.i.ls, i64 %agg.tmp28.sroa.2.0.copyload.ls, i1 %.ls2, i64 %unroll_iter192.ls, i1 %lcmp.mod191.ls, i64 %xtraiter189.ls, %"struct.std::pair.51"* nocapture align 1 %B.ls) unnamed_addr #15 {
pfor.detach.us.preheader.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %pfor.detach.us.preheader.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %pfor.detach.us.preheader.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %pfor.detach.us.preheader.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %pfor.detach.us.preheader.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount3 = sub i64 %.ls, %__begin.0156.us.start.ls
  %9 = icmp ugt i64 %itercount3, 1
  br i1 %9, label %.lr.ph, label %pfor.detach.us.ls.preheader

pfor.detach.us.ls.preheader:                      ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %__begin.0156.us.ls.ph = phi i64 [ %__begin.0156.us.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.us.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount5 = phi i64 [ %itercount3, %.lr.ph ], [ %itercount, %.split.split ]
  %__begin.0156.us.ls.dac4 = phi i64 [ %__begin.0156.us.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount5, 1
  %miditer = add nuw nsw i64 %__begin.0156.us.ls.dac4, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split6, label %.split.split

.split6:                                          ; preds = %16
  call fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.us.ls_.split.cilk(i64 %__begin.0156.us.ls.dac4, i64 %miditer, i64 %div4.ls, i64 %n.ls, %"struct.std::pair.51"* %A.ls, i8* %Tmp.ls, i64 %m.ls, [256 x i32]* %BK.ls, i64 %mul5.ls, i64 %.ls1, i32 %sh_prom.i.i.ls, i64 %agg.tmp28.sroa.2.0.copyload.ls, i1 %.ls2, i64 %unroll_iter192.ls, i1 %lcmp.mod191.ls, i64 %xtraiter189.ls, %"struct.std::pair.51"* %B.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split6, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, 1
  br i1 %21, label %16, label %pfor.detach.us.ls.preheader

pfor.cond.cleanup.loopexit.ls:                    ; preds = %pfor.inc.us.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.loopexit.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.loopexit.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.us.ls:                                ; preds = %pfor.detach.us.ls.preheader, %pfor.inc.us.ls
  %__begin.0156.us.ls = phi i64 [ %inc.us.ls, %pfor.inc.us.ls ], [ %__begin.0156.us.ls.ph, %pfor.detach.us.ls.preheader ]
  %48 = mul i64 %__begin.0156.us.ls, %div4.ls
  %49 = and i64 %48, 4294967295
  %50 = sub i64 %n.ls, %49
  %51 = icmp sgt i64 %50, 0
  %smax.ls = select i1 %51, i64 %50, i64 0
  %52 = icmp slt i64 %smax.ls, %div4.ls
  %53 = select i1 %52, i64 %smax.ls, i64 %div4.ls
  %conv.us.ls = trunc i64 %48 to i32
  %add.ptr21.us.ls = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %A.ls, i64 %49
  %add.ptr23.us.ls = getelementptr inbounds i8, i8* %Tmp.ls, i64 %49
  %mul24.us.ls = mul nsw i64 %__begin.0156.us.ls, %m.ls
  %add.ptr25.us.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 0, i64 %mul24.us.ls
  %add.ptr27.us.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 %mul5.ls, i64 %mul24.us.ls
  %counts78.i.us.ls = bitcast i32* %add.ptr25.us.ls to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %counts78.i.us.ls, i8 0, i64 %.ls1, i32 4, i1 false) #2
  %cmp272.i.us.ls = icmp sgt i64 %53, 0
  br i1 %cmp272.i.us.ls, label %for.body4.i.us.preheader.ls, label %for.body17.i.us.preheader.ls

for.body4.i.us.preheader.ls:                      ; preds = %pfor.detach.us.ls
  %xtraiter185.ls = and i64 %53, 1
  %54 = icmp eq i64 %53, 1
  br i1 %54, label %for.body4.i.us.epil.ls, label %for.body4.i.us.preheader.new.ls

for.body4.i.us.preheader.new.ls:                  ; preds = %for.body4.i.us.preheader.ls
  %unroll_iter187.ls = sub i64 %53, %xtraiter185.ls
  br label %for.body4.i.us.ls

for.body4.i.us.ls:                                ; preds = %for.body4.i.us.ls, %for.body4.i.us.preheader.new.ls
  %j.073.i.us.ls = phi i64 [ 0, %for.body4.i.us.preheader.new.ls ], [ %inc11.i.us.1.ls, %for.body4.i.us.ls ]
  %niter188.ls = phi i64 [ %unroll_iter187.ls, %for.body4.i.us.preheader.new.ls ], [ %niter188.nsub.1.ls, %for.body4.i.us.ls ]
  %agg.tmp.sroa.0.0..sroa_idx.i.us.ls = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %add.ptr21.us.ls, i64 %j.073.i.us.ls, i32 0
  %agg.tmp.sroa.0.0.copyload.i.us.ls = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.us.ls, align 8
  %shr.i.i.us.ls = ashr i32 %agg.tmp.sroa.0.0.copyload.i.us.ls, %sh_prom.i.i.ls
  %conv.i.i120.us.ls = sext i32 %shr.i.i.us.ls to i64
  %and.i.i.us.ls = and i64 %conv.i.i120.us.ls, %agg.tmp28.sroa.2.0.copyload.ls
  %conv.i.us.ls = trunc i64 %and.i.i.us.ls to i8
  %arrayidx6.i.us.ls = getelementptr inbounds i8, i8* %add.ptr23.us.ls, i64 %j.073.i.us.ls
  store i8 %conv.i.us.ls, i8* %arrayidx6.i.us.ls, align 1, !tbaa !22
  %conv7.i.us.ls = and i64 %and.i.i.us.ls, 255
  %arrayidx8.i.us.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %conv7.i.us.ls
  %55 = load i32, i32* %arrayidx8.i.us.ls, align 4, !tbaa !59
  %inc9.i.us.ls = add i32 %55, 1
  store i32 %inc9.i.us.ls, i32* %arrayidx8.i.us.ls, align 4, !tbaa !59
  %inc11.i.us.ls = or i64 %j.073.i.us.ls, 1
  %agg.tmp.sroa.0.0..sroa_idx.i.us.1.ls = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %add.ptr21.us.ls, i64 %inc11.i.us.ls, i32 0
  %agg.tmp.sroa.0.0.copyload.i.us.1.ls = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.us.1.ls, align 8
  %shr.i.i.us.1.ls = ashr i32 %agg.tmp.sroa.0.0.copyload.i.us.1.ls, %sh_prom.i.i.ls
  %conv.i.i120.us.1.ls = sext i32 %shr.i.i.us.1.ls to i64
  %and.i.i.us.1.ls = and i64 %conv.i.i120.us.1.ls, %agg.tmp28.sroa.2.0.copyload.ls
  %conv.i.us.1.ls = trunc i64 %and.i.i.us.1.ls to i8
  %arrayidx6.i.us.1.ls = getelementptr inbounds i8, i8* %add.ptr23.us.ls, i64 %inc11.i.us.ls
  store i8 %conv.i.us.1.ls, i8* %arrayidx6.i.us.1.ls, align 1, !tbaa !22
  %conv7.i.us.1.ls = and i64 %and.i.i.us.1.ls, 255
  %arrayidx8.i.us.1.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %conv7.i.us.1.ls
  %56 = load i32, i32* %arrayidx8.i.us.1.ls, align 4, !tbaa !59
  %inc9.i.us.1.ls = add i32 %56, 1
  store i32 %inc9.i.us.1.ls, i32* %arrayidx8.i.us.1.ls, align 4, !tbaa !59
  %inc11.i.us.1.ls = add nuw nsw i64 %j.073.i.us.ls, 2
  %niter188.nsub.1.ls = add i64 %niter188.ls, -2
  %niter188.ncmp.1.ls = icmp eq i64 %niter188.nsub.1.ls, 0
  br i1 %niter188.ncmp.1.ls, label %for.body17.i.us.preheader.loopexit.unr-lcssa.ls, label %for.body4.i.us.ls

for.body17.i.us.preheader.loopexit.unr-lcssa.ls:  ; preds = %for.body4.i.us.ls
  %lcmp.mod186.ls = icmp eq i64 %xtraiter185.ls, 0
  br i1 %lcmp.mod186.ls, label %for.body17.i.us.preheader.ls, label %for.body4.i.us.epil.ls

for.body4.i.us.epil.ls:                           ; preds = %for.body4.i.us.preheader.ls, %for.body17.i.us.preheader.loopexit.unr-lcssa.ls
  %j.073.i.us.unr.ls2 = phi i64 [ %inc11.i.us.1.ls, %for.body17.i.us.preheader.loopexit.unr-lcssa.ls ], [ 0, %for.body4.i.us.preheader.ls ]
  %agg.tmp.sroa.0.0..sroa_idx.i.us.epil.ls = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %add.ptr21.us.ls, i64 %j.073.i.us.unr.ls2, i32 0
  %agg.tmp.sroa.0.0.copyload.i.us.epil.ls = load i32, i32* %agg.tmp.sroa.0.0..sroa_idx.i.us.epil.ls, align 8
  %shr.i.i.us.epil.ls = ashr i32 %agg.tmp.sroa.0.0.copyload.i.us.epil.ls, %sh_prom.i.i.ls
  %conv.i.i120.us.epil.ls = sext i32 %shr.i.i.us.epil.ls to i64
  %and.i.i.us.epil.ls = and i64 %conv.i.i120.us.epil.ls, %agg.tmp28.sroa.2.0.copyload.ls
  %conv.i.us.epil.ls = trunc i64 %and.i.i.us.epil.ls to i8
  %arrayidx6.i.us.epil.ls = getelementptr inbounds i8, i8* %add.ptr23.us.ls, i64 %j.073.i.us.unr.ls2
  store i8 %conv.i.us.epil.ls, i8* %arrayidx6.i.us.epil.ls, align 1, !tbaa !22
  %conv7.i.us.epil.ls = and i64 %and.i.i.us.epil.ls, 255
  %arrayidx8.i.us.epil.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %conv7.i.us.epil.ls
  %57 = load i32, i32* %arrayidx8.i.us.epil.ls, align 4, !tbaa !59
  %inc9.i.us.epil.ls = add i32 %57, 1
  store i32 %inc9.i.us.epil.ls, i32* %arrayidx8.i.us.epil.ls, align 4, !tbaa !59
  br label %for.body17.i.us.preheader.ls

for.body17.i.us.preheader.ls:                     ; preds = %for.body4.i.us.epil.ls, %for.body17.i.us.preheader.loopexit.unr-lcssa.ls, %pfor.detach.us.ls
  br i1 %.ls2, label %for.cond.cleanup16.i.loopexit.us.unr-lcssa.ls, label %for.body17.i.us.ls.preheader

for.body17.i.us.ls.preheader:                     ; preds = %for.body17.i.us.preheader.ls
  br label %for.body17.i.us.ls

for.body17.i.us.ls:                               ; preds = %for.body17.i.us.ls.preheader, %for.body17.i.us.ls
  %i13.071.i.us.ls = phi i64 [ %inc21.i.us.7.ls, %for.body17.i.us.ls ], [ 0, %for.body17.i.us.ls.preheader ]
  %s.070.i.us.ls = phi i32 [ %add.i.us.7.ls, %for.body17.i.us.ls ], [ %conv.us.ls, %for.body17.i.us.ls.preheader ]
  %niter193.ls = phi i64 [ %niter193.nsub.7.ls, %for.body17.i.us.ls ], [ %unroll_iter192.ls, %for.body17.i.us.ls.preheader ]
  %arrayidx18.i.us.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %i13.071.i.us.ls
  %58 = load i32, i32* %arrayidx18.i.us.ls, align 4, !tbaa !59
  %add.i.us.ls = add i32 %58, %s.070.i.us.ls
  %arrayidx19.i.us.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %i13.071.i.us.ls
  store i32 %add.i.us.ls, i32* %arrayidx19.i.us.ls, align 4, !tbaa !59
  %inc21.i.us.ls = or i64 %i13.071.i.us.ls, 1
  %arrayidx18.i.us.1.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.ls
  %59 = load i32, i32* %arrayidx18.i.us.1.ls, align 4, !tbaa !59
  %add.i.us.1.ls = add i32 %59, %add.i.us.ls
  %arrayidx19.i.us.1.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.ls
  store i32 %add.i.us.1.ls, i32* %arrayidx19.i.us.1.ls, align 4, !tbaa !59
  %inc21.i.us.1.ls = or i64 %i13.071.i.us.ls, 2
  %arrayidx18.i.us.2.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.1.ls
  %60 = load i32, i32* %arrayidx18.i.us.2.ls, align 4, !tbaa !59
  %add.i.us.2.ls = add i32 %60, %add.i.us.1.ls
  %arrayidx19.i.us.2.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.1.ls
  store i32 %add.i.us.2.ls, i32* %arrayidx19.i.us.2.ls, align 4, !tbaa !59
  %inc21.i.us.2.ls = or i64 %i13.071.i.us.ls, 3
  %arrayidx18.i.us.3.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.2.ls
  %61 = load i32, i32* %arrayidx18.i.us.3.ls, align 4, !tbaa !59
  %add.i.us.3.ls = add i32 %61, %add.i.us.2.ls
  %arrayidx19.i.us.3.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.2.ls
  store i32 %add.i.us.3.ls, i32* %arrayidx19.i.us.3.ls, align 4, !tbaa !59
  %inc21.i.us.3.ls = or i64 %i13.071.i.us.ls, 4
  %arrayidx18.i.us.4.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.3.ls
  %62 = load i32, i32* %arrayidx18.i.us.4.ls, align 4, !tbaa !59
  %add.i.us.4.ls = add i32 %62, %add.i.us.3.ls
  %arrayidx19.i.us.4.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.3.ls
  store i32 %add.i.us.4.ls, i32* %arrayidx19.i.us.4.ls, align 4, !tbaa !59
  %inc21.i.us.4.ls = or i64 %i13.071.i.us.ls, 5
  %arrayidx18.i.us.5.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.4.ls
  %63 = load i32, i32* %arrayidx18.i.us.5.ls, align 4, !tbaa !59
  %add.i.us.5.ls = add i32 %63, %add.i.us.4.ls
  %arrayidx19.i.us.5.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.4.ls
  store i32 %add.i.us.5.ls, i32* %arrayidx19.i.us.5.ls, align 4, !tbaa !59
  %inc21.i.us.5.ls = or i64 %i13.071.i.us.ls, 6
  %arrayidx18.i.us.6.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.5.ls
  %64 = load i32, i32* %arrayidx18.i.us.6.ls, align 4, !tbaa !59
  %add.i.us.6.ls = add i32 %64, %add.i.us.5.ls
  %arrayidx19.i.us.6.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.5.ls
  store i32 %add.i.us.6.ls, i32* %arrayidx19.i.us.6.ls, align 4, !tbaa !59
  %inc21.i.us.6.ls = or i64 %i13.071.i.us.ls, 7
  %arrayidx18.i.us.7.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %inc21.i.us.6.ls
  %65 = load i32, i32* %arrayidx18.i.us.7.ls, align 4, !tbaa !59
  %add.i.us.7.ls = add i32 %65, %add.i.us.6.ls
  %arrayidx19.i.us.7.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %inc21.i.us.6.ls
  store i32 %add.i.us.7.ls, i32* %arrayidx19.i.us.7.ls, align 4, !tbaa !59
  %inc21.i.us.7.ls = add nuw nsw i64 %i13.071.i.us.ls, 8
  %niter193.nsub.7.ls = add i64 %niter193.ls, -8
  %niter193.ncmp.7.ls = icmp eq i64 %niter193.nsub.7.ls, 0
  br i1 %niter193.ncmp.7.ls, label %for.cond.cleanup16.i.loopexit.us.unr-lcssa.ls, label %for.body17.i.us.ls

for.cond.cleanup16.i.loopexit.us.unr-lcssa.ls:    ; preds = %for.body17.i.us.ls, %for.body17.i.us.preheader.ls
  %i13.071.i.us.unr.ls = phi i64 [ 0, %for.body17.i.us.preheader.ls ], [ %inc21.i.us.7.ls, %for.body17.i.us.ls ]
  %s.070.i.us.unr.ls = phi i32 [ %conv.us.ls, %for.body17.i.us.preheader.ls ], [ %add.i.us.7.ls, %for.body17.i.us.ls ]
  br i1 %lcmp.mod191.ls, label %for.cond.cleanup16.i.loopexit.us.ls, label %for.body17.i.us.epil.ls.preheader

for.body17.i.us.epil.ls.preheader:                ; preds = %for.cond.cleanup16.i.loopexit.us.unr-lcssa.ls
  br label %for.body17.i.us.epil.ls

for.body17.i.us.epil.ls:                          ; preds = %for.body17.i.us.epil.ls.preheader, %for.body17.i.us.epil.ls
  %i13.071.i.us.epil.ls = phi i64 [ %inc21.i.us.epil.ls, %for.body17.i.us.epil.ls ], [ %i13.071.i.us.unr.ls, %for.body17.i.us.epil.ls.preheader ]
  %s.070.i.us.epil.ls = phi i32 [ %add.i.us.epil.ls, %for.body17.i.us.epil.ls ], [ %s.070.i.us.unr.ls, %for.body17.i.us.epil.ls.preheader ]
  %epil.iter190.ls = phi i64 [ %epil.iter190.sub.ls, %for.body17.i.us.epil.ls ], [ %xtraiter189.ls, %for.body17.i.us.epil.ls.preheader ]
  %arrayidx18.i.us.epil.ls = getelementptr inbounds i32, i32* %add.ptr25.us.ls, i64 %i13.071.i.us.epil.ls
  %66 = load i32, i32* %arrayidx18.i.us.epil.ls, align 4, !tbaa !59
  %add.i.us.epil.ls = add i32 %66, %s.070.i.us.epil.ls
  %arrayidx19.i.us.epil.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %i13.071.i.us.epil.ls
  store i32 %add.i.us.epil.ls, i32* %arrayidx19.i.us.epil.ls, align 4, !tbaa !59
  %inc21.i.us.epil.ls = add nuw nsw i64 %i13.071.i.us.epil.ls, 1
  %epil.iter190.sub.ls = add nsw i64 %epil.iter190.ls, -1
  %epil.iter190.cmp.ls = icmp eq i64 %epil.iter190.sub.ls, 0
  br i1 %epil.iter190.cmp.ls, label %for.cond.cleanup16.i.loopexit.us.ls, label %for.body17.i.us.epil.ls, !llvm.loop !601

for.cond.cleanup16.i.loopexit.us.ls:              ; preds = %for.body17.i.us.epil.ls, %for.cond.cleanup16.i.loopexit.us.unr-lcssa.ls
  br i1 %cmp272.i.us.ls, label %for.body27.i.us.ls.preheader, label %pfor.inc.us.ls

for.body27.i.us.ls.preheader:                     ; preds = %for.cond.cleanup16.i.loopexit.us.ls
  br label %for.body27.i.us.ls

for.body27.i.us.ls:                               ; preds = %for.body27.i.us.ls.preheader, %for.body27.i.us.ls
  %j23.068.in.i.us.ls = phi i64 [ %j23.068.i.us.ls, %for.body27.i.us.ls ], [ %53, %for.body27.i.us.ls.preheader ]
  %j23.068.i.us.ls = add nsw i64 %j23.068.in.i.us.ls, -1
  %arrayidx28.i.us.ls = getelementptr inbounds i8, i8* %add.ptr23.us.ls, i64 %j23.068.i.us.ls
  %67 = load i8, i8* %arrayidx28.i.us.ls, align 1, !tbaa !22
  %idxprom29.i.us.ls = zext i8 %67 to i64
  %arrayidx30.i.us.ls = getelementptr inbounds i32, i32* %add.ptr27.us.ls, i64 %idxprom29.i.us.ls
  %68 = load i32, i32* %arrayidx30.i.us.ls, align 4, !tbaa !59
  %dec.i.us.ls = add i32 %68, -1
  store i32 %dec.i.us.ls, i32* %arrayidx30.i.us.ls, align 4, !tbaa !59
  %idxprom32.i.us.ls = zext i32 %dec.i.us.ls to i64
  %first.i.i122.us.ls = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %add.ptr21.us.ls, i64 %j23.068.i.us.ls, i32 0
  %69 = load i32, i32* %first.i.i122.us.ls, align 8, !tbaa !325
  %first2.i.i123.us.ls = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B.ls, i64 %idxprom32.i.us.ls, i32 0
  store i32 %69, i32* %first2.i.i123.us.ls, align 8, !tbaa !325
  %second.i.i124.us.ls = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %add.ptr21.us.ls, i64 %j23.068.i.us.ls, i32 1
  %70 = bitcast %struct.vertex.44** %second.i.i124.us.ls to i64*
  %71 = load i64, i64* %70, align 8, !tbaa !327
  %second3.i.i125.us.ls = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B.ls, i64 %idxprom32.i.us.ls, i32 1
  %72 = bitcast %struct.vertex.44** %second3.i.i125.us.ls to i64*
  store i64 %71, i64* %72, align 8, !tbaa !327
  %cmp25.i.us.ls = icmp sgt i64 %j23.068.in.i.us.ls, 1
  br i1 %cmp25.i.us.ls, label %for.body27.i.us.ls, label %pfor.inc.us.ls

pfor.inc.us.ls:                                   ; preds = %for.body27.i.us.ls, %for.cond.cleanup16.i.loopexit.us.ls
  %73 = icmp ult i64 %__begin.0156.us.ls, %.ls
  %inc.us.ls = add nuw nsw i64 %__begin.0156.us.ls, 1
  br i1 %73, label %pfor.detach.us.ls, label %pfor.cond.cleanup.loopexit.ls
}

; Function Attrs: nounwind stealable uwtable
define internal fastcc void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0__pfor.detach.ls(i64 %indvars.iv.start.ls, i64 %end.ls, i64 %.ls, [256 x i32]* align 1 %BK.ls, float %conv10.ls, i64 %n.ls, float %div.ls, %"struct.std::pair.51"* align 1 %A.ls, %"struct.std::pair.51"* align 1 %B.ls, i8* align 1 %Tmp.ls, i64 %sub.ls) unnamed_addr #15 {
if.then5.ls:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() #2
  %1 = icmp eq %struct.__cilkrts_worker* %0, null
  br i1 %1, label %slowpath.i, label %__cilkrts_enter_frame_1.exit

slowpath.i:                                       ; preds = %if.then5.ls
  %2 = call %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() #2
  br label %__cilkrts_enter_frame_1.exit

__cilkrts_enter_frame_1.exit:                     ; preds = %if.then5.ls, %slowpath.i
  %.sink = phi i32 [ 16777344, %slowpath.i ], [ 16777216, %if.then5.ls ]
  %3 = phi %struct.__cilkrts_worker* [ %2, %slowpath.i ], [ %0, %if.then5.ls ]
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 %.sink, i32* %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %3, i64 0, i32 9
  %6 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %5 acquire, align 8
  %7 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %6, %struct.__cilkrts_stack_frame** %7 release, align 8
  %8 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %3, %struct.__cilkrts_worker** %8 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %5 release, align 8
  %itercount1 = sub i64 %end.ls, %indvars.iv.start.ls
  %9 = icmp ugt i64 %itercount1, %.ls
  br i1 %9, label %.lr.ph, label %pfor.detach.ls.preheader

pfor.detach.ls.preheader:                         ; preds = %.split.split, %__cilkrts_enter_frame_1.exit
  %indvars.iv.ls.ph = phi i64 [ %indvars.iv.start.ls, %__cilkrts_enter_frame_1.exit ], [ %miditerplusone, %.split.split ]
  br label %pfor.detach.ls

.lr.ph:                                           ; preds = %__cilkrts_enter_frame_1.exit
  %10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %11 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  %15 = bitcast [5 x i8*]* %12 to i8*
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %.split.split
  %itercount3 = phi i64 [ %itercount1, %.lr.ph ], [ %itercount, %.split.split ]
  %indvars.iv.ls.dac2 = phi i64 [ %indvars.iv.start.ls, %.lr.ph ], [ %miditerplusone, %.split.split ]
  %halfcount = lshr i64 %itercount3, 1
  %miditer = add nuw nsw i64 %indvars.iv.ls.dac2, %halfcount
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %10, i16* nonnull %11) #2
  %17 = call i8* @llvm.frameaddress(i32 0)
  store volatile i8* %17, i8** %13, align 8
  %18 = call i8* @llvm.stacksave()
  store volatile i8* %18, i8** %14, align 8
  %19 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %15) #23
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.split4, label %.split.split

.split4:                                          ; preds = %16
  call fastcc void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0__pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac2, i64 %miditer, i64 %.ls, [256 x i32]* %BK.ls, float %conv10.ls, i64 %n.ls, float %div.ls, %"struct.std::pair.51"* %A.ls, %"struct.std::pair.51"* %B.ls, i8* %Tmp.ls, i64 %sub.ls)
  br label %.split.split

.split.split:                                     ; preds = %.split4, %16
  %miditerplusone = add nuw nsw i64 %miditer, 1
  %itercount = sub i64 %end.ls, %miditerplusone
  %21 = icmp ugt i64 %itercount, %.ls
  br i1 %21, label %16, label %pfor.detach.ls.preheader

pfor.cond.cleanup.ls:                             ; preds = %cond.end.ls
  %22 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  %23 = load atomic i32, i32* %22 acquire, align 8
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %__cilk_sync_nothrow.exit, label %cilk.sync.savestate.i

cilk.sync.savestate.i:                            ; preds = %pfor.cond.cleanup.ls
  %26 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %27 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 6
  %28 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 7
  call void asm sideeffect "stmxcsr $0\0A\09fnstcw $1", "*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* nonnull %27, i16* nonnull %28) #2
  %29 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5
  %30 = call i8* @llvm.frameaddress(i32 0) #2
  %31 = getelementptr inbounds [5 x i8*], [5 x i8*]* %29, i64 0, i64 0
  store volatile i8* %30, i8** %31, align 8
  %32 = call i8* @llvm.stacksave() #2
  %33 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 5, i64 2
  store volatile i8* %32, i8** %33, align 8
  %34 = bitcast [5 x i8*]* %29 to i8*
  %35 = call i32 @llvm.eh.sjlj.setjmp(i8* nonnull %34) #24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %cilk.sync.runtimecall.i, label %__cilk_sync_nothrow.exit

cilk.sync.runtimecall.i:                          ; preds = %cilk.sync.savestate.i
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_sync_nothrow.exit

__cilk_sync_nothrow.exit:                         ; preds = %pfor.cond.cleanup.ls, %cilk.sync.savestate.i, %cilk.sync.runtimecall.i
  %37 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %38 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %37, i64 0, i32 12, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %8 acquire, align 8
  %42 = bitcast %struct.__cilkrts_stack_frame** %7 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %41, i64 0, i32 9
  %45 = bitcast %struct.__cilkrts_stack_frame** %44 to i64*
  store atomic i64 %43, i64* %45 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %7 release, align 8
  %46 = load atomic i32, i32* %22 acquire, align 8
  %47 = icmp eq i32 %46, 16777216
  br i1 %47, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %__cilk_sync_nothrow.exit
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %__cilk_sync_nothrow.exit, %body.i
  ret void

pfor.detach.ls:                                   ; preds = %pfor.detach.ls.preheader, %cond.end.ls
  %indvars.iv.ls = phi i64 [ %indvars.iv.next.ls.pre-phi, %cond.end.ls ], [ %indvars.iv.ls.ph, %pfor.detach.ls.preheader ]
  %arrayidx12.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 0, i64 %indvars.iv.ls
  %48 = load i32, i32* %arrayidx12.ls, align 4, !tbaa !59
  %conv13.ls = zext i32 %48 to i64
  %cmp14.ls = icmp eq i64 %indvars.iv.ls, 255
  br i1 %cmp14.ls, label %cond.end.ls, label %cond.false.ls

cond.false.ls:                                    ; preds = %pfor.detach.ls
  %49 = add nuw nsw i64 %indvars.iv.ls, 1
  %arrayidx17.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 0, i64 %49
  %50 = load i32, i32* %arrayidx17.ls, align 4, !tbaa !59
  %conv18.ls = zext i32 %50 to i64
  %.pre.ls = uitofp i32 %50 to float
  br label %cond.end.ls

cond.end.ls:                                      ; preds = %pfor.detach.ls, %cond.false.ls
  %indvars.iv.next.ls.pre-phi = phi i64 [ %49, %cond.false.ls ], [ 256, %pfor.detach.ls ]
  %conv26.pre-phi.ls = phi float [ %.pre.ls, %cond.false.ls ], [ %conv10.ls, %pfor.detach.ls ]
  %cond.ls = phi i64 [ %conv18.ls, %cond.false.ls ], [ %n.ls, %pfor.detach.ls ]
  %sub19.ls = sub nsw i64 %cond.ls, %conv13.ls
  %conv20.ls = uitofp i32 %48 to float
  %mul21.ls = fmul fast float %conv20.ls, %div.ls
  %51 = call fast float @llvm.floor.f32(float %mul21.ls) #2
  %conv22.ls = fptosi float %51 to i64
  %add25.ls = add i64 %indvars.iv.next.ls.pre-phi, %conv22.ls
  %mul27.ls = fmul fast float %conv26.pre-phi.ls, %div.ls
  %52 = call fast float @llvm.floor.f32(float %mul27.ls) #2
  %conv29.ls = fptosi float %52 to i64
  %add31.ls = add nuw nsw i64 %indvars.iv.ls, 2
  %add32.ls = sub i64 %add31.ls, %add25.ls
  %sub33.ls = add i64 %add32.ls, %conv29.ls
  %add.ptr.ls = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %A.ls, i64 %conv13.ls
  %add.ptr34.ls = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %B.ls, i64 %conv13.ls
  %add.ptr35.ls = getelementptr inbounds i8, i8* %Tmp.ls, i64 %conv13.ls
  %add.ptr36.ls = getelementptr inbounds [256 x i32], [256 x i32]* %BK.ls, i64 %add25.ls
  call void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0_(%"struct.std::pair.51"* %add.ptr.ls, %"struct.std::pair.51"* %add.ptr34.ls, i8* %add.ptr35.ls, [256 x i32]* %add.ptr36.ls, i64 %sub33.ls, i64 %sub19.ls, i64 %sub.ls)
  %53 = icmp ult i64 %indvars.iv.ls, %end.ls
  br i1 %53, label %pfor.detach.ls, label %pfor.cond.cleanup.ls
}

declare %struct.__cilkrts_worker* @__cilkrts_get_tls_worker() local_unnamed_addr

declare %struct.__cilkrts_worker* @__cilkrts_bind_thread_1() local_unnamed_addr

declare void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame*) local_unnamed_addr

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0__pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac2.cilk, i64 %miditer.cilk, i64 %.ls.cilk, [256 x i32]* align 1 %BK.ls.cilk, float %conv10.ls.cilk, i64 %n.ls.cilk, float %div.ls.cilk, %"struct.std::pair.51"* align 1 %A.ls.cilk, %"struct.std::pair.51"* align 1 %B.ls.cilk, i8* align 1 %Tmp.ls.cilk, i64 %sub.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0__pfor.detach.ls(i64 %indvars.iv.ls.dac2.cilk, i64 %miditer.cilk, i64 %.ls.cilk, [256 x i32]* %BK.ls.cilk, float %conv10.ls.cilk, i64 %n.ls.cilk, float %div.ls.cilk, %"struct.std::pair.51"* %A.ls.cilk, %"struct.std::pair.51"* %B.ls.cilk, i8* %Tmp.ls.cilk, i64 %sub.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: nounwind readnone
declare i8* @llvm.frameaddress(i32) #17

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #2

; Function Attrs: nounwind
declare i32 @llvm.eh.sjlj.setjmp(i8*) #2

declare %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() local_unnamed_addr

declare void @__cilkrts_sync(%struct.__cilkrts_stack_frame*) local_unnamed_addr

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.us.ls_.split.cilk(i64 %__begin.0156.us.ls.dac4.cilk, i64 %miditer.cilk, i64 %div4.ls.cilk, i64 %n.ls.cilk, %"struct.std::pair.51"* nocapture readonly align 1 %A.ls.cilk, i8* nocapture align 1 %Tmp.ls.cilk, i64 %m.ls.cilk, [256 x i32]* nocapture align 1 %BK.ls.cilk, i64 %mul5.ls.cilk, i64 %.ls1.cilk, i32 %sh_prom.i.i.ls.cilk, i64 %agg.tmp28.sroa.2.0.copyload.ls.cilk, i1 %.ls2.cilk, i64 %unroll_iter192.ls.cilk, i1 %lcmp.mod191.ls.cilk, i64 %xtraiter189.ls.cilk, %"struct.std::pair.51"* nocapture align 1 %B.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.us.ls(i64 %__begin.0156.us.ls.dac4.cilk, i64 %miditer.cilk, i64 %div4.ls.cilk, i64 %n.ls.cilk, %"struct.std::pair.51"* %A.ls.cilk, i8* %Tmp.ls.cilk, i64 %m.ls.cilk, [256 x i32]* %BK.ls.cilk, i64 %mul5.ls.cilk, i64 %.ls1.cilk, i32 %sh_prom.i.i.ls.cilk, i64 %agg.tmp28.sroa.2.0.copyload.ls.cilk, i1 %.ls2.cilk, i64 %unroll_iter192.ls.cilk, i1 %lcmp.mod191.ls.cilk, i64 %xtraiter189.ls.cilk, %"struct.std::pair.51"* %B.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.ls_.split.cilk(i64 %__begin.0156.ls.dac2.cilk, i64 %miditer.cilk, i64 %div4.ls.cilk, i64 %n.ls.cilk, %"struct.std::pair.51"* nocapture readonly align 1 %A.ls.cilk, i8* nocapture align 1 %Tmp.ls.cilk, i64 %m.ls.cilk, [256 x i32]* nocapture align 1 %BK.ls.cilk, i64 %mul5.ls.cilk, i32 %sh_prom.i.i.ls.cilk, i64 %agg.tmp28.sroa.2.0.copyload.ls.cilk, %"struct.std::pair.51"* nocapture align 1 %B.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.ls(i64 %__begin.0156.ls.dac2.cilk, i64 %miditer.cilk, i64 %div4.ls.cilk, i64 %n.ls.cilk, %"struct.std::pair.51"* %A.ls.cilk, i8* %Tmp.ls.cilk, i64 %m.ls.cilk, [256 x i32]* %BK.ls.cilk, i64 %mul5.ls.cilk, i32 %sh_prom.i.i.ls.cilk, i64 %agg.tmp28.sroa.2.0.copyload.ls.cilk, %"struct.std::pair.51"* %B.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach.ls_.split.cilk(i64 %__begin.0177.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, [256 x i32]* nocapture readonly align 1 %.ls1.cilk, i32* nocapture align 1 %bucketOffsets.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach.ls(i64 %__begin.0177.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, [256 x i32]* %.ls1.cilk, i32* %bucketOffsets.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach59.ls_.split.cilk(i64 %__begin49.0179.ls.dac3.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %"struct.std::pair.51"* nocapture readonly align 1 %A.ls.cilk, i32* nocapture align 1 %bucketOffsets.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach59.ls(i64 %__begin49.0179.ls.dac3.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %"struct.std::pair.51"* %A.ls.cilk, i32* %bucketOffsets.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach34.ls_.split.cilk(i64 %__begin25.0181.ls.dac3.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i32* nocapture align 1 %bucketOffsets.ls.cilk, i32 %conv40.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach34.ls(i64 %__begin25.0181.ls.dac3.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i32* %bucketOffsets.ls.cilk, i32 %conv40.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach29.ls_.split.cilk(i64 %indvars.iv.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %"struct.std::pair.51"* nocapture readonly align 1 %.ls1.cilk, %struct.vertex.44** nocapture align 1 %S.ls.cilk) unnamed_addr #18 align 2 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach29.ls(i64 %indvars.iv.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %"struct.std::pair.51"* %.ls1.cilk, %struct.vertex.44** %S.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.us.ls_.split.cilk(i64 %indvars.iv97.ls.dac6.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.44** nocapture readonly align 1 %S.ls.cilk, double %add.i.neg.ls.cilk, double %.ls1.cilk, i32 %sub3.i.ls.cilk, double %add9.i.neg.ls.cilk, double %add17.i.neg.ls.cilk, i1 %min.iters.check.ls.cilk, i32 %n.vec.ls.cilk, i1 %cmp.n.ls.cilk, i32 %logdivs.ls.cilk, %"struct.std::pair.51"* nocapture align 1 %.ls2.cilk) unnamed_addr #18 align 2 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.us.ls(i64 %indvars.iv97.ls.dac6.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.44** %S.ls.cilk, double %add.i.neg.ls.cilk, double %.ls1.cilk, i32 %sub3.i.ls.cilk, double %add9.i.neg.ls.cilk, double %add17.i.neg.ls.cilk, i1 %min.iters.check.ls.cilk, i32 %n.vec.ls.cilk, i1 %cmp.n.ls.cilk, i32 %logdivs.ls.cilk, %"struct.std::pair.51"* %.ls2.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.ls_.split.cilk(i64 %indvars.iv101.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.44** nocapture readonly align 1 %S.ls.cilk, %"struct.std::pair.51"* nocapture align 1 %.ls1.cilk) unnamed_addr #18 align 2 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.ls(i64 %indvars.iv101.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.44** %S.ls.cilk, %"struct.std::pair.51"* %.ls1.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2__pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac10.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i32 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i32 %e.ls.cilk, %"struct.std::pair.33"* nocapture readonly align 1 %g.coerce.ls.cilk, i32 %.ls4.cilk, %"struct.std::pair.33"* nocapture align 1 %.ls5.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2__pfor.detach.ls(i64 %indvars.iv.ls.dac10.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i32 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i32 %e.ls.cilk, %"struct.std::pair.33"* %g.coerce.ls.cilk, i32 %.ls4.cilk, %"struct.std::pair.33"* %.ls5.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2__pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac15.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i32 %.ls2.cilk, i64 %.ls3.cilk, i64 %.ls4.cilk, i32 %e.ls.cilk, %struct.vertex.44** nocapture readonly align 1 %g.coerce.ls.cilk, i32 %.ls5.cilk, %"struct.std::pair.33"* nocapture align 1 %.ls6.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2__pfor.detach.ls(i64 %indvars.iv.ls.dac15.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i32 %.ls2.cilk, i64 %.ls3.cilk, i64 %.ls4.cilk, i32 %e.ls.cilk, %struct.vertex.44** %g.coerce.ls.cilk, i32 %.ls5.cilk, %"struct.std::pair.33"* %.ls6.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE5gTreeEPPS5_i_pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.44** nocapture readonly align 1 %vv.ls.cilk, %struct.vertex.44** nocapture align 1 %.ls1.cilk) unnamed_addr #18 align 2 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE5gTreeEPPS5_i_pfor.detach.ls(i64 %indvars.iv.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.44** %vv.ls.cilk, %struct.vertex.44** %.ls1.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_Z3ANNILi10E6vertexI8_point3dIdELi10EEEvPPT0_ii_pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac3.cilk, i64 %miditer.cilk, %struct.vertex.44** nocapture readonly align 1 %.ls1.cilk, %struct.kNearestNeighbor.45* align 8 %T.ls.cilk, i32 %k.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_Z3ANNILi10E6vertexI8_point3dIdELi10EEEvPPT0_ii_pfor.detach.ls(i64 %indvars.iv.ls.dac3.cilk, i64 %miditer.cilk, %struct.vertex.44** %.ls1.cilk, %struct.kNearestNeighbor.45* %T.ls.cilk, i32 %k.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0__pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac2.cilk, i64 %miditer.cilk, i64 %.ls.cilk, [256 x i32]* align 1 %BK.ls.cilk, float %conv10.ls.cilk, i64 %n.ls.cilk, float %div.ls.cilk, %"struct.std::pair.38"* align 1 %A.ls.cilk, %"struct.std::pair.38"* align 1 %B.ls.cilk, i8* align 1 %Tmp.ls.cilk, i64 %sub.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0__pfor.detach.ls(i64 %indvars.iv.ls.dac2.cilk, i64 %miditer.cilk, i64 %.ls.cilk, [256 x i32]* %BK.ls.cilk, float %conv10.ls.cilk, i64 %n.ls.cilk, float %div.ls.cilk, %"struct.std::pair.38"* %A.ls.cilk, %"struct.std::pair.38"* %B.ls.cilk, i8* %Tmp.ls.cilk, i64 %sub.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.us.ls_.split.cilk(i64 %__begin.0156.us.ls.dac4.cilk, i64 %miditer.cilk, i64 %div4.ls.cilk, i64 %n.ls.cilk, %"struct.std::pair.38"* nocapture readonly align 1 %A.ls.cilk, i8* nocapture align 1 %Tmp.ls.cilk, i64 %m.ls.cilk, [256 x i32]* nocapture align 1 %BK.ls.cilk, i64 %mul5.ls.cilk, i64 %.ls1.cilk, i32 %sh_prom.i.i.ls.cilk, i64 %agg.tmp28.sroa.2.0.copyload.ls.cilk, i1 %.ls2.cilk, i64 %unroll_iter192.ls.cilk, i1 %lcmp.mod191.ls.cilk, i64 %xtraiter189.ls.cilk, %"struct.std::pair.38"* nocapture align 1 %B.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.us.ls(i64 %__begin.0156.us.ls.dac4.cilk, i64 %miditer.cilk, i64 %div4.ls.cilk, i64 %n.ls.cilk, %"struct.std::pair.38"* %A.ls.cilk, i8* %Tmp.ls.cilk, i64 %m.ls.cilk, [256 x i32]* %BK.ls.cilk, i64 %mul5.ls.cilk, i64 %.ls1.cilk, i32 %sh_prom.i.i.ls.cilk, i64 %agg.tmp28.sroa.2.0.copyload.ls.cilk, i1 %.ls2.cilk, i64 %unroll_iter192.ls.cilk, i1 %lcmp.mod191.ls.cilk, i64 %xtraiter189.ls.cilk, %"struct.std::pair.38"* %B.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.ls_.split.cilk(i64 %__begin.0156.ls.dac2.cilk, i64 %miditer.cilk, i64 %div4.ls.cilk, i64 %n.ls.cilk, %"struct.std::pair.38"* nocapture readonly align 1 %A.ls.cilk, i8* nocapture align 1 %Tmp.ls.cilk, i64 %m.ls.cilk, [256 x i32]* nocapture align 1 %BK.ls.cilk, i64 %mul5.ls.cilk, i32 %sh_prom.i.i.ls.cilk, i64 %agg.tmp28.sroa.2.0.copyload.ls.cilk, %"struct.std::pair.38"* nocapture align 1 %B.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point3dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.ls(i64 %__begin.0156.ls.dac2.cilk, i64 %miditer.cilk, i64 %div4.ls.cilk, i64 %n.ls.cilk, %"struct.std::pair.38"* %A.ls.cilk, i8* %Tmp.ls.cilk, i64 %m.ls.cilk, [256 x i32]* %BK.ls.cilk, i64 %mul5.ls.cilk, i32 %sh_prom.i.i.ls.cilk, i64 %agg.tmp28.sroa.2.0.copyload.ls.cilk, %"struct.std::pair.38"* %B.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach.ls_.split.cilk(i64 %__begin.0177.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, [256 x i32]* nocapture readonly align 1 %.ls1.cilk, i32* nocapture align 1 %bucketOffsets.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach.ls(i64 %__begin.0177.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, [256 x i32]* %.ls1.cilk, i32* %bucketOffsets.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach59.ls_.split.cilk(i64 %__begin49.0179.ls.dac3.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %"struct.std::pair.38"* nocapture readonly align 1 %A.ls.cilk, i32* nocapture align 1 %bucketOffsets.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach59.ls(i64 %__begin49.0179.ls.dac3.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %"struct.std::pair.38"* %A.ls.cilk, i32* %bucketOffsets.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach34.ls_.split.cilk(i64 %__begin25.0181.ls.dac3.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i32* nocapture align 1 %bucketOffsets.ls.cilk, i32 %conv40.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach34.ls(i64 %__begin25.0181.ls.dac3.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i32* %bucketOffsets.ls.cilk, i32 %conv40.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach29.ls_.split.cilk(i64 %indvars.iv.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %"struct.std::pair.38"* nocapture readonly align 1 %.ls1.cilk, %struct.vertex.29** nocapture align 1 %S.ls.cilk) unnamed_addr #18 align 2 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach29.ls(i64 %indvars.iv.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %"struct.std::pair.38"* %.ls1.cilk, %struct.vertex.29** %S.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.us.ls_.split.cilk(i64 %indvars.iv97.ls.dac6.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.29** nocapture readonly align 1 %S.ls.cilk, double %add.i.neg.ls.cilk, double %.ls1.cilk, i32 %sub3.i.ls.cilk, double %add9.i.neg.ls.cilk, double %add17.i.neg.ls.cilk, i1 %min.iters.check.ls.cilk, i32 %n.vec.ls.cilk, i1 %cmp.n.ls.cilk, i32 %logdivs.ls.cilk, %"struct.std::pair.38"* nocapture align 1 %.ls2.cilk) unnamed_addr #18 align 2 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.us.ls(i64 %indvars.iv97.ls.dac6.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.29** %S.ls.cilk, double %add.i.neg.ls.cilk, double %.ls1.cilk, i32 %sub3.i.ls.cilk, double %add9.i.neg.ls.cilk, double %add17.i.neg.ls.cilk, i1 %min.iters.check.ls.cilk, i32 %n.vec.ls.cilk, i1 %cmp.n.ls.cilk, i32 %logdivs.ls.cilk, %"struct.std::pair.38"* %.ls2.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.ls_.split.cilk(i64 %indvars.iv101.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.29** nocapture readonly align 1 %S.ls.cilk, %"struct.std::pair.38"* nocapture align 1 %.ls1.cilk) unnamed_addr #18 align 2 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.ls(i64 %indvars.iv101.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.29** %S.ls.cilk, %"struct.std::pair.38"* %.ls1.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2__pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac10.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i32 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i32 %e.ls.cilk, %"struct.std::pair.33"* nocapture readonly align 1 %g.coerce.ls.cilk, i32 %.ls4.cilk, %"struct.std::pair.33"* nocapture align 1 %.ls5.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2__pfor.detach.ls(i64 %indvars.iv.ls.dac10.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i32 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i32 %e.ls.cilk, %"struct.std::pair.33"* %g.coerce.ls.cilk, i32 %.ls4.cilk, %"struct.std::pair.33"* %.ls5.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2__pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac15.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i32 %.ls2.cilk, i64 %.ls3.cilk, i64 %.ls4.cilk, i32 %e.ls.cilk, %struct.vertex.29** nocapture readonly align 1 %g.coerce.ls.cilk, i32 %.ls5.cilk, %"struct.std::pair.33"* nocapture align 1 %.ls6.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN8sequence6reduceISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2__pfor.detach.ls(i64 %indvars.iv.ls.dac15.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i32 %.ls2.cilk, i64 %.ls3.cilk, i64 %.ls4.cilk, i32 %e.ls.cilk, %struct.vertex.29** %g.coerce.ls.cilk, i32 %.ls5.cilk, %"struct.std::pair.33"* %.ls6.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE5gTreeEPPS5_i_pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.29** nocapture readonly align 1 %vv.ls.cilk, %struct.vertex.29** nocapture align 1 %.ls1.cilk) unnamed_addr #18 align 2 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE5gTreeEPPS5_i_pfor.detach.ls(i64 %indvars.iv.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.29** %vv.ls.cilk, %struct.vertex.29** %.ls1.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_Z3ANNILi1E6vertexI8_point3dIdELi1EEEvPPT0_ii_pfor.detach.us26.ls_.split.cilk(i64 %indvars.iv.ls.dac11.cilk, i64 %miditer.cilk, %struct.vertex.29** nocapture readonly align 1 %.ls1.cilk, %class.gTreeNode.31* align 1 %call.i.ls.cilk, i64 %.ls2.cilk, i64 %.ls8.cilk, i1 %lcmp.mod85.ls.cilk, i64 %xtraiter84.ls.cilk, i64 %.ls9.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_Z3ANNILi1E6vertexI8_point3dIdELi1EEEvPPT0_ii_pfor.detach.us26.ls(i64 %indvars.iv.ls.dac11.cilk, i64 %miditer.cilk, %struct.vertex.29** %.ls1.cilk, %class.gTreeNode.31* %call.i.ls.cilk, i64 %.ls2.cilk, i64 %.ls8.cilk, i1 %lcmp.mod85.ls.cilk, i64 %xtraiter84.ls.cilk, i64 %.ls9.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_Z3ANNILi1E6vertexI8_point3dIdELi1EEEvPPT0_ii_pfor.detach.ls_.split.cilk(i64 %indvars.iv55.ls.dac3.cilk, i64 %miditer.cilk, %struct.vertex.29** nocapture readonly align 1 %.ls1.cilk, i32 %k.ls.cilk, %class.gTreeNode.31* align 1 %call.i.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_Z3ANNILi1E6vertexI8_point3dIdELi1EEEvPPT0_ii_pfor.detach.ls(i64 %indvars.iv55.ls.dac3.cilk, i64 %miditer.cilk, %struct.vertex.29** %.ls1.cilk, i32 %k.ls.cilk, %class.gTreeNode.31* %call.i.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0__pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac2.cilk, i64 %miditer.cilk, i64 %.ls.cilk, [256 x i32]* align 1 %BK.ls.cilk, float %conv10.ls.cilk, i64 %n.ls.cilk, float %div.ls.cilk, %"struct.std::pair.23"* align 1 %A.ls.cilk, %"struct.std::pair.23"* align 1 %B.ls.cilk, i8* align 1 %Tmp.ls.cilk, i64 %sub.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0__pfor.detach.ls(i64 %indvars.iv.ls.dac2.cilk, i64 %miditer.cilk, i64 %.ls.cilk, [256 x i32]* %BK.ls.cilk, float %conv10.ls.cilk, i64 %n.ls.cilk, float %div.ls.cilk, %"struct.std::pair.23"* %A.ls.cilk, %"struct.std::pair.23"* %B.ls.cilk, i8* %Tmp.ls.cilk, i64 %sub.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.us.ls_.split.cilk(i64 %__begin.0156.us.ls.dac4.cilk, i64 %miditer.cilk, i64 %div4.ls.cilk, i64 %n.ls.cilk, %"struct.std::pair.23"* nocapture readonly align 1 %A.ls.cilk, i8* nocapture align 1 %Tmp.ls.cilk, i64 %m.ls.cilk, [256 x i32]* nocapture align 1 %BK.ls.cilk, i64 %mul5.ls.cilk, i64 %.ls1.cilk, i32 %sh_prom.i.i.ls.cilk, i64 %agg.tmp28.sroa.2.0.copyload.ls.cilk, i1 %.ls2.cilk, i64 %unroll_iter192.ls.cilk, i1 %lcmp.mod191.ls.cilk, i64 %xtraiter189.ls.cilk, %"struct.std::pair.23"* nocapture align 1 %B.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.us.ls(i64 %__begin.0156.us.ls.dac4.cilk, i64 %miditer.cilk, i64 %div4.ls.cilk, i64 %n.ls.cilk, %"struct.std::pair.23"* %A.ls.cilk, i8* %Tmp.ls.cilk, i64 %m.ls.cilk, [256 x i32]* %BK.ls.cilk, i64 %mul5.ls.cilk, i64 %.ls1.cilk, i32 %sh_prom.i.i.ls.cilk, i64 %agg.tmp28.sroa.2.0.copyload.ls.cilk, i1 %.ls2.cilk, i64 %unroll_iter192.ls.cilk, i1 %lcmp.mod191.ls.cilk, i64 %xtraiter189.ls.cilk, %"struct.std::pair.23"* %B.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.ls_.split.cilk(i64 %__begin.0156.ls.dac2.cilk, i64 %miditer.cilk, i64 %div4.ls.cilk, i64 %n.ls.cilk, %"struct.std::pair.23"* nocapture readonly align 1 %A.ls.cilk, i8* nocapture align 1 %Tmp.ls.cilk, i64 %m.ls.cilk, [256 x i32]* nocapture align 1 %BK.ls.cilk, i64 %mul5.ls.cilk, i32 %sh_prom.i.i.ls.cilk, i64 %agg.tmp28.sroa.2.0.copyload.ls.cilk, %"struct.std::pair.23"* nocapture align 1 %B.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi10EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.ls(i64 %__begin.0156.ls.dac2.cilk, i64 %miditer.cilk, i64 %div4.ls.cilk, i64 %n.ls.cilk, %"struct.std::pair.23"* %A.ls.cilk, i8* %Tmp.ls.cilk, i64 %m.ls.cilk, [256 x i32]* %BK.ls.cilk, i64 %mul5.ls.cilk, i32 %sh_prom.i.i.ls.cilk, i64 %agg.tmp28.sroa.2.0.copyload.ls.cilk, %"struct.std::pair.23"* %B.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach.ls_.split.cilk(i64 %__begin.0177.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, [256 x i32]* nocapture readonly align 1 %.ls1.cilk, i32* nocapture align 1 %bucketOffsets.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach.ls(i64 %__begin.0177.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, [256 x i32]* %.ls1.cilk, i32* %bucketOffsets.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach59.ls_.split.cilk(i64 %__begin49.0179.ls.dac3.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %"struct.std::pair.23"* nocapture readonly align 1 %A.ls.cilk, i32* nocapture align 1 %bucketOffsets.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach59.ls(i64 %__begin49.0179.ls.dac3.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %"struct.std::pair.23"* %A.ls.cilk, i32* %bucketOffsets.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach34.ls_.split.cilk(i64 %__begin25.0181.ls.dac3.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i32* nocapture align 1 %bucketOffsets.ls.cilk, i32 %conv40.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach34.ls(i64 %__begin25.0181.ls.dac3.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i32* %bucketOffsets.ls.cilk, i32 %conv40.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach30.ls_.split.cilk(i64 %indvars.iv.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %"struct.std::pair.23"* nocapture readonly align 1 %.ls1.cilk, %struct.vertex.16** nocapture align 1 %S.ls.cilk) unnamed_addr #18 align 2 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach30.ls(i64 %indvars.iv.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %"struct.std::pair.23"* %.ls1.cilk, %struct.vertex.16** %S.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.us.ls_.split.cilk(i64 %indvars.iv90.ls.dac8.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.16** nocapture readonly align 1 %S.ls.cilk, double %add.i.neg.ls.cilk, double %.ls1.cilk, i32 %sub3.i.ls.cilk, double %add9.i.neg.ls.cilk, i1 %min.iters.check.ls.cilk, i32 %n.vec.ls.cilk, i1 %cmp.n.ls.cilk, i32 %logdivs.ls.cilk, %"struct.std::pair.23"* nocapture align 1 %.ls2.cilk) unnamed_addr #18 align 2 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.us.ls(i64 %indvars.iv90.ls.dac8.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.16** %S.ls.cilk, double %add.i.neg.ls.cilk, double %.ls1.cilk, i32 %sub3.i.ls.cilk, double %add9.i.neg.ls.cilk, i1 %min.iters.check.ls.cilk, i32 %n.vec.ls.cilk, i1 %cmp.n.ls.cilk, i32 %logdivs.ls.cilk, %"struct.std::pair.23"* %.ls2.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.ls_.split.cilk(i64 %indvars.iv94.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.16** nocapture readonly align 1 %S.ls.cilk, %"struct.std::pair.23"* nocapture align 1 %.ls1.cilk) unnamed_addr #18 align 2 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.ls(i64 %indvars.iv94.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.16** %S.ls.cilk, %"struct.std::pair.23"* %.ls1.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2__pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac11.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i32 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i32 %e.ls.cilk, %"struct.std::pair"* nocapture readonly align 1 %g.coerce.ls.cilk, %"struct.std::pair"* nocapture align 1 %.ls4.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2__pfor.detach.ls(i64 %indvars.iv.ls.dac11.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i32 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i32 %e.ls.cilk, %"struct.std::pair"* %g.coerce.ls.cilk, %"struct.std::pair"* %.ls4.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2__pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac11.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i32 %.ls2.cilk, i64 %.ls3.cilk, i64 %.ls4.cilk, i32 %e.ls.cilk, %struct.vertex.16** nocapture readonly align 1 %g.coerce.ls.cilk, i32 %.ls5.cilk, %"struct.std::pair"* nocapture align 1 %.ls6.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2__pfor.detach.ls(i64 %indvars.iv.ls.dac11.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i32 %.ls2.cilk, i64 %.ls3.cilk, i64 %.ls4.cilk, i32 %e.ls.cilk, %struct.vertex.16** %g.coerce.ls.cilk, i32 %.ls5.cilk, %"struct.std::pair"* %.ls6.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE5gTreeEPPS5_i_pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.16** nocapture readonly align 1 %vv.ls.cilk, %struct.vertex.16** nocapture align 1 %.ls1.cilk) unnamed_addr #18 align 2 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE5gTreeEPPS5_i_pfor.detach.ls(i64 %indvars.iv.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.16** %vv.ls.cilk, %struct.vertex.16** %.ls1.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_Z3ANNILi10E6vertexI8_point2dIdELi10EEEvPPT0_ii_pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac3.cilk, i64 %miditer.cilk, %struct.vertex.16** nocapture readonly align 1 %.ls1.cilk, %struct.kNearestNeighbor.17* align 8 %T.ls.cilk, i32 %k.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_Z3ANNILi10E6vertexI8_point2dIdELi10EEEvPPT0_ii_pfor.detach.ls(i64 %indvars.iv.ls.dac3.cilk, i64 %miditer.cilk, %struct.vertex.16** %.ls1.cilk, %struct.kNearestNeighbor.17* %T.ls.cilk, i32 %k.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN8sequence4packIclNS_4getAIclEEEE4_seqIT_EPS4_PbT0_S8_T1__pfor.detach48.ls_.split.cilk(i64 %__begin39.0220.ls.dac15.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i8* nocapture readonly align 1 %f.coerce.ls.cilk, i8* align 1 %Fl.ls.cilk, i64 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %.ls4.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i64* nocapture readonly align 1 %.ls5.cilk, i8* align 1 %Out.addr.0.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN8sequence4packIclNS_4getAIclEEEE4_seqIT_EPS4_PbT0_S8_T1__pfor.detach48.ls(i64 %__begin39.0220.ls.dac15.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i8* %f.coerce.ls.cilk, i8* %Fl.ls.cilk, i64 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %.ls4.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i64* %.ls5.cilk, i8* %Out.addr.0.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN8sequence4packIclNS_4getAIclEEEE4_seqIT_EPS4_PbT0_S8_T1__pfor.detach.ls_.split.cilk(i64 %__begin.0222.ls.dac14.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i8* align 1 %Fl.ls.cilk, i64* nocapture align 1 %.ls4.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN8sequence4packIclNS_4getAIclEEEE4_seqIT_EPS4_PbT0_S8_T1__pfor.detach.ls(i64 %__begin.0222.ls.dac14.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i8* %Fl.ls.cilk, i64* %.ls4.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7benchIO13arrayToStringIiEE4_seqIcEPT_l_pfor.detach.i.ls_.split.cilk(i64 %__begin.028.i.ls.dac3.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i8* nocapture readonly align 1 %call9.ls.cilk, i8* nocapture align 1 %call1.i.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7benchIO13arrayToStringIiEE4_seqIcEPT_l_pfor.detach.i.ls(i64 %__begin.028.i.ls.dac3.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i8* %call9.ls.cilk, i8* %call1.i.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7benchIO13arrayToStringIiEE4_seqIcEPT_l_pfor.detach44.ls_.split.cilk(i64 %__begin34.0129.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64* nocapture readonly align 1 %.ls1.cilk, i8* nocapture align 1 %call9.ls.cilk, i32* nocapture readonly align 1 %A.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7benchIO13arrayToStringIiEE4_seqIcEPT_l_pfor.detach44.ls(i64 %__begin34.0129.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64* %.ls1.cilk, i8* %call9.ls.cilk, i32* %A.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7benchIO13arrayToStringIiEE4_seqIcEPT_l_pfor.detach21.ls_.split.cilk(i64 %__begin12.0131.ls.dac3.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i8* nocapture align 1 %call9.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7benchIO13arrayToStringIiEE4_seqIcEPT_l_pfor.detach21.ls(i64 %__begin12.0131.ls.dac3.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i8* %call9.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7benchIO13arrayToStringIiEE4_seqIcEPT_l_pfor.detach.ls_.split.cilk(i64 %__begin.0133.ls.dac3.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64* nocapture align 1 %.ls1.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7benchIO13arrayToStringIiEE4_seqIcEPT_l_pfor.detach.ls(i64 %__begin.0133.ls.dac3.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64* %.ls1.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN8sequence4scanIilN5utils4minFIiEENS_4getAIilEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.us.ls_.split.cilk(i64 %__begin46.0211.us.ls.dac13.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %.ls4.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i32* nocapture readonly align 1 %.ls5.cilk, i1 zeroext %back.ls.cilk, i32* nocapture readonly align 1 %g.coerce.ls.cilk, i32* nocapture align 1 %Out.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN8sequence4scanIilN5utils4minFIiEENS_4getAIilEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.us.ls(i64 %__begin46.0211.us.ls.dac13.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %.ls4.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i32* %.ls5.cilk, i1 %back.ls.cilk, i32* %g.coerce.ls.cilk, i32* %Out.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN8sequence4scanIilN5utils4minFIiEENS_4getAIilEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.ls_.split.cilk(i64 %__begin46.0211.ls.dac13.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %.ls4.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i32* nocapture readonly align 1 %.ls5.cilk, i1 zeroext %back.ls.cilk, i32* nocapture readonly align 1 %g.coerce.ls.cilk, i32* nocapture align 1 %Out.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN8sequence4scanIilN5utils4minFIiEENS_4getAIilEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.ls(i64 %__begin46.0211.ls.dac13.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %.ls4.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i32* %.ls5.cilk, i1 %back.ls.cilk, i32* %g.coerce.ls.cilk, i32* %Out.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN8sequence4scanIilN5utils4minFIiEENS_4getAIilEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach.ls_.split.cilk(i64 %__begin.0213.ls.dac9.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i32* nocapture readonly align 1 %g.coerce.ls.cilk, i32* nocapture align 1 %.ls4.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN8sequence4scanIilN5utils4minFIiEENS_4getAIilEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach.ls(i64 %__begin.0213.ls.dac9.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i32* %g.coerce.ls.cilk, i32* %.ls4.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN8sequence4scanIjlN5utils4addFIjEENS_4getAIjlEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.us.ls_.split.cilk(i64 %__begin46.0206.us.ls.dac13.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %.ls4.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i32* nocapture readonly align 1 %.ls5.cilk, i1 zeroext %back.ls.cilk, i32* nocapture readonly align 1 %g.coerce.ls.cilk, i32* nocapture align 1 %Out.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN8sequence4scanIjlN5utils4addFIjEENS_4getAIjlEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.us.ls(i64 %__begin46.0206.us.ls.dac13.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %.ls4.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i32* %.ls5.cilk, i1 %back.ls.cilk, i32* %g.coerce.ls.cilk, i32* %Out.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN8sequence4scanIjlN5utils4addFIjEENS_4getAIjlEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.ls_.split.cilk(i64 %__begin46.0206.ls.dac13.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %.ls4.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i32* nocapture readonly align 1 %.ls5.cilk, i1 zeroext %back.ls.cilk, i32* nocapture readonly align 1 %g.coerce.ls.cilk, i32* nocapture align 1 %Out.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN8sequence4scanIjlN5utils4addFIjEENS_4getAIjlEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.ls(i64 %__begin46.0206.ls.dac13.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %.ls4.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i32* %.ls5.cilk, i1 %back.ls.cilk, i32* %g.coerce.ls.cilk, i32* %Out.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN8sequence4scanIjlN5utils4addFIjEENS_4getAIjlEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach.ls_.split.cilk(i64 %__begin.0208.ls.dac13.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i32* nocapture readonly align 1 %g.coerce.ls.cilk, i32* nocapture align 1 %.ls4.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN8sequence4scanIjlN5utils4addFIjEENS_4getAIjlEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach.ls(i64 %__begin.0208.ls.dac13.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i32* %g.coerce.ls.cilk, i32* %.ls4.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0__pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac2.cilk, i64 %miditer.cilk, i64 %.ls.cilk, [256 x i32]* align 1 %BK.ls.cilk, float %conv10.ls.cilk, i64 %n.ls.cilk, float %div.ls.cilk, %"struct.std::pair.6"* align 1 %A.ls.cilk, %"struct.std::pair.6"* align 1 %B.ls.cilk, i8* align 1 %Tmp.ls.cilk, i64 %sub.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7intSort16radixLoopTopDownISt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEjEEvPT_SC_PhPA256_T1_lllT0__pfor.detach.ls(i64 %indvars.iv.ls.dac2.cilk, i64 %miditer.cilk, i64 %.ls.cilk, [256 x i32]* %BK.ls.cilk, float %conv10.ls.cilk, i64 %n.ls.cilk, float %div.ls.cilk, %"struct.std::pair.6"* %A.ls.cilk, %"struct.std::pair.6"* %B.ls.cilk, i8* %Tmp.ls.cilk, i64 %sub.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.us.ls_.split.cilk(i64 %__begin.0156.us.ls.dac4.cilk, i64 %miditer.cilk, i64 %div4.ls.cilk, i64 %n.ls.cilk, %"struct.std::pair.6"* nocapture readonly align 1 %A.ls.cilk, i8* nocapture align 1 %Tmp.ls.cilk, i64 %m.ls.cilk, [256 x i32]* nocapture align 1 %BK.ls.cilk, i64 %mul5.ls.cilk, i64 %.ls1.cilk, i32 %sh_prom.i.i.ls.cilk, i64 %agg.tmp28.sroa.2.0.copyload.ls.cilk, i1 %.ls2.cilk, i64 %unroll_iter192.ls.cilk, i1 %lcmp.mod191.ls.cilk, i64 %xtraiter189.ls.cilk, %"struct.std::pair.6"* nocapture align 1 %B.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.us.ls(i64 %__begin.0156.us.ls.dac4.cilk, i64 %miditer.cilk, i64 %div4.ls.cilk, i64 %n.ls.cilk, %"struct.std::pair.6"* %A.ls.cilk, i8* %Tmp.ls.cilk, i64 %m.ls.cilk, [256 x i32]* %BK.ls.cilk, i64 %mul5.ls.cilk, i64 %.ls1.cilk, i32 %sh_prom.i.i.ls.cilk, i64 %agg.tmp28.sroa.2.0.copyload.ls.cilk, i1 %.ls2.cilk, i64 %unroll_iter192.ls.cilk, i1 %lcmp.mod191.ls.cilk, i64 %xtraiter189.ls.cilk, %"struct.std::pair.6"* %B.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.ls_.split.cilk(i64 %__begin.0156.ls.dac2.cilk, i64 %miditer.cilk, i64 %div4.ls.cilk, i64 %n.ls.cilk, %"struct.std::pair.6"* nocapture readonly align 1 %A.ls.cilk, i8* nocapture align 1 %Tmp.ls.cilk, i64 %m.ls.cilk, [256 x i32]* nocapture align 1 %BK.ls.cilk, i64 %mul5.ls.cilk, i32 %sh_prom.i.i.ls.cilk, i64 %agg.tmp28.sroa.2.0.copyload.ls.cilk, %"struct.std::pair.6"* nocapture align 1 %B.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7intSort9radixStepISt4pairIiP6vertexI8_point2dIdELi1EEENS_5eBitsIS7_N5utils6firstFIiS6_EEEEjEEvPT_SE_PhPA256_T1_lllbT0__pfor.detach.ls(i64 %__begin.0156.ls.dac2.cilk, i64 %miditer.cilk, i64 %div4.ls.cilk, i64 %n.ls.cilk, %"struct.std::pair.6"* %A.ls.cilk, i8* %Tmp.ls.cilk, i64 %m.ls.cilk, [256 x i32]* %BK.ls.cilk, i64 %mul5.ls.cilk, i32 %sh_prom.i.i.ls.cilk, i64 %agg.tmp28.sroa.2.0.copyload.ls.cilk, %"struct.std::pair.6"* %B.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach.ls_.split.cilk(i64 %__begin.0177.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, [256 x i32]* nocapture readonly align 1 %.ls1.cilk, i32* nocapture align 1 %bucketOffsets.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach.ls(i64 %__begin.0177.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, [256 x i32]* %.ls1.cilk, i32* %bucketOffsets.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach59.ls_.split.cilk(i64 %__begin49.0179.ls.dac3.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %"struct.std::pair.6"* nocapture readonly align 1 %A.ls.cilk, i32* nocapture align 1 %bucketOffsets.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach59.ls(i64 %__begin49.0179.ls.dac3.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %"struct.std::pair.6"* %A.ls.cilk, i32* %bucketOffsets.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach34.ls_.split.cilk(i64 %__begin25.0181.ls.dac3.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i32* nocapture align 1 %bucketOffsets.ls.cilk, i32 %conv40.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7intSort6iSortXIjSt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEiEEvPT0_PT2_llbPcT1__pfor.detach34.ls(i64 %__begin25.0181.ls.dac3.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i32* %bucketOffsets.ls.cilk, i32 %conv40.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach30.ls_.split.cilk(i64 %indvars.iv.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %"struct.std::pair.6"* nocapture readonly align 1 %.ls1.cilk, %struct.vertex** nocapture align 1 %S.ls.cilk) unnamed_addr #18 align 2 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach30.ls(i64 %indvars.iv.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %"struct.std::pair.6"* %.ls1.cilk, %struct.vertex** %S.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.us.ls_.split.cilk(i64 %indvars.iv90.ls.dac8.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex** nocapture readonly align 1 %S.ls.cilk, double %add.i.neg.ls.cilk, double %.ls1.cilk, i32 %sub3.i.ls.cilk, double %add9.i.neg.ls.cilk, i1 %min.iters.check.ls.cilk, i32 %n.vec.ls.cilk, i1 %cmp.n.ls.cilk, i32 %logdivs.ls.cilk, %"struct.std::pair.6"* nocapture align 1 %.ls2.cilk) unnamed_addr #18 align 2 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.us.ls(i64 %indvars.iv90.ls.dac8.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex** %S.ls.cilk, double %add.i.neg.ls.cilk, double %.ls1.cilk, i32 %sub3.i.ls.cilk, double %add9.i.neg.ls.cilk, i1 %min.iters.check.ls.cilk, i32 %n.vec.ls.cilk, i1 %cmp.n.ls.cilk, i32 %logdivs.ls.cilk, %"struct.std::pair.6"* %.ls2.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.ls_.split.cilk(i64 %indvars.iv94.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex** nocapture readonly align 1 %S.ls.cilk, %"struct.std::pair.6"* nocapture align 1 %.ls1.cilk) unnamed_addr #18 align 2 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE13sortBlocksBigEPPS5_iiidS1_Pi_pfor.detach.ls(i64 %indvars.iv94.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex** %S.ls.cilk, %"struct.std::pair.6"* %.ls1.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2__pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac11.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i32 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i32 %e.ls.cilk, %"struct.std::pair"* nocapture readonly align 1 %g.coerce.ls.cilk, %"struct.std::pair"* nocapture align 1 %.ls4.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2__pfor.detach.ls(i64 %indvars.iv.ls.dac11.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i32 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i32 %e.ls.cilk, %"struct.std::pair"* %g.coerce.ls.cilk, %"struct.std::pair"* %.ls4.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2__pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac11.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i32 %.ls2.cilk, i64 %.ls3.cilk, i64 %.ls4.cilk, i32 %e.ls.cilk, %struct.vertex** nocapture readonly align 1 %g.coerce.ls.cilk, i32 %.ls5.cilk, %"struct.std::pair"* nocapture align 1 %.ls6.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN8sequence6reduceISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2__pfor.detach.ls(i64 %indvars.iv.ls.dac11.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i32 %.ls2.cilk, i64 %.ls3.cilk, i64 %.ls4.cilk, i32 %e.ls.cilk, %struct.vertex** %g.coerce.ls.cilk, i32 %.ls5.cilk, %"struct.std::pair"* %.ls6.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE5gTreeEPPS5_i_pfor.detach.ls_.split.cilk(i64 %indvars.iv.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex** nocapture readonly align 1 %vv.ls.cilk, %struct.vertex** nocapture align 1 %.ls1.cilk) unnamed_addr #18 align 2 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE5gTreeEPPS5_i_pfor.detach.ls(i64 %indvars.iv.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex** %vv.ls.cilk, %struct.vertex** %.ls1.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_Z3ANNILi1E6vertexI8_point2dIdELi1EEEvPPT0_ii_pfor.detach.us26.ls_.split.cilk(i64 %indvars.iv.ls.dac11.cilk, i64 %miditer.cilk, %struct.vertex** nocapture readonly align 1 %.ls1.cilk, %class.gTreeNode* align 1 %call.i.ls.cilk, i64 %.ls2.cilk, i64 %.ls8.cilk, i1 %lcmp.mod85.ls.cilk, i64 %xtraiter84.ls.cilk, i64 %.ls9.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_Z3ANNILi1E6vertexI8_point2dIdELi1EEEvPPT0_ii_pfor.detach.us26.ls(i64 %indvars.iv.ls.dac11.cilk, i64 %miditer.cilk, %struct.vertex** %.ls1.cilk, %class.gTreeNode* %call.i.ls.cilk, i64 %.ls2.cilk, i64 %.ls8.cilk, i1 %lcmp.mod85.ls.cilk, i64 %xtraiter84.ls.cilk, i64 %.ls9.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_Z3ANNILi1E6vertexI8_point2dIdELi1EEEvPPT0_ii_pfor.detach.ls_.split.cilk(i64 %indvars.iv55.ls.dac3.cilk, i64 %miditer.cilk, %struct.vertex** nocapture readonly align 1 %.ls1.cilk, i32 %k.ls.cilk, %class.gTreeNode* align 1 %call.i.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_Z3ANNILi1E6vertexI8_point2dIdELi1EEEvPPT0_ii_pfor.detach.ls(i64 %indvars.iv55.ls.dac3.cilk, i64 %miditer.cilk, %struct.vertex** %.ls1.cilk, i32 %k.ls.cilk, %class.gTreeNode* %call.i.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN8sequence4scanIllN5utils4addFIlEENS_4getAIllEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.us.ls_.split.cilk(i64 %__begin46.0206.us.ls.dac13.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %.ls4.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i64* nocapture readonly align 1 %.ls5.cilk, i1 zeroext %back.ls.cilk, i64* nocapture readonly align 1 %g.coerce.ls.cilk, i64* nocapture align 1 %Out.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN8sequence4scanIllN5utils4addFIlEENS_4getAIllEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.us.ls(i64 %__begin46.0206.us.ls.dac13.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %.ls4.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i64* %.ls5.cilk, i1 %back.ls.cilk, i64* %g.coerce.ls.cilk, i64* %Out.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN8sequence4scanIllN5utils4addFIlEENS_4getAIllEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.ls_.split.cilk(i64 %__begin46.0206.ls.dac13.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %.ls4.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i64* nocapture readonly align 1 %.ls5.cilk, i1 zeroext %back.ls.cilk, i64* nocapture readonly align 1 %g.coerce.ls.cilk, i64* nocapture align 1 %Out.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN8sequence4scanIllN5utils4addFIlEENS_4getAIllEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach55.ls(i64 %__begin46.0206.ls.dac13.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %.ls4.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i64* %.ls5.cilk, i1 %back.ls.cilk, i64* %g.coerce.ls.cilk, i64* %Out.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN8sequence4scanIllN5utils4addFIlEENS_4getAIllEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach.ls_.split.cilk(i64 %__begin.0208.ls.dac13.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i64* nocapture readonly align 1 %g.coerce.ls.cilk, i64* nocapture align 1 %.ls4.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN8sequence4scanIllN5utils4addFIlEENS_4getAIllEEEET_PS6_T0_S8_T1_T2_S6_bb_pfor.detach.ls(i64 %__begin.0208.ls.dac13.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i64* %g.coerce.ls.cilk, i64* %.ls4.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN8sequence4packIllN5utils9identityFIlEEEE4_seqIT_EPS5_PbT0_S9_T1__pfor.detach47.ls_.split.cilk(i64 %__begin38.0218.ls.dac15.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i8* align 1 %Fl.ls.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i64* nocapture readonly align 1 %.ls1.cilk, i64* align 1 %Out.addr.0.ls.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %.ls4.cilk, i64 %.ls5.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN8sequence4packIllN5utils9identityFIlEEEE4_seqIT_EPS5_PbT0_S9_T1__pfor.detach47.ls(i64 %__begin38.0218.ls.dac15.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i8* %Fl.ls.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i64* %.ls1.cilk, i64* %Out.addr.0.ls.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %.ls4.cilk, i64 %.ls5.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN8sequence4packIllN5utils9identityFIlEEEE4_seqIT_EPS5_PbT0_S9_T1__pfor.detach.ls_.split.cilk(i64 %__begin.0220.ls.dac14.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i8* align 1 %Fl.ls.cilk, i64* nocapture align 1 %.ls4.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN8sequence4packIllN5utils9identityFIlEEEE4_seqIT_EPS5_PbT0_S9_T1__pfor.detach.ls(i64 %__begin.0220.ls.dac14.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64 %.ls1.cilk, i64 %.ls2.cilk, i64 %.ls3.cilk, i64 %s.ls.cilk, i64 %e.ls.cilk, i8* %Fl.ls.cilk, i64* %.ls4.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_Z13timeNeighborsILi10E8_point3dIdEEvPT0_iiiPc_pfor.detach33.us.ls_.split.cilk(i64 %indvars.iv129.ls.dac6.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.44** nocapture readonly align 1 %.ls1.cilk, i1 %.ls2.cilk, i64 %unroll_iter.ls.cilk, i32* nocapture align 1 %.ls3.cilk, i1 %lcmp.mod.ls.cilk, i64 %xtraiter.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_Z13timeNeighborsILi10E8_point3dIdEEvPT0_iiiPc_pfor.detach33.us.ls(i64 %indvars.iv129.ls.dac6.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.44** %.ls1.cilk, i1 %.ls2.cilk, i64 %unroll_iter.ls.cilk, i32* %.ls3.cilk, i1 %lcmp.mod.ls.cilk, i64 %xtraiter.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_Z13timeNeighborsILi10E8_point3dIdEEvPT0_iiiPc_pfor.detach.ls_.split.cilk(i64 %indvars.iv135.ls.dac5.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.44* align 1 %.ls1.cilk, %class._point3d* nocapture readonly align 1 %pts.ls.cilk, %struct.vertex.44** nocapture align 1 %.ls2.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_Z13timeNeighborsILi10E8_point3dIdEEvPT0_iiiPc_pfor.detach.ls(i64 %indvars.iv135.ls.dac5.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.44* %.ls1.cilk, %class._point3d* %pts.ls.cilk, %struct.vertex.44** %.ls2.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_Z13timeNeighborsILi1E8_point3dIdEEvPT0_iiiPc_pfor.detach33.us.ls_.split.cilk(i64 %indvars.iv131.ls.dac6.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.29** nocapture readonly align 1 %.ls1.cilk, i1 %.ls2.cilk, i64 %unroll_iter.ls.cilk, i32* nocapture align 1 %.ls3.cilk, i1 %lcmp.mod.ls.cilk, i64 %xtraiter.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_Z13timeNeighborsILi1E8_point3dIdEEvPT0_iiiPc_pfor.detach33.us.ls(i64 %indvars.iv131.ls.dac6.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.29** %.ls1.cilk, i1 %.ls2.cilk, i64 %unroll_iter.ls.cilk, i32* %.ls3.cilk, i1 %lcmp.mod.ls.cilk, i64 %xtraiter.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_Z13timeNeighborsILi1E8_point3dIdEEvPT0_iiiPc_pfor.detach.ls_.split.cilk(i64 %indvars.iv137.ls.dac5.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.29* align 1 %.ls1.cilk, %class._point3d* nocapture readonly align 1 %pts.ls.cilk, %struct.vertex.29** nocapture align 1 %.ls2.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_Z13timeNeighborsILi1E8_point3dIdEEvPT0_iiiPc_pfor.detach.ls(i64 %indvars.iv137.ls.dac5.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.29* %.ls1.cilk, %class._point3d* %pts.ls.cilk, %struct.vertex.29** %.ls2.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7benchIO18readPointsFromFileI8_point3dIdEEE4_seqIT_EPc_pfor.detach21.i.ls_.split.cilk(i64 %__begin11.066.i.ls.dac5.cilk, i64 %miditer.cilk, i64 %.ls.cilk, double* nocapture readonly align 1 %.ls1.cilk, %class._point3d* nocapture align 1 %.ls2.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7benchIO18readPointsFromFileI8_point3dIdEEE4_seqIT_EPc_pfor.detach21.i.ls(i64 %__begin11.066.i.ls.dac5.cilk, i64 %miditer.cilk, i64 %.ls.cilk, double* %.ls1.cilk, %class._point3d* %.ls2.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7benchIO18readPointsFromFileI8_point3dIdEEE4_seqIT_EPc_pfor.detach.i.ls_.split.cilk(i64 %__begin.068.i.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i8** nocapture readonly align 1 %add.ptr.ls.cilk, double* nocapture align 1 %.ls1.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7benchIO18readPointsFromFileI8_point3dIdEEE4_seqIT_EPc_pfor.detach.i.ls(i64 %__begin.068.i.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i8** %add.ptr.ls.cilk, double* %.ls1.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_Z13timeNeighborsILi10E8_point2dIdEEvPT0_iiiPc_pfor.detach33.us.ls_.split.cilk(i64 %indvars.iv130.ls.dac6.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.16** nocapture readonly align 1 %.ls1.cilk, i1 %.ls2.cilk, i64 %unroll_iter.ls.cilk, i32* nocapture align 1 %.ls3.cilk, i1 %lcmp.mod.ls.cilk, i64 %xtraiter.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_Z13timeNeighborsILi10E8_point2dIdEEvPT0_iiiPc_pfor.detach33.us.ls(i64 %indvars.iv130.ls.dac6.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.16** %.ls1.cilk, i1 %.ls2.cilk, i64 %unroll_iter.ls.cilk, i32* %.ls3.cilk, i1 %lcmp.mod.ls.cilk, i64 %xtraiter.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_Z13timeNeighborsILi10E8_point2dIdEEvPT0_iiiPc_pfor.detach.ls_.split.cilk(i64 %indvars.iv136.ls.dac5.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.16* align 1 %.ls1.cilk, %class._point2d* nocapture readonly align 1 %pts.ls.cilk, %struct.vertex.16** nocapture align 1 %.ls2.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_Z13timeNeighborsILi10E8_point2dIdEEvPT0_iiiPc_pfor.detach.ls(i64 %indvars.iv136.ls.dac5.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex.16* %.ls1.cilk, %class._point2d* %pts.ls.cilk, %struct.vertex.16** %.ls2.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_Z13timeNeighborsILi1E8_point2dIdEEvPT0_iiiPc_pfor.detach33.us.ls_.split.cilk(i64 %indvars.iv132.ls.dac6.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex** nocapture readonly align 1 %.ls1.cilk, i1 %.ls2.cilk, i64 %unroll_iter.ls.cilk, i32* nocapture align 1 %.ls3.cilk, i1 %lcmp.mod.ls.cilk, i64 %xtraiter.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_Z13timeNeighborsILi1E8_point2dIdEEvPT0_iiiPc_pfor.detach33.us.ls(i64 %indvars.iv132.ls.dac6.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex** %.ls1.cilk, i1 %.ls2.cilk, i64 %unroll_iter.ls.cilk, i32* %.ls3.cilk, i1 %lcmp.mod.ls.cilk, i64 %xtraiter.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_Z13timeNeighborsILi1E8_point2dIdEEvPT0_iiiPc_pfor.detach.ls_.split.cilk(i64 %indvars.iv138.ls.dac5.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex* align 1 %.ls1.cilk, %class._point2d* nocapture readonly align 1 %pts.ls.cilk, %struct.vertex** nocapture align 1 %.ls2.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_Z13timeNeighborsILi1E8_point2dIdEEvPT0_iiiPc_pfor.detach.ls(i64 %indvars.iv138.ls.dac5.cilk, i64 %miditer.cilk, i64 %.ls.cilk, %struct.vertex* %.ls1.cilk, %class._point2d* %pts.ls.cilk, %struct.vertex** %.ls2.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7benchIO18readPointsFromFileI8_point2dIdEEE4_seqIT_EPc_pfor.detach21.i.ls_.split.cilk(i64 %__begin11.063.i.ls.dac5.cilk, i64 %miditer.cilk, i64 %.ls.cilk, double* nocapture readonly align 1 %.ls1.cilk, %class._point2d* nocapture align 1 %.ls2.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7benchIO18readPointsFromFileI8_point2dIdEEE4_seqIT_EPc_pfor.detach21.i.ls(i64 %__begin11.063.i.ls.dac5.cilk, i64 %miditer.cilk, i64 %.ls.cilk, double* %.ls1.cilk, %class._point2d* %.ls2.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7benchIO18readPointsFromFileI8_point2dIdEEE4_seqIT_EPc_pfor.detach.i.ls_.split.cilk(i64 %__begin.065.i.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i8** nocapture readonly align 1 %add.ptr.ls.cilk, double* nocapture align 1 %.ls1.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7benchIO18readPointsFromFileI8_point2dIdEEE4_seqIT_EPc_pfor.detach.i.ls(i64 %__begin.065.i.ls.dac4.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i8** %add.ptr.ls.cilk, double* %.ls1.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7benchIO18readStringFromFileEPc_pfor.detach.ls_.split.cilk(i64 %__begin.038.ls.dac2.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i8* nocapture align 1 %call12.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7benchIO18readStringFromFileEPc_pfor.detach.ls(i64 %__begin.038.ls.dac2.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i8* %call12.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7benchIO13stringToWordsEPcl_pfor.detach52.ls_.split.cilk(i64 %__begin43.0110.ls.dac5.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64* nocapture readonly align 1 %.ls1.cilk, i8* align 1 %Str.ls.cilk, i8** nocapture align 1 %.ls2.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7benchIO13stringToWordsEPcl_pfor.detach52.ls(i64 %__begin43.0110.ls.dac5.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i64* %.ls1.cilk, i8* %Str.ls.cilk, i8** %.ls2.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7benchIO13stringToWordsEPcl_pfor.detach19.ls_.split.cilk(i64 %__begin10.0112.ls.dac3.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i8* nocapture readonly align 1 %Str.ls.cilk, i8* nocapture align 1 %call5.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7benchIO13stringToWordsEPcl_pfor.detach19.ls(i64 %__begin10.0112.ls.dac3.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i8* %Str.ls.cilk, i8* %call5.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN7benchIO13stringToWordsEPcl_pfor.detach.ls_.split.cilk(i64 %__begin.0114.ls.dac2.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i8* nocapture align 1 %Str.ls.cilk) unnamed_addr #18 {
.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  call fastcc void @_ZN7benchIO13stringToWordsEPcl_pfor.detach.ls(i64 %__begin.0114.ls.dac2.cilk, i64 %miditer.cilk, i64 %.ls.cilk, i8* %Str.ls.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.6.cilk(%class.gTreeNode.46* align 1 %.cilk, i32 %add15.5.cilk, %struct.vertex.44** align 1 %f.coerce.cilk) unnamed_addr #18 align 2 {
for.inc16.5.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  tail call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT_(%class.gTreeNode.46* %.cilk, i32 %add15.5.cilk, %struct.vertex.44** %f.coerce.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %for.inc16.5.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %for.inc16.5.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind stealable uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.1.cilk(%class.gTreeNode.46* align 1 %.cilk, i32 %add15.cilk, %struct.vertex.44** align 1 %f.coerce.cilk) unnamed_addr #19 align 2 {
for.inc16.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  tail call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT_(%class.gTreeNode.46* %.cilk, i32 %add15.cilk, %struct.vertex.44** %f.coerce.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %for.inc16.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %for.inc16.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_Z9quickSortISt4pairIiP6vertexI8_point3dIdELi10EEEN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0__det.achd.cilk({ %"struct.std::pair.51"*, %"struct.std::pair.51"* } %call.cilk, %"struct.std::pair.51"* align 1 %A.tr22.cilk) unnamed_addr #18 {
if.else.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  %18 = extractvalue { %"struct.std::pair.51"*, %"struct.std::pair.51"* } %call.cilk, 0
  %sub.ptr.lhs.cast.cilk = ptrtoint %"struct.std::pair.51"* %18 to i64
  %sub.ptr.rhs.cast.cilk = ptrtoint %"struct.std::pair.51"* %A.tr22.cilk to i64
  %sub.ptr.sub.cilk = sub i64 %sub.ptr.lhs.cast.cilk, %sub.ptr.rhs.cast.cilk
  %sub.ptr.div.cilk = ashr exact i64 %sub.ptr.sub.cilk, 4
  tail call void @_Z9quickSortISt4pairIiP6vertexI8_point3dIdELi10EEEN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.51"* %A.tr22.cilk, i64 %sub.ptr.div.cilk)
  %19 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %20 = load i64, i64* %7, align 8
  %21 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %19, i64 0, i32 9
  %22 = bitcast %struct.__cilkrts_stack_frame** %21 to i64*
  store atomic i64 %20, i64* %22 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %23 = load atomic i32, i32* %1 acquire, align 8
  %24 = icmp eq i32 %23, 16777216
  br i1 %24, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.else.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.else.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN10blockTransISt4pairIiP6vertexI8_point3dIdELi10EEEjE6transREjjjjjj_det.achd.cilk(%struct.blockTrans.54* align 1 %this.cilk, i32 %rStart.cilk, i32 %rCount.cilk, i32 %rLength.cilk, i32 %cStart.tr113.cilk, i32 %div.cilk, i32 %cLength.cilk) unnamed_addr #18 align 2 {
if.then32.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  tail call void @_ZN10blockTransISt4pairIiP6vertexI8_point3dIdELi10EEEjE6transREjjjjjj(%struct.blockTrans.54* %this.cilk, i32 %rStart.cilk, i32 %rCount.cilk, i32 %rLength.cilk, i32 %cStart.tr113.cilk, i32 %div.cilk, i32 %cLength.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.then32.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.then32.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind stealable uwtable
define internal fastcc void @_ZN10blockTransISt4pairIiP6vertexI8_point3dIdELi10EEEjE6transREjjjjjj_det.achd42.cilk(%struct.blockTrans.54* align 1 %this.cilk, i32 %rStart.cilk, i32 %div38.cilk, i32 %rLength.cilk, i32 %cStart.tr113.cilk, i32 %cCount.tr114.cilk, i32 %cLength.cilk) unnamed_addr #19 align 2 {
if.else36.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  tail call void @_ZN10blockTransISt4pairIiP6vertexI8_point3dIdELi10EEEjE6transREjjjjjj(%struct.blockTrans.54* %this.cilk, i32 %rStart.cilk, i32 %div38.cilk, i32 %rLength.cilk, i32 %cStart.tr113.cilk, i32 %cCount.tr114.cilk, i32 %cLength.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.else36.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.else36.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE15sortBlocksSmallEPPS5_iS1_Pi_det.achd.i.cilk({ %"struct.std::pair.51"*, %"struct.std::pair.51"* } %call.i.cilk, i8* align 1 %call1.cilk, %"struct.std::pair.51"* align 1 %.cilk) unnamed_addr #18 align 2 {
if.else.i.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  %18 = extractvalue { %"struct.std::pair.51"*, %"struct.std::pair.51"* } %call.i.cilk, 0
  %sub.ptr.lhs.cast.i.cilk = ptrtoint %"struct.std::pair.51"* %18 to i64
  %sub.ptr.rhs.cast.i.cilk = ptrtoint i8* %call1.cilk to i64
  %sub.ptr.sub.i.cilk = sub i64 %sub.ptr.lhs.cast.i.cilk, %sub.ptr.rhs.cast.i.cilk
  %sub.ptr.div.i.cilk = ashr exact i64 %sub.ptr.sub.i.cilk, 4
  tail call void @_Z9quickSortISt4pairIiP6vertexI8_point3dIdELi10EEEN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.51"* nonnull %.cilk, i64 %sub.ptr.div.i.cilk) #2
  %19 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %20 = load i64, i64* %7, align 8
  %21 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %19, i64 0, i32 9
  %22 = bitcast %struct.__cilkrts_stack_frame** %21 to i64*
  store atomic i64 %20, i64* %22 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %23 = load atomic i32, i32* %1 acquire, align 8
  %24 = icmp eq i32 %23, 16777216
  br i1 %24, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.else.i.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.else.i.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii_det.achd69.cilk(i64 %indvars.iv217.cilk, i32 %shl6.cilk, %class.gTreeNode.46* align 1 %this.cilk, %struct.vertex.44** align 1 %S.coerce0.cilk, i64 %S.coerce1.cilk, i32* align 1 %offsets.cilk, i32 %quadrants.cilk, %class.gTreeNode.46* align 1 %add.ptr59.cilk, %class.gTreeNode.46* align 1 %add.ptr46.cilk, i32 %sub67.cilk, i32 %add68.cilk) unnamed_addr #18 align 2 {
for.body35.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  %18 = trunc i64 %indvars.iv217.cilk to i32
  %19 = add i32 %18, %shl6.cilk
  tail call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii(%class.gTreeNode.46* %this.cilk, %struct.vertex.44** %S.coerce0.cilk, i64 %S.coerce1.cilk, i32* %offsets.cilk, i32 %quadrants.cilk, %class.gTreeNode.46* nonnull %add.ptr59.cilk, %class.gTreeNode.46* %add.ptr46.cilk, i32 %19, i32 %sub67.cilk, i32 %add68.cilk)
  %20 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %21 = load i64, i64* %7, align 8
  %22 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %20, i64 0, i32 9
  %23 = bitcast %struct.__cilkrts_stack_frame** %22 to i64*
  store atomic i64 %21, i64* %23 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %24 = load atomic i32, i32* %1 acquire, align 8
  %25 = icmp eq i32 %24, 16777216
  br i1 %25, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %for.body35.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %for.body35.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.6.cilk(%class.gTreeNode.31* align 1 %.cilk, i32 %add15.5.cilk, %struct.vertex.29** align 1 %f.coerce.cilk) unnamed_addr #18 align 2 {
for.inc16.5.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  tail call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT_(%class.gTreeNode.31* %.cilk, i32 %add15.5.cilk, %struct.vertex.29** %f.coerce.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %for.inc16.5.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %for.inc16.5.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind stealable uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.1.cilk(%class.gTreeNode.31* align 1 %.cilk, i32 %add15.cilk, %struct.vertex.29** align 1 %f.coerce.cilk) unnamed_addr #19 align 2 {
for.inc16.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  tail call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT_(%class.gTreeNode.31* %.cilk, i32 %add15.cilk, %struct.vertex.29** %f.coerce.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %for.inc16.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %for.inc16.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_Z9quickSortISt4pairIiP6vertexI8_point3dIdELi1EEEN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0__det.achd.cilk({ %"struct.std::pair.38"*, %"struct.std::pair.38"* } %call.cilk, %"struct.std::pair.38"* align 1 %A.tr22.cilk) unnamed_addr #18 {
if.else.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  %18 = extractvalue { %"struct.std::pair.38"*, %"struct.std::pair.38"* } %call.cilk, 0
  %sub.ptr.lhs.cast.cilk = ptrtoint %"struct.std::pair.38"* %18 to i64
  %sub.ptr.rhs.cast.cilk = ptrtoint %"struct.std::pair.38"* %A.tr22.cilk to i64
  %sub.ptr.sub.cilk = sub i64 %sub.ptr.lhs.cast.cilk, %sub.ptr.rhs.cast.cilk
  %sub.ptr.div.cilk = ashr exact i64 %sub.ptr.sub.cilk, 4
  tail call void @_Z9quickSortISt4pairIiP6vertexI8_point3dIdELi1EEEN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.38"* %A.tr22.cilk, i64 %sub.ptr.div.cilk)
  %19 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %20 = load i64, i64* %7, align 8
  %21 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %19, i64 0, i32 9
  %22 = bitcast %struct.__cilkrts_stack_frame** %21 to i64*
  store atomic i64 %20, i64* %22 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %23 = load atomic i32, i32* %1 acquire, align 8
  %24 = icmp eq i32 %23, 16777216
  br i1 %24, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.else.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.else.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN10blockTransISt4pairIiP6vertexI8_point3dIdELi1EEEjE6transREjjjjjj_det.achd.cilk(%struct.blockTrans.41* align 1 %this.cilk, i32 %rStart.cilk, i32 %rCount.cilk, i32 %rLength.cilk, i32 %cStart.tr113.cilk, i32 %div.cilk, i32 %cLength.cilk) unnamed_addr #18 align 2 {
if.then32.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  tail call void @_ZN10blockTransISt4pairIiP6vertexI8_point3dIdELi1EEEjE6transREjjjjjj(%struct.blockTrans.41* %this.cilk, i32 %rStart.cilk, i32 %rCount.cilk, i32 %rLength.cilk, i32 %cStart.tr113.cilk, i32 %div.cilk, i32 %cLength.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.then32.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.then32.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind stealable uwtable
define internal fastcc void @_ZN10blockTransISt4pairIiP6vertexI8_point3dIdELi1EEEjE6transREjjjjjj_det.achd42.cilk(%struct.blockTrans.41* align 1 %this.cilk, i32 %rStart.cilk, i32 %div38.cilk, i32 %rLength.cilk, i32 %cStart.tr113.cilk, i32 %cCount.tr114.cilk, i32 %cLength.cilk) unnamed_addr #19 align 2 {
if.else36.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  tail call void @_ZN10blockTransISt4pairIiP6vertexI8_point3dIdELi1EEEjE6transREjjjjjj(%struct.blockTrans.41* %this.cilk, i32 %rStart.cilk, i32 %div38.cilk, i32 %rLength.cilk, i32 %cStart.tr113.cilk, i32 %cCount.tr114.cilk, i32 %cLength.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.else36.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.else36.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE15sortBlocksSmallEPPS5_iS1_Pi_det.achd.i.cilk({ %"struct.std::pair.38"*, %"struct.std::pair.38"* } %call.i.cilk, i8* align 1 %call1.cilk, %"struct.std::pair.38"* align 1 %.cilk) unnamed_addr #18 align 2 {
if.else.i.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  %18 = extractvalue { %"struct.std::pair.38"*, %"struct.std::pair.38"* } %call.i.cilk, 0
  %sub.ptr.lhs.cast.i.cilk = ptrtoint %"struct.std::pair.38"* %18 to i64
  %sub.ptr.rhs.cast.i.cilk = ptrtoint i8* %call1.cilk to i64
  %sub.ptr.sub.i.cilk = sub i64 %sub.ptr.lhs.cast.i.cilk, %sub.ptr.rhs.cast.i.cilk
  %sub.ptr.div.i.cilk = ashr exact i64 %sub.ptr.sub.i.cilk, 4
  tail call void @_Z9quickSortISt4pairIiP6vertexI8_point3dIdELi1EEEN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.38"* nonnull %.cilk, i64 %sub.ptr.div.i.cilk) #2
  %19 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %20 = load i64, i64* %7, align 8
  %21 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %19, i64 0, i32 9
  %22 = bitcast %struct.__cilkrts_stack_frame** %21 to i64*
  store atomic i64 %20, i64* %22 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %23 = load atomic i32, i32* %1 acquire, align 8
  %24 = icmp eq i32 %23, 16777216
  br i1 %24, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.else.i.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.else.i.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii_det.achd69.cilk(i64 %indvars.iv217.cilk, i32 %shl6.cilk, %class.gTreeNode.31* align 1 %this.cilk, %struct.vertex.29** align 1 %S.coerce0.cilk, i64 %S.coerce1.cilk, i32* align 1 %offsets.cilk, i32 %quadrants.cilk, %class.gTreeNode.31* align 1 %add.ptr59.cilk, %class.gTreeNode.31* align 1 %add.ptr46.cilk, i32 %sub67.cilk, i32 %add68.cilk) unnamed_addr #18 align 2 {
for.body35.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  %18 = trunc i64 %indvars.iv217.cilk to i32
  %19 = add i32 %18, %shl6.cilk
  tail call void @_ZN9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii(%class.gTreeNode.31* %this.cilk, %struct.vertex.29** %S.coerce0.cilk, i64 %S.coerce1.cilk, i32* %offsets.cilk, i32 %quadrants.cilk, %class.gTreeNode.31* nonnull %add.ptr59.cilk, %class.gTreeNode.31* %add.ptr46.cilk, i32 %19, i32 %sub67.cilk, i32 %add68.cilk)
  %20 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %21 = load i64, i64* %7, align 8
  %22 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %20, i64 0, i32 9
  %23 = bitcast %struct.__cilkrts_stack_frame** %22 to i64*
  store atomic i64 %21, i64* %23 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %24 = load atomic i32, i32* %1 acquire, align 8
  %25 = icmp eq i32 %24, 16777216
  br i1 %25, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %for.body35.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %for.body35.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.2.cilk(%class.gTreeNode.18* align 1 %.cilk, i32 %add15.1.cilk, %struct.vertex.16** align 1 %f.coerce.cilk) unnamed_addr #18 align 2 {
for.inc16.1.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  tail call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT_(%class.gTreeNode.18* %.cilk, i32 %add15.1.cilk, %struct.vertex.16** %f.coerce.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %for.inc16.1.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %for.inc16.1.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind stealable uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.1.cilk(%class.gTreeNode.18* align 1 %.cilk, i32 %add15.cilk, %struct.vertex.16** align 1 %f.coerce.cilk) unnamed_addr #19 align 2 {
for.inc16.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  tail call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT_(%class.gTreeNode.18* %.cilk, i32 %add15.cilk, %struct.vertex.16** %f.coerce.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %for.inc16.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %for.inc16.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_Z9quickSortISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0__det.achd.cilk({ %"struct.std::pair.23"*, %"struct.std::pair.23"* } %call.cilk, %"struct.std::pair.23"* align 1 %A.tr22.cilk) unnamed_addr #18 {
if.else.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  %18 = extractvalue { %"struct.std::pair.23"*, %"struct.std::pair.23"* } %call.cilk, 0
  %sub.ptr.lhs.cast.cilk = ptrtoint %"struct.std::pair.23"* %18 to i64
  %sub.ptr.rhs.cast.cilk = ptrtoint %"struct.std::pair.23"* %A.tr22.cilk to i64
  %sub.ptr.sub.cilk = sub i64 %sub.ptr.lhs.cast.cilk, %sub.ptr.rhs.cast.cilk
  %sub.ptr.div.cilk = ashr exact i64 %sub.ptr.sub.cilk, 4
  tail call void @_Z9quickSortISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.23"* %A.tr22.cilk, i64 %sub.ptr.div.cilk)
  %19 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %20 = load i64, i64* %7, align 8
  %21 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %19, i64 0, i32 9
  %22 = bitcast %struct.__cilkrts_stack_frame** %21 to i64*
  store atomic i64 %20, i64* %22 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %23 = load atomic i32, i32* %1 acquire, align 8
  %24 = icmp eq i32 %23, 16777216
  br i1 %24, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.else.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.else.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN10blockTransISt4pairIiP6vertexI8_point2dIdELi10EEEjE6transREjjjjjj_det.achd.cilk(%struct.blockTrans.26* align 1 %this.cilk, i32 %rStart.cilk, i32 %rCount.cilk, i32 %rLength.cilk, i32 %cStart.tr113.cilk, i32 %div.cilk, i32 %cLength.cilk) unnamed_addr #18 align 2 {
if.then32.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  tail call void @_ZN10blockTransISt4pairIiP6vertexI8_point2dIdELi10EEEjE6transREjjjjjj(%struct.blockTrans.26* %this.cilk, i32 %rStart.cilk, i32 %rCount.cilk, i32 %rLength.cilk, i32 %cStart.tr113.cilk, i32 %div.cilk, i32 %cLength.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.then32.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.then32.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind stealable uwtable
define internal fastcc void @_ZN10blockTransISt4pairIiP6vertexI8_point2dIdELi10EEEjE6transREjjjjjj_det.achd42.cilk(%struct.blockTrans.26* align 1 %this.cilk, i32 %rStart.cilk, i32 %div38.cilk, i32 %rLength.cilk, i32 %cStart.tr113.cilk, i32 %cCount.tr114.cilk, i32 %cLength.cilk) unnamed_addr #19 align 2 {
if.else36.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  tail call void @_ZN10blockTransISt4pairIiP6vertexI8_point2dIdELi10EEEjE6transREjjjjjj(%struct.blockTrans.26* %this.cilk, i32 %rStart.cilk, i32 %div38.cilk, i32 %rLength.cilk, i32 %cStart.tr113.cilk, i32 %cCount.tr114.cilk, i32 %cLength.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.else36.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.else36.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE15sortBlocksSmallEPPS5_iS1_Pi_det.achd.i.cilk({ %"struct.std::pair.23"*, %"struct.std::pair.23"* } %call.i.cilk, i8* align 1 %call1.cilk, %"struct.std::pair.23"* align 1 %.cilk) unnamed_addr #18 align 2 {
if.else.i.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  %18 = extractvalue { %"struct.std::pair.23"*, %"struct.std::pair.23"* } %call.i.cilk, 0
  %sub.ptr.lhs.cast.i.cilk = ptrtoint %"struct.std::pair.23"* %18 to i64
  %sub.ptr.rhs.cast.i.cilk = ptrtoint i8* %call1.cilk to i64
  %sub.ptr.sub.i.cilk = sub i64 %sub.ptr.lhs.cast.i.cilk, %sub.ptr.rhs.cast.i.cilk
  %sub.ptr.div.i.cilk = ashr exact i64 %sub.ptr.sub.i.cilk, 4
  tail call void @_Z9quickSortISt4pairIiP6vertexI8_point2dIdELi10EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.23"* nonnull %.cilk, i64 %sub.ptr.div.i.cilk) #2
  %19 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %20 = load i64, i64* %7, align 8
  %21 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %19, i64 0, i32 9
  %22 = bitcast %struct.__cilkrts_stack_frame** %21 to i64*
  store atomic i64 %20, i64* %22 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %23 = load atomic i32, i32* %1 acquire, align 8
  %24 = icmp eq i32 %23, 16777216
  br i1 %24, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.else.i.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.else.i.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii_det.achd71.2.cilk(i32 %shl7.cilk, %class.gTreeNode.18* align 1 %this.cilk, %struct.vertex.16** align 1 %S.coerce0.cilk, i64 %S.coerce1.cilk, i32* align 1 %offsets.cilk, i32 %quadrants.cilk, %class.gTreeNode.18* align 1 %add.ptr61.cilk, %class.gTreeNode.18* align 1 %add.ptr48.2.cilk, i32 %sub69.cilk, i32 %add70.cilk) unnamed_addr #18 align 2 {
det.cont72.1.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  %18 = or i32 %shl7.cilk, 2
  tail call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii(%class.gTreeNode.18* %this.cilk, %struct.vertex.16** %S.coerce0.cilk, i64 %S.coerce1.cilk, i32* %offsets.cilk, i32 %quadrants.cilk, %class.gTreeNode.18* nonnull %add.ptr61.cilk, %class.gTreeNode.18* nonnull %add.ptr48.2.cilk, i32 %18, i32 %sub69.cilk, i32 %add70.cilk)
  %19 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %20 = load i64, i64* %7, align 8
  %21 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %19, i64 0, i32 9
  %22 = bitcast %struct.__cilkrts_stack_frame** %21 to i64*
  store atomic i64 %20, i64* %22 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %23 = load atomic i32, i32* %1 acquire, align 8
  %24 = icmp eq i32 %23, 16777216
  br i1 %24, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %det.cont72.1.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %det.cont72.1.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind stealable uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii_det.achd71.1.cilk(i32 %shl7.cilk, %class.gTreeNode.18* align 1 %this.cilk, %struct.vertex.16** align 1 %S.coerce0.cilk, i64 %S.coerce1.cilk, i32* align 1 %offsets.cilk, i32 %quadrants.cilk, %class.gTreeNode.18* align 1 %add.ptr61.cilk, %class.gTreeNode.18* align 1 %add.ptr48.1.cilk, i32 %sub69.cilk, i32 %add70.cilk) unnamed_addr #19 align 2 {
det.cont72.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  %18 = or i32 %shl7.cilk, 1
  tail call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii(%class.gTreeNode.18* %this.cilk, %struct.vertex.16** %S.coerce0.cilk, i64 %S.coerce1.cilk, i32* %offsets.cilk, i32 %quadrants.cilk, %class.gTreeNode.18* nonnull %add.ptr61.cilk, %class.gTreeNode.18* nonnull %add.ptr48.1.cilk, i32 %18, i32 %sub69.cilk, i32 %add70.cilk)
  %19 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %20 = load i64, i64* %7, align 8
  %21 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %19, i64 0, i32 9
  %22 = bitcast %struct.__cilkrts_stack_frame** %21 to i64*
  store atomic i64 %20, i64* %22 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %23 = load atomic i32, i32* %1 acquire, align 8
  %24 = icmp eq i32 %23, 16777216
  br i1 %24, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %det.cont72.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %det.cont72.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind stealable uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii_det.achd71.cilk(%class.gTreeNode.18* align 1 %this.cilk, %struct.vertex.16** align 1 %S.coerce0.cilk, i64 %S.coerce1.cilk, i32* align 1 %offsets.cilk, i32 %quadrants.cilk, %class.gTreeNode.18* align 1 %add.ptr61.cilk, %class.gTreeNode.18* align 1 %add.ptr48.cilk, i32 %shl7.cilk, i32 %sub69.cilk, i32 %add70.cilk) unnamed_addr #19 align 2 {
if.else.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  tail call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii(%class.gTreeNode.18* %this.cilk, %struct.vertex.16** %S.coerce0.cilk, i64 %S.coerce1.cilk, i32* %offsets.cilk, i32 %quadrants.cilk, %class.gTreeNode.18* nonnull %add.ptr61.cilk, %class.gTreeNode.18* %add.ptr48.cilk, i32 %shl7.cilk, i32 %sub69.cilk, i32 %add70.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.else.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.else.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.2.cilk(%class.gTreeNode* align 1 %.cilk, i32 %add15.1.cilk, %struct.vertex** align 1 %f.coerce.cilk) unnamed_addr #18 align 2 {
for.inc16.1.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  tail call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT_(%class.gTreeNode* %.cilk, i32 %add15.1.cilk, %struct.vertex** %f.coerce.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %for.inc16.1.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %for.inc16.1.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind stealable uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT__det.achd.1.cilk(%class.gTreeNode* align 1 %.cilk, i32 %add15.cilk, %struct.vertex** align 1 %f.coerce.cilk) unnamed_addr #19 align 2 {
for.inc16.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  tail call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE10applyIndexINS8_10flatten_FAEEEviT_(%class.gTreeNode* %.cilk, i32 %add15.cilk, %struct.vertex** %f.coerce.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %for.inc16.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %for.inc16.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_Z9quickSortISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0__det.achd.cilk({ %"struct.std::pair.6"*, %"struct.std::pair.6"* } %call.cilk, %"struct.std::pair.6"* align 1 %A.tr22.cilk) unnamed_addr #18 {
if.else.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  %18 = extractvalue { %"struct.std::pair.6"*, %"struct.std::pair.6"* } %call.cilk, 0
  %sub.ptr.lhs.cast.cilk = ptrtoint %"struct.std::pair.6"* %18 to i64
  %sub.ptr.rhs.cast.cilk = ptrtoint %"struct.std::pair.6"* %A.tr22.cilk to i64
  %sub.ptr.sub.cilk = sub i64 %sub.ptr.lhs.cast.cilk, %sub.ptr.rhs.cast.cilk
  %sub.ptr.div.cilk = ashr exact i64 %sub.ptr.sub.cilk, 4
  tail call void @_Z9quickSortISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.6"* %A.tr22.cilk, i64 %sub.ptr.div.cilk)
  %19 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %20 = load i64, i64* %7, align 8
  %21 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %19, i64 0, i32 9
  %22 = bitcast %struct.__cilkrts_stack_frame** %21 to i64*
  store atomic i64 %20, i64* %22 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %23 = load atomic i32, i32* %1 acquire, align 8
  %24 = icmp eq i32 %23, 16777216
  br i1 %24, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.else.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.else.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN10blockTransISt4pairIiP6vertexI8_point2dIdELi1EEEjE6transREjjjjjj_det.achd.cilk(%struct.blockTrans* align 1 %this.cilk, i32 %rStart.cilk, i32 %rCount.cilk, i32 %rLength.cilk, i32 %cStart.tr113.cilk, i32 %div.cilk, i32 %cLength.cilk) unnamed_addr #18 align 2 {
if.then32.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  tail call void @_ZN10blockTransISt4pairIiP6vertexI8_point2dIdELi1EEEjE6transREjjjjjj(%struct.blockTrans* %this.cilk, i32 %rStart.cilk, i32 %rCount.cilk, i32 %rLength.cilk, i32 %cStart.tr113.cilk, i32 %div.cilk, i32 %cLength.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.then32.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.then32.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind stealable uwtable
define internal fastcc void @_ZN10blockTransISt4pairIiP6vertexI8_point2dIdELi1EEEjE6transREjjjjjj_det.achd42.cilk(%struct.blockTrans* align 1 %this.cilk, i32 %rStart.cilk, i32 %div38.cilk, i32 %rLength.cilk, i32 %cStart.tr113.cilk, i32 %cCount.tr114.cilk, i32 %cLength.cilk) unnamed_addr #19 align 2 {
if.else36.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  tail call void @_ZN10blockTransISt4pairIiP6vertexI8_point2dIdELi1EEEjE6transREjjjjjj(%struct.blockTrans* %this.cilk, i32 %rStart.cilk, i32 %div38.cilk, i32 %rLength.cilk, i32 %cStart.tr113.cilk, i32 %cCount.tr114.cilk, i32 %cLength.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.else36.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.else36.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9transposeIjjE6transREjjjjjj_det.achd.cilk(%struct.transpose* align 1 %this.cilk, i32 %rStart.cilk, i32 %rCount.cilk, i32 %rLength.cilk, i32 %cStart.tr87.cilk, i32 %div.cilk, i32 %cLength.cilk) unnamed_addr #18 align 2 {
if.then18.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  tail call void @_ZN9transposeIjjE6transREjjjjjj(%struct.transpose* %this.cilk, i32 %rStart.cilk, i32 %rCount.cilk, i32 %rLength.cilk, i32 %cStart.tr87.cilk, i32 %div.cilk, i32 %cLength.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.then18.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.then18.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind stealable uwtable
define internal fastcc void @_ZN9transposeIjjE6transREjjjjjj_det.achd28.cilk(%struct.transpose* align 1 %this.cilk, i32 %rStart.cilk, i32 %div24.cilk, i32 %rLength.cilk, i32 %cStart.tr87.cilk, i32 %cCount.tr88.cilk, i32 %cLength.cilk) unnamed_addr #19 align 2 {
if.else22.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  tail call void @_ZN9transposeIjjE6transREjjjjjj(%struct.transpose* %this.cilk, i32 %rStart.cilk, i32 %div24.cilk, i32 %rLength.cilk, i32 %cStart.tr87.cilk, i32 %cCount.tr88.cilk, i32 %cLength.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.else22.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.else22.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE15sortBlocksSmallEPPS5_iS1_Pi_det.achd.i.cilk({ %"struct.std::pair.6"*, %"struct.std::pair.6"* } %call.i.cilk, i8* align 1 %call1.cilk, %"struct.std::pair.6"* align 1 %.cilk) unnamed_addr #18 align 2 {
if.else.i.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  %18 = extractvalue { %"struct.std::pair.6"*, %"struct.std::pair.6"* } %call.i.cilk, 0
  %sub.ptr.lhs.cast.i.cilk = ptrtoint %"struct.std::pair.6"* %18 to i64
  %sub.ptr.rhs.cast.i.cilk = ptrtoint i8* %call1.cilk to i64
  %sub.ptr.sub.i.cilk = sub i64 %sub.ptr.lhs.cast.i.cilk, %sub.ptr.rhs.cast.i.cilk
  %sub.ptr.div.i.cilk = ashr exact i64 %sub.ptr.sub.i.cilk, 4
  tail call void @_Z9quickSortISt4pairIiP6vertexI8_point2dIdELi1EEEN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE9compFirstElEvPT_T1_T0_(%"struct.std::pair.6"* nonnull %.cilk, i64 %sub.ptr.div.i.cilk) #2
  %19 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %20 = load i64, i64* %7, align 8
  %21 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %19, i64 0, i32 9
  %22 = bitcast %struct.__cilkrts_stack_frame** %21 to i64*
  store atomic i64 %20, i64* %22 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %23 = load atomic i32, i32* %1 acquire, align 8
  %24 = icmp eq i32 %23, 16777216
  br i1 %24, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.else.i.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.else.i.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii_det.achd71.2.cilk(i32 %shl7.cilk, %class.gTreeNode* align 1 %this.cilk, %struct.vertex** align 1 %S.coerce0.cilk, i64 %S.coerce1.cilk, i32* align 1 %offsets.cilk, i32 %quadrants.cilk, %class.gTreeNode* align 1 %add.ptr61.cilk, %class.gTreeNode* align 1 %add.ptr48.2.cilk, i32 %sub69.cilk, i32 %add70.cilk) unnamed_addr #18 align 2 {
det.cont72.1.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  %18 = or i32 %shl7.cilk, 2
  tail call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii(%class.gTreeNode* %this.cilk, %struct.vertex** %S.coerce0.cilk, i64 %S.coerce1.cilk, i32* %offsets.cilk, i32 %quadrants.cilk, %class.gTreeNode* nonnull %add.ptr61.cilk, %class.gTreeNode* nonnull %add.ptr48.2.cilk, i32 %18, i32 %sub69.cilk, i32 %add70.cilk)
  %19 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %20 = load i64, i64* %7, align 8
  %21 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %19, i64 0, i32 9
  %22 = bitcast %struct.__cilkrts_stack_frame** %21 to i64*
  store atomic i64 %20, i64* %22 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %23 = load atomic i32, i32* %1 acquire, align 8
  %24 = icmp eq i32 %23, 16777216
  br i1 %24, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %det.cont72.1.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %det.cont72.1.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind stealable uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii_det.achd71.1.cilk(i32 %shl7.cilk, %class.gTreeNode* align 1 %this.cilk, %struct.vertex** align 1 %S.coerce0.cilk, i64 %S.coerce1.cilk, i32* align 1 %offsets.cilk, i32 %quadrants.cilk, %class.gTreeNode* align 1 %add.ptr61.cilk, %class.gTreeNode* align 1 %add.ptr48.1.cilk, i32 %sub69.cilk, i32 %add70.cilk) unnamed_addr #19 align 2 {
det.cont72.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  %18 = or i32 %shl7.cilk, 1
  tail call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii(%class.gTreeNode* %this.cilk, %struct.vertex** %S.coerce0.cilk, i64 %S.coerce1.cilk, i32* %offsets.cilk, i32 %quadrants.cilk, %class.gTreeNode* nonnull %add.ptr61.cilk, %class.gTreeNode* nonnull %add.ptr48.1.cilk, i32 %18, i32 %sub69.cilk, i32 %add70.cilk)
  %19 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %20 = load i64, i64* %7, align 8
  %21 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %19, i64 0, i32 9
  %22 = bitcast %struct.__cilkrts_stack_frame** %21 to i64*
  store atomic i64 %20, i64* %22 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %23 = load atomic i32, i32* %1 acquire, align 8
  %24 = icmp eq i32 %23, 16777216
  br i1 %24, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %det.cont72.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %det.cont72.cilk, %body.i
  ret void
}

; Function Attrs: noinline nounwind stealable uwtable
define internal fastcc void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii_det.achd71.cilk(%class.gTreeNode* align 1 %this.cilk, %struct.vertex** align 1 %S.coerce0.cilk, i64 %S.coerce1.cilk, i32* align 1 %offsets.cilk, i32 %quadrants.cilk, %class.gTreeNode* align 1 %add.ptr61.cilk, %class.gTreeNode* align 1 %add.ptr48.cilk, i32 %shl7.cilk, i32 %sub69.cilk, i32 %add70.cilk) unnamed_addr #19 align 2 {
if.else.cilk:
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  %0 = tail call %struct.__cilkrts_worker* @__cilkrts_get_tls_worker_fast() #2
  %1 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 0
  store atomic i32 16777216, i32* %1 release, align 8
  %2 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %0, i64 0, i32 9
  %3 = load atomic %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %2 acquire, align 8
  %4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 2
  store atomic %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %4 release, align 8
  %5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 3
  store atomic %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %5 release, align 8
  store atomic %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %2 release, align 8
  %6 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5, align 8
  %7 = bitcast %struct.__cilkrts_stack_frame** %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 0
  %10 = load atomic %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %9 acquire, align 8
  %11 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 0
  store atomic i64 0, i64* %11 release, align 8
  %12 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %__cilkrts_sf, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %6, i64 0, i32 12, i32 1
  store atomic %struct.__cilkrts_pedigree* %12, %struct.__cilkrts_pedigree** %13 release, align 8
  fence release
  %14 = bitcast %struct.__cilkrts_stack_frame** %10 to i64*
  store volatile i64 %8, i64* %14, align 8
  %15 = getelementptr %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %10, i64 1
  store atomic %struct.__cilkrts_stack_frame** %15, %struct.__cilkrts_stack_frame*** %9 release, align 8
  %16 = load atomic i32, i32* %1 acquire, align 8
  %17 = or i32 %16, 4
  store atomic i32 %17, i32* %1 release, align 8
  tail call void @_ZN9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE18buildRecursiveTreeE4_seqIPS5_EPiiPS8_SD_iii(%class.gTreeNode* %this.cilk, %struct.vertex** %S.coerce0.cilk, i64 %S.coerce1.cilk, i32* %offsets.cilk, i32 %quadrants.cilk, %class.gTreeNode* nonnull %add.ptr61.cilk, %class.gTreeNode* %add.ptr48.cilk, i32 %shl7.cilk, i32 %sub69.cilk, i32 %add70.cilk)
  %18 = load atomic %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %5 acquire, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %18, i64 0, i32 9
  %21 = bitcast %struct.__cilkrts_stack_frame** %20 to i64*
  store atomic i64 %19, i64* %21 release, align 8
  store atomic %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %4 release, align 8
  %22 = load atomic i32, i32* %1 acquire, align 8
  %23 = icmp eq i32 %22, 16777216
  br i1 %23, label %__cilk_parent_epilogue.exit, label %body.i

body.i:                                           ; preds = %if.else.cilk
  call void @__cilkrts_leave_frame(%struct.__cilkrts_stack_frame* nonnull %__cilkrts_sf) #2
  br label %__cilk_parent_epilogue.exit

__cilk_parent_epilogue.exit:                      ; preds = %if.else.cilk, %body.i
  ret void
}

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="haswell" "target-features"="+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+rdrnd,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-adx,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-clflushopt,-clwb,-clzero,-fma4,-gfni,-ibt,-lwp,-mwaitx,-pku,-prefetchwt1,-prfchw,-rdseed,-rtm,-sgx,-sha,-shstk,-sse4a,-tbm,-vaes,-vpclmulqdq,-xop,-xsavec,-xsaves" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="haswell" "target-features"="+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+rdrnd,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-adx,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-clflushopt,-clwb,-clzero,-fma4,-gfni,-ibt,-lwp,-mwaitx,-pku,-prefetchwt1,-prfchw,-rdseed,-rtm,-sgx,-sha,-shstk,-sse4a,-tbm,-vaes,-vpclmulqdq,-xop,-xsavec,-xsaves" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="haswell" "target-features"="+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+rdrnd,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-adx,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-clflushopt,-clwb,-clzero,-fma4,-gfni,-ibt,-lwp,-mwaitx,-pku,-prefetchwt1,-prfchw,-rdseed,-rtm,-sgx,-sha,-shstk,-sse4a,-tbm,-vaes,-vpclmulqdq,-xop,-xsavec,-xsaves" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="haswell" "target-features"="+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+rdrnd,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-adx,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-clflushopt,-clwb,-clzero,-fma4,-gfni,-ibt,-lwp,-mwaitx,-pku,-prefetchwt1,-prfchw,-rdseed,-rtm,-sgx,-sha,-shstk,-sse4a,-tbm,-vaes,-vpclmulqdq,-xop,-xsavec,-xsaves" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="haswell" "target-features"="+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+rdrnd,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-adx,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-clflushopt,-clwb,-clzero,-fma4,-gfni,-ibt,-lwp,-mwaitx,-pku,-prefetchwt1,-prfchw,-rdseed,-rtm,-sgx,-sha,-shstk,-sse4a,-tbm,-vaes,-vpclmulqdq,-xop,-xsavec,-xsaves" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #7 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="haswell" "target-features"="+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+rdrnd,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-adx,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-clflushopt,-clwb,-clzero,-fma4,-gfni,-ibt,-lwp,-mwaitx,-pku,-prefetchwt1,-prfchw,-rdseed,-rtm,-sgx,-sha,-shstk,-sse4a,-tbm,-vaes,-vpclmulqdq,-xop,-xsavec,-xsaves" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="haswell" "target-features"="+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+rdrnd,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-adx,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-clflushopt,-clwb,-clzero,-fma4,-gfni,-ibt,-lwp,-mwaitx,-pku,-prefetchwt1,-prfchw,-rdseed,-rtm,-sgx,-sha,-shstk,-sse4a,-tbm,-vaes,-vpclmulqdq,-xop,-xsavec,-xsaves" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="haswell" "target-features"="+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+rdrnd,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-adx,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-clflushopt,-clwb,-clzero,-fma4,-gfni,-ibt,-lwp,-mwaitx,-pku,-prefetchwt1,-prfchw,-rdseed,-rtm,-sgx,-sha,-shstk,-sse4a,-tbm,-vaes,-vpclmulqdq,-xop,-xsavec,-xsaves" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="haswell" "target-features"="+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+rdrnd,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-adx,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-clflushopt,-clwb,-clzero,-fma4,-gfni,-ibt,-lwp,-mwaitx,-pku,-prefetchwt1,-prfchw,-rdseed,-rtm,-sgx,-sha,-shstk,-sse4a,-tbm,-vaes,-vpclmulqdq,-xop,-xsavec,-xsaves" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #11 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="haswell" "target-features"="+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+rdrnd,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-adx,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-clflushopt,-clwb,-clzero,-fma4,-gfni,-ibt,-lwp,-mwaitx,-pku,-prefetchwt1,-prfchw,-rdseed,-rtm,-sgx,-sha,-shstk,-sse4a,-tbm,-vaes,-vpclmulqdq,-xop,-xsavec,-xsaves" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="haswell" "target-features"="+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+rdrnd,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-adx,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-clflushopt,-clwb,-clzero,-fma4,-gfni,-ibt,-lwp,-mwaitx,-pku,-prefetchwt1,-prfchw,-rdseed,-rtm,-sgx,-sha,-shstk,-sse4a,-tbm,-vaes,-vpclmulqdq,-xop,-xsavec,-xsaves" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #13 = { argmemonly nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="haswell" "target-features"="+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+rdrnd,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-adx,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-clflushopt,-clwb,-clzero,-fma4,-gfni,-ibt,-lwp,-mwaitx,-pku,-prefetchwt1,-prfchw,-rdseed,-rtm,-sgx,-sha,-shstk,-sse4a,-tbm,-vaes,-vpclmulqdq,-xop,-xsavec,-xsaves" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #14 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="haswell" "target-features"="+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+rdrnd,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-adx,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-clflushopt,-clwb,-clzero,-fma4,-gfni,-ibt,-lwp,-mwaitx,-pku,-prefetchwt1,-prfchw,-rdseed,-rtm,-sgx,-sha,-shstk,-sse4a,-tbm,-vaes,-vpclmulqdq,-xop,-xsavec,-xsaves" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #15 = { nounwind stealable uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="haswell" "target-features"="+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+rdrnd,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-adx,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-clflushopt,-clwb,-clzero,-fma4,-gfni,-ibt,-lwp,-mwaitx,-pku,-prefetchwt1,-prfchw,-rdseed,-rtm,-sgx,-sha,-shstk,-sse4a,-tbm,-vaes,-vpclmulqdq,-xop,-xsavec,-xsaves" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable }
attributes #17 = { nounwind readnone }
attributes #18 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="haswell" "target-features"="+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+rdrnd,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-adx,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-clflushopt,-clwb,-clzero,-fma4,-gfni,-ibt,-lwp,-mwaitx,-pku,-prefetchwt1,-prfchw,-rdseed,-rtm,-sgx,-sha,-shstk,-sse4a,-tbm,-vaes,-vpclmulqdq,-xop,-xsavec,-xsaves" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #19 = { noinline nounwind stealable uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="haswell" "target-features"="+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+rdrnd,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-adx,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-clflushopt,-clwb,-clzero,-fma4,-gfni,-ibt,-lwp,-mwaitx,-pku,-prefetchwt1,-prfchw,-rdseed,-rtm,-sgx,-sha,-shstk,-sse4a,-tbm,-vaes,-vpclmulqdq,-xop,-xsavec,-xsaves" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #20 = { nounwind readonly }
attributes #21 = { noreturn nounwind }
attributes #22 = { builtin nounwind }
attributes #23 = { returns_twice }
attributes #24 = { nounwind returns_twice }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 6.0.0 (git@github.com:wsmoses/Tapir-Clang.git d5d865dfb510d91f47fc5257febec4f52eb1afcb) (git@github.com:wsmoses/Tapir-LLVM.git 32f6e7798224fa34e525743d0b9bde4a7b6e8f9c)"}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
!6 = !{!7, !8, i64 0}
!7 = !{!"_ZTS8_point3dIdE", !8, i64 0, !8, i64 8, !8, i64 16}
!8 = !{!"double", !9, i64 0}
!9 = !{!"omnipotent char", !10, i64 0}
!10 = !{!"Simple C++ TBAA"}
!11 = !{!7, !8, i64 8}
!12 = !{!7, !8, i64 16}
!13 = distinct !{!13, !3}
!14 = distinct !{!14, !5, !3}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.unroll.disable"}
!17 = distinct !{!17, !16}
!18 = !{!8, !8, i64 0}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN8_point3dIdE11offsetPointEid: %agg.result"}
!21 = distinct !{!21, !"_ZN8_point3dIdE11offsetPointEid"}
!22 = !{!9, !9, i64 0}
!23 = !{!24, !24, i64 0}
!24 = !{!"bool", !9, i64 0}
!25 = !{!26, !27, i64 0}
!26 = !{!"_ZTSN7benchIO5wordsE", !27, i64 0, !28, i64 8, !27, i64 16, !28, i64 24}
!27 = !{!"long", !9, i64 0}
!28 = !{!"any pointer", !9, i64 0}
!29 = !{!26, !28, i64 8}
!30 = !{!26, !27, i64 16}
!31 = !{!26, !28, i64 24}
!32 = !{!33, !33, i64 0}
!33 = !{!"vtable pointer", !10, i64 0}
!34 = !{!35, !37, i64 32}
!35 = !{!"_ZTSSt8ios_base", !27, i64 8, !27, i64 16, !36, i64 24, !37, i64 28, !37, i64 32, !28, i64 40, !38, i64 48, !9, i64 64, !39, i64 192, !28, i64 200, !40, i64 208}
!36 = !{!"_ZTSSt13_Ios_Fmtflags", !9, i64 0}
!37 = !{!"_ZTSSt12_Ios_Iostate", !9, i64 0}
!38 = !{!"_ZTSNSt8ios_base6_WordsE", !28, i64 0, !27, i64 8}
!39 = !{!"int", !9, i64 0}
!40 = !{!"_ZTSSt6locale", !28, i64 0}
!41 = !{!42, !28, i64 240}
!42 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !28, i64 216, !9, i64 224, !24, i64 225, !28, i64 232, !28, i64 240, !28, i64 248, !28, i64 256}
!43 = !{!44, !9, i64 56}
!44 = !{!"_ZTSSt5ctypeIcE", !28, i64 16, !24, i64 24, !28, i64 32, !28, i64 40, !28, i64 48, !9, i64 56, !9, i64 57, !9, i64 313, !9, i64 569}
!45 = !{!46, !27, i64 8}
!46 = !{!"_ZTSSi", !27, i64 8}
!47 = !{!48, !28, i64 0}
!48 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !28, i64 0}
!49 = !{!27, !27, i64 0}
!50 = !{!51, !28, i64 0}
!51 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !48, i64 0, !27, i64 8, !9, i64 16}
!52 = !{!51, !27, i64 8}
!53 = !{!28, !28, i64 0}
!54 = !{!55, !39, i64 0}
!55 = !{!"_ZTS9trianglesI8_point2dIdEE", !39, i64 0, !39, i64 4, !28, i64 8, !28, i64 16}
!56 = !{!55, !28, i64 8}
!57 = !{!55, !39, i64 4}
!58 = !{!55, !28, i64 16}
!59 = !{!39, !39, i64 0}
!60 = !{!61, !39, i64 0}
!61 = !{!"_ZTS11commandLine", !39, i64 0, !28, i64 8, !51, i64 16}
!62 = !{!61, !28, i64 8}
!63 = !{!64, !24, i64 24}
!64 = !{!"_ZTS5timer", !8, i64 0, !8, i64 8, !8, i64 16, !24, i64 24, !65, i64 28}
!65 = !{!"_ZTS8timezone", !39, i64 0, !39, i64 4}
!66 = !{!67, !27, i64 0}
!67 = !{!"_ZTS7timeval", !27, i64 0, !27, i64 8}
!68 = !{!67, !27, i64 8}
!69 = !{!64, !8, i64 8}
!70 = !{i8 0, i8 2}
!71 = !{!64, !8, i64 0}
!72 = distinct !{!72, !3}
!73 = distinct !{!73, !16}
!74 = distinct !{!74, !5, !3}
!75 = distinct !{!75, !16}
!76 = distinct !{!76, !16}
!77 = distinct !{!77, !16}
!78 = distinct !{!78, !16}
!79 = distinct !{!79, !16}
!80 = !{!81, !39, i64 28}
!81 = !{!"_ZTS9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li1EE5nDataIS5_EE", !82, i64 0, !8, i64 16, !83, i64 24, !39, i64 28, !9, i64 32, !28, i64 96, !28, i64 104}
!82 = !{!"_ZTS8_point2dIdE", !8, i64 0, !8, i64 8}
!83 = !{!"_ZTS5nDataI6vertexI8_point2dIdELi1EEE", !39, i64 0}
!84 = !{!35, !27, i64 8}
!85 = !{!83, !39, i64 0}
!86 = !{!81, !8, i64 16}
!87 = distinct !{!87, !16}
!88 = !{!81, !28, i64 104}
!89 = !{!81, !28, i64 96}
!90 = !{!82, !8, i64 0}
!91 = !{!82, !8, i64 8}
!92 = !{!93, !95}
!93 = distinct !{!93, !94, !"_ZN8sequence5getAFIP6vertexI8_point2dIdELi1EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE6toPairEEclEi: %agg.result"}
!94 = distinct !{!94, !"_ZN8sequence5getAFIP6vertexI8_point2dIdELi1EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE6toPairEEclEi"}
!95 = distinct !{!95, !96, !"_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_: %agg.result"}
!96 = distinct !{!96, !"_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_"}
!97 = !{i64 0, i64 8, !18, i64 8, i64 8, !18}
!98 = !{!95}
!99 = !{!100, !95}
!100 = distinct !{!100, !101, !"_ZN8sequence5getAFIP6vertexI8_point2dIdELi1EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE6toPairEEclEi: %agg.result"}
!101 = distinct !{!101, !"_ZN8sequence5getAFIP6vertexI8_point2dIdELi1EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE6toPairEEclEi"}
!102 = distinct !{!102, !16}
!103 = !{i64 0, i64 8, !18, i64 8, i64 8, !18, i64 16, i64 8, !18, i64 24, i64 8, !18}
!104 = !{!105}
!105 = distinct !{!105, !106, !"_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_: %agg.result"}
!106 = distinct !{!106, !"_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_"}
!107 = distinct !{!107, !3}
!108 = distinct !{!108, !5, !3}
!109 = !{!110, !39, i64 0}
!110 = !{!"_ZTSSt4pairIiP6vertexI8_point2dIdELi1EEE", !39, i64 0, !28, i64 8}
!111 = !{!110, !28, i64 8}
!112 = distinct !{!112, !3}
!113 = distinct !{!113, !16}
!114 = distinct !{!114, !3}
!115 = distinct !{!115, !5, !3}
!116 = distinct !{!116, !5, !3}
!117 = !{!118, !27, i64 8}
!118 = !{!"_ZTSN7intSort5eBitsISt4pairIiP6vertexI8_point2dIdELi1EEEN5utils6firstFIiS6_EEEE", !119, i64 0, !27, i64 8, !27, i64 16}
!119 = !{!"_ZTSN5utils6firstFIiP6vertexI8_point2dIdELi1EEEE"}
!120 = !{!118, !27, i64 16}
!121 = distinct !{!121, !16}
!122 = !{!123, !28, i64 0}
!123 = !{!"_ZTS9transposeIjjE", !28, i64 0, !28, i64 8}
!124 = !{!123, !28, i64 8}
!125 = distinct !{!125, !16}
!126 = !{!127, !28, i64 0}
!127 = !{!"_ZTS10blockTransISt4pairIiP6vertexI8_point2dIdELi1EEEjE", !28, i64 0, !28, i64 8, !28, i64 16, !28, i64 24, !28, i64 32}
!128 = !{!127, !28, i64 8}
!129 = !{!127, !28, i64 16}
!130 = !{!127, !28, i64 24}
!131 = !{!127, !28, i64 32}
!132 = distinct !{!132, !16}
!133 = distinct !{!133, !16}
!134 = !{!135}
!135 = distinct !{!135, !136}
!136 = distinct !{!136, !"LVerDomain"}
!137 = !{!138}
!138 = distinct !{!138, !136}
!139 = distinct !{!139, !3}
!140 = distinct !{!140, !16}
!141 = distinct !{!141, !3}
!142 = distinct !{!142, !16}
!143 = distinct !{!143, !16}
!144 = distinct !{!144, !16}
!145 = distinct !{!145, !16}
!146 = distinct !{!146, !16}
!147 = distinct !{!147, !16}
!148 = distinct !{!148, !16}
!149 = distinct !{!149, !16}
!150 = distinct !{!150, !16}
!151 = !{!152, !28, i64 0}
!152 = !{!"_ZTSN16kNearestNeighborI6vertexI8_point2dIdELi1EELi1EE3kNNE", !28, i64 0, !9, i64 8, !9, i64 16, !39, i64 24, !39, i64 28}
!153 = !{!152, !39, i64 28}
!154 = !{!152, !39, i64 24}
!155 = distinct !{!155, !16}
!156 = distinct !{!156, !3}
!157 = distinct !{!157, !16}
!158 = distinct !{!158, !5, !3}
!159 = distinct !{!159, !16}
!160 = !{!161, !28, i64 0}
!161 = !{!"_ZTS16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE", !28, i64 0}
!162 = !{!163, !39, i64 28}
!163 = !{!"_ZTS9gTreeNodeI8_point2dIdE7_vect2dIdE6vertexIS1_Li10EE5nDataIS5_EE", !82, i64 0, !8, i64 16, !164, i64 24, !39, i64 28, !9, i64 32, !28, i64 96, !28, i64 104}
!164 = !{!"_ZTS5nDataI6vertexI8_point2dIdELi10EEE", !39, i64 0}
!165 = !{!166, !39, i64 172}
!166 = !{!"_ZTSN16kNearestNeighborI6vertexI8_point2dIdELi10EELi10EE3kNNE", !28, i64 0, !9, i64 8, !9, i64 88, !39, i64 168, !39, i64 172}
!167 = !{!166, !39, i64 168}
!168 = !{!166, !28, i64 0}
!169 = distinct !{!169, !5, !3}
!170 = distinct !{!170, !16}
!171 = distinct !{!171, !3}
!172 = !{!164, !39, i64 0}
!173 = !{!163, !8, i64 16}
!174 = distinct !{!174, !16}
!175 = !{!163, !28, i64 104}
!176 = !{!163, !28, i64 96}
!177 = !{!178, !180}
!178 = distinct !{!178, !179, !"_ZN8sequence5getAFIP6vertexI8_point2dIdELi10EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE6toPairEEclEi: %agg.result"}
!179 = distinct !{!179, !"_ZN8sequence5getAFIP6vertexI8_point2dIdELi10EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE6toPairEEclEi"}
!180 = distinct !{!180, !181, !"_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_: %agg.result"}
!181 = distinct !{!181, !"_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_"}
!182 = !{!180}
!183 = !{!184, !180}
!184 = distinct !{!184, !185, !"_ZN8sequence5getAFIP6vertexI8_point2dIdELi10EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE6toPairEEclEi: %agg.result"}
!185 = distinct !{!185, !"_ZN8sequence5getAFIP6vertexI8_point2dIdELi10EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE6toPairEEclEi"}
!186 = distinct !{!186, !16}
!187 = !{!188}
!188 = distinct !{!188, !189, !"_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_: %agg.result"}
!189 = distinct !{!189, !"_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_"}
!190 = distinct !{!190, !3}
!191 = distinct !{!191, !5, !3}
!192 = !{!193, !39, i64 0}
!193 = !{!"_ZTSSt4pairIiP6vertexI8_point2dIdELi10EEE", !39, i64 0, !28, i64 8}
!194 = !{!193, !28, i64 8}
!195 = distinct !{!195, !3}
!196 = distinct !{!196, !16}
!197 = distinct !{!197, !3}
!198 = distinct !{!198, !5, !3}
!199 = distinct !{!199, !5, !3}
!200 = !{!201, !27, i64 8}
!201 = !{!"_ZTSN7intSort5eBitsISt4pairIiP6vertexI8_point2dIdELi10EEEN5utils6firstFIiS6_EEEE", !202, i64 0, !27, i64 8, !27, i64 16}
!202 = !{!"_ZTSN5utils6firstFIiP6vertexI8_point2dIdELi10EEEE"}
!203 = !{!201, !27, i64 16}
!204 = distinct !{!204, !16}
!205 = distinct !{!205, !16}
!206 = !{!207, !28, i64 0}
!207 = !{!"_ZTS10blockTransISt4pairIiP6vertexI8_point2dIdELi10EEEjE", !28, i64 0, !28, i64 8, !28, i64 16, !28, i64 24, !28, i64 32}
!208 = !{!207, !28, i64 8}
!209 = !{!207, !28, i64 16}
!210 = !{!207, !28, i64 24}
!211 = !{!207, !28, i64 32}
!212 = distinct !{!212, !16}
!213 = distinct !{!213, !16}
!214 = distinct !{!214, !16}
!215 = !{!216, !39, i64 36}
!216 = !{!"_ZTS9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li1EE5nDataIS5_EE", !7, i64 0, !8, i64 24, !217, i64 32, !39, i64 36, !9, i64 40, !28, i64 104, !28, i64 112}
!217 = !{!"_ZTS5nDataI6vertexI8_point3dIdELi1EEE", !39, i64 0}
!218 = !{!217, !39, i64 0}
!219 = !{!216, !8, i64 24}
!220 = !{i64 0, i64 8, !18, i64 8, i64 8, !18, i64 16, i64 8, !18}
!221 = distinct !{!221, !16}
!222 = !{!216, !28, i64 112}
!223 = !{!224}
!224 = distinct !{!224, !225, !"_ZN8_point3dIdE11offsetPointEid: %agg.result"}
!225 = distinct !{!225, !"_ZN8_point3dIdE11offsetPointEid"}
!226 = !{!216, !28, i64 104}
!227 = !{!228, !230}
!228 = distinct !{!228, !229, !"_ZN8sequence5getAFIP6vertexI8_point3dIdELi1EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE6toPairEEclEi: %agg.result"}
!229 = distinct !{!229, !"_ZN8sequence5getAFIP6vertexI8_point3dIdELi1EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE6toPairEEclEi"}
!230 = distinct !{!230, !231, !"_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_: %agg.result"}
!231 = distinct !{!231, !"_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_"}
!232 = !{!230}
!233 = !{!234, !230}
!234 = distinct !{!234, !235, !"_ZN8sequence5getAFIP6vertexI8_point3dIdELi1EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE6toPairEEclEi: %agg.result"}
!235 = distinct !{!235, !"_ZN8sequence5getAFIP6vertexI8_point3dIdELi1EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE6toPairEEclEi"}
!236 = distinct !{!236, !16}
!237 = !{i64 0, i64 8, !18, i64 8, i64 8, !18, i64 16, i64 8, !18, i64 24, i64 8, !18, i64 32, i64 8, !18, i64 40, i64 8, !18}
!238 = !{!239}
!239 = distinct !{!239, !240, !"_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_: %agg.result"}
!240 = distinct !{!240, !"_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_"}
!241 = !{!242}
!242 = distinct !{!242, !243, !"_ZN8_point3dIdE11offsetPointEid: %agg.result"}
!243 = distinct !{!243, !"_ZN8_point3dIdE11offsetPointEid"}
!244 = !{!245}
!245 = distinct !{!245, !246, !"_ZN8_point3dIdE11offsetPointEid: %agg.result"}
!246 = distinct !{!246, !"_ZN8_point3dIdE11offsetPointEid"}
!247 = !{!248}
!248 = distinct !{!248, !249, !"_ZN8_point3dIdE11offsetPointEid: %agg.result"}
!249 = distinct !{!249, !"_ZN8_point3dIdE11offsetPointEid"}
!250 = !{!251, !39, i64 0}
!251 = !{!"_ZTSSt4pairIiP6vertexI8_point3dIdELi1EEE", !39, i64 0, !28, i64 8}
!252 = !{!251, !28, i64 8}
!253 = distinct !{!253, !3}
!254 = distinct !{!254, !16}
!255 = distinct !{!255, !3}
!256 = distinct !{!256, !5, !3}
!257 = distinct !{!257, !5, !3}
!258 = !{!259, !27, i64 8}
!259 = !{!"_ZTSN7intSort5eBitsISt4pairIiP6vertexI8_point3dIdELi1EEEN5utils6firstFIiS6_EEEE", !260, i64 0, !27, i64 8, !27, i64 16}
!260 = !{!"_ZTSN5utils6firstFIiP6vertexI8_point3dIdELi1EEEE"}
!261 = !{!259, !27, i64 16}
!262 = distinct !{!262, !16}
!263 = distinct !{!263, !16}
!264 = !{!265, !28, i64 0}
!265 = !{!"_ZTS10blockTransISt4pairIiP6vertexI8_point3dIdELi1EEEjE", !28, i64 0, !28, i64 8, !28, i64 16, !28, i64 24, !28, i64 32}
!266 = !{!265, !28, i64 8}
!267 = !{!265, !28, i64 16}
!268 = !{!265, !28, i64 24}
!269 = !{!265, !28, i64 32}
!270 = distinct !{!270, !16}
!271 = distinct !{!271, !16}
!272 = distinct !{!272, !16}
!273 = !{!274, !28, i64 0}
!274 = !{!"_ZTSN16kNearestNeighborI6vertexI8_point3dIdELi1EELi1EE3kNNE", !28, i64 0, !9, i64 8, !9, i64 16, !39, i64 24, !39, i64 28}
!275 = !{!276}
!276 = distinct !{!276, !277, !"_ZN8_point3dIdEmiES0_: %agg.result"}
!277 = distinct !{!277, !"_ZN8_point3dIdEmiES0_"}
!278 = !{!274, !39, i64 28}
!279 = !{!274, !39, i64 24}
!280 = !{!281}
!281 = distinct !{!281, !282, !"_ZN8_point3dIdEmiES0_: %agg.result"}
!282 = distinct !{!282, !"_ZN8_point3dIdEmiES0_"}
!283 = !{!284, !28, i64 0}
!284 = !{!"_ZTS16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE", !28, i64 0}
!285 = !{!286, !39, i64 36}
!286 = !{!"_ZTS9gTreeNodeI8_point3dIdE7_vect3dIdE6vertexIS1_Li10EE5nDataIS5_EE", !7, i64 0, !8, i64 24, !287, i64 32, !39, i64 36, !9, i64 40, !28, i64 104, !28, i64 112}
!287 = !{!"_ZTS5nDataI6vertexI8_point3dIdELi10EEE", !39, i64 0}
!288 = !{!289, !39, i64 172}
!289 = !{!"_ZTSN16kNearestNeighborI6vertexI8_point3dIdELi10EELi10EE3kNNE", !28, i64 0, !9, i64 8, !9, i64 88, !39, i64 168, !39, i64 172}
!290 = !{!289, !39, i64 168}
!291 = !{!289, !28, i64 0}
!292 = distinct !{!292, !5, !3}
!293 = distinct !{!293, !16}
!294 = distinct !{!294, !3}
!295 = !{!287, !39, i64 0}
!296 = !{!286, !8, i64 24}
!297 = distinct !{!297, !16}
!298 = !{!286, !28, i64 112}
!299 = !{!300}
!300 = distinct !{!300, !301, !"_ZN8_point3dIdE11offsetPointEid: %agg.result"}
!301 = distinct !{!301, !"_ZN8_point3dIdE11offsetPointEid"}
!302 = !{!286, !28, i64 104}
!303 = !{!304, !306}
!304 = distinct !{!304, !305, !"_ZN8sequence5getAFIP6vertexI8_point3dIdELi10EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE6toPairEEclEi: %agg.result"}
!305 = distinct !{!305, !"_ZN8sequence5getAFIP6vertexI8_point3dIdELi10EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE6toPairEEclEi"}
!306 = distinct !{!306, !307, !"_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_: %agg.result"}
!307 = distinct !{!307, !"_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_"}
!308 = !{!306}
!309 = !{!310, !306}
!310 = distinct !{!310, !311, !"_ZN8sequence5getAFIP6vertexI8_point3dIdELi10EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE6toPairEEclEi: %agg.result"}
!311 = distinct !{!311, !"_ZN8sequence5getAFIP6vertexI8_point3dIdELi10EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE6toPairEEclEi"}
!312 = distinct !{!312, !16}
!313 = !{!314}
!314 = distinct !{!314, !315, !"_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_: %agg.result"}
!315 = distinct !{!315, !"_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_"}
!316 = !{!317}
!317 = distinct !{!317, !318, !"_ZN8_point3dIdE11offsetPointEid: %agg.result"}
!318 = distinct !{!318, !"_ZN8_point3dIdE11offsetPointEid"}
!319 = !{!320}
!320 = distinct !{!320, !321, !"_ZN8_point3dIdE11offsetPointEid: %agg.result"}
!321 = distinct !{!321, !"_ZN8_point3dIdE11offsetPointEid"}
!322 = !{!323}
!323 = distinct !{!323, !324, !"_ZN8_point3dIdE11offsetPointEid: %agg.result"}
!324 = distinct !{!324, !"_ZN8_point3dIdE11offsetPointEid"}
!325 = !{!326, !39, i64 0}
!326 = !{!"_ZTSSt4pairIiP6vertexI8_point3dIdELi10EEE", !39, i64 0, !28, i64 8}
!327 = !{!326, !28, i64 8}
!328 = distinct !{!328, !3}
!329 = distinct !{!329, !16}
!330 = distinct !{!330, !3}
!331 = distinct !{!331, !5, !3}
!332 = distinct !{!332, !5, !3}
!333 = !{!334, !27, i64 8}
!334 = !{!"_ZTSN7intSort5eBitsISt4pairIiP6vertexI8_point3dIdELi10EEEN5utils6firstFIiS6_EEEE", !335, i64 0, !27, i64 8, !27, i64 16}
!335 = !{!"_ZTSN5utils6firstFIiP6vertexI8_point3dIdELi10EEEE"}
!336 = !{!334, !27, i64 16}
!337 = distinct !{!337, !16}
!338 = distinct !{!338, !16}
!339 = !{!340, !28, i64 0}
!340 = !{!"_ZTS10blockTransISt4pairIiP6vertexI8_point3dIdELi10EEEjE", !28, i64 0, !28, i64 8, !28, i64 16, !28, i64 24, !28, i64 32}
!341 = !{!340, !28, i64 8}
!342 = !{!340, !28, i64 16}
!343 = !{!340, !28, i64 24}
!344 = !{!340, !28, i64 32}
!345 = distinct !{!345, !16}
!346 = distinct !{!346, !16}
!347 = distinct !{!347, !16}
!348 = !{!349}
!349 = distinct !{!349, !350, !"_ZN8_point3dIdEmiES0_: %agg.result"}
!350 = distinct !{!350, !"_ZN8_point3dIdEmiES0_"}
!351 = !{!352}
!352 = distinct !{!352, !353, !"_ZN8_point3dIdEmiES0_: %agg.result"}
!353 = distinct !{!353, !"_ZN8_point3dIdEmiES0_"}
!354 = !{!64, !8, i64 16}
!355 = distinct !{!355, !3}
!356 = distinct !{!356, !16}
!357 = distinct !{!357, !5, !3}
!358 = !{!359, !39, i64 0}
!359 = !{!"_ZTS6vertexI8_point2dIdELi1EE", !39, i64 0, !82, i64 8, !9, i64 24}
!360 = distinct !{!360, !16}
!361 = !{!362, !39, i64 0}
!362 = !{!"_ZTS6vertexI8_point2dIdELi10EE", !39, i64 0, !82, i64 8, !9, i64 24}
!363 = distinct !{!363, !16}
!364 = !{!365, !39, i64 0}
!365 = !{!"_ZTS6vertexI8_point3dIdELi1EE", !39, i64 0, !7, i64 8, !9, i64 32}
!366 = distinct !{!366, !16}
!367 = !{!368, !39, i64 0}
!368 = !{!"_ZTS6vertexI8_point3dIdELi10EE", !39, i64 0, !7, i64 8, !9, i64 32}
!369 = distinct !{!369, !16}
!370 = distinct !{!370, !3}
!371 = distinct !{!371, !16}
!372 = distinct !{!372, !5, !3}
!373 = distinct !{!373, !3}
!374 = distinct !{!374, !16}
!375 = distinct !{!375, !5, !3}
!376 = distinct !{!376, !16}
!377 = distinct !{!377, !3}
!378 = distinct !{!378, !16}
!379 = distinct !{!379, !5, !3}
!380 = distinct !{!380, !16}
!381 = distinct !{!381, !16}
!382 = distinct !{!382, !16}
!383 = distinct !{!383, !16}
!384 = distinct !{!384, !3}
!385 = !{!386}
!386 = distinct !{!386, !387}
!387 = distinct !{!387, !"LVerDomain"}
!388 = !{!389}
!389 = distinct !{!389, !387}
!390 = distinct !{!390, !16, !3}
!391 = distinct !{!391, !16, !3}
!392 = !{!393}
!393 = distinct !{!393, !394}
!394 = distinct !{!394, !"LVerDomain"}
!395 = !{!396}
!396 = distinct !{!396, !394}
!397 = distinct !{!397, !3}
!398 = distinct !{!398, !16}
!399 = distinct !{!399, !3}
!400 = !{!401, !403}
!401 = distinct !{!401, !402, !"_ZN8sequence5getAFIP6vertexI8_point2dIdELi1EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE6toPairEEclEi: %agg.result"}
!402 = distinct !{!402, !"_ZN8sequence5getAFIP6vertexI8_point2dIdELi1EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE6toPairEEclEi"}
!403 = distinct !{!403, !404, !"_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_: %agg.result"}
!404 = distinct !{!404, !"_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_"}
!405 = !{!406, !403}
!406 = distinct !{!406, !407, !"_ZN8sequence5getAFIP6vertexI8_point2dIdELi1EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE6toPairEEclEi: %agg.result"}
!407 = distinct !{!407, !"_ZN8sequence5getAFIP6vertexI8_point2dIdELi1EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE6toPairEEclEi"}
!408 = !{!403}
!409 = distinct !{!409, !16}
!410 = !{!411}
!411 = distinct !{!411, !412, !"_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_: %agg.result"}
!412 = distinct !{!412, !"_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_"}
!413 = distinct !{!413, !3}
!414 = distinct !{!414, !5, !3}
!415 = distinct !{!415, !5, !3}
!416 = distinct !{!416, !3}
!417 = !{!418}
!418 = distinct !{!418, !419}
!419 = distinct !{!419, !"LVerDomain"}
!420 = !{!421}
!421 = distinct !{!421, !419}
!422 = distinct !{!422, !3}
!423 = distinct !{!423, !3}
!424 = distinct !{!424, !3}
!425 = distinct !{!425, !16}
!426 = distinct !{!426, !5, !3}
!427 = !{!428}
!428 = distinct !{!428, !429}
!429 = distinct !{!429, !"LVerDomain"}
!430 = !{!431}
!431 = distinct !{!431, !429}
!432 = distinct !{!432, !3}
!433 = distinct !{!433, !16}
!434 = distinct !{!434, !3}
!435 = distinct !{!435, !16}
!436 = distinct !{!436, !3}
!437 = distinct !{!437, !16}
!438 = distinct !{!438, !5, !3}
!439 = distinct !{!439, !16}
!440 = distinct !{!440, !16}
!441 = distinct !{!441, !16}
!442 = distinct !{!442, !16}
!443 = distinct !{!443, !3}
!444 = distinct !{!444, !5, !3}
!445 = distinct !{!445, !16}
!446 = distinct !{!446, !16}
!447 = distinct !{!447, !16}
!448 = distinct !{!448, !16}
!449 = distinct !{!449, !3}
!450 = distinct !{!450, !16}
!451 = distinct !{!451, !5, !3}
!452 = !{!453}
!453 = distinct !{!453, !454}
!454 = distinct !{!454, !"LVerDomain"}
!455 = !{!456}
!456 = distinct !{!456, !454}
!457 = distinct !{!457, !3}
!458 = distinct !{!458, !3}
!459 = distinct !{!459, !3}
!460 = distinct !{!460, !16}
!461 = distinct !{!461, !5, !3}
!462 = distinct !{!462, !3}
!463 = distinct !{!463, !16}
!464 = distinct !{!464, !5, !3}
!465 = distinct !{!465, !16}
!466 = !{!467}
!467 = distinct !{!467, !468}
!468 = distinct !{!468, !"LVerDomain"}
!469 = !{!470}
!470 = distinct !{!470, !468}
!471 = distinct !{!471, !3}
!472 = distinct !{!472, !16}
!473 = distinct !{!473, !3}
!474 = !{!475, !477}
!475 = distinct !{!475, !476, !"_ZN8sequence5getAFIP6vertexI8_point2dIdELi10EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE6toPairEEclEi: %agg.result"}
!476 = distinct !{!476, !"_ZN8sequence5getAFIP6vertexI8_point2dIdELi10EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE6toPairEEclEi"}
!477 = distinct !{!477, !478, !"_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_: %agg.result"}
!478 = distinct !{!478, !"_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_"}
!479 = !{!480, !477}
!480 = distinct !{!480, !481, !"_ZN8sequence5getAFIP6vertexI8_point2dIdELi10EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE6toPairEEclEi: %agg.result"}
!481 = distinct !{!481, !"_ZN8sequence5getAFIP6vertexI8_point2dIdELi10EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect2dIdES4_5nDataIS4_EE6toPairEEclEi"}
!482 = !{!477}
!483 = distinct !{!483, !16}
!484 = !{!485}
!485 = distinct !{!485, !486, !"_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_: %agg.result"}
!486 = distinct !{!486, !"_ZN8sequence12reduceSerialISt4pairI8_point2dIdES3_EiN9gTreeNodeIS3_7_vect2dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_"}
!487 = distinct !{!487, !3}
!488 = distinct !{!488, !5, !3}
!489 = distinct !{!489, !5, !3}
!490 = distinct !{!490, !3}
!491 = !{!492}
!492 = distinct !{!492, !493}
!493 = distinct !{!493, !"LVerDomain"}
!494 = !{!495}
!495 = distinct !{!495, !493}
!496 = distinct !{!496, !3}
!497 = distinct !{!497, !3}
!498 = distinct !{!498, !3}
!499 = distinct !{!499, !16}
!500 = distinct !{!500, !5, !3}
!501 = !{!502}
!502 = distinct !{!502, !503}
!503 = distinct !{!503, !"LVerDomain"}
!504 = !{!505}
!505 = distinct !{!505, !503}
!506 = distinct !{!506, !3}
!507 = distinct !{!507, !16}
!508 = distinct !{!508, !3}
!509 = distinct !{!509, !16}
!510 = distinct !{!510, !3}
!511 = !{!512}
!512 = distinct !{!512, !513}
!513 = distinct !{!513, !"LVerDomain"}
!514 = !{!515}
!515 = distinct !{!515, !513}
!516 = distinct !{!516, !16, !3}
!517 = distinct !{!517, !16, !3}
!518 = !{!519}
!519 = distinct !{!519, !520}
!520 = distinct !{!520, !"LVerDomain"}
!521 = !{!522}
!522 = distinct !{!522, !520}
!523 = distinct !{!523, !3}
!524 = distinct !{!524, !16}
!525 = distinct !{!525, !3}
!526 = !{!527, !529}
!527 = distinct !{!527, !528, !"_ZN8sequence5getAFIP6vertexI8_point3dIdELi1EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE6toPairEEclEi: %agg.result"}
!528 = distinct !{!528, !"_ZN8sequence5getAFIP6vertexI8_point3dIdELi1EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE6toPairEEclEi"}
!529 = distinct !{!529, !530, !"_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_: %agg.result"}
!530 = distinct !{!530, !"_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_"}
!531 = !{!532, !529}
!532 = distinct !{!532, !533, !"_ZN8sequence5getAFIP6vertexI8_point3dIdELi1EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE6toPairEEclEi: %agg.result"}
!533 = distinct !{!533, !"_ZN8sequence5getAFIP6vertexI8_point3dIdELi1EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE6toPairEEclEi"}
!534 = !{!529}
!535 = distinct !{!535, !16}
!536 = !{!537}
!537 = distinct !{!537, !538, !"_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_: %agg.result"}
!538 = distinct !{!538, !"_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li1EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_"}
!539 = distinct !{!539, !5, !3}
!540 = distinct !{!540, !3}
!541 = !{!542}
!542 = distinct !{!542, !543}
!543 = distinct !{!543, !"LVerDomain"}
!544 = !{!545}
!545 = distinct !{!545, !543}
!546 = distinct !{!546, !3}
!547 = distinct !{!547, !3}
!548 = distinct !{!548, !3}
!549 = distinct !{!549, !16}
!550 = distinct !{!550, !5, !3}
!551 = !{!552}
!552 = distinct !{!552, !553}
!553 = distinct !{!553, !"LVerDomain"}
!554 = !{!555}
!555 = distinct !{!555, !553}
!556 = distinct !{!556, !3}
!557 = distinct !{!557, !16}
!558 = distinct !{!558, !3}
!559 = distinct !{!559, !16}
!560 = !{!561}
!561 = distinct !{!561, !562}
!562 = distinct !{!562, !"LVerDomain"}
!563 = !{!564}
!564 = distinct !{!564, !562}
!565 = distinct !{!565, !3}
!566 = distinct !{!566, !16}
!567 = distinct !{!567, !3}
!568 = !{!569, !571}
!569 = distinct !{!569, !570, !"_ZN8sequence5getAFIP6vertexI8_point3dIdELi10EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE6toPairEEclEi: %agg.result"}
!570 = distinct !{!570, !"_ZN8sequence5getAFIP6vertexI8_point3dIdELi10EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE6toPairEEclEi"}
!571 = distinct !{!571, !572, !"_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_: %agg.result"}
!572 = distinct !{!572, !"_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_5getAFIPS9_S4_iNSC_6toPairEEEEET_T0_SJ_T1_T2_"}
!573 = !{!574, !571}
!574 = distinct !{!574, !575, !"_ZN8sequence5getAFIP6vertexI8_point3dIdELi10EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE6toPairEEclEi: %agg.result"}
!575 = distinct !{!575, !"_ZN8sequence5getAFIP6vertexI8_point3dIdELi10EESt4pairIS3_S3_EiN9gTreeNodeIS3_7_vect3dIdES4_5nDataIS4_EE6toPairEEclEi"}
!576 = !{!571}
!577 = distinct !{!577, !16}
!578 = !{!579}
!579 = distinct !{!579, !580, !"_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_: %agg.result"}
!580 = distinct !{!580, !"_ZN8sequence12reduceSerialISt4pairI8_point3dIdES3_EiN9gTreeNodeIS3_7_vect3dIdE6vertexIS3_Li10EE5nDataIS9_EE6minMaxENS_4getAIS4_iEEEET_T0_SH_T1_T2_"}
!581 = distinct !{!581, !5, !3}
!582 = distinct !{!582, !3}
!583 = !{!584}
!584 = distinct !{!584, !585}
!585 = distinct !{!585, !"LVerDomain"}
!586 = !{!587}
!587 = distinct !{!587, !585}
!588 = distinct !{!588, !3}
!589 = distinct !{!589, !3}
!590 = distinct !{!590, !3}
!591 = distinct !{!591, !16}
!592 = distinct !{!592, !5, !3}
!593 = !{!594}
!594 = distinct !{!594, !595}
!595 = distinct !{!595, !"LVerDomain"}
!596 = !{!597}
!597 = distinct !{!597, !595}
!598 = distinct !{!598, !3}
!599 = distinct !{!599, !16}
!600 = distinct !{!600, !3}
!601 = distinct !{!601, !16}
